{"meta":{"title":"全科-不安分的码农","subtitle":"android，ios，html5，微服务架构，XP，scrum，项目管理（PMP）","description":null,"author":"全科","url":"http://test.quanke.name"},"pages":[{"title":"全科的作品","date":"2015-05-08T07:55:21.000Z","updated":"2017-11-06T05:32:04.760Z","comments":true,"path":"app/index.html","permalink":"http://test.quanke.name/app/index.html","excerpt":"","text":"##拓拓 ###免费电话、虚拟社交 传送 ##最美创意 ###创意广告 传送 ##随口记语音记账 ###通过语音记账，使用语义识别，自动识别说的话 传送 ##inkNet（国内、泰国） ###上海汽车车联网平台，通过手机控制汽车 传送 ##上海汽车售后(国内、泰国) ###上海汽车售后服务平台 传送 ##喜马拉雅听车机APP ###上海汽车喜马拉雅车机APP，可以在汽车上听喜马拉雅所有资源 传送 ##搜狐违章车机APP ###上海汽车搜狐违章车机APP，可以在汽车上查询违章信息 传送 ##52面试 ###做面试习题的APP 传送 ##国诚金融 ###国诚金融P2P金融APP Android传送 ios传送 ##商铺云收银系统 ###移动收银系统 传送 ##驾驶模式 ###给车友打造的一个开车时语音播报微信、QQ消息的APP 传送 ##骑遇 ###骑行APP 传送"},{"title":"categories","date":"2016-07-22T14:03:10.000Z","updated":"2017-11-06T05:32:04.761Z","comments":false,"path":"categories/index.html","permalink":"http://test.quanke.name/categories/index.html","excerpt":"","text":""},{"title":"","date":"2018-02-01T07:21:14.312Z","updated":"2018-01-29T15:28:35.459Z","comments":true,"path":"esjava/aggregations.html","permalink":"http://test.quanke.name/esjava/aggregations.html","excerpt":"","text":"Aggregations · GitBook Introduction Dependency Client Transport Client XPack Transport Client Document APIs Index API Get API Delete API Delete By Query API Update API Multi Get API Bulk API Using Bulk Processor Search API Using scrolls in Java MultiSearch API Using Aggregations Terminate After Search Template Aggregations Structuring aggregations Metrics aggregations Bucket aggregations Query DSL Match All Query Full text queries Term level queries Compound queries Joining queries Geo queries Specialized queries Span queries Indexed Scripts API Script Language Java API Administration Indices Administration Cluster Administration Published with GitBook Aggregations Aggregations &#x805A;&#x5408; Elasticsearch&#x63D0;&#x4F9B;&#x5B8C;&#x6574;&#x7684;Java API&#x6765;&#x4F7F;&#x7528;&#x805A;&#x5408;&#x3002; &#x8BF7;&#x53C2;&#x9605;&#x805A;&#x5408;&#x6307;&#x5357;&#x3002; &#x4F7F;&#x7528; AggregationBuilders &#x6784;&#x5EFA;&#x5BF9;&#x8C61;&#xFF0C;&#x589E;&#x52A0;&#x5230;&#x641C;&#x7D22;&#x8BF7;&#x6C42;&#x4E2D;: import org.elasticsearch.search.aggregations.AggregationBuilders; SearchResponse sr = node.client().prepareSearch() .setQuery( /* your query */ ) .addAggregation( /* add an aggregation */ ) .execute().actionGet(); results matching \"\" No results matching \"\" var gitbook = gitbook || []; gitbook.push(function() { gitbook.page.hasChanged({\"page\":{\"title\":\"Aggregations\",\"level\":\"1.6\",\"depth\":1,\"next\":{\"title\":\"Structuring aggregations\",\"level\":\"1.6.1\",\"depth\":2,\"path\":\"aggregations/structuring-aggregations.md\",\"ref\":\"aggregations/structuring-aggregations.md\",\"articles\":[]},\"previous\":{\"title\":\"Search Template\",\"level\":\"1.5.5\",\"depth\":2,\"path\":\"search-api/search-template.md\",\"ref\":\"search-api/search-template.md\",\"articles\":[]},\"dir\":\"ltr\"},\"config\":{\"gitbook\":\"*\",\"theme\":\"default\",\"variables\":{},\"plugins\":[],\"pluginsConfig\":{\"highlight\":{},\"search\":{},\"lunr\":{\"maxIndexSize\":1000000,\"ignoreSpecialCharacters\":false},\"sharing\":{\"facebook\":true,\"twitter\":true,\"google\":false,\"weibo\":false,\"instapaper\":false,\"vk\":false,\"all\":[\"facebook\",\"google\",\"twitter\",\"weibo\",\"instapaper\"]},\"fontsettings\":{\"theme\":\"white\",\"family\":\"sans\",\"size\":2},\"theme-default\":{\"styles\":{\"website\":\"styles/website.css\",\"pdf\":\"styles/pdf.css\",\"epub\":\"styles/epub.css\",\"mobi\":\"styles/mobi.css\",\"ebook\":\"styles/ebook.css\",\"print\":\"styles/print.css\"},\"showLevel\":false}},\"structure\":{\"langs\":\"LANGS.md\",\"readme\":\"README.md\",\"glossary\":\"GLOSSARY.md\",\"summary\":\"SUMMARY.md\"},\"pdf\":{\"pageNumbers\":true,\"fontSize\":12,\"fontFamily\":\"Arial\",\"paperSize\":\"a4\",\"chapterMark\":\"pagebreak\",\"pageBreaksBefore\":\"/\",\"margin\":{\"right\":62,\"left\":62,\"top\":56,\"bottom\":56}},\"styles\":{\"website\":\"styles/website.css\",\"pdf\":\"styles/pdf.css\",\"epub\":\"styles/epub.css\",\"mobi\":\"styles/mobi.css\",\"ebook\":\"styles/ebook.css\",\"print\":\"styles/print.css\"}},\"file\":{\"path\":\"aggregations.md\",\"mtime\":\"2017-11-08T08:32:22.710Z\",\"type\":\"markdown\"},\"gitbook\":{\"version\":\"3.2.3\",\"time\":\"2018-01-29T15:28:32.108Z\"},\"basePath\":\".\",\"book\":{\"language\":\"\"}}); });"},{"title":"","date":"2018-02-01T07:21:14.313Z","updated":"2018-01-29T15:28:34.086Z","comments":true,"path":"esjava/client.html","permalink":"http://test.quanke.name/esjava/client.html","excerpt":"","text":"Client · GitBook Introduction Dependency Client Transport Client XPack Transport Client Document APIs Index API Get API Delete API Delete By Query API Update API Multi Get API Bulk API Using Bulk Processor Search API Using scrolls in Java MultiSearch API Using Aggregations Terminate After Search Template Aggregations Structuring aggregations Metrics aggregations Bucket aggregations Query DSL Match All Query Full text queries Term level queries Compound queries Joining queries Geo queries Specialized queries Span queries Indexed Scripts API Script Language Java API Administration Indices Administration Cluster Administration Published with GitBook Client results matching \"\" No results matching \"\" var gitbook = gitbook || []; gitbook.push(function() { gitbook.page.hasChanged({\"page\":{\"title\":\"Client\",\"level\":\"1.3\",\"depth\":1,\"next\":{\"title\":\"Transport Client\",\"level\":\"1.3.1\",\"depth\":2,\"path\":\"client/transport-client.md\",\"ref\":\"client/transport-client.md\",\"articles\":[]},\"previous\":{\"title\":\"Dependency\",\"level\":\"1.2\",\"depth\":1,\"path\":\"dependency.md\",\"ref\":\"dependency.md\",\"articles\":[]},\"dir\":\"neutral\"},\"config\":{\"gitbook\":\"*\",\"theme\":\"default\",\"variables\":{},\"plugins\":[],\"pluginsConfig\":{\"highlight\":{},\"search\":{},\"lunr\":{\"maxIndexSize\":1000000,\"ignoreSpecialCharacters\":false},\"sharing\":{\"facebook\":true,\"twitter\":true,\"google\":false,\"weibo\":false,\"instapaper\":false,\"vk\":false,\"all\":[\"facebook\",\"google\",\"twitter\",\"weibo\",\"instapaper\"]},\"fontsettings\":{\"theme\":\"white\",\"family\":\"sans\",\"size\":2},\"theme-default\":{\"styles\":{\"website\":\"styles/website.css\",\"pdf\":\"styles/pdf.css\",\"epub\":\"styles/epub.css\",\"mobi\":\"styles/mobi.css\",\"ebook\":\"styles/ebook.css\",\"print\":\"styles/print.css\"},\"showLevel\":false}},\"structure\":{\"langs\":\"LANGS.md\",\"readme\":\"README.md\",\"glossary\":\"GLOSSARY.md\",\"summary\":\"SUMMARY.md\"},\"pdf\":{\"pageNumbers\":true,\"fontSize\":12,\"fontFamily\":\"Arial\",\"paperSize\":\"a4\",\"chapterMark\":\"pagebreak\",\"pageBreaksBefore\":\"/\",\"margin\":{\"right\":62,\"left\":62,\"top\":56,\"bottom\":56}},\"styles\":{\"website\":\"styles/website.css\",\"pdf\":\"styles/pdf.css\",\"epub\":\"styles/epub.css\",\"mobi\":\"styles/mobi.css\",\"ebook\":\"styles/ebook.css\",\"print\":\"styles/print.css\"}},\"file\":{\"path\":\"client.md\",\"mtime\":\"2017-11-08T07:36:16.119Z\",\"type\":\"markdown\"},\"gitbook\":{\"version\":\"3.2.3\",\"time\":\"2018-01-29T15:28:32.108Z\"},\"basePath\":\".\",\"book\":{\"language\":\"\"}}); });"},{"title":"","date":"2018-02-01T07:21:14.313Z","updated":"2018-01-29T15:28:34.006Z","comments":true,"path":"esjava/dependency.html","permalink":"http://test.quanke.name/esjava/dependency.html","excerpt":"","text":"Dependency · GitBook Introduction Dependency Client Transport Client XPack Transport Client Document APIs Index API Get API Delete API Delete By Query API Update API Multi Get API Bulk API Using Bulk Processor Search API Using scrolls in Java MultiSearch API Using Aggregations Terminate After Search Template Aggregations Structuring aggregations Metrics aggregations Bucket aggregations Query DSL Match All Query Full text queries Term level queries Compound queries Joining queries Geo queries Specialized queries Span queries Indexed Scripts API Script Language Java API Administration Indices Administration Cluster Administration Published with GitBook Dependency &#x5B89;&#x88C5; Maven Repository Elasticsearch Java API&#x5305;&#x5DF2;&#x7ECF;&#x4E0A;&#x4F20;&#x5230; Maven Central &#x5728;pom.xml&#x6587;&#x4EF6;&#x4E2D;&#x589E;&#x52A0;&#xFF1A; &#x7248;&#x672C;&#x53F7;&#x9009;&#x62E9;&#x81EA;&#x5DF1;&#x5408;&#x9002;&#x7684;&#x3002; &lt;dependency&gt; &lt;groupId&gt;org.elasticsearch.client&lt;/groupId&gt; &lt;artifactId&gt;transport&lt;/artifactId&gt; &lt;version&gt;5.6.3&lt;/version&gt; &lt;/dependency&gt; results matching \"\" No results matching \"\" var gitbook = gitbook || []; gitbook.push(function() { gitbook.page.hasChanged({\"page\":{\"title\":\"Dependency\",\"level\":\"1.2\",\"depth\":1,\"next\":{\"title\":\"Client\",\"level\":\"1.3\",\"depth\":1,\"path\":\"client.md\",\"ref\":\"client.md\",\"articles\":[{\"title\":\"Transport Client\",\"level\":\"1.3.1\",\"depth\":2,\"path\":\"client/transport-client.md\",\"ref\":\"client/transport-client.md\",\"articles\":[]},{\"title\":\"XPack Transport Client\",\"level\":\"1.3.2\",\"depth\":2,\"path\":\"client/xpack-transport-client.md\",\"ref\":\"client/xpack-transport-client.md\",\"articles\":[]}]},\"previous\":{\"title\":\"Introduction\",\"level\":\"1.1\",\"depth\":1,\"path\":\"README.md\",\"ref\":\"README.md\",\"articles\":[]},\"dir\":\"ltr\"},\"config\":{\"gitbook\":\"*\",\"theme\":\"default\",\"variables\":{},\"plugins\":[],\"pluginsConfig\":{\"highlight\":{},\"search\":{},\"lunr\":{\"maxIndexSize\":1000000,\"ignoreSpecialCharacters\":false},\"sharing\":{\"facebook\":true,\"twitter\":true,\"google\":false,\"weibo\":false,\"instapaper\":false,\"vk\":false,\"all\":[\"facebook\",\"google\",\"twitter\",\"weibo\",\"instapaper\"]},\"fontsettings\":{\"theme\":\"white\",\"family\":\"sans\",\"size\":2},\"theme-default\":{\"styles\":{\"website\":\"styles/website.css\",\"pdf\":\"styles/pdf.css\",\"epub\":\"styles/epub.css\",\"mobi\":\"styles/mobi.css\",\"ebook\":\"styles/ebook.css\",\"print\":\"styles/print.css\"},\"showLevel\":false}},\"structure\":{\"langs\":\"LANGS.md\",\"readme\":\"README.md\",\"glossary\":\"GLOSSARY.md\",\"summary\":\"SUMMARY.md\"},\"pdf\":{\"pageNumbers\":true,\"fontSize\":12,\"fontFamily\":\"Arial\",\"paperSize\":\"a4\",\"chapterMark\":\"pagebreak\",\"pageBreaksBefore\":\"/\",\"margin\":{\"right\":62,\"left\":62,\"top\":56,\"bottom\":56}},\"styles\":{\"website\":\"styles/website.css\",\"pdf\":\"styles/pdf.css\",\"epub\":\"styles/epub.css\",\"mobi\":\"styles/mobi.css\",\"ebook\":\"styles/ebook.css\",\"print\":\"styles/print.css\"}},\"file\":{\"path\":\"dependency.md\",\"mtime\":\"2017-11-08T08:17:03.461Z\",\"type\":\"markdown\"},\"gitbook\":{\"version\":\"3.2.3\",\"time\":\"2018-01-29T15:28:32.108Z\"},\"basePath\":\".\",\"book\":{\"language\":\"\"}}); });"},{"title":"","date":"2018-02-01T07:21:14.314Z","updated":"2018-01-29T15:28:34.324Z","comments":true,"path":"esjava/document-apis.html","permalink":"http://test.quanke.name/esjava/document-apis.html","excerpt":"","text":"Document APIs · GitBook Introduction Dependency Client Transport Client XPack Transport Client Document APIs Index API Get API Delete API Delete By Query API Update API Multi Get API Bulk API Using Bulk Processor Search API Using scrolls in Java MultiSearch API Using Aggregations Terminate After Search Template Aggregations Structuring aggregations Metrics aggregations Bucket aggregations Query DSL Match All Query Full text queries Term level queries Compound queries Joining queries Geo queries Specialized queries Span queries Indexed Scripts API Script Language Java API Administration Indices Administration Cluster Administration Published with GitBook Document APIs results matching \"\" No results matching \"\" var gitbook = gitbook || []; gitbook.push(function() { gitbook.page.hasChanged({\"page\":{\"title\":\"Document APIs\",\"level\":\"1.4\",\"depth\":1,\"next\":{\"title\":\"Index API\",\"level\":\"1.4.1\",\"depth\":2,\"path\":\"document-apis/index-api.md\",\"ref\":\"document-apis/index-api.md\",\"articles\":[]},\"previous\":{\"title\":\"XPack Transport Client\",\"level\":\"1.3.2\",\"depth\":2,\"path\":\"client/xpack-transport-client.md\",\"ref\":\"client/xpack-transport-client.md\",\"articles\":[]},\"dir\":\"neutral\"},\"config\":{\"gitbook\":\"*\",\"theme\":\"default\",\"variables\":{},\"plugins\":[],\"pluginsConfig\":{\"highlight\":{},\"search\":{},\"lunr\":{\"maxIndexSize\":1000000,\"ignoreSpecialCharacters\":false},\"sharing\":{\"facebook\":true,\"twitter\":true,\"google\":false,\"weibo\":false,\"instapaper\":false,\"vk\":false,\"all\":[\"facebook\",\"google\",\"twitter\",\"weibo\",\"instapaper\"]},\"fontsettings\":{\"theme\":\"white\",\"family\":\"sans\",\"size\":2},\"theme-default\":{\"styles\":{\"website\":\"styles/website.css\",\"pdf\":\"styles/pdf.css\",\"epub\":\"styles/epub.css\",\"mobi\":\"styles/mobi.css\",\"ebook\":\"styles/ebook.css\",\"print\":\"styles/print.css\"},\"showLevel\":false}},\"structure\":{\"langs\":\"LANGS.md\",\"readme\":\"README.md\",\"glossary\":\"GLOSSARY.md\",\"summary\":\"SUMMARY.md\"},\"pdf\":{\"pageNumbers\":true,\"fontSize\":12,\"fontFamily\":\"Arial\",\"paperSize\":\"a4\",\"chapterMark\":\"pagebreak\",\"pageBreaksBefore\":\"/\",\"margin\":{\"right\":62,\"left\":62,\"top\":56,\"bottom\":56}},\"styles\":{\"website\":\"styles/website.css\",\"pdf\":\"styles/pdf.css\",\"epub\":\"styles/epub.css\",\"mobi\":\"styles/mobi.css\",\"ebook\":\"styles/ebook.css\",\"print\":\"styles/print.css\"}},\"file\":{\"path\":\"document-apis.md\",\"mtime\":\"2017-11-08T07:45:47.444Z\",\"type\":\"markdown\"},\"gitbook\":{\"version\":\"3.2.3\",\"time\":\"2018-01-29T15:28:32.108Z\"},\"basePath\":\".\",\"book\":{\"language\":\"\"}}); });"},{"title":"","date":"2018-02-01T07:21:14.315Z","updated":"2018-01-29T15:28:36.525Z","comments":true,"path":"esjava/indexed-scripts-api.html","permalink":"http://test.quanke.name/esjava/indexed-scripts-api.html","excerpt":"","text":"Indexed Scripts API · GitBook Introduction Dependency Client Transport Client XPack Transport Client Document APIs Index API Get API Delete API Delete By Query API Update API Multi Get API Bulk API Using Bulk Processor Search API Using scrolls in Java MultiSearch API Using Aggregations Terminate After Search Template Aggregations Structuring aggregations Metrics aggregations Bucket aggregations Query DSL Match All Query Full text queries Term level queries Compound queries Joining queries Geo queries Specialized queries Span queries Indexed Scripts API Script Language Java API Administration Indices Administration Cluster Administration Published with GitBook Indexed Scripts API results matching \"\" No results matching \"\" var gitbook = gitbook || []; gitbook.push(function() { gitbook.page.hasChanged({\"page\":{\"title\":\"Indexed Scripts API\",\"level\":\"1.8\",\"depth\":1,\"next\":{\"title\":\"Script Language\",\"level\":\"1.8.1\",\"depth\":2,\"path\":\"indexed-scripts-api/script-language.md\",\"ref\":\"indexed-scripts-api/script-language.md\",\"articles\":[]},\"previous\":{\"title\":\"Span queries\",\"level\":\"1.7.8\",\"depth\":2,\"path\":\"query-dsl/span-queries.md\",\"ref\":\"query-dsl/span-queries.md\",\"articles\":[]},\"dir\":\"neutral\"},\"config\":{\"gitbook\":\"*\",\"theme\":\"default\",\"variables\":{},\"plugins\":[],\"pluginsConfig\":{\"highlight\":{},\"search\":{},\"lunr\":{\"maxIndexSize\":1000000,\"ignoreSpecialCharacters\":false},\"sharing\":{\"facebook\":true,\"twitter\":true,\"google\":false,\"weibo\":false,\"instapaper\":false,\"vk\":false,\"all\":[\"facebook\",\"google\",\"twitter\",\"weibo\",\"instapaper\"]},\"fontsettings\":{\"theme\":\"white\",\"family\":\"sans\",\"size\":2},\"theme-default\":{\"styles\":{\"website\":\"styles/website.css\",\"pdf\":\"styles/pdf.css\",\"epub\":\"styles/epub.css\",\"mobi\":\"styles/mobi.css\",\"ebook\":\"styles/ebook.css\",\"print\":\"styles/print.css\"},\"showLevel\":false}},\"structure\":{\"langs\":\"LANGS.md\",\"readme\":\"README.md\",\"glossary\":\"GLOSSARY.md\",\"summary\":\"SUMMARY.md\"},\"pdf\":{\"pageNumbers\":true,\"fontSize\":12,\"fontFamily\":\"Arial\",\"paperSize\":\"a4\",\"chapterMark\":\"pagebreak\",\"pageBreaksBefore\":\"/\",\"margin\":{\"right\":62,\"left\":62,\"top\":56,\"bottom\":56}},\"styles\":{\"website\":\"styles/website.css\",\"pdf\":\"styles/pdf.css\",\"epub\":\"styles/epub.css\",\"mobi\":\"styles/mobi.css\",\"ebook\":\"styles/ebook.css\",\"print\":\"styles/print.css\"}},\"file\":{\"path\":\"indexed-scripts-api.md\",\"mtime\":\"2017-11-08T07:56:01.355Z\",\"type\":\"markdown\"},\"gitbook\":{\"version\":\"3.2.3\",\"time\":\"2018-01-29T15:28:32.108Z\"},\"basePath\":\".\",\"book\":{\"language\":\"\"}}); });"},{"title":"","date":"2018-02-01T07:21:14.315Z","updated":"2018-01-29T15:28:33.899Z","comments":true,"path":"esjava/index.html","permalink":"http://test.quanke.name/esjava/index.html","excerpt":"","text":"Introduction · GitBook Introduction Dependency Client Transport Client XPack Transport Client Document APIs Index API Get API Delete API Delete By Query API Update API Multi Get API Bulk API Using Bulk Processor Search API Using scrolls in Java MultiSearch API Using Aggregations Terminate After Search Template Aggregations Structuring aggregations Metrics aggregations Bucket aggregations Query DSL Match All Query Full text queries Term level queries Compound queries Joining queries Geo queries Specialized queries Span queries Indexed Scripts API Script Language Java API Administration Indices Administration Cluster Administration Published with GitBook Introduction Elasticsearch Java API &#x624B;&#x518C; &#x672C;&#x4E66;&#x7531; &#x5168;&#x79D1; &#x7FFB;&#x8BD1;&#xFF0C;&#x5E76;&#x4E14;&#x6574;&#x7406;&#x6210;&#x7535;&#x5B50;&#x4E66;&#xFF0C;&#x652F;&#x6301;PDF,ePub,Mobi&#x683C;&#x5F0F;&#xFF0C;&#x65B9;&#x4FBF;&#x5927;&#x5BB6;&#x4E0B;&#x8F7D;&#x9605;&#x8BFB;&#x3002; &#x9605;&#x8BFB;&#x5730;&#x5740;&#xFF1A;https://es.quanke.name &#x4E0B;&#x8F7D;&#x5730;&#x5740;&#xFF1A;https://www.gitbook.com/book/quanke/elasticsearch-java github&#x5730;&#x5740;&#xFF1A;https://github.com/quanke/elasticsearch-java &#x7F16;&#x8F91;&#xFF1A;http://quanke.name &#x7F16;&#x8F91;&#x6574;&#x7406;&#x8F9B;&#x82E6;&#xFF0C;&#x8FD8;&#x671B;&#x5927;&#x795E;&#x4EEC;&#x70B9;&#x4E00;&#x4E0B;star &#xFF0C;&#x629A;&#x5E73;&#x6211;&#x865A;&#x8363;&#x7684;&#x5FC3; &#x66F4;&#x591A;&#x8BF7;&#x5173;&#x6CE8;&#x6211;&#x7684;&#x5FAE;&#x4FE1;&#x516C;&#x4F17;&#x53F7;&#xFF1A; &#x53C2;&#x8003; elasticsearch java API &#x5B98;&#x65B9;&#x6587;&#x6863; elasticsearch&#x6027;&#x80FD;&#x8C03;&#x4F18; ElasticSearch 5.0.1 java API&#x64CD;&#x4F5C; fendo Elasticsearch &#x7C7B;&#x76EE; Java API &#x4E4B; &#x6EDA;&#x52A8;&#x641C;&#x7D22;(Scroll API) Elastic Elasticsearch - ApacheCN&#xFF08;Apache&#x4E2D;&#x6587;&#x7F51; aggregation &#x8BE6;&#x89E3;2&#xFF08;metrics aggregations&#xFF09; aggregation &#x8BE6;&#x89E3;3&#xFF08;bucket aggregation&#xFF09; Percentile Ranks Aggregation Java API&#x4E4B;TermQuery results matching \"\" No results matching \"\" var gitbook = gitbook || []; gitbook.push(function() { gitbook.page.hasChanged({\"page\":{\"title\":\"Introduction\",\"level\":\"1.1\",\"depth\":1,\"next\":{\"title\":\"Dependency\",\"level\":\"1.2\",\"depth\":1,\"path\":\"dependency.md\",\"ref\":\"dependency.md\",\"articles\":[]},\"dir\":\"ltr\"},\"config\":{\"gitbook\":\"*\",\"theme\":\"default\",\"variables\":{},\"plugins\":[],\"pluginsConfig\":{\"highlight\":{},\"search\":{},\"lunr\":{\"maxIndexSize\":1000000,\"ignoreSpecialCharacters\":false},\"sharing\":{\"facebook\":true,\"twitter\":true,\"google\":false,\"weibo\":false,\"instapaper\":false,\"vk\":false,\"all\":[\"facebook\",\"google\",\"twitter\",\"weibo\",\"instapaper\"]},\"fontsettings\":{\"theme\":\"white\",\"family\":\"sans\",\"size\":2},\"theme-default\":{\"styles\":{\"website\":\"styles/website.css\",\"pdf\":\"styles/pdf.css\",\"epub\":\"styles/epub.css\",\"mobi\":\"styles/mobi.css\",\"ebook\":\"styles/ebook.css\",\"print\":\"styles/print.css\"},\"showLevel\":false}},\"structure\":{\"langs\":\"LANGS.md\",\"readme\":\"README.md\",\"glossary\":\"GLOSSARY.md\",\"summary\":\"SUMMARY.md\"},\"pdf\":{\"pageNumbers\":true,\"fontSize\":12,\"fontFamily\":\"Arial\",\"paperSize\":\"a4\",\"chapterMark\":\"pagebreak\",\"pageBreaksBefore\":\"/\",\"margin\":{\"right\":62,\"left\":62,\"top\":56,\"bottom\":56}},\"styles\":{\"website\":\"styles/website.css\",\"pdf\":\"styles/pdf.css\",\"epub\":\"styles/epub.css\",\"mobi\":\"styles/mobi.css\",\"ebook\":\"styles/ebook.css\",\"print\":\"styles/print.css\"}},\"file\":{\"path\":\"README.md\",\"mtime\":\"2017-11-08T10:24:17.377Z\",\"type\":\"markdown\"},\"gitbook\":{\"version\":\"3.2.3\",\"time\":\"2018-01-29T15:28:32.108Z\"},\"basePath\":\".\",\"book\":{\"language\":\"\"}}); });"},{"title":"","date":"2018-02-01T07:21:14.319Z","updated":"2018-01-29T15:28:35.846Z","comments":true,"path":"esjava/query-dsl.html","permalink":"http://test.quanke.name/esjava/query-dsl.html","excerpt":"","text":"Query DSL · GitBook Introduction Dependency Client Transport Client XPack Transport Client Document APIs Index API Get API Delete API Delete By Query API Update API Multi Get API Bulk API Using Bulk Processor Search API Using scrolls in Java MultiSearch API Using Aggregations Terminate After Search Template Aggregations Structuring aggregations Metrics aggregations Bucket aggregations Query DSL Match All Query Full text queries Term level queries Compound queries Joining queries Geo queries Specialized queries Span queries Indexed Scripts API Script Language Java API Administration Indices Administration Cluster Administration Published with GitBook Query DSL Query DSL Elasticsearch &#x63D0;&#x4F9B;&#x4E86;&#x4E00;&#x4E2A;&#x57FA;&#x4E8E; JSON &#x7684;&#x5B8C;&#x6574;&#x7684;&#x67E5;&#x8BE2; DSL &#x6765;&#x5B9A;&#x4E49;&#x67E5;&#x8BE2;&#x3002; Elasticsearch&#x4EE5;&#x7C7B;&#x4F3C;&#x4E8E;REST Query DSL &#x7684;&#x65B9;&#x5F0F;&#x63D0;&#x4F9B;&#x5B8C;&#x6574;&#x7684;Java&#x67E5;&#x8BE2;dsl&#x3002; &#x67E5;&#x8BE2;&#x6784;&#x5EFA;&#x5668;&#x7684;&#x5DE5;&#x5382;&#x662F; QueryBuilders&#x3002; &#x4E00;&#x65E6;&#x7684;&#x67E5;&#x8BE2;&#x51C6;&#x5907;&#x5C31;&#x7EEA;&#xFF0C;&#x5C31;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;Search API &#x3002; &#x8981;&#x4F7F;&#x7528;QueryBuilder&#xFF0C;&#x53EA;&#x9700;&#x5C06;&#x5B83;&#x4EEC;&#x5BFC;&#x5165;&#x5230;&#x7C7B;&#x4E2D;&#xFF1A; import static org.elasticsearch.index.query.QueryBuilders.*; &#x6CE8;&#x610F;&#xFF0C;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;QueryBuilder&#x5BF9;&#x8C61;&#x4E0A;&#x7684;toString&#xFF08;&#xFF09;&#x65B9;&#x6CD5;&#x6253;&#x5370;&#x3002; QueryBuilder&#x53EF;&#x4EE5;&#x7528;&#x4E8E;&#x63A5;&#x53D7;&#x4EFB;&#x4F55;&#x67E5;&#x8BE2;API&#xFF0C;&#x5982;count&#x548C;search&#x3002; results matching \"\" No results matching \"\" var gitbook = gitbook || []; gitbook.push(function() { gitbook.page.hasChanged({\"page\":{\"title\":\"Query DSL\",\"level\":\"1.7\",\"depth\":1,\"next\":{\"title\":\"Match All Query\",\"level\":\"1.7.1\",\"depth\":2,\"path\":\"query-dsl/match-all-query.md\",\"ref\":\"query-dsl/match-all-query.md\",\"articles\":[]},\"previous\":{\"title\":\"Bucket aggregations\",\"level\":\"1.6.3\",\"depth\":2,\"path\":\"aggregations/bucket-aggregations.md\",\"ref\":\"aggregations/bucket-aggregations.md\",\"articles\":[]},\"dir\":\"ltr\"},\"config\":{\"gitbook\":\"*\",\"theme\":\"default\",\"variables\":{},\"plugins\":[],\"pluginsConfig\":{\"highlight\":{},\"search\":{},\"lunr\":{\"maxIndexSize\":1000000,\"ignoreSpecialCharacters\":false},\"sharing\":{\"facebook\":true,\"twitter\":true,\"google\":false,\"weibo\":false,\"instapaper\":false,\"vk\":false,\"all\":[\"facebook\",\"google\",\"twitter\",\"weibo\",\"instapaper\"]},\"fontsettings\":{\"theme\":\"white\",\"family\":\"sans\",\"size\":2},\"theme-default\":{\"styles\":{\"website\":\"styles/website.css\",\"pdf\":\"styles/pdf.css\",\"epub\":\"styles/epub.css\",\"mobi\":\"styles/mobi.css\",\"ebook\":\"styles/ebook.css\",\"print\":\"styles/print.css\"},\"showLevel\":false}},\"structure\":{\"langs\":\"LANGS.md\",\"readme\":\"README.md\",\"glossary\":\"GLOSSARY.md\",\"summary\":\"SUMMARY.md\"},\"pdf\":{\"pageNumbers\":true,\"fontSize\":12,\"fontFamily\":\"Arial\",\"paperSize\":\"a4\",\"chapterMark\":\"pagebreak\",\"pageBreaksBefore\":\"/\",\"margin\":{\"right\":62,\"left\":62,\"top\":56,\"bottom\":56}},\"styles\":{\"website\":\"styles/website.css\",\"pdf\":\"styles/pdf.css\",\"epub\":\"styles/epub.css\",\"mobi\":\"styles/mobi.css\",\"ebook\":\"styles/ebook.css\",\"print\":\"styles/print.css\"}},\"file\":{\"path\":\"query-dsl.md\",\"mtime\":\"2017-11-08T08:32:54.311Z\",\"type\":\"markdown\"},\"gitbook\":{\"version\":\"3.2.3\",\"time\":\"2018-01-29T15:28:32.108Z\"},\"basePath\":\".\",\"book\":{\"language\":\"\"}}); });"},{"title":"","date":"2018-02-01T07:21:14.316Z","updated":"2018-01-29T15:28:36.662Z","comments":true,"path":"esjava/java-api-administration.html","permalink":"http://test.quanke.name/esjava/java-api-administration.html","excerpt":"","text":"Java API Administration · GitBook Introduction Dependency Client Transport Client XPack Transport Client Document APIs Index API Get API Delete API Delete By Query API Update API Multi Get API Bulk API Using Bulk Processor Search API Using scrolls in Java MultiSearch API Using Aggregations Terminate After Search Template Aggregations Structuring aggregations Metrics aggregations Bucket aggregations Query DSL Match All Query Full text queries Term level queries Compound queries Joining queries Geo queries Specialized queries Span queries Indexed Scripts API Script Language Java API Administration Indices Administration Cluster Administration Published with GitBook Java API Administration results matching \"\" No results matching \"\" var gitbook = gitbook || []; gitbook.push(function() { gitbook.page.hasChanged({\"page\":{\"title\":\"Java API Administration\",\"level\":\"1.9\",\"depth\":1,\"next\":{\"title\":\"Indices Administration\",\"level\":\"1.9.1\",\"depth\":2,\"path\":\"java-api-administration/indices-administration.md\",\"ref\":\"java-api-administration/indices-administration.md\",\"articles\":[]},\"previous\":{\"title\":\"Script Language\",\"level\":\"1.8.1\",\"depth\":2,\"path\":\"indexed-scripts-api/script-language.md\",\"ref\":\"indexed-scripts-api/script-language.md\",\"articles\":[]},\"dir\":\"neutral\"},\"config\":{\"gitbook\":\"*\",\"theme\":\"default\",\"variables\":{},\"plugins\":[],\"pluginsConfig\":{\"highlight\":{},\"search\":{},\"lunr\":{\"maxIndexSize\":1000000,\"ignoreSpecialCharacters\":false},\"sharing\":{\"facebook\":true,\"twitter\":true,\"google\":false,\"weibo\":false,\"instapaper\":false,\"vk\":false,\"all\":[\"facebook\",\"google\",\"twitter\",\"weibo\",\"instapaper\"]},\"fontsettings\":{\"theme\":\"white\",\"family\":\"sans\",\"size\":2},\"theme-default\":{\"styles\":{\"website\":\"styles/website.css\",\"pdf\":\"styles/pdf.css\",\"epub\":\"styles/epub.css\",\"mobi\":\"styles/mobi.css\",\"ebook\":\"styles/ebook.css\",\"print\":\"styles/print.css\"},\"showLevel\":false}},\"structure\":{\"langs\":\"LANGS.md\",\"readme\":\"README.md\",\"glossary\":\"GLOSSARY.md\",\"summary\":\"SUMMARY.md\"},\"pdf\":{\"pageNumbers\":true,\"fontSize\":12,\"fontFamily\":\"Arial\",\"paperSize\":\"a4\",\"chapterMark\":\"pagebreak\",\"pageBreaksBefore\":\"/\",\"margin\":{\"right\":62,\"left\":62,\"top\":56,\"bottom\":56}},\"styles\":{\"website\":\"styles/website.css\",\"pdf\":\"styles/pdf.css\",\"epub\":\"styles/epub.css\",\"mobi\":\"styles/mobi.css\",\"ebook\":\"styles/ebook.css\",\"print\":\"styles/print.css\"}},\"file\":{\"path\":\"java-api-administration.md\",\"mtime\":\"2017-11-08T07:56:23.949Z\",\"type\":\"markdown\"},\"gitbook\":{\"version\":\"3.2.3\",\"time\":\"2018-01-29T15:28:32.108Z\"},\"basePath\":\".\",\"book\":{\"language\":\"\"}}); });"},{"title":"","date":"2018-02-01T07:21:14.322Z","updated":"2018-01-29T15:28:35.009Z","comments":true,"path":"esjava/search-api.html","permalink":"http://test.quanke.name/esjava/search-api.html","excerpt":"","text":"Search API · GitBook Introduction Dependency Client Transport Client XPack Transport Client Document APIs Index API Get API Delete API Delete By Query API Update API Multi Get API Bulk API Using Bulk Processor Search API Using scrolls in Java MultiSearch API Using Aggregations Terminate After Search Template Aggregations Structuring aggregations Metrics aggregations Bucket aggregations Query DSL Match All Query Full text queries Term level queries Compound queries Joining queries Geo queries Specialized queries Span queries Indexed Scripts API Script Language Java API Administration Indices Administration Cluster Administration Published with GitBook Search API &#x641C;&#x7D22;API&#x53EF;&#x4EE5;&#x652F;&#x6301;&#x641C;&#x7D22;&#x67E5;&#x8BE2;&#xFF0C;&#x8FD4;&#x56DE;&#x67E5;&#x8BE2;&#x5339;&#x914D;&#x7684;&#x7ED3;&#x679C;&#xFF0C;&#x5B83;&#x53EF;&#x4EE5;&#x641C;&#x7D22;&#x4E00;&#x4E2A;index / type &#x6216;&#x8005;&#x591A;&#x4E2A;index / type&#xFF0C;&#x53EF;&#x4EE5;&#x4F7F;&#x7528; query Java API &#x4F5C;&#x4E3A;&#x67E5;&#x8BE2;&#x6761;&#x4EF6;&#xFF0C;&#x4E0B;&#x9762;&#x662F;&#x4F8B;&#x5B50;&#xFF1A; import org.elasticsearch.action.search.SearchResponse; import org.elasticsearch.action.search.SearchType; import org.elasticsearch.index.query.QueryBuilders.*; SearchResponse response = client.prepareSearch(&quot;index1&quot;, &quot;index2&quot;) .setTypes(&quot;type1&quot;, &quot;type2&quot;) .setSearchType(SearchType.DFS_QUERY_THEN_FETCH) .setQuery(QueryBuilders.termQuery(&quot;multi&quot;, &quot;test&quot;)) // Query &#x67E5;&#x8BE2;&#x6761;&#x4EF6; .setPostFilter(QueryBuilders.rangeQuery(&quot;age&quot;).from(12).to(18)) // Filter &#x8FC7;&#x6EE4; .setFrom(0).setSize(60).setExplain(true) .get(); &#x6240;&#x6709;&#x7684;&#x53C2;&#x6570;&#x90FD;&#x662F;&#x53EF;&#x9009;&#x7684;&#xFF0C;&#x4E0B;&#x9762;&#x662F;&#x6700;&#x5C0F;&#x8C03;&#x7528;&#xFF1A; // MatchAll on the whole cluster with all default options SearchResponse response = client.prepareSearch().get(); &#x5C3D;&#x7BA1;Java API&#x9ED8;&#x8BA4;&#x63D0;&#x4F9B;QUERY_AND_FETCH &#x548C; DFS_QUERY_AND_FETCH &#x4E24;&#x79CD; search types &#xFF0C;&#x4F46;&#x662F;&#x8FD9;&#x79CD;&#x6A21;&#x5F0F;&#x5E94;&#x8BE5;&#x7531;&#x7CFB;&#x7EDF;&#x9009;&#x62E9;&#xFF0C;&#x7528;&#x6237;&#x4E0D;&#x8981;&#x624B;&#x52A8;&#x6307;&#x5B9A; &#x66F4;&#x591A;&#x8BF7;&#x79FB;&#x6B65; REST search &#x6587;&#x6863; results matching \"\" No results matching \"\" var gitbook = gitbook || []; gitbook.push(function() { gitbook.page.hasChanged({\"page\":{\"title\":\"Search API\",\"level\":\"1.5\",\"depth\":1,\"next\":{\"title\":\"Using scrolls in Java\",\"level\":\"1.5.1\",\"depth\":2,\"path\":\"search-api/using-scrolls-in-java.md\",\"ref\":\"search-api/using-scrolls-in-java.md\",\"articles\":[]},\"previous\":{\"title\":\"Using Bulk Processor\",\"level\":\"1.4.8\",\"depth\":2,\"path\":\"document-apis/using-bulk-processor.md\",\"ref\":\"document-apis/using-bulk-processor.md\",\"articles\":[]},\"dir\":\"ltr\"},\"config\":{\"gitbook\":\"*\",\"theme\":\"default\",\"variables\":{},\"plugins\":[],\"pluginsConfig\":{\"highlight\":{},\"search\":{},\"lunr\":{\"maxIndexSize\":1000000,\"ignoreSpecialCharacters\":false},\"sharing\":{\"facebook\":true,\"twitter\":true,\"google\":false,\"weibo\":false,\"instapaper\":false,\"vk\":false,\"all\":[\"facebook\",\"google\",\"twitter\",\"weibo\",\"instapaper\"]},\"fontsettings\":{\"theme\":\"white\",\"family\":\"sans\",\"size\":2},\"theme-default\":{\"styles\":{\"website\":\"styles/website.css\",\"pdf\":\"styles/pdf.css\",\"epub\":\"styles/epub.css\",\"mobi\":\"styles/mobi.css\",\"ebook\":\"styles/ebook.css\",\"print\":\"styles/print.css\"},\"showLevel\":false}},\"structure\":{\"langs\":\"LANGS.md\",\"readme\":\"README.md\",\"glossary\":\"GLOSSARY.md\",\"summary\":\"SUMMARY.md\"},\"pdf\":{\"pageNumbers\":true,\"fontSize\":12,\"fontFamily\":\"Arial\",\"paperSize\":\"a4\",\"chapterMark\":\"pagebreak\",\"pageBreaksBefore\":\"/\",\"margin\":{\"right\":62,\"left\":62,\"top\":56,\"bottom\":56}},\"styles\":{\"website\":\"styles/website.css\",\"pdf\":\"styles/pdf.css\",\"epub\":\"styles/epub.css\",\"mobi\":\"styles/mobi.css\",\"ebook\":\"styles/ebook.css\",\"print\":\"styles/print.css\"}},\"file\":{\"path\":\"search-api.md\",\"mtime\":\"2017-11-08T08:32:22.747Z\",\"type\":\"markdown\"},\"gitbook\":{\"version\":\"3.2.3\",\"time\":\"2018-01-29T15:28:32.108Z\"},\"basePath\":\".\",\"book\":{\"language\":\"\"}}); });"},{"title":"全科的开源项目","date":"2015-05-08T13:31:30.000Z","updated":"2017-11-06T05:32:04.774Z","comments":true,"path":"open-source/index.html","permalink":"http://test.quanke.name/open-source/index.html","excerpt":"","text":"##AFormChange ###AFormChange Android表单值修改框架 https://git.oschina.net/quanke/AFormChange ##AValidations Android表单验证框架 https://git.oschina.net/quanke/AValidations"},{"title":"写一些小计划，监督自己","date":"2015-05-09T07:11:04.000Z","updated":"2017-11-06T05:32:04.775Z","comments":true,"path":"todo/index.html","permalink":"http://test.quanke.name/todo/index.html","excerpt":"","text":"#TODO 写一些小计划，监督自己 2015年7月11日 写LiveOak系列教程 2015-05-09 考PMP，把学习中的一些心得写出来 深入学习敏捷 学习微服务架构 如何敏捷创业"},{"title":"标签","date":"2016-07-22T14:08:05.000Z","updated":"2017-11-06T05:32:04.774Z","comments":false,"path":"tags/index.html","permalink":"http://test.quanke.name/tags/index.html","excerpt":"","text":""},{"title":"","date":"2018-02-01T07:21:14.277Z","updated":"2018-01-29T15:28:33.709Z","comments":true,"path":"esjava/indexed-scripts-api/script-language.html","permalink":"http://test.quanke.name/esjava/indexed-scripts-api/script-language.html","excerpt":"","text":""},{"title":"","date":"2018-02-01T07:21:14.280Z","updated":"2018-01-29T15:28:33.710Z","comments":true,"path":"esjava/java-api-administration/cluster-administration.html","permalink":"http://test.quanke.name/esjava/java-api-administration/cluster-administration.html","excerpt":"","text":""},{"title":"","date":"2018-02-01T07:21:14.283Z","updated":"2018-01-29T15:28:33.711Z","comments":true,"path":"esjava/java-api-administration/indices-administration.html","permalink":"http://test.quanke.name/esjava/java-api-administration/indices-administration.html","excerpt":"","text":""},{"title":"","date":"2018-02-01T07:21:14.189Z","updated":"2018-01-29T15:28:35.775Z","comments":true,"path":"esjava/aggregations/bucket-aggregations.html","permalink":"http://test.quanke.name/esjava/aggregations/bucket-aggregations.html","excerpt":"","text":"Bucket aggregations · GitBook Introduction Dependency Client Transport Client XPack Transport Client Document APIs Index API Get API Delete API Delete By Query API Update API Multi Get API Bulk API Using Bulk Processor Search API Using scrolls in Java MultiSearch API Using Aggregations Terminate After Search Template Aggregations Structuring aggregations Metrics aggregations Bucket aggregations Query DSL Match All Query Full text queries Term level queries Compound queries Joining queries Geo queries Specialized queries Span queries Indexed Scripts API Script Language Java API Administration Indices Administration Cluster Administration Published with GitBook Bucket aggregations Bucket aggregations &#x6876;&#x5206;&#x805A;&#x5408; Bucket aggregations &#x4E0D;&#x50CF; metrics aggregations &#x90A3;&#x6837;&#x8BA1;&#x7B97;&#x6307;&#x6807;&#xFF0C;&#x6070;&#x6070;&#x76F8;&#x53CD;&#xFF0C;&#x5B83;&#x521B;&#x5EFA;&#x6587;&#x6863;&#x7684;buckets&#xFF0C;&#x6BCF;&#x4E2A;buckets&#x4E0E;&#x6807;&#x51C6;&#xFF08;&#x53D6;&#x51B3;&#x4E8E;&#x805A;&#x5408;&#x7C7B;&#x578B;&#xFF09;&#x76F8;&#x5173;&#x8054;&#xFF0C;&#x5B83;&#x51B3;&#x5B9A;&#x4E86;&#x5F53;&#x524D;&#x4E0A;&#x4E0B;&#x6587;&#x4E2D;&#x7684;&#x6587;&#x6863;&#x662F;&#x5426;&#x4F1A;&#x201C;falls&#x201D;&#x5230;&#x5B83;&#x3002;&#x6362;&#x53E5;&#x8BDD;&#x8BF4;&#xFF0C;bucket&#x53EF;&#x4EE5;&#x6709;&#x6548;&#x5730;&#x5B9A;&#x4E49;&#x6587;&#x6863;&#x96C6;&#x5408;&#x3002;&#x9664;&#x4E86;buckets&#x672C;&#x8EAB;&#xFF0C;bucket&#x96C6;&#x5408;&#x8FD8;&#x8BA1;&#x7B97;&#x5E76;&#x8FD4;&#x56DE;&#x201C;&#x843D;&#x5165;&#x201D;&#x6BCF;&#x4E2A;bucket&#x7684;&#x6587;&#x6863;&#x6570;&#x91CF;&#x3002; &#x4E0E;&#x5EA6;&#x91CF;&#x805A;&#x5408;&#x76F8;&#x6BD4;&#xFF0C;Bucket&#x805A;&#x5408;&#x53EF;&#x4EE5;&#x4FDD;&#x5B58;&#x5B50;&#x805A;&#x5408;&#xFF0C;&#x8FD9;&#x4E9B;&#x5B50;&#x805A;&#x5408;&#x5C06;&#x9488;&#x5BF9;&#x7531;&#x5176;&#x201C;&#x7236;&#x201D;bucket&#x805A;&#x5408;&#x521B;&#x5EFA;&#x7684;bucket&#x8FDB;&#x884C;&#x805A;&#x5408;&#x3002; &#x6709;&#x4E0D;&#x540C;&#x7684;bucket&#x805A;&#x5408;&#x5668;&#xFF0C;&#x6BCF;&#x4E2A;&#x5177;&#x6709;&#x4E0D;&#x540C;&#x7684;&#x201C;bucketing&#x201D;&#x7B56;&#x7565;,&#x4E00;&#x4E9B;&#x5B9A;&#x4E49;&#x4E00;&#x4E2A;&#x5355;&#x72EC;&#x7684;bucket&#xFF0C;&#x4E00;&#x4E9B;&#x5B9A;&#x4E49;&#x591A;&#x4E2A;bucket&#x7684;&#x56FA;&#x5B9A;&#x6570;&#x91CF;&#xFF0C;&#x53E6;&#x4E00;&#x4E9B;&#x5B9A;&#x4E49;&#x5728;&#x805A;&#x5408;&#x8FC7;&#x7A0B;&#x4E2D;&#x52A8;&#x6001;&#x521B;&#x5EFA;bucket Global Aggregation &#x5168;&#x5C40;&#x805A;&#x5408; &#x5B9A;&#x4E49;&#x641C;&#x7D22;&#x6267;&#x884C;&#x4E0A;&#x4E0B;&#x6587;&#x4E2D;&#x7684;&#x6240;&#x6709;&#x6587;&#x6863;&#x7684;&#x5355;&#x4E2A;bucket&#xFF0C;&#x8FD9;&#x4E2A;&#x4E0A;&#x4E0B;&#x6587;&#x7531;&#x7D22;&#x5F15;&#x548C;&#x60A8;&#x6B63;&#x5728;&#x641C;&#x7D22;&#x7684;&#x6587;&#x6863;&#x7C7B;&#x578B;&#x5B9A;&#x4E49;&#xFF0C;&#x4F46;&#x4E0D;&#x53D7;&#x641C;&#x7D22;&#x67E5;&#x8BE2;&#x672C;&#x8EAB;&#x7684;&#x5F71;&#x54CD;&#x3002; &#x5168;&#x5C40;&#x805A;&#x5408;&#x5668;&#x53EA;&#x80FD;&#x4F5C;&#x4E3A;&#x9876;&#x5C42;&#x805A;&#x5408;&#x5668;&#x653E;&#x7F6E;&#xFF0C;&#x56E0;&#x4E3A;&#x5C06;&#x5168;&#x5C40;&#x805A;&#x5408;&#x5668;&#x5D4C;&#x5165;&#x5230;&#x53E6;&#x4E00;&#x4E2A;&#x5206;&#x7EC4;&#x805A;&#x5408;&#x5668;&#x4E2D;&#x662F;&#x6CA1;&#x6709;&#x610F;&#x4E49;&#x7684;&#x3002; &#x4E0B;&#x9762;&#x662F;&#x5982;&#x4F55;&#x4F7F;&#x7528; Java API &#x4F7F;&#x7528;&#x5168;&#x5C40;&#x805A;&#x5408; &#x51C6;&#x5907;&#x805A;&#x5408;&#x8BF7;&#x6C42; &#x4E0B;&#x9762;&#x662F;&#x5982;&#x4F55;&#x521B;&#x5EFA;&#x805A;&#x5408;&#x8BF7;&#x6C42;&#x7684;&#x662F;&#x793A;&#x4F8B;&#xFF1A; AggregationBuilders .global(&quot;agg&quot;) .subAggregation(AggregationBuilders.terms(&quot;genders&quot;).field(&quot;gender&quot;)); &#x4F7F;&#x7528;&#x805A;&#x5408;&#x8BF7;&#x6C42; import org.elasticsearch.search.aggregations.bucket.global.Global; // sr is here your SearchResponse object Global agg = sr.getAggregations().get(&quot;agg&quot;); agg.getDocCount(); // Doc count Filter Aggregation &#x8FC7;&#x6EE4;&#x805A;&#x5408; &#x8FC7;&#x6EE4;&#x805A;&#x5408;&#x2014;&#x2014;&#x57FA;&#x4E8E;&#x4E00;&#x4E2A;&#x6761;&#x4EF6;&#xFF0C;&#x6765;&#x5BF9;&#x5F53;&#x524D;&#x7684;&#x6587;&#x6863;&#x8FDB;&#x884C;&#x8FC7;&#x6EE4;&#x7684;&#x805A;&#x5408;&#x3002; &#x4E0B;&#x9762;&#x662F;&#x5982;&#x4F55;&#x4F7F;&#x7528; Java API &#x4F7F;&#x7528;&#x8FC7;&#x6EE4;&#x805A;&#x5408; &#x51C6;&#x5907;&#x805A;&#x5408;&#x8BF7;&#x6C42; &#x4E0B;&#x9762;&#x662F;&#x5982;&#x4F55;&#x521B;&#x5EFA;&#x805A;&#x5408;&#x8BF7;&#x6C42;&#x7684;&#x662F;&#x793A;&#x4F8B;&#xFF1A; AggregationBuilders .filter(&quot;agg&quot;, QueryBuilders.termQuery(&quot;gender&quot;, &quot;male&quot;)); &#x4F7F;&#x7528;&#x805A;&#x5408;&#x8BF7;&#x6C42; import org.elasticsearch.search.aggregations.bucket.filter.Filter; // sr is here your SearchResponse object Filter agg = sr.getAggregations().get(&quot;agg&quot;); agg.getDocCount(); // Doc count Filters Aggregation &#x591A;&#x8FC7;&#x6EE4;&#x805A;&#x5408; &#x591A;&#x8FC7;&#x6EE4;&#x805A;&#x5408;&#x2014;&#x2014;&#x57FA;&#x4E8E;&#x591A;&#x4E2A;&#x8FC7;&#x6EE4;&#x6761;&#x4EF6;&#xFF0C;&#x6765;&#x5BF9;&#x5F53;&#x524D;&#x6587;&#x6863;&#x8FDB;&#x884C;&#x3010;&#x8FC7;&#x6EE4;&#x3011;&#x7684;&#x805A;&#x5408;&#xFF0C;&#x6BCF;&#x4E2A;&#x8FC7;&#x6EE4;&#x90FD;&#x5305;&#x542B;&#x6240;&#x6709;&#x6EE1;&#x8DB3;&#x5B83;&#x7684;&#x6587;&#x6863;&#xFF08;&#x591A;&#x4E2A;bucket&#x4E2D;&#x53EF;&#x80FD;&#x91CD;&#x590D;&#xFF09;&#x3002; &#x4E0B;&#x9762;&#x662F;&#x5982;&#x4F55;&#x4F7F;&#x7528; Java API &#x4F7F;&#x7528;&#x591A;&#x8FC7;&#x6EE4;&#x805A;&#x5408; &#x51C6;&#x5907;&#x805A;&#x5408;&#x8BF7;&#x6C42; &#x4E0B;&#x9762;&#x662F;&#x5982;&#x4F55;&#x521B;&#x5EFA;&#x805A;&#x5408;&#x8BF7;&#x6C42;&#x7684;&#x662F;&#x793A;&#x4F8B;&#xFF1A; AggregationBuilder aggregation = AggregationBuilders .filters(&quot;agg&quot;, new FiltersAggregator.KeyedFilter(&quot;men&quot;, QueryBuilders.termQuery(&quot;gender&quot;, &quot;male&quot;)), new FiltersAggregator.KeyedFilter(&quot;women&quot;, QueryBuilders.termQuery(&quot;gender&quot;, &quot;female&quot;))); &#x4F7F;&#x7528;&#x805A;&#x5408;&#x8BF7;&#x6C42; import org.elasticsearch.search.aggregations.bucket.filters.Filters; // sr is here your SearchResponse object Filters agg = sr.getAggregations().get(&quot;agg&quot;); // For each entry for (Filters.Bucket entry : agg.getBuckets()) { String key = entry.getKeyAsString(); // bucket key long docCount = entry.getDocCount(); // Doc count logger.info(&quot;key [{}], doc_count [{}]&quot;, key, docCount); } &#x5927;&#x6982;&#x8F93;&#x51FA; key [men], doc_count [4982] key [women], doc_count [5018] Missing Aggregation &#x57FA;&#x4E8E;&#x5B57;&#x6BB5;&#x6570;&#x636E;&#x7684;&#x5355;&#x6876;&#x805A;&#x5408; &#x57FA;&#x4E8E;&#x5B57;&#x6BB5;&#x6570;&#x636E;&#x7684;&#x5355;&#x6876;&#x805A;&#x5408;&#xFF0C;&#x521B;&#x5EFA;&#x5F53;&#x524D;&#x6587;&#x6863;&#x96C6;&#x4E0A;&#x4E0B;&#x6587;&#x4E2D;&#x7F3A;&#x5C11;&#x5B57;&#x6BB5;&#x503C;&#x7684;&#x6240;&#x6709;&#x6587;&#x6863;&#x7684;bucket&#xFF08;&#x6876;&#xFF09;&#xFF08;&#x6709;&#x6548;&#x5730;&#xFF0C;&#x4E22;&#x5931;&#x4E86;&#x4E00;&#x4E2A;&#x5B57;&#x6BB5;&#x6216;&#x914D;&#x7F6E;&#x4E86;NULL&#x503C;&#x96C6;&#xFF09;&#xFF0C;&#x6B64;&#x805A;&#x5408;&#x5668;&#x901A;&#x5E38;&#x4E0E;&#x5176;&#x4ED6;&#x5B57;&#x6BB5;&#x6570;&#x636E;&#x6876;&#x805A;&#x5408;&#x5668;&#xFF08;&#x4F8B;&#x5982;&#x8303;&#x56F4;&#xFF09;&#x7ED3;&#x5408;&#x4F7F;&#x7528;&#xFF0C;&#x4EE5;&#x8FD4;&#x56DE;&#x7531;&#x4E8E;&#x7F3A;&#x5C11;&#x5B57;&#x6BB5;&#x6570;&#x636E;&#x503C;&#x800C;&#x65E0;&#x6CD5;&#x653E;&#x7F6E;&#x5728;&#x4EFB;&#x4F55;&#x5176;&#x4ED6;&#x5B58;&#x50A8;&#x533A;&#x4E2D;&#x7684;&#x6240;&#x6709;&#x6587;&#x6863;&#x7684;&#x4FE1;&#x606F;&#x3002; &#x4E0B;&#x9762;&#x662F;&#x5982;&#x4F55;&#x4F7F;&#x7528; Java API &#x4F7F;&#x7528;&#x57FA;&#x4E8E;&#x5B57;&#x6BB5;&#x6570;&#x636E;&#x7684;&#x5355;&#x6876;&#x805A;&#x5408; &#x51C6;&#x5907;&#x805A;&#x5408;&#x8BF7;&#x6C42; &#x4E0B;&#x9762;&#x662F;&#x5982;&#x4F55;&#x521B;&#x5EFA;&#x805A;&#x5408;&#x8BF7;&#x6C42;&#x7684;&#x662F;&#x793A;&#x4F8B;&#xFF1A; AggregationBuilders.missing(&quot;agg&quot;).field(&quot;gender&quot;); &#x4F7F;&#x7528;&#x805A;&#x5408;&#x8BF7;&#x6C42; import org.elasticsearch.search.aggregations.bucket.missing.Missing; // sr is here your SearchResponse object Missing agg = sr.getAggregations().get(&quot;agg&quot;); agg.getDocCount(); // Doc count Nested Aggregation &#x5D4C;&#x5957;&#x7C7B;&#x578B;&#x805A;&#x5408; &#x57FA;&#x4E8E;&#x5D4C;&#x5957;&#xFF08;nested&#xFF09;&#x6570;&#x636E;&#x7C7B;&#x578B;&#xFF0C;&#x628A;&#x8BE5;&#x3010;&#x5D4C;&#x5957;&#x7C7B;&#x578B;&#x7684;&#x4FE1;&#x606F;&#x3011;&#x805A;&#x5408;&#x5230;&#x5355;&#x4E2A;&#x6876;&#x91CC;&#xFF0C;&#x7136;&#x540E;&#x5C31;&#x53EF;&#x4EE5;&#x5BF9;&#x5D4C;&#x5957;&#x7C7B;&#x578B;&#x505A;&#x8FDB;&#x4E00;&#x6B65;&#x7684;&#x805A;&#x5408;&#x64CD;&#x4F5C;&#x3002; &#x4E0B;&#x9762;&#x662F;&#x5982;&#x4F55;&#x4F7F;&#x7528; Java API &#x4F7F;&#x7528;&#x5D4C;&#x5957;&#x7C7B;&#x578B;&#x805A;&#x5408; &#x51C6;&#x5907;&#x805A;&#x5408;&#x8BF7;&#x6C42; &#x4E0B;&#x9762;&#x662F;&#x5982;&#x4F55;&#x521B;&#x5EFA;&#x805A;&#x5408;&#x8BF7;&#x6C42;&#x7684;&#x662F;&#x793A;&#x4F8B;&#xFF1A; AggregationBuilders .nested(&quot;agg&quot;, &quot;resellers&quot;); &#x4F7F;&#x7528;&#x805A;&#x5408;&#x8BF7;&#x6C42; import org.elasticsearch.search.aggregations.bucket.nested.Nested; // sr is here your SearchResponse object Nested agg = sr.getAggregations().get(&quot;agg&quot;); agg.getDocCount(); // Doc count Reverse nested Aggregation &#x4E00;&#x4E2A;&#x7279;&#x6B8A;&#x7684;&#x5355;&#x6876;&#x805A;&#x5408;&#xFF0C;&#x53EF;&#x4EE5;&#x4ECE;&#x5D4C;&#x5957;&#x6587;&#x6863;&#x4E2D;&#x805A;&#x5408;&#x7236;&#x6587;&#x6863;&#x3002;&#x5B9E;&#x9645;&#x4E0A;&#xFF0C;&#x8FD9;&#x79CD;&#x805A;&#x5408;&#x53EF;&#x4EE5;&#x4ECE;&#x5D4C;&#x5957;&#x7684;&#x5757;&#x7ED3;&#x6784;&#x4E2D;&#x8DF3;&#x51FA;&#x6765;&#xFF0C;&#x5E76;&#x94FE;&#x63A5;&#x5230;&#x5176;&#x4ED6;&#x5D4C;&#x5957;&#x7684;&#x7ED3;&#x6784;&#x6216;&#x6839;&#x6587;&#x6863;.&#x8FD9;&#x5141;&#x8BB8;&#x5D4C;&#x5957;&#x4E0D;&#x662F;&#x5D4C;&#x5957;&#x5BF9;&#x8C61;&#x7684;&#x4E00;&#x90E8;&#x5206;&#x7684;&#x5176;&#x4ED6;&#x805A;&#x5408;&#x5728;&#x5D4C;&#x5957;&#x805A;&#x5408;&#x4E2D;&#x3002; reverse_nested &#x805A;&#x5408;&#x5FC5;&#x987B;&#x5B9A;&#x4E49;&#x5728;nested&#x4E4B;&#x4E2D; &#x4E0B;&#x9762;&#x662F;&#x5982;&#x4F55;&#x4F7F;&#x7528; Java API &#x4F7F;&#x7528;Reverse nested Aggregation &#x51C6;&#x5907;&#x805A;&#x5408;&#x8BF7;&#x6C42; &#x4E0B;&#x9762;&#x662F;&#x5982;&#x4F55;&#x521B;&#x5EFA;&#x805A;&#x5408;&#x8BF7;&#x6C42;&#x7684;&#x662F;&#x793A;&#x4F8B;&#xFF1A; AggregationBuilder aggregation = AggregationBuilders .nested(&quot;agg&quot;, &quot;resellers&quot;) .subAggregation( AggregationBuilders .terms(&quot;name&quot;).field(&quot;resellers.name&quot;) .subAggregation( AggregationBuilders .reverseNested(&quot;reseller_to_product&quot;) ) ); &#x4F7F;&#x7528;&#x805A;&#x5408;&#x8BF7;&#x6C42; import org.elasticsearch.search.aggregations.bucket.nested.Nested; import org.elasticsearch.search.aggregations.bucket.nested.ReverseNested; import org.elasticsearch.search.aggregations.bucket.terms.Terms; // sr is here your SearchResponse object Nested agg = sr.getAggregations().get(&quot;agg&quot;); Terms name = agg.getAggregations().get(&quot;name&quot;); for (Terms.Bucket bucket : name.getBuckets()) { ReverseNested resellerToProduct = bucket.getAggregations().get(&quot;reseller_to_product&quot;); resellerToProduct.getDocCount(); // Doc count } Children Aggregation &#x4E00;&#x79CD;&#x7279;&#x6B8A;&#x7684;&#x5355;&#x6876;&#x805A;&#x5408;&#xFF0C;&#x53EF;&#x4EE5;&#x5C06;&#x7236;&#x6587;&#x6863;&#x7C7B;&#x578B;&#x4E0A;&#x7684;&#x6876;&#x805A;&#x5408;&#x5230;&#x5B50;&#x6587;&#x6863;&#x4E0A;&#x3002; &#x4E0B;&#x9762;&#x662F;&#x5982;&#x4F55;&#x4F7F;&#x7528; Java API &#x4F7F;&#x7528;Children Aggregation &#x51C6;&#x5907;&#x805A;&#x5408;&#x8BF7;&#x6C42; &#x4E0B;&#x9762;&#x662F;&#x5982;&#x4F55;&#x521B;&#x5EFA;&#x805A;&#x5408;&#x8BF7;&#x6C42;&#x7684;&#x662F;&#x793A;&#x4F8B;&#xFF1A; AggregationBuilder aggregation = AggregationBuilders .children(&quot;agg&quot;, &quot;reseller&quot;); // agg &#x662F;&#x805A;&#x5408;&#x540D;&#xFF0C;reseller &#x662F;&#x5B50;&#x7C7B;&#x578B; &#x4F7F;&#x7528;&#x805A;&#x5408;&#x8BF7;&#x6C42; import org.elasticsearch.join.aggregations.Children; // sr is here your SearchResponse object Children agg = sr.getAggregations().get(&quot;agg&quot;); agg.getDocCount(); // Doc count Terms Aggregation &#x8BCD;&#x5143;&#x805A;&#x5408; &#x57FA;&#x4E8E;&#x67D0;&#x4E2A;field&#xFF0C;&#x8BE5; field &#x5185;&#x7684;&#x6BCF;&#x4E00;&#x4E2A;&#x3010;&#x552F;&#x4E00;&#x8BCD;&#x5143;&#x3011;&#x4E3A;&#x4E00;&#x4E2A;&#x6876;&#xFF0C;&#x5E76;&#x8BA1;&#x7B97;&#x6BCF;&#x4E2A;&#x6876;&#x5185;&#x6587;&#x6863;&#x4E2A;&#x6570;&#x3002;&#x9ED8;&#x8BA4;&#x8FD4;&#x56DE;&#x987A;&#x5E8F;&#x662F;&#x6309;&#x7167;&#x6587;&#x6863;&#x4E2A;&#x6570;&#x591A;&#x5C11;&#x6392;&#x5E8F;&#x3002;&#x5F53;&#x4E0D;&#x8FD4;&#x56DE;&#x6240;&#x6709; buckets &#x7684;&#x60C5;&#x51B5;&#xFF0C;&#x6587;&#x6863;&#x4E2A;&#x6570;&#x53EF;&#x80FD;&#x4E0D;&#x51C6;&#x786E;&#x3002; &#x4E0B;&#x9762;&#x662F;&#x5982;&#x4F55;&#x4F7F;&#x7528; Java API &#x4F7F;&#x7528;Terms Aggregation &#x51C6;&#x5907;&#x805A;&#x5408;&#x8BF7;&#x6C42; &#x4E0B;&#x9762;&#x662F;&#x5982;&#x4F55;&#x521B;&#x5EFA;&#x805A;&#x5408;&#x8BF7;&#x6C42;&#x7684;&#x662F;&#x793A;&#x4F8B;&#xFF1A; AggregationBuilders .terms(&quot;genders&quot;) .field(&quot;gender&quot;); &#x4F7F;&#x7528;&#x805A;&#x5408;&#x8BF7;&#x6C42; import org.elasticsearch.search.aggregations.bucket.terms.Terms; // sr is here your SearchResponse object Terms genders = sr.getAggregations().get(&quot;genders&quot;); // For each entry for (Terms.Bucket entry : genders.getBuckets()) { entry.getKey(); // Term entry.getDocCount(); // Doc count } Order &#x6392;&#x5E8F; &#x901A;&#x8FC7; doc_count &#x6309;&#x5347;&#x5E8F;&#x6392;&#x5217;&#xFF1A; AggregationBuilders .terms(&quot;genders&quot;) .field(&quot;gender&quot;) .order(Terms.Order.count(true)) &#x6309;&#x5B57;&#x8BCD;&#x987A;&#x5E8F;&#xFF0C;&#x5347;&#x5E8F;&#x6392;&#x5217;&#xFF1A; AggregationBuilders .terms(&quot;genders&quot;) .field(&quot;gender&quot;) .order(Terms.Order.term(true)) &#x6309;metrics &#x5B50;&#x805A;&#x5408;&#x6392;&#x5217;&#xFF08;&#x6807;&#x793A;&#x4E3A;&#x805A;&#x5408;&#x540D;&#xFF09; AggregationBuilders .terms(&quot;genders&quot;) .field(&quot;gender&quot;) .order(Terms.Order.aggregation(&quot;avg_height&quot;, false)) .subAggregation( AggregationBuilders.avg(&quot;avg_height&quot;).field(&quot;height&quot;) ) Significant Terms Aggregation &#x8FD4;&#x56DE;&#x96C6;&#x5408;&#x4E2D;&#x611F;&#x5174;&#x8DA3;&#x7684;&#x6216;&#x8005;&#x4E0D;&#x5E38;&#x89C1;&#x7684;&#x8BCD;&#x6761;&#x7684;&#x805A;&#x5408; &#x4E0B;&#x9762;&#x662F;&#x5982;&#x4F55;&#x4F7F;&#x7528; Java API &#x4F7F;&#x7528;Significant Terms Aggregation &#x51C6;&#x5907;&#x805A;&#x5408;&#x8BF7;&#x6C42; &#x4E0B;&#x9762;&#x662F;&#x5982;&#x4F55;&#x521B;&#x5EFA;&#x805A;&#x5408;&#x8BF7;&#x6C42;&#x7684;&#x662F;&#x793A;&#x4F8B;&#xFF1A; AggregationBuilder aggregation = AggregationBuilders .significantTerms(&quot;significant_countries&quot;) .field(&quot;address.country&quot;); // Let say you search for men only SearchResponse sr = client.prepareSearch() .setQuery(QueryBuilders.termQuery(&quot;gender&quot;, &quot;male&quot;)) .addAggregation(aggregation) .get(); &#x4F7F;&#x7528;&#x805A;&#x5408;&#x8BF7;&#x6C42; import org.elasticsearch.search.aggregations.bucket.significant.SignificantTerms; // sr is here your SearchResponse object SignificantTerms agg = sr.getAggregations().get(&quot;significant_countries&quot;); // For each entry for (SignificantTerms.Bucket entry : agg.getBuckets()) { entry.getKey(); // Term entry.getDocCount(); // Doc count } Range Aggregation &#x8303;&#x56F4;&#x805A;&#x5408; &#x57FA;&#x4E8E;&#x67D0;&#x4E2A;&#x503C;&#xFF08;&#x53EF;&#x4EE5;&#x662F; field &#x6216; script&#xFF09;&#xFF0C;&#x4EE5;&#x3010;&#x5B57;&#x6BB5;&#x8303;&#x56F4;&#x3011;&#x6765;&#x6876;&#x5206;&#x805A;&#x5408;&#x3002;&#x8303;&#x56F4;&#x805A;&#x5408;&#x5305;&#x62EC; from &#x503C;&#xFF0C;&#x4E0D;&#x5305;&#x62EC; to &#x503C;&#xFF08;&#x533A;&#x95F4;&#x524D;&#x95ED;&#x540E;&#x5F00;&#xFF09;&#x3002; &#x4E0B;&#x9762;&#x662F;&#x5982;&#x4F55;&#x4F7F;&#x7528; Java API &#x4F7F;&#x7528;Range Aggregation &#x51C6;&#x5907;&#x805A;&#x5408;&#x8BF7;&#x6C42; &#x4E0B;&#x9762;&#x662F;&#x5982;&#x4F55;&#x521B;&#x5EFA;&#x805A;&#x5408;&#x8BF7;&#x6C42;&#x7684;&#x662F;&#x793A;&#x4F8B;&#xFF1A; AggregationBuilder aggregation = AggregationBuilders .range(&quot;agg&quot;) .field(&quot;height&quot;) .addUnboundedTo(1.0f) // from -infinity to 1.0 (excluded) .addRange(1.0f, 1.5f) // from 1.0 to 1.5 (excluded) .addUnboundedFrom(1.5f); // from 1.5 to +infinity &#x4F7F;&#x7528;&#x805A;&#x5408;&#x8BF7;&#x6C42; import org.elasticsearch.search.aggregations.bucket.range.Range; // sr is here your SearchResponse object Range agg = sr.getAggregations().get(&quot;agg&quot;); // For each entry for (Range.Bucket entry : agg.getBuckets()) { String key = entry.getKeyAsString(); // Range as key Number from = (Number) entry.getFrom(); // Bucket from Number to = (Number) entry.getTo(); // Bucket to long docCount = entry.getDocCount(); // Doc count logger.info(&quot;key [{}], from [{}], to [{}], doc_count [{}]&quot;, key, from, to, docCount); } &#x8F93;&#x51FA;&#xFF1A; key [*-1.0], from [-Infinity], to [1.0], doc_count [9] key [1.0-1.5], from [1.0], to [1.5], doc_count [21] key [1.5-*], from [1.5], to [Infinity], doc_count [20] Date Range Aggregation &#x65E5;&#x671F;&#x8303;&#x56F4;&#x805A;&#x5408; &#x65E5;&#x671F;&#x8303;&#x56F4;&#x805A;&#x5408;&#x2014;&#x2014;&#x57FA;&#x4E8E;&#x65E5;&#x671F;&#x7C7B;&#x578B;&#x7684;&#x503C;&#xFF0C;&#x4EE5;&#x3010;&#x65E5;&#x671F;&#x8303;&#x56F4;&#x3011;&#x6765;&#x6876;&#x5206;&#x805A;&#x5408;&#x3002; &#x65E5;&#x671F;&#x8303;&#x56F4;&#x53EF;&#x4EE5;&#x7528;&#x5404;&#x79CD; Date Math &#x8868;&#x8FBE;&#x5F0F;&#x3002; &#x540C;&#x6837;&#x7684;&#xFF0C;&#x5305;&#x62EC; from &#x7684;&#x503C;&#xFF0C;&#x4E0D;&#x5305;&#x62EC; to &#x7684;&#x503C;&#x3002; &#x4E0B;&#x9762;&#x662F;&#x5982;&#x4F55;&#x4F7F;&#x7528; Java API &#x4F7F;&#x7528;Date Range Aggregation &#x51C6;&#x5907;&#x805A;&#x5408;&#x8BF7;&#x6C42; &#x4E0B;&#x9762;&#x662F;&#x5982;&#x4F55;&#x521B;&#x5EFA;&#x805A;&#x5408;&#x8BF7;&#x6C42;&#x7684;&#x662F;&#x793A;&#x4F8B;&#xFF1A; AggregationBuilder aggregation = AggregationBuilders .dateRange(&quot;agg&quot;) .field(&quot;dateOfBirth&quot;) .format(&quot;yyyy&quot;) .addUnboundedTo(&quot;1950&quot;) // from -infinity to 1950 (excluded) .addRange(&quot;1950&quot;, &quot;1960&quot;) // from 1950 to 1960 (excluded) .addUnboundedFrom(&quot;1960&quot;); // from 1960 to +infinity &#x4F7F;&#x7528;&#x805A;&#x5408;&#x8BF7;&#x6C42; import org.elasticsearch.search.aggregations.bucket.range.Range; // sr is here your SearchResponse object Range agg = sr.getAggregations().get(&quot;agg&quot;); // For each entry for (Range.Bucket entry : agg.getBuckets()) { String key = entry.getKeyAsString(); // Date range as key DateTime fromAsDate = (DateTime) entry.getFrom(); // Date bucket from as a Date DateTime toAsDate = (DateTime) entry.getTo(); // Date bucket to as a Date long docCount = entry.getDocCount(); // Doc count logger.info(&quot;key [{}], from [{}], to [{}], doc_count [{}]&quot;, key, fromAsDate, toAsDate, docCount); } &#x8F93;&#x51FA;&#xFF1A; key [*-1950], from [null], to [1950-01-01T00:00:00.000Z], doc_count [8] key [1950-1960], from [1950-01-01T00:00:00.000Z], to [1960-01-01T00:00:00.000Z], doc_count [5] key [1960-*], from [1960-01-01T00:00:00.000Z], to [null], doc_count [37] Ip Range Aggregation Ip&#x8303;&#x56F4;&#x805A;&#x5408; &#x4E0B;&#x9762;&#x662F;&#x5982;&#x4F55;&#x4F7F;&#x7528; Java API &#x4F7F;&#x7528;Ip Range Aggregation &#x51C6;&#x5907;&#x805A;&#x5408;&#x8BF7;&#x6C42; &#x4E0B;&#x9762;&#x662F;&#x5982;&#x4F55;&#x521B;&#x5EFA;&#x805A;&#x5408;&#x8BF7;&#x6C42;&#x7684;&#x662F;&#x793A;&#x4F8B;&#xFF1A; AggregatorBuilder&lt;?&gt; aggregation = AggregationBuilders .ipRange(&quot;agg&quot;) .field(&quot;ip&quot;) .addUnboundedTo(&quot;192.168.1.0&quot;) // from -infinity to 192.168.1.0 (excluded) .addRange(&quot;192.168.1.0&quot;, &quot;192.168.2.0&quot;) // from 192.168.1.0 to 192.168.2.0 (excluded) .addUnboundedFrom(&quot;192.168.2.0&quot;); // from 192.168.2.0 to +infinity &#x4F7F;&#x7528;&#x805A;&#x5408;&#x8BF7;&#x6C42; import org.elasticsearch.search.aggregations.bucket.range.Range; // sr is here your SearchResponse object Range agg = sr.getAggregations().get(&quot;agg&quot;); // For each entry for (Range.Bucket entry : agg.getBuckets()) { String key = entry.getKeyAsString(); // Ip range as key String fromAsString = entry.getFromAsString(); // Ip bucket from as a String String toAsString = entry.getToAsString(); // Ip bucket to as a String long docCount = entry.getDocCount(); // Doc count logger.info(&quot;key [{}], from [{}], to [{}], doc_count [{}]&quot;, key, fromAsString, toAsString, docCount); } &#x8F93;&#x51FA;&#xFF1A; key [*-1950], from [null], to [1950-01-01T00:00:00.000Z], doc_count [8] key [1950-1960], from [1950-01-01T00:00:00.000Z], to [1960-01-01T00:00:00.000Z], doc_count [5] key [1960-*], from [1960-01-01T00:00:00.000Z], to [null], doc_count [37] Histogram Aggregation &#x76F4;&#x65B9;&#x56FE;&#x805A;&#x5408; &#x57FA;&#x4E8E;&#x6587;&#x6863;&#x4E2D;&#x7684;&#x67D0;&#x4E2A;&#x3010;&#x6570;&#x503C;&#x7C7B;&#x578B;&#x3011;&#x5B57;&#x6BB5;&#xFF0C;&#x901A;&#x8FC7;&#x8BA1;&#x7B97;&#x6765;&#x52A8;&#x6001;&#x7684;&#x5206;&#x6876;&#x3002; &#x4E0B;&#x9762;&#x662F;&#x5982;&#x4F55;&#x4F7F;&#x7528; Java API &#x4F7F;&#x7528;Histogram Aggregation &#x51C6;&#x5907;&#x805A;&#x5408;&#x8BF7;&#x6C42; &#x4E0B;&#x9762;&#x662F;&#x5982;&#x4F55;&#x521B;&#x5EFA;&#x805A;&#x5408;&#x8BF7;&#x6C42;&#x7684;&#x662F;&#x793A;&#x4F8B;&#xFF1A; AggregationBuilder aggregation = AggregationBuilders .histogram(&quot;agg&quot;) .field(&quot;height&quot;) .interval(1); &#x4F7F;&#x7528;&#x805A;&#x5408;&#x8BF7;&#x6C42; import org.elasticsearch.search.aggregations.bucket.histogram.Histogram; // sr is here your SearchResponse object Histogram agg = sr.getAggregations().get(&quot;agg&quot;); // For each entry for (Histogram.Bucket entry : agg.getBuckets()) { Number key = (Number) entry.getKey(); // Key long docCount = entry.getDocCount(); // Doc count logger.info(&quot;key [{}], doc_count [{}]&quot;, key, docCount); } Date Histogram Aggregation &#x65E5;&#x671F;&#x8303;&#x56F4;&#x76F4;&#x65B9;&#x56FE;&#x805A;&#x5408; &#x4E0E;&#x76F4;&#x65B9;&#x56FE;&#x7C7B;&#x4F3C;&#x7684;&#x591A;bucket&#x805A;&#x5408;&#xFF0C;&#x4F46;&#x53EA;&#x80FD;&#x5E94;&#x7528;&#x4E8E;&#x65E5;&#x671F;&#x503C;.&#x3002; &#x4E0B;&#x9762;&#x662F;&#x5982;&#x4F55;&#x4F7F;&#x7528; Java API &#x4F7F;&#x7528; Date Histogram Aggregation &#x51C6;&#x5907;&#x805A;&#x5408;&#x8BF7;&#x6C42; &#x4E0B;&#x9762;&#x662F;&#x5982;&#x4F55;&#x521B;&#x5EFA;&#x805A;&#x5408;&#x8BF7;&#x6C42;&#x7684;&#x662F;&#x793A;&#x4F8B;&#xFF1A; AggregationBuilder aggregation = AggregationBuilders .dateHistogram(&quot;agg&quot;) .field(&quot;dateOfBirth&quot;) .dateHistogramInterval(DateHistogramInterval.YEAR); &#x6216;&#x8005;&#x628A;&#x65F6;&#x95F4;&#x95F4;&#x9694;&#x8BBE;&#x7F6E;&#x4E3A;10&#x5929; AggregationBuilder aggregation = AggregationBuilders .dateHistogram(&quot;agg&quot;) .field(&quot;dateOfBirth&quot;) .dateHistogramInterval(DateHistogramInterval.days(10)); &#x4F7F;&#x7528;&#x805A;&#x5408;&#x8BF7;&#x6C42; import org.elasticsearch.search.aggregations.bucket.histogram.Histogram; // sr is here your SearchResponse object Histogram agg = sr.getAggregations().get(&quot;agg&quot;); // For each entry for (Histogram.Bucket entry : agg.getBuckets()) { DateTime key = (DateTime) entry.getKey(); // Key String keyAsString = entry.getKeyAsString(); // Key as String long docCount = entry.getDocCount(); // Doc count logger.info(&quot;key [{}], date [{}], doc_count [{}]&quot;, keyAsString, key.getYear(), docCount); } &#x8F93;&#x51FA;&#xFF1A; key [1942-01-01T00:00:00.000Z], date [1942], doc_count [1] key [1945-01-01T00:00:00.000Z], date [1945], doc_count [1] key [1946-01-01T00:00:00.000Z], date [1946], doc_count [1] ... key [2005-01-01T00:00:00.000Z], date [2005], doc_count [1] key [2007-01-01T00:00:00.000Z], date [2007], doc_count [2] key [2008-01-01T00:00:00.000Z], date [2008], doc_count [3] Geo Distance Aggregation &#x5730;&#x7406;&#x8DDD;&#x79BB;&#x805A;&#x5408; &#x5728;geo_point&#x5B57;&#x6BB5;&#x4E0A;&#x5DE5;&#x4F5C;&#x7684;&#x591A;bucket&#x805A;&#x5408;&#x548C;&#x6982;&#x5FF5;&#x4E0A;&#x7684;&#x5DE5;&#x4F5C;&#x975E;&#x5E38;&#x7C7B;&#x4F3C;&#x4E8E;range(&#x8303;&#x56F4;)&#x805A;&#x5408;.&#x7528;&#x6237;&#x53EF;&#x4EE5;&#x5B9A;&#x4E49;&#x539F;&#x70B9;&#x7684;&#x70B9;&#x548C;&#x8DDD;&#x79BB;&#x8303;&#x56F4;&#x7684;&#x96C6;&#x5408;&#x3002;&#x805A;&#x5408;&#x8BA1;&#x7B97;&#x6BCF;&#x4E2A;&#x6587;&#x6863;&#x503C;&#x4E0E;&#x539F;&#x70B9;&#x7684;&#x8DDD;&#x79BB;&#xFF0C;&#x5E76;&#x6839;&#x636E;&#x8303;&#x56F4;&#x786E;&#x5B9A;&#x5176;&#x6240;&#x5C5E;&#x7684;bucket(&#x6876;)&#xFF08;&#x5982;&#x679C;&#x6587;&#x6863;&#x548C;&#x539F;&#x70B9;&#x4E4B;&#x95F4;&#x7684;&#x8DDD;&#x79BB;&#x843D;&#x5728;bucket(&#x6876;)&#x7684;&#x8DDD;&#x79BB;&#x8303;&#x56F4;&#x5185;&#xFF0C;&#x5219;&#x6587;&#x6863;&#x5C5E;&#x4E8E;bucket(&#x6876;) ) &#x4E0B;&#x9762;&#x662F;&#x5982;&#x4F55;&#x4F7F;&#x7528; Java API &#x4F7F;&#x7528; Geo Distance Aggregation &#x51C6;&#x5907;&#x805A;&#x5408;&#x8BF7;&#x6C42; &#x4E0B;&#x9762;&#x662F;&#x5982;&#x4F55;&#x521B;&#x5EFA;&#x805A;&#x5408;&#x8BF7;&#x6C42;&#x7684;&#x662F;&#x793A;&#x4F8B;&#xFF1A; AggregationBuilder aggregation = AggregationBuilders .geoDistance(&quot;agg&quot;, new GeoPoint(48.84237171118314,2.33320027692004)) .field(&quot;address.location&quot;) .unit(DistanceUnit.KILOMETERS) .addUnboundedTo(3.0) .addRange(3.0, 10.0) .addRange(10.0, 500.0); &#x4F7F;&#x7528;&#x805A;&#x5408;&#x8BF7;&#x6C42; import org.elasticsearch.search.aggregations.bucket.range.Range; // sr is here your SearchResponse object Range agg = sr.getAggregations().get(&quot;agg&quot;); // For each entry for (Range.Bucket entry : agg.getBuckets()) { String key = entry.getKeyAsString(); // key as String Number from = (Number) entry.getFrom(); // bucket from value Number to = (Number) entry.getTo(); // bucket to value long docCount = entry.getDocCount(); // Doc count logger.info(&quot;key [{}], from [{}], to [{}], doc_count [{}]&quot;, key, from, to, docCount); } &#x8F93;&#x51FA;&#xFF1A; key [*-3.0], from [0.0], to [3.0], doc_count [161] key [3.0-10.0], from [3.0], to [10.0], doc_count [460] key [10.0-500.0], from [10.0], to [500.0], doc_count [4925] Geo Hash Grid Aggregation GeoHash&#x7F51;&#x683C;&#x805A;&#x5408; &#x5728;geo_point&#x5B57;&#x6BB5;&#x548C;&#x7EC4;&#x4E0A;&#x5DE5;&#x4F5C;&#x7684;&#x591A;bucket&#x805A;&#x5408;&#x5C06;&#x6307;&#x5411;&#x7F51;&#x683C;&#x4E2D;&#x8868;&#x793A;&#x5355;&#x5143;&#x683C;&#x7684;bucket&#x3002;&#x751F;&#x6210;&#x7684;&#x7F51;&#x683C;&#x53EF;&#x4EE5;&#x662F;&#x7A00;&#x758F;&#x7684;&#xFF0C;&#x5E76;&#x4E14;&#x53EA;&#x5305;&#x542B;&#x5177;&#x6709;&#x5339;&#x914D;&#x6570;&#x636E;&#x7684;&#x5355;&#x5143;&#x683C;&#x3002;&#x6BCF;&#x4E2A;&#x5355;&#x5143;&#x683C;&#x4F7F;&#x7528;&#x5177;&#x6709;&#x7528;&#x6237;&#x53EF;&#x5B9A;&#x4E49;&#x7CBE;&#x5EA6;&#x7684; geohash &#x8FDB;&#x884C;&#x6807;&#x8BB0;&#x3002; &#x4E0B;&#x9762;&#x662F;&#x5982;&#x4F55;&#x4F7F;&#x7528; Java API &#x4F7F;&#x7528;Geo Hash Grid Aggregation &#x51C6;&#x5907;&#x805A;&#x5408;&#x8BF7;&#x6C42; &#x4E0B;&#x9762;&#x662F;&#x5982;&#x4F55;&#x521B;&#x5EFA;&#x805A;&#x5408;&#x8BF7;&#x6C42;&#x7684;&#x662F;&#x793A;&#x4F8B;&#xFF1A; AggregationBuilder aggregation = AggregationBuilders .geohashGrid(&quot;agg&quot;) .field(&quot;address.location&quot;) .precision(4); &#x4F7F;&#x7528;&#x805A;&#x5408;&#x8BF7;&#x6C42; import org.elasticsearch.search.aggregations.bucket.geogrid.GeoHashGrid; // sr is here your SearchResponse object GeoHashGrid agg = sr.getAggregations().get(&quot;agg&quot;); // For each entry for (GeoHashGrid.Bucket entry : agg.getBuckets()) { String keyAsString = entry.getKeyAsString(); // key as String GeoPoint key = (GeoPoint) entry.getKey(); // key as geo point long docCount = entry.getDocCount(); // Doc count logger.info(&quot;key [{}], point {}, doc_count [{}]&quot;, keyAsString, key, docCount); } &#x8F93;&#x51FA;&#xFF1A; ``` key [gbqu], point [47.197265625, -1.58203125], doc_count [1282] key [gbvn], point [50.361328125, -4.04296875], doc_count [1248] key [u1j0], point [50.712890625, 7.20703125], doc_count [1156] key [u0j2], point [45.087890625, 7.55859375], doc_count [1138] ... results matching \"\" No results matching \"\" var gitbook = gitbook || []; gitbook.push(function() { gitbook.page.hasChanged({\"page\":{\"title\":\"Bucket aggregations\",\"level\":\"1.6.3\",\"depth\":2,\"next\":{\"title\":\"Query DSL\",\"level\":\"1.7\",\"depth\":1,\"path\":\"query-dsl.md\",\"ref\":\"query-dsl.md\",\"articles\":[{\"title\":\"Match All Query\",\"level\":\"1.7.1\",\"depth\":2,\"path\":\"query-dsl/match-all-query.md\",\"ref\":\"query-dsl/match-all-query.md\",\"articles\":[]},{\"title\":\"Full text queries\",\"level\":\"1.7.2\",\"depth\":2,\"path\":\"query-dsl/full-text-queries.md\",\"ref\":\"query-dsl/full-text-queries.md\",\"articles\":[]},{\"title\":\"Term level queries\",\"level\":\"1.7.3\",\"depth\":2,\"path\":\"query-dsl/term-level-queries.md\",\"ref\":\"query-dsl/term-level-queries.md\",\"articles\":[]},{\"title\":\"Compound queries\",\"level\":\"1.7.4\",\"depth\":2,\"path\":\"query-dsl/compound-queries.md\",\"ref\":\"query-dsl/compound-queries.md\",\"articles\":[]},{\"title\":\"Joining queries\",\"level\":\"1.7.5\",\"depth\":2,\"path\":\"query-dsl/joining-queries.md\",\"ref\":\"query-dsl/joining-queries.md\",\"articles\":[]},{\"title\":\"Geo queries\",\"level\":\"1.7.6\",\"depth\":2,\"path\":\"query-dsl/geo-queries.md\",\"ref\":\"query-dsl/geo-queries.md\",\"articles\":[]},{\"title\":\"Specialized queries\",\"level\":\"1.7.7\",\"depth\":2,\"path\":\"query-dsl/specialized-queries.md\",\"ref\":\"query-dsl/specialized-queries.md\",\"articles\":[]},{\"title\":\"Span queries\",\"level\":\"1.7.8\",\"depth\":2,\"path\":\"query-dsl/span-queries.md\",\"ref\":\"query-dsl/span-queries.md\",\"articles\":[]}]},\"previous\":{\"title\":\"Metrics aggregations\",\"level\":\"1.6.2\",\"depth\":2,\"path\":\"aggregations/metrics-aggregations.md\",\"ref\":\"aggregations/metrics-aggregations.md\",\"articles\":[]},\"dir\":\"ltr\"},\"config\":{\"gitbook\":\"*\",\"theme\":\"default\",\"variables\":{},\"plugins\":[],\"pluginsConfig\":{\"highlight\":{},\"search\":{},\"lunr\":{\"maxIndexSize\":1000000,\"ignoreSpecialCharacters\":false},\"sharing\":{\"facebook\":true,\"twitter\":true,\"google\":false,\"weibo\":false,\"instapaper\":false,\"vk\":false,\"all\":[\"facebook\",\"google\",\"twitter\",\"weibo\",\"instapaper\"]},\"fontsettings\":{\"theme\":\"white\",\"family\":\"sans\",\"size\":2},\"theme-default\":{\"styles\":{\"website\":\"styles/website.css\",\"pdf\":\"styles/pdf.css\",\"epub\":\"styles/epub.css\",\"mobi\":\"styles/mobi.css\",\"ebook\":\"styles/ebook.css\",\"print\":\"styles/print.css\"},\"showLevel\":false}},\"structure\":{\"langs\":\"LANGS.md\",\"readme\":\"README.md\",\"glossary\":\"GLOSSARY.md\",\"summary\":\"SUMMARY.md\"},\"pdf\":{\"pageNumbers\":true,\"fontSize\":12,\"fontFamily\":\"Arial\",\"paperSize\":\"a4\",\"chapterMark\":\"pagebreak\",\"pageBreaksBefore\":\"/\",\"margin\":{\"right\":62,\"left\":62,\"top\":56,\"bottom\":56}},\"styles\":{\"website\":\"styles/website.css\",\"pdf\":\"styles/pdf.css\",\"epub\":\"styles/epub.css\",\"mobi\":\"styles/mobi.css\",\"ebook\":\"styles/ebook.css\",\"print\":\"styles/print.css\"}},\"file\":{\"path\":\"aggregations/bucket-aggregations.md\",\"mtime\":\"2017-11-08T08:32:22.713Z\",\"type\":\"markdown\"},\"gitbook\":{\"version\":\"3.2.3\",\"time\":\"2018-01-29T15:28:32.108Z\"},\"basePath\":\"..\",\"book\":{\"language\":\"\"}}); });"},{"title":"","date":"2018-02-01T07:21:14.189Z","updated":"2018-01-29T15:28:33.687Z","comments":true,"path":"esjava/aggregations/bucket-aggregations.html","permalink":"http://test.quanke.name/esjava/aggregations/bucket-aggregations.html","excerpt":"","text":"Bucket aggregations 桶分聚合 Bucket aggregations 不像 metrics aggregations 那样计算指标，恰恰相反，它创建文档的buckets，每个buckets与标准（取决于聚合类型）相关联，它决定了当前上下文中的文档是否会“falls”到它。换句话说，bucket可以有效地定义文档集合。除了buckets本身，bucket集合还计算并返回“落入”每个bucket的文档数量。 与度量聚合相比，Bucket聚合可以保存子聚合，这些子聚合将针对由其“父”bucket聚合创建的bucket进行聚合。 有不同的bucket聚合器，每个具有不同的“bucketing”策略,一些定义一个单独的bucket，一些定义多个bucket的固定数量，另一些定义在聚合过程中动态创建bucket Global Aggregation 全局聚合 定义搜索执行上下文中的所有文档的单个bucket，这个上下文由索引和您正在搜索的文档类型定义，但不受搜索查询本身的影响。 全局聚合器只能作为顶层聚合器放置，因为将全局聚合器嵌入到另一个分组聚合器中是没有意义的。 下面是如何使用 Java API 使用全局聚合 准备聚合请求下面是如何创建聚合请求的是示例： AggregationBuilders .global(&quot;agg&quot;) .subAggregation(AggregationBuilders.terms(&quot;genders&quot;).field(&quot;gender&quot;)); 使用聚合请求import org.elasticsearch.search.aggregations.bucket.global.Global; // sr is here your SearchResponse objectGlobal agg = sr.getAggregations().get(&quot;agg&quot;);agg.getDocCount(); // Doc count Filter Aggregation 过滤聚合 过滤聚合——基于一个条件，来对当前的文档进行过滤的聚合。 下面是如何使用 Java API 使用过滤聚合 准备聚合请求下面是如何创建聚合请求的是示例： AggregationBuilders .filter(&quot;agg&quot;, QueryBuilders.termQuery(&quot;gender&quot;, &quot;male&quot;)); 使用聚合请求import org.elasticsearch.search.aggregations.bucket.filter.Filter; // sr is here your SearchResponse objectFilter agg = sr.getAggregations().get(&quot;agg&quot;);agg.getDocCount(); // Doc count Filters Aggregation 多过滤聚合 多过滤聚合——基于多个过滤条件，来对当前文档进行【过滤】的聚合，每个过滤都包含所有满足它的文档（多个bucket中可能重复）。 下面是如何使用 Java API 使用多过滤聚合 准备聚合请求下面是如何创建聚合请求的是示例： AggregationBuilder aggregation = AggregationBuilders .filters(&quot;agg&quot;, new FiltersAggregator.KeyedFilter(&quot;men&quot;, QueryBuilders.termQuery(&quot;gender&quot;, &quot;male&quot;)), new FiltersAggregator.KeyedFilter(&quot;women&quot;, QueryBuilders.termQuery(&quot;gender&quot;, &quot;female&quot;))); 使用聚合请求import org.elasticsearch.search.aggregations.bucket.filters.Filters; // sr is here your SearchResponse objectFilters agg = sr.getAggregations().get(&quot;agg&quot;);// For each entryfor (Filters.Bucket entry : agg.getBuckets()) &#123; String key = entry.getKeyAsString(); // bucket key long docCount = entry.getDocCount(); // Doc count logger.info(&quot;key [&#123;&#125;], doc_count [&#123;&#125;]&quot;, key, docCount);&#125; 大概输出 key [men], doc_count [4982]key [women], doc_count [5018] Missing Aggregation 基于字段数据的单桶聚合 基于字段数据的单桶聚合，创建当前文档集上下文中缺少字段值的所有文档的bucket（桶）（有效地，丢失了一个字段或配置了NULL值集），此聚合器通常与其他字段数据桶聚合器（例如范围）结合使用，以返回由于缺少字段数据值而无法放置在任何其他存储区中的所有文档的信息。 下面是如何使用 Java API 使用基于字段数据的单桶聚合 准备聚合请求下面是如何创建聚合请求的是示例： AggregationBuilders.missing(&quot;agg&quot;).field(&quot;gender&quot;); 使用聚合请求import org.elasticsearch.search.aggregations.bucket.missing.Missing; // sr is here your SearchResponse objectMissing agg = sr.getAggregations().get(&quot;agg&quot;);agg.getDocCount(); // Doc count Nested Aggregation 嵌套类型聚合 基于嵌套（nested）数据类型，把该【嵌套类型的信息】聚合到单个桶里，然后就可以对嵌套类型做进一步的聚合操作。 下面是如何使用 Java API 使用嵌套类型聚合 准备聚合请求下面是如何创建聚合请求的是示例： AggregationBuilders .nested(&quot;agg&quot;, &quot;resellers&quot;); 使用聚合请求import org.elasticsearch.search.aggregations.bucket.nested.Nested; // sr is here your SearchResponse objectNested agg = sr.getAggregations().get(&quot;agg&quot;);agg.getDocCount(); // Doc count Reverse nested Aggregation 一个特殊的单桶聚合，可以从嵌套文档中聚合父文档。实际上，这种聚合可以从嵌套的块结构中跳出来，并链接到其他嵌套的结构或根文档.这允许嵌套不是嵌套对象的一部分的其他聚合在嵌套聚合中。reverse_nested 聚合必须定义在nested之中 下面是如何使用 Java API 使用Reverse nested Aggregation 准备聚合请求下面是如何创建聚合请求的是示例： AggregationBuilder aggregation = AggregationBuilders .nested(&quot;agg&quot;, &quot;resellers&quot;) .subAggregation( AggregationBuilders .terms(&quot;name&quot;).field(&quot;resellers.name&quot;) .subAggregation( AggregationBuilders .reverseNested(&quot;reseller_to_product&quot;) ) ); 使用聚合请求import org.elasticsearch.search.aggregations.bucket.nested.Nested;import org.elasticsearch.search.aggregations.bucket.nested.ReverseNested;import org.elasticsearch.search.aggregations.bucket.terms.Terms; // sr is here your SearchResponse objectNested agg = sr.getAggregations().get(&quot;agg&quot;);Terms name = agg.getAggregations().get(&quot;name&quot;);for (Terms.Bucket bucket : name.getBuckets()) &#123; ReverseNested resellerToProduct = bucket.getAggregations().get(&quot;reseller_to_product&quot;); resellerToProduct.getDocCount(); // Doc count&#125; Children Aggregation 一种特殊的单桶聚合，可以将父文档类型上的桶聚合到子文档上。 下面是如何使用 Java API 使用Children Aggregation 准备聚合请求下面是如何创建聚合请求的是示例： AggregationBuilder aggregation = AggregationBuilders .children(&quot;agg&quot;, &quot;reseller&quot;); // agg 是聚合名，reseller 是子类型 使用聚合请求import org.elasticsearch.join.aggregations.Children; // sr is here your SearchResponse objectChildren agg = sr.getAggregations().get(&quot;agg&quot;);agg.getDocCount(); // Doc count Terms Aggregation 词元聚合 基于某个field，该 field 内的每一个【唯一词元】为一个桶，并计算每个桶内文档个数。默认返回顺序是按照文档个数多少排序。当不返回所有 buckets 的情况，文档个数可能不准确。 下面是如何使用 Java API 使用Terms Aggregation 准备聚合请求下面是如何创建聚合请求的是示例： AggregationBuilders .terms(&quot;genders&quot;) .field(&quot;gender&quot;); 使用聚合请求import org.elasticsearch.search.aggregations.bucket.terms.Terms; // sr is here your SearchResponse objectTerms genders = sr.getAggregations().get(&quot;genders&quot;);// For each entryfor (Terms.Bucket entry : genders.getBuckets()) &#123; entry.getKey(); // Term entry.getDocCount(); // Doc count&#125; Order 排序通过 doc_count 按升序排列： AggregationBuilders .terms(&quot;genders&quot;) .field(&quot;gender&quot;) .order(Terms.Order.count(true)) 按字词顺序，升序排列： AggregationBuilders .terms(&quot;genders&quot;) .field(&quot;gender&quot;) .order(Terms.Order.term(true)) 按metrics 子聚合排列（标示为聚合名） AggregationBuilders .terms(&quot;genders&quot;) .field(&quot;gender&quot;) .order(Terms.Order.aggregation(&quot;avg_height&quot;, false)) .subAggregation( AggregationBuilders.avg(&quot;avg_height&quot;).field(&quot;height&quot;) ) Significant Terms Aggregation 返回集合中感兴趣的或者不常见的词条的聚合 下面是如何使用 Java API 使用Significant Terms Aggregation 准备聚合请求下面是如何创建聚合请求的是示例： AggregationBuilder aggregation = AggregationBuilders .significantTerms(&quot;significant_countries&quot;) .field(&quot;address.country&quot;);// Let say you search for men onlySearchResponse sr = client.prepareSearch() .setQuery(QueryBuilders.termQuery(&quot;gender&quot;, &quot;male&quot;)) .addAggregation(aggregation) .get(); 使用聚合请求import org.elasticsearch.search.aggregations.bucket.significant.SignificantTerms; // sr is here your SearchResponse objectSignificantTerms agg = sr.getAggregations().get(&quot;significant_countries&quot;);// For each entryfor (SignificantTerms.Bucket entry : agg.getBuckets()) &#123; entry.getKey(); // Term entry.getDocCount(); // Doc count&#125; Range Aggregation 范围聚合 基于某个值（可以是 field 或 script），以【字段范围】来桶分聚合。范围聚合包括 from 值，不包括 to 值（区间前闭后开）。 下面是如何使用 Java API 使用Range Aggregation 准备聚合请求下面是如何创建聚合请求的是示例： AggregationBuilder aggregation = AggregationBuilders .range(&quot;agg&quot;) .field(&quot;height&quot;) .addUnboundedTo(1.0f) // from -infinity to 1.0 (excluded) .addRange(1.0f, 1.5f) // from 1.0 to 1.5 (excluded) .addUnboundedFrom(1.5f); // from 1.5 to +infinity 使用聚合请求import org.elasticsearch.search.aggregations.bucket.range.Range; // sr is here your SearchResponse objectRange agg = sr.getAggregations().get(&quot;agg&quot;);// For each entryfor (Range.Bucket entry : agg.getBuckets()) &#123; String key = entry.getKeyAsString(); // Range as key Number from = (Number) entry.getFrom(); // Bucket from Number to = (Number) entry.getTo(); // Bucket to long docCount = entry.getDocCount(); // Doc count logger.info(&quot;key [&#123;&#125;], from [&#123;&#125;], to [&#123;&#125;], doc_count [&#123;&#125;]&quot;, key, from, to, docCount);&#125; 输出： key [*-1.0], from [-Infinity], to [1.0], doc_count [9]key [1.0-1.5], from [1.0], to [1.5], doc_count [21]key [1.5-*], from [1.5], to [Infinity], doc_count [20] Date Range Aggregation 日期范围聚合 日期范围聚合——基于日期类型的值，以【日期范围】来桶分聚合。 日期范围可以用各种 Date Math 表达式。 同样的，包括 from 的值，不包括 to 的值。 下面是如何使用 Java API 使用Date Range Aggregation 准备聚合请求下面是如何创建聚合请求的是示例： AggregationBuilder aggregation = AggregationBuilders .dateRange(&quot;agg&quot;) .field(&quot;dateOfBirth&quot;) .format(&quot;yyyy&quot;) .addUnboundedTo(&quot;1950&quot;) // from -infinity to 1950 (excluded) .addRange(&quot;1950&quot;, &quot;1960&quot;) // from 1950 to 1960 (excluded) .addUnboundedFrom(&quot;1960&quot;); // from 1960 to +infinity 使用聚合请求import org.elasticsearch.search.aggregations.bucket.range.Range; // sr is here your SearchResponse objectRange agg = sr.getAggregations().get(&quot;agg&quot;);// For each entryfor (Range.Bucket entry : agg.getBuckets()) &#123; String key = entry.getKeyAsString(); // Date range as key DateTime fromAsDate = (DateTime) entry.getFrom(); // Date bucket from as a Date DateTime toAsDate = (DateTime) entry.getTo(); // Date bucket to as a Date long docCount = entry.getDocCount(); // Doc count logger.info(&quot;key [&#123;&#125;], from [&#123;&#125;], to [&#123;&#125;], doc_count [&#123;&#125;]&quot;, key, fromAsDate, toAsDate, docCount);&#125; 输出： key [*-1950], from [null], to [1950-01-01T00:00:00.000Z], doc_count [8]key [1950-1960], from [1950-01-01T00:00:00.000Z], to [1960-01-01T00:00:00.000Z], doc_count [5]key [1960-*], from [1960-01-01T00:00:00.000Z], to [null], doc_count [37] Ip Range Aggregation Ip范围聚合下面是如何使用 Java API 使用Ip Range Aggregation 准备聚合请求下面是如何创建聚合请求的是示例： AggregatorBuilder&lt;?&gt; aggregation = AggregationBuilders .ipRange(&quot;agg&quot;) .field(&quot;ip&quot;) .addUnboundedTo(&quot;192.168.1.0&quot;) // from -infinity to 192.168.1.0 (excluded) .addRange(&quot;192.168.1.0&quot;, &quot;192.168.2.0&quot;) // from 192.168.1.0 to 192.168.2.0 (excluded) .addUnboundedFrom(&quot;192.168.2.0&quot;); // from 192.168.2.0 to +infinity 使用聚合请求import org.elasticsearch.search.aggregations.bucket.range.Range; // sr is here your SearchResponse objectRange agg = sr.getAggregations().get(&quot;agg&quot;);// For each entryfor (Range.Bucket entry : agg.getBuckets()) &#123; String key = entry.getKeyAsString(); // Ip range as key String fromAsString = entry.getFromAsString(); // Ip bucket from as a String String toAsString = entry.getToAsString(); // Ip bucket to as a String long docCount = entry.getDocCount(); // Doc count logger.info(&quot;key [&#123;&#125;], from [&#123;&#125;], to [&#123;&#125;], doc_count [&#123;&#125;]&quot;, key, fromAsString, toAsString, docCount);&#125; 输出： key [*-1950], from [null], to [1950-01-01T00:00:00.000Z], doc_count [8]key [1950-1960], from [1950-01-01T00:00:00.000Z], to [1960-01-01T00:00:00.000Z], doc_count [5]key [1960-*], from [1960-01-01T00:00:00.000Z], to [null], doc_count [37] Histogram Aggregation 直方图聚合 基于文档中的某个【数值类型】字段，通过计算来动态的分桶。 下面是如何使用 Java API 使用Histogram Aggregation 准备聚合请求下面是如何创建聚合请求的是示例： AggregationBuilder aggregation = AggregationBuilders .histogram(&quot;agg&quot;) .field(&quot;height&quot;) .interval(1); 使用聚合请求import org.elasticsearch.search.aggregations.bucket.histogram.Histogram; // sr is here your SearchResponse objectHistogram agg = sr.getAggregations().get(&quot;agg&quot;);// For each entryfor (Histogram.Bucket entry : agg.getBuckets()) &#123; Number key = (Number) entry.getKey(); // Key long docCount = entry.getDocCount(); // Doc count logger.info(&quot;key [&#123;&#125;], doc_count [&#123;&#125;]&quot;, key, docCount);&#125; Date Histogram Aggregation 日期范围直方图聚合 与直方图类似的多bucket聚合，但只能应用于日期值.。 下面是如何使用 Java API 使用 Date Histogram Aggregation 准备聚合请求下面是如何创建聚合请求的是示例： AggregationBuilder aggregation = AggregationBuilders .dateHistogram(&quot;agg&quot;) .field(&quot;dateOfBirth&quot;) .dateHistogramInterval(DateHistogramInterval.YEAR); 或者把时间间隔设置为10天 AggregationBuilder aggregation = AggregationBuilders .dateHistogram(&quot;agg&quot;) .field(&quot;dateOfBirth&quot;) .dateHistogramInterval(DateHistogramInterval.days(10)); 使用聚合请求import org.elasticsearch.search.aggregations.bucket.histogram.Histogram; // sr is here your SearchResponse objectHistogram agg = sr.getAggregations().get(&quot;agg&quot;);// For each entryfor (Histogram.Bucket entry : agg.getBuckets()) &#123; DateTime key = (DateTime) entry.getKey(); // Key String keyAsString = entry.getKeyAsString(); // Key as String long docCount = entry.getDocCount(); // Doc count logger.info(&quot;key [&#123;&#125;], date [&#123;&#125;], doc_count [&#123;&#125;]&quot;, keyAsString, key.getYear(), docCount);&#125; 输出： key [1942-01-01T00:00:00.000Z], date [1942], doc_count [1]key [1945-01-01T00:00:00.000Z], date [1945], doc_count [1]key [1946-01-01T00:00:00.000Z], date [1946], doc_count [1]...key [2005-01-01T00:00:00.000Z], date [2005], doc_count [1]key [2007-01-01T00:00:00.000Z], date [2007], doc_count [2]key [2008-01-01T00:00:00.000Z], date [2008], doc_count [3] Geo Distance Aggregation 地理距离聚合 在geo_point字段上工作的多bucket聚合和概念上的工作非常类似于range(范围)聚合.用户可以定义原点的点和距离范围的集合。聚合计算每个文档值与原点的距离，并根据范围确定其所属的bucket(桶)（如果文档和原点之间的距离落在bucket(桶)的距离范围内，则文档属于bucket(桶) ) 下面是如何使用 Java API 使用 Geo Distance Aggregation 准备聚合请求下面是如何创建聚合请求的是示例： AggregationBuilder aggregation = AggregationBuilders .geoDistance(&quot;agg&quot;, new GeoPoint(48.84237171118314,2.33320027692004)) .field(&quot;address.location&quot;) .unit(DistanceUnit.KILOMETERS) .addUnboundedTo(3.0) .addRange(3.0, 10.0) .addRange(10.0, 500.0); 使用聚合请求import org.elasticsearch.search.aggregations.bucket.range.Range; // sr is here your SearchResponse objectRange agg = sr.getAggregations().get(&quot;agg&quot;);// For each entryfor (Range.Bucket entry : agg.getBuckets()) &#123; String key = entry.getKeyAsString(); // key as String Number from = (Number) entry.getFrom(); // bucket from value Number to = (Number) entry.getTo(); // bucket to value long docCount = entry.getDocCount(); // Doc count logger.info(&quot;key [&#123;&#125;], from [&#123;&#125;], to [&#123;&#125;], doc_count [&#123;&#125;]&quot;, key, from, to, docCount);&#125; 输出： key [*-3.0], from [0.0], to [3.0], doc_count [161]key [3.0-10.0], from [3.0], to [10.0], doc_count [460]key [10.0-500.0], from [10.0], to [500.0], doc_count [4925] Geo Hash Grid Aggregation GeoHash网格聚合 在geo_point字段和组上工作的多bucket聚合将指向网格中表示单元格的bucket。生成的网格可以是稀疏的，并且只包含具有匹配数据的单元格。每个单元格使用具有用户可定义精度的 geohash 进行标记。 下面是如何使用 Java API 使用Geo Hash Grid Aggregation 准备聚合请求下面是如何创建聚合请求的是示例： AggregationBuilder aggregation = AggregationBuilders .geohashGrid(&quot;agg&quot;) .field(&quot;address.location&quot;) .precision(4); 使用聚合请求import org.elasticsearch.search.aggregations.bucket.geogrid.GeoHashGrid; // sr is here your SearchResponse objectGeoHashGrid agg = sr.getAggregations().get(&quot;agg&quot;);// For each entryfor (GeoHashGrid.Bucket entry : agg.getBuckets()) &#123; String keyAsString = entry.getKeyAsString(); // key as String GeoPoint key = (GeoPoint) entry.getKey(); // key as geo point long docCount = entry.getDocCount(); // Doc count logger.info(&quot;key [&#123;&#125;], point &#123;&#125;, doc_count [&#123;&#125;]&quot;, keyAsString, key, docCount);&#125; 输出： ```key [gbqu], point [47.197265625, -1.58203125], doc_count [1282]key [gbvn], point [50.361328125, -4.04296875], doc_count [1248]key [u1j0], point [50.712890625, 7.20703125], doc_count [1156]key [u0j2], point [45.087890625, 7.55859375], doc_count [1138]…"},{"title":"","date":"2018-02-01T07:21:14.191Z","updated":"2018-01-29T15:28:35.664Z","comments":true,"path":"esjava/aggregations/metrics-aggregations.html","permalink":"http://test.quanke.name/esjava/aggregations/metrics-aggregations.html","excerpt":"","text":"Metrics aggregations · GitBook Introduction Dependency Client Transport Client XPack Transport Client Document APIs Index API Get API Delete API Delete By Query API Update API Multi Get API Bulk API Using Bulk Processor Search API Using scrolls in Java MultiSearch API Using Aggregations Terminate After Search Template Aggregations Structuring aggregations Metrics aggregations Bucket aggregations Query DSL Match All Query Full text queries Term level queries Compound queries Joining queries Geo queries Specialized queries Span queries Indexed Scripts API Script Language Java API Administration Indices Administration Cluster Administration Published with GitBook Metrics aggregations Metrics aggregations &#x8BA1;&#x7B97;&#x5EA6;&#x91CF;&#x8FD9;&#x7C7B;&#x7684;&#x805A;&#x5408;&#x64CD;&#x4F5C;&#x662F;&#x4EE5;&#x4F7F;&#x7528;&#x4E00;&#x79CD;&#x65B9;&#x5F0F;&#x6216;&#x8005;&#x4ECE;&#x6587;&#x6863;&#x4E2D;&#x63D0;&#x53D6;&#x9700;&#x8981;&#x805A;&#x5408;&#x7684;&#x503C;&#x4E3A;&#x57FA;&#x7840;&#x7684;&#x3002;&#x8FD9;&#x4E9B;&#x6570;&#x636E;&#x4E0D;&#x4F46;&#x53EF;&#x4EE5;&#x4ECE;&#x6587;&#x6863;&#xFF08;&#x4F7F;&#x7528;&#x6570;&#x636E;&#x5C5E;&#x6027;&#xFF09;&#x7684;&#x5C5E;&#x6027;&#x4E2D;&#x63D0;&#x53D6;&#x51FA;&#x6765;&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x811A;&#x672C;&#x751F;&#x6210;&#x3002; &#x6570;&#x503C;&#x8BA1;&#x91CF;&#x805A;&#x5408;&#x64CD;&#x4F5C;&#x662F;&#x80FD;&#x591F;&#x4EA7;&#x751F;&#x5177;&#x4F53;&#x7684;&#x6570;&#x503C;&#x7684;&#x4E00;&#x79CD;&#x8BA1;&#x91CF;&#x805A;&#x5408;&#x64CD;&#x4F5C;&#x3002;&#x4E00;&#x4E9B;&#x805A;&#x5408;&#x64CD;&#x4F5C;&#x8F93;&#x51FA;&#x5355;&#x4E2A;&#x7684;&#x8BA1;&#x91CF;&#x6570;&#x503C;&#xFF08;&#x4F8B;&#x5982;avg&#xFF09;&#xFF0C;&#x5E76;&#x4E14;&#x88AB;&#x79F0;&#x4F5C;single-value numeric metric aggregation&#xFF0C;&#x5176;&#x4ED6;&#x4EA7;&#x751F;&#x591A;&#x4E2A;&#x8BA1;&#x91CF;&#x6570;&#x503C;&#xFF08;&#x4F8B;&#x5982; stats&#xFF09;&#x7684;&#x79F0;&#x4F5C; multi-value numeric metrics aggregation&#x3002;&#x8FD9;&#x4E24;&#x79CD;&#x4E0D;&#x540C;&#x7684;&#x805A;&#x5408;&#x64CD;&#x4F5C;&#x53EA;&#x6709;&#x5728;&#x6876;&#x805A;&#x5408;&#x7684;&#x5B50;&#x805A;&#x5408;&#x64CD;&#x4F5C;&#x4E2D;&#x624D;&#x4F1A;&#x6709;&#x4E0D;&#x540C;&#x7684;&#x8868;&#x73B0;&#xFF08;&#x6709;&#x4E9B;&#x6876;&#x805A;&#x5408;&#x53EF;&#x4EE5;&#x57FA;&#x4E8E;&#x6BCF;&#x4E2A;&#x7684;&#x6570;&#x503C;&#x8BA1;&#x91CF;&#x6765;&#x5BF9;&#x8FD4;&#x56DE;&#x7684;&#x6876;&#x8FDB;&#x884C;&#x6392;&#x5E8F;&#xFF09;&#x3002; Min Aggregatione &#x6700;&#x5C0F;&#x503C;&#x805A;&#x5408; &#x4E0B;&#x9762;&#x662F;&#x5982;&#x4F55;&#x7528;Java API &#x4F7F;&#x7528;&#x6700;&#x5C0F;&#x503C;&#x805A;&#x5408; &#x51C6;&#x5907;&#x805A;&#x5408;&#x8BF7;&#x6C42; &#x4E0B;&#x9762;&#x662F;&#x5982;&#x4F55;&#x521B;&#x5EFA;&#x805A;&#x5408;&#x8BF7;&#x6C42;&#x7684;&#x662F;&#x793A;&#x4F8B;&#xFF1A; MinAggregationBuilder aggregation = AggregationBuilders .min(&quot;agg&quot;) .field(&quot;height&quot;); &#x4F7F;&#x7528;&#x805A;&#x5408;&#x8BF7;&#x6C42; import org.elasticsearch.search.aggregations.metrics.min.Min; // sr is here your SearchResponse object Min agg = sr.getAggregations().get(&quot;agg&quot;); double value = agg.getValue(); Max Aggregation &#x6700;&#x5927;&#x503C;&#x805A;&#x5408; &#x4E0B;&#x9762;&#x662F;&#x5982;&#x4F55;&#x7528;Java API &#x4F7F;&#x7528;&#x6700;&#x5927;&#x503C;&#x805A;&#x5408; &#x51C6;&#x5907;&#x805A;&#x5408;&#x8BF7;&#x6C42; &#x4E0B;&#x9762;&#x662F;&#x5982;&#x4F55;&#x521B;&#x5EFA;&#x805A;&#x5408;&#x8BF7;&#x6C42;&#x7684;&#x662F;&#x793A;&#x4F8B;&#xFF1A; MaxAggregationBuilder aggregation = AggregationBuilders .max(&quot;agg&quot;) .field(&quot;height&quot;); &#x4F7F;&#x7528;&#x805A;&#x5408;&#x8BF7;&#x6C42; import org.elasticsearch.search.aggregations.metrics.max.Max; // sr is here your SearchResponse object Min agg = sr.getAggregations().get(&quot;agg&quot;); double value = agg.getValue(); Sum Aggregation &#x6C42;&#x548C;&#x805A;&#x5408; &#x4E0B;&#x9762;&#x662F;&#x5982;&#x4F55;&#x7528;Java API &#x4F7F;&#x7528;&#x6C42;&#x548C;&#x805A;&#x5408; &#x51C6;&#x5907;&#x805A;&#x5408;&#x8BF7;&#x6C42; &#x4E0B;&#x9762;&#x662F;&#x5982;&#x4F55;&#x521B;&#x5EFA;&#x805A;&#x5408;&#x8BF7;&#x6C42;&#x7684;&#x662F;&#x793A;&#x4F8B;&#xFF1A; SumAggregationBuilder aggregation = AggregationBuilders .sum(&quot;agg&quot;) .field(&quot;height&quot;); &#x4F7F;&#x7528;&#x805A;&#x5408;&#x8BF7;&#x6C42; import org.elasticsearch.search.aggregations.metrics.sum.Sum; // sr is here your SearchResponse object Sum agg = sr.getAggregations().get(&quot;agg&quot;); double value = agg.getValue(); Avg Aggregation &#x5E73;&#x5747;&#x503C;&#x805A;&#x5408; &#x4E0B;&#x9762;&#x662F;&#x5982;&#x4F55;&#x7528;Java API &#x4F7F;&#x7528;&#x5E73;&#x5747;&#x503C;&#x805A;&#x5408; &#x51C6;&#x5907;&#x805A;&#x5408;&#x8BF7;&#x6C42; &#x4E0B;&#x9762;&#x662F;&#x5982;&#x4F55;&#x521B;&#x5EFA;&#x805A;&#x5408;&#x8BF7;&#x6C42;&#x7684;&#x662F;&#x793A;&#x4F8B;&#xFF1A; AvgAggregationBuilder aggregation = AggregationBuilders .avg(&quot;agg&quot;) .field(&quot;height&quot;); &#x4F7F;&#x7528;&#x805A;&#x5408;&#x8BF7;&#x6C42; import org.elasticsearch.search.aggregations.metrics.avg.Avg; // sr is here your SearchResponse object Avg agg = sr.getAggregations().get(&quot;agg&quot;); double value = agg.getValue(); Stats Aggregation &#x7EDF;&#x8BA1;&#x805A;&#x5408; &#x7EDF;&#x8BA1;&#x805A;&#x5408;&#x2014;&#x2014;&#x57FA;&#x4E8E;&#x6587;&#x6863;&#x7684;&#x67D0;&#x4E2A;&#x503C;&#xFF0C;&#x8BA1;&#x7B97;&#x51FA;&#x4E00;&#x4E9B;&#x7EDF;&#x8BA1;&#x4FE1;&#x606F;&#xFF08;min&#x3001;max&#x3001;sum&#x3001;count&#x3001;avg&#xFF09;, &#x7528;&#x4E8E;&#x8BA1;&#x7B97;&#x7684;&#x503C;&#x53EF;&#x4EE5;&#x662F;&#x7279;&#x5B9A;&#x7684;&#x6570;&#x503C;&#x578B;&#x5B57;&#x6BB5;&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x811A;&#x672C;&#x8BA1;&#x7B97;&#x800C;&#x6765;&#x3002; &#x4E0B;&#x9762;&#x662F;&#x5982;&#x4F55;&#x7528;Java API &#x4F7F;&#x7528;&#x7EDF;&#x8BA1;&#x805A;&#x5408; &#x51C6;&#x5907;&#x805A;&#x5408;&#x8BF7;&#x6C42; &#x4E0B;&#x9762;&#x662F;&#x5982;&#x4F55;&#x521B;&#x5EFA;&#x805A;&#x5408;&#x8BF7;&#x6C42;&#x7684;&#x662F;&#x793A;&#x4F8B;&#xFF1A; StatsAggregationBuilder aggregation = AggregationBuilders .stats(&quot;agg&quot;) .field(&quot;height&quot;); &#x4F7F;&#x7528;&#x805A;&#x5408;&#x8BF7;&#x6C42; import org.elasticsearch.search.aggregations.metrics.stats.Stats; // sr is here your SearchResponse object Stats agg = sr.getAggregations().get(&quot;agg&quot;); double min = agg.getMin(); double max = agg.getMax(); double avg = agg.getAvg(); double sum = agg.getSum(); long count = agg.getCount(); Extended Stats Aggregation &#x6269;&#x5C55;&#x7EDF;&#x8BA1;&#x805A;&#x5408; &#x6269;&#x5C55;&#x7EDF;&#x8BA1;&#x805A;&#x5408;&#x2014;&#x2014;&#x57FA;&#x4E8E;&#x6587;&#x6863;&#x7684;&#x67D0;&#x4E2A;&#x503C;&#xFF0C;&#x8BA1;&#x7B97;&#x51FA;&#x4E00;&#x4E9B;&#x7EDF;&#x8BA1;&#x4FE1;&#x606F;&#xFF08;&#x6BD4;&#x666E;&#x901A;&#x7684;stats&#x805A;&#x5408;&#x591A;&#x4E86;sum_of_squares&#x3001;variance&#x3001;std_deviation&#x3001;std_deviation_bounds&#xFF09;, &#x7528;&#x4E8E;&#x8BA1;&#x7B97;&#x7684;&#x503C;&#x53EF;&#x4EE5;&#x662F;&#x7279;&#x5B9A;&#x7684;&#x6570;&#x503C;&#x578B;&#x5B57;&#x6BB5;&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x811A;&#x672C;&#x8BA1;&#x7B97;&#x800C;&#x6765;&#x3002; &#x4E0B;&#x9762;&#x662F;&#x5982;&#x4F55;&#x7528;Java API &#x4F7F;&#x7528;&#x6269;&#x5C55;&#x7EDF;&#x8BA1;&#x805A;&#x5408; &#x51C6;&#x5907;&#x805A;&#x5408;&#x8BF7;&#x6C42; &#x4E0B;&#x9762;&#x662F;&#x5982;&#x4F55;&#x521B;&#x5EFA;&#x805A;&#x5408;&#x8BF7;&#x6C42;&#x7684;&#x662F;&#x793A;&#x4F8B;&#xFF1A; ExtendedStatsAggregationBuilder aggregation = AggregationBuilders .extendedStats(&quot;agg&quot;) .field(&quot;height&quot;); &#x4F7F;&#x7528;&#x805A;&#x5408;&#x8BF7;&#x6C42; import org.elasticsearch.search.aggregations.metrics.stats.extended.ExtendedStats; // sr is here your SearchResponse object ExtendedStats agg = sr.getAggregations().get(&quot;agg&quot;); double min = agg.getMin(); double max = agg.getMax(); double avg = agg.getAvg(); double sum = agg.getSum(); long count = agg.getCount(); double stdDeviation = agg.getStdDeviation(); double sumOfSquares = agg.getSumOfSquares(); double variance = agg.getVariance(); Value Count Aggregation &#x503C;&#x8BA1;&#x6570;&#x805A;&#x5408; &#x503C;&#x8BA1;&#x6570;&#x805A;&#x5408;&#x2014;&#x2014;&#x8BA1;&#x7B97;&#x805A;&#x5408;&#x6587;&#x6863;&#x4E2D;&#x67D0;&#x4E2A;&#x503C;&#x7684;&#x4E2A;&#x6570;, &#x7528;&#x4E8E;&#x8BA1;&#x7B97;&#x7684;&#x503C;&#x53EF;&#x4EE5;&#x662F;&#x7279;&#x5B9A;&#x7684;&#x6570;&#x503C;&#x578B;&#x5B57;&#x6BB5;&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x811A;&#x672C;&#x8BA1;&#x7B97;&#x800C;&#x6765;&#x3002; &#x8BE5;&#x805A;&#x5408;&#x4E00;&#x822C;&#x57DF;&#x5176;&#x5B83; single-value &#x805A;&#x5408;&#x8054;&#x5408;&#x4F7F;&#x7528;&#xFF0C;&#x6BD4;&#x5982;&#x5728;&#x8BA1;&#x7B97;&#x4E00;&#x4E2A;&#x5B57;&#x6BB5;&#x7684;&#x5E73;&#x5747;&#x503C;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x53EF;&#x80FD;&#x8FD8;&#x4F1A;&#x5173;&#x6CE8;&#x8FD9;&#x4E2A;&#x5E73;&#x5747;&#x503C;&#x662F;&#x7531;&#x591A;&#x5C11;&#x4E2A;&#x503C;&#x8BA1;&#x7B97;&#x800C;&#x6765;&#x3002; &#x4E0B;&#x9762;&#x662F;&#x5982;&#x4F55;&#x7528;Java API &#x4F7F;&#x7528;&#x503C;&#x8BA1;&#x6570;&#x805A;&#x5408; &#x51C6;&#x5907;&#x805A;&#x5408;&#x8BF7;&#x6C42; &#x4E0B;&#x9762;&#x662F;&#x5982;&#x4F55;&#x521B;&#x5EFA;&#x805A;&#x5408;&#x8BF7;&#x6C42;&#x7684;&#x662F;&#x793A;&#x4F8B;&#xFF1A; ValueCountAggregationBuilder aggregation = AggregationBuilders .count(&quot;agg&quot;) .field(&quot;height&quot;); &#x4F7F;&#x7528;&#x805A;&#x5408;&#x8BF7;&#x6C42; import org.elasticsearch.search.aggregations.metrics.valuecount.ValueCount; // sr is here your SearchResponse object ValueCount agg = sr.getAggregations().get(&quot;agg&quot;); long value = agg.getValue(); Percentile Aggregation &#x767E;&#x5206;&#x767E;&#x805A;&#x5408; &#x767E;&#x5206;&#x767E;&#x805A;&#x5408;&#x2014;&#x2014;&#x57FA;&#x4E8E;&#x805A;&#x5408;&#x6587;&#x6863;&#x4E2D;&#x67D0;&#x4E2A;&#x6570;&#x503C;&#x7C7B;&#x578B;&#x7684;&#x503C;&#xFF0C;&#x6C42;&#x8FD9;&#x4E9B;&#x503C;&#x4E2D;&#x7684;&#x4E00;&#x4E2A;&#x6216;&#x8005;&#x591A;&#x4E2A;&#x767E;&#x5206;&#x6BD4;, &#x7528;&#x4E8E;&#x8BA1;&#x7B97;&#x7684;&#x503C;&#x53EF;&#x4EE5;&#x662F;&#x7279;&#x5B9A;&#x7684;&#x6570;&#x503C;&#x578B;&#x5B57;&#x6BB5;&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x811A;&#x672C;&#x8BA1;&#x7B97;&#x800C;&#x6765;&#x3002; &#x4E0B;&#x9762;&#x662F;&#x5982;&#x4F55;&#x7528;Java API &#x4F7F;&#x7528;&#x767E;&#x5206;&#x767E;&#x805A;&#x5408; &#x51C6;&#x5907;&#x805A;&#x5408;&#x8BF7;&#x6C42; &#x4E0B;&#x9762;&#x662F;&#x5982;&#x4F55;&#x521B;&#x5EFA;&#x805A;&#x5408;&#x8BF7;&#x6C42;&#x7684;&#x662F;&#x793A;&#x4F8B;&#xFF1A; PercentilesAggregationBuilder aggregation = AggregationBuilders .percentiles(&quot;agg&quot;) .field(&quot;height&quot;); &#x53EF;&#x4EE5;&#x63D0;&#x4F9B;&#x767E;&#x5206;&#x4F4D;&#x6570;&#xFF0C;&#x800C;&#x4E0D;&#x662F;&#x4F7F;&#x7528;&#x9ED8;&#x8BA4;&#x503C;&#xFF1A; PercentilesAggregationBuilder aggregation = AggregationBuilders .percentiles(&quot;agg&quot;) .field(&quot;height&quot;) .percentiles(1.0, 5.0, 10.0, 20.0, 30.0, 75.0, 95.0, 99.0); &#x4F7F;&#x7528;&#x805A;&#x5408;&#x8BF7;&#x6C42; import org.elasticsearch.search.aggregations.metrics.percentiles.Percentile; import org.elasticsearch.search.aggregations.metrics.percentiles.Percentiles; // sr is here your SearchResponse object Percentiles agg = sr.getAggregations().get(&quot;agg&quot;); // For each entry for (Percentile entry : agg) { double percent = entry.getPercent(); // Percent double value = entry.getValue(); // Value logger.info(&quot;percent [{}], value [{}]&quot;, percent, value); } &#x5927;&#x6982;&#x8F93;&#x51FA;&#xFF1A; percent [1.0], value [0.814338896154595] percent [5.0], value [0.8761912455821302] percent [25.0], value [1.173346540141847] percent [50.0], value [1.5432023318692198] percent [75.0], value [1.923915462033674] percent [95.0], value [2.2273644908535335] percent [99.0], value [2.284989339108279] Percentile Ranks Aggregation &#x767E;&#x5206;&#x6BD4;&#x7B49;&#x7EA7;&#x805A;&#x5408; &#x4E00;&#x4E2A;multi-value&#x6307;&#x6807;&#x805A;&#x5408;&#xFF0C;&#x5B83;&#x901A;&#x8FC7;&#x4ECE;&#x805A;&#x5408;&#x6587;&#x6863;&#x4E2D;&#x63D0;&#x53D6;&#x6570;&#x503C;&#x6765;&#x8BA1;&#x7B97;&#x4E00;&#x4E2A;&#x6216;&#x591A;&#x4E2A;&#x767E;&#x5206;&#x6BD4;&#x3002;&#x8FD9;&#x4E9B;&#x503C;&#x53EF;&#x4EE5;&#x4ECE;&#x7279;&#x5B9A;&#x6570;&#x503C;&#x5B57;&#x6BB5;&#x4E2D;&#x63D0;&#x53D6;&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x7531;&#x63D0;&#x4F9B;&#x7684;&#x811A;&#x672C;&#x751F;&#x6210;&#x3002; &#x6CE8;&#x610F;&#xFF1A;&#x8BF7;&#x53C2;&#x8003;&#x767E;&#x5206;&#x6BD4;&#xFF08;&#x901A;&#x5E38;&#xFF09;&#x8FD1;&#x89C6;&#x503C;&#xFF08;percentiles are (usually approximate)&#xFF09;&#x548C;&#x538B;&#x7F29;&#xFF08;Compression&#xFF09;&#x4EE5;&#x83B7;&#x5F97;&#x5173;&#x4E8E;&#x8FD1;&#x89C6;&#x503C;&#x7684;&#x5EFA;&#x8BAE;&#x548C;&#x5185;&#x5B58;&#x4F7F;&#x7528;&#x7684;&#x767E;&#x5206;&#x6BD4;&#x6392;&#x4F4D;&#x805A;&#x5408;&#x3002;&#x767E;&#x5206;&#x6BD4;&#x6392;&#x4F4D;&#x5C55;&#x793A;&#x90A3;&#x4E9B;&#x5728;&#x67D0;&#x4E00;&#x503C;&#x4E4B;&#x4E0B;&#x7684;&#x89C2;&#x6D4B;&#x503C;&#x7684;&#x767E;&#x5206;&#x6BD4;&#x3002;&#x4F8B;&#x5982;&#xFF0C;&#x5047;&#x5982;&#x67D0;&#x4E00;&#x76F4;&#x5927;&#x4E8E;&#x7B49;&#x4E8E;&#x88AB;&#x89C2;&#x6D4B;&#x503C;&#x7684;95%&#xFF0C;&#x5219;&#x79F0;&#x5176;&#x4E3A;&#x7B2C;95&#x767E;&#x5206;&#x4F4D;&#x6570;&#x3002;&#x5047;&#x8BBE;&#x4F60;&#x7684;&#x6570;&#x636E;&#x7531;&#x7F51;&#x9875;&#x52A0;&#x8F7D;&#x65F6;&#x95F4;&#x7EC4;&#x6210;&#x3002;&#x4F60;&#x53EF;&#x80FD;&#x6709;&#x4E00;&#x4E2A;&#x670D;&#x52A1;&#x534F;&#x8BAE;&#xFF0C;95%&#x9875;&#x9762;&#x9700;&#x8981;&#x5728;15ms&#x52A0;&#x8F7D;&#x5B8C;&#x5168;&#xFF0C;99%&#x9875;&#x9762;&#x5728;30ms&#x52A0;&#x8F7D;&#x5B8C;&#x5168;&#x3002; &#x4E0B;&#x9762;&#x662F;&#x5982;&#x4F55;&#x7528;Java API &#x4F7F;&#x7528;&#x767E;&#x5206;&#x6BD4;&#x7B49;&#x7EA7;&#x805A;&#x5408; &#x51C6;&#x5907;&#x805A;&#x5408;&#x8BF7;&#x6C42; &#x4E0B;&#x9762;&#x662F;&#x5982;&#x4F55;&#x521B;&#x5EFA;&#x805A;&#x5408;&#x8BF7;&#x6C42;&#x7684;&#x662F;&#x793A;&#x4F8B;&#xFF1A; PercentilesAggregationBuilder aggregation = AggregationBuilders .percentiles(&quot;agg&quot;) .field(&quot;height&quot;); &#x4F7F;&#x7528;&#x805A;&#x5408;&#x8BF7;&#x6C42; import org.elasticsearch.search.aggregations.metrics.percentiles.Percentile; import org.elasticsearch.search.aggregations.metrics.percentiles.PercentileRanks; // sr is here your SearchResponse object PercentileRanks agg = sr.getAggregations().get(&quot;agg&quot;); // For each entry for (Percentile entry : agg) { double percent = entry.getPercent(); // Percent double value = entry.getValue(); // Value logger.info(&quot;percent [{}], value [{}]&quot;, percent, value); } &#x5927;&#x6982;&#x8F93;&#x51FA;&#xFF1A; percent [29.664353095090945], value [1.24] percent [73.9335313461868], value [1.91] percent [94.40095147327283], value [2.22] Cardinality Aggregation &#x57FA;&#x6570;&#x805A;&#x5408; &#x57FA;&#x4E8E;&#x6587;&#x6863;&#x7684;&#x67D0;&#x4E2A;&#x503C;&#xFF0C;&#x8BA1;&#x7B97;&#x6587;&#x6863;&#x975E;&#x91CD;&#x590D;&#x7684;&#x4E2A;&#x6570;&#xFF08;&#x53BB;&#x91CD;&#x8BA1;&#x6570;&#xFF09;&#x3002;&#x3002;&#x8FD9;&#x4E9B;&#x503C;&#x53EF;&#x4EE5;&#x4ECE;&#x7279;&#x5B9A;&#x6570;&#x503C;&#x5B57;&#x6BB5;&#x4E2D;&#x63D0;&#x53D6;&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x7531;&#x63D0;&#x4F9B;&#x7684;&#x811A;&#x672C;&#x751F;&#x6210;&#x3002; &#x4E0B;&#x9762;&#x662F;&#x5982;&#x4F55;&#x7528;Java API &#x4F7F;&#x7528;&#x57FA;&#x6570;&#x805A;&#x5408; &#x51C6;&#x5907;&#x805A;&#x5408;&#x8BF7;&#x6C42; &#x4E0B;&#x9762;&#x662F;&#x5982;&#x4F55;&#x521B;&#x5EFA;&#x805A;&#x5408;&#x8BF7;&#x6C42;&#x7684;&#x662F;&#x793A;&#x4F8B;&#xFF1A; CardinalityAggregationBuilder aggregation = AggregationBuilders .cardinality(&quot;agg&quot;) .field(&quot;tags&quot;); &#x4F7F;&#x7528;&#x805A;&#x5408;&#x8BF7;&#x6C42; import org.elasticsearch.search.aggregations.metrics.cardinality.Cardinality; // sr is here your SearchResponse object Cardinality agg = sr.getAggregations().get(&quot;agg&quot;); long value = agg.getValue(); Geo Bounds Aggregation &#x5730;&#x7406;&#x8FB9;&#x754C;&#x805A;&#x5408; &#x5730;&#x7406;&#x8FB9;&#x754C;&#x805A;&#x5408;&#x2014;&#x2014;&#x57FA;&#x4E8E;&#x6587;&#x6863;&#x7684;&#x67D0;&#x4E2A;&#x5B57;&#x6BB5;&#xFF08;geo-point&#x7C7B;&#x578B;&#x5B57;&#x6BB5;&#xFF09;&#xFF0C;&#x8BA1;&#x7B97;&#x51FA;&#x8BE5;&#x5B57;&#x6BB5;&#x6240;&#x6709;&#x5730;&#x7406;&#x5750;&#x6807;&#x70B9;&#x7684;&#x8FB9;&#x754C;&#xFF08;&#x5DE6;&#x4E0A;&#x89D2;/&#x53F3;&#x4E0B;&#x89D2;&#x5750;&#x6807;&#x70B9;&#xFF09;&#x3002; &#x4E0B;&#x9762;&#x662F;&#x5982;&#x4F55;&#x7528;Java API &#x4F7F;&#x7528;&#x5730;&#x7406;&#x8FB9;&#x754C;&#x805A;&#x5408; &#x51C6;&#x5907;&#x805A;&#x5408;&#x8BF7;&#x6C42; &#x4E0B;&#x9762;&#x662F;&#x5982;&#x4F55;&#x521B;&#x5EFA;&#x805A;&#x5408;&#x8BF7;&#x6C42;&#x7684;&#x662F;&#x793A;&#x4F8B;&#xFF1A; GeoBoundsBuilder aggregation = GeoBoundsAggregationBuilder .geoBounds(&quot;agg&quot;) .field(&quot;address.location&quot;) .wrapLongitude(true); &#x4F7F;&#x7528;&#x805A;&#x5408;&#x8BF7;&#x6C42; import org.elasticsearch.search.aggregations.metrics.geobounds.GeoBounds; // sr is here your SearchResponse object GeoBounds agg = sr.getAggregations().get(&quot;agg&quot;); GeoPoint bottomRight = agg.bottomRight(); GeoPoint topLeft = agg.topLeft(); logger.info(&quot;bottomRight {}, topLeft {}&quot;, bottomRight, topLeft); &#x5927;&#x6982;&#x4F1A;&#x8F93;&#x51FA;&#xFF1A; bottomRight [40.70500764381921, 13.952946866893775], topLeft [53.49603022435221, -4.190029308156676] Top Hits Aggregation &#x6700;&#x9AD8;&#x5339;&#x914D;&#x6743;&#x503C;&#x805A;&#x5408; &#x6700;&#x9AD8;&#x5339;&#x914D;&#x6743;&#x503C;&#x805A;&#x5408;&#x2014;&#x2014;&#x8DDF;&#x8E2A;&#x805A;&#x5408;&#x4E2D;&#x76F8;&#x5173;&#x6027;&#x6700;&#x9AD8;&#x7684;&#x6587;&#x6863;&#x3002;&#x8BE5;&#x805A;&#x5408;&#x4E00;&#x822C;&#x7528;&#x505A; sub-aggregation&#xFF0C;&#x4EE5;&#x6B64;&#x6765;&#x805A;&#x5408;&#x6BCF;&#x4E2A;&#x6876;&#x4E2D;&#x7684;&#x6700;&#x9AD8;&#x5339;&#x914D;&#x7684;&#x6587;&#x6863;&#x3002; &#x4E0B;&#x9762;&#x662F;&#x5982;&#x4F55;&#x7528;Java API &#x4F7F;&#x7528;&#x6700;&#x9AD8;&#x5339;&#x914D;&#x6743;&#x503C;&#x805A;&#x5408; &#x51C6;&#x5907;&#x805A;&#x5408;&#x8BF7;&#x6C42; &#x4E0B;&#x9762;&#x662F;&#x5982;&#x4F55;&#x521B;&#x5EFA;&#x805A;&#x5408;&#x8BF7;&#x6C42;&#x7684;&#x662F;&#x793A;&#x4F8B;&#xFF1A; AggregationBuilder aggregation = AggregationBuilders .terms(&quot;agg&quot;).field(&quot;gender&quot;) .subAggregation( AggregationBuilders.topHits(&quot;top&quot;) ); &#x5927;&#x591A;&#x6570;&#x6807;&#x51C6;&#x7684;&#x641C;&#x7D22;&#x9009;&#x9879;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#xFF0C;&#x6BD4;&#x5982;&#xFF1A;from, size, sort, highlight, explain &#x2026; AggregationBuilder aggregation = AggregationBuilders .terms(&quot;agg&quot;).field(&quot;gender&quot;) .subAggregation( AggregationBuilders.topHits(&quot;top&quot;) .explain(true) .size(1) .from(10) ); &#x4F7F;&#x7528;&#x805A;&#x5408;&#x8BF7;&#x6C42; import org.elasticsearch.search.aggregations.bucket.terms.Terms; import org.elasticsearch.search.aggregations.metrics.tophits.TopHits; // sr is here your SearchResponse object Terms agg = sr.getAggregations().get(&quot;agg&quot;); // For each entry for (Terms.Bucket entry : agg.getBuckets()) { String key = entry.getKey(); // bucket key long docCount = entry.getDocCount(); // Doc count logger.info(&quot;key [{}], doc_count [{}]&quot;, key, docCount); // We ask for top_hits for each bucket TopHits topHits = entry.getAggregations().get(&quot;top&quot;); for (SearchHit hit : topHits.getHits().getHits()) { logger.info(&quot; -&gt; id [{}], _source [{}]&quot;, hit.getId(), hit.getSourceAsString()); } } &#x5927;&#x6982;&#x4F1A;&#x8F93;&#x51FA;&#xFF1A; key [male], doc_count [5107] -&gt; id [AUnzSZze9k7PKXtq04x2], _source [{&quot;gender&quot;:&quot;male&quot;,...}] -&gt; id [AUnzSZzj9k7PKXtq04x4], _source [{&quot;gender&quot;:&quot;male&quot;,...}] -&gt; id [AUnzSZzl9k7PKXtq04x5], _source [{&quot;gender&quot;:&quot;male&quot;,...}] key [female], doc_count [4893] -&gt; id [AUnzSZzM9k7PKXtq04xy], _source [{&quot;gender&quot;:&quot;female&quot;,...}] -&gt; id [AUnzSZzp9k7PKXtq04x8], _source [{&quot;gender&quot;:&quot;female&quot;,...}] -&gt; id [AUnzSZ0W9k7PKXtq04yS], _source [{&quot;gender&quot;:&quot;female&quot;,...}] Scripted Metric Aggregation &#x6B64;&#x529F;&#x80FD;&#x4E3A;&#x5B9E;&#x9A8C;&#x6027;&#x7684;&#xFF0C;&#x4E0D;&#x5EFA;&#x8BAE;&#x751F;&#x4EA7;&#x4F7F;&#x7528;&#xFF0C;&#x6240;&#x4EE5;&#x4E5F;&#x4E0D;&#x505A;&#x8FC7;&#x591A;&#x8BF4;&#x660E; &#x6709;&#x5174;&#x8DA3;&#x53EF;&#x4EE5;&#x81EA;&#x5DF1;&#x53C2;&#x8003; &#x5B98;&#x65B9;&#x6587;&#x6863; results matching \"\" No results matching \"\" var gitbook = gitbook || []; gitbook.push(function() { gitbook.page.hasChanged({\"page\":{\"title\":\"Metrics aggregations\",\"level\":\"1.6.2\",\"depth\":2,\"next\":{\"title\":\"Bucket aggregations\",\"level\":\"1.6.3\",\"depth\":2,\"path\":\"aggregations/bucket-aggregations.md\",\"ref\":\"aggregations/bucket-aggregations.md\",\"articles\":[]},\"previous\":{\"title\":\"Structuring aggregations\",\"level\":\"1.6.1\",\"depth\":2,\"path\":\"aggregations/structuring-aggregations.md\",\"ref\":\"aggregations/structuring-aggregations.md\",\"articles\":[]},\"dir\":\"ltr\"},\"config\":{\"gitbook\":\"*\",\"theme\":\"default\",\"variables\":{},\"plugins\":[],\"pluginsConfig\":{\"highlight\":{},\"search\":{},\"lunr\":{\"maxIndexSize\":1000000,\"ignoreSpecialCharacters\":false},\"sharing\":{\"facebook\":true,\"twitter\":true,\"google\":false,\"weibo\":false,\"instapaper\":false,\"vk\":false,\"all\":[\"facebook\",\"google\",\"twitter\",\"weibo\",\"instapaper\"]},\"fontsettings\":{\"theme\":\"white\",\"family\":\"sans\",\"size\":2},\"theme-default\":{\"styles\":{\"website\":\"styles/website.css\",\"pdf\":\"styles/pdf.css\",\"epub\":\"styles/epub.css\",\"mobi\":\"styles/mobi.css\",\"ebook\":\"styles/ebook.css\",\"print\":\"styles/print.css\"},\"showLevel\":false}},\"structure\":{\"langs\":\"LANGS.md\",\"readme\":\"README.md\",\"glossary\":\"GLOSSARY.md\",\"summary\":\"SUMMARY.md\"},\"pdf\":{\"pageNumbers\":true,\"fontSize\":12,\"fontFamily\":\"Arial\",\"paperSize\":\"a4\",\"chapterMark\":\"pagebreak\",\"pageBreaksBefore\":\"/\",\"margin\":{\"right\":62,\"left\":62,\"top\":56,\"bottom\":56}},\"styles\":{\"website\":\"styles/website.css\",\"pdf\":\"styles/pdf.css\",\"epub\":\"styles/epub.css\",\"mobi\":\"styles/mobi.css\",\"ebook\":\"styles/ebook.css\",\"print\":\"styles/print.css\"}},\"file\":{\"path\":\"aggregations/metrics-aggregations.md\",\"mtime\":\"2017-11-08T08:32:22.726Z\",\"type\":\"markdown\"},\"gitbook\":{\"version\":\"3.2.3\",\"time\":\"2018-01-29T15:28:32.108Z\"},\"basePath\":\"..\",\"book\":{\"language\":\"\"}}); });"},{"title":"","date":"2018-02-01T07:21:14.211Z","updated":"2018-01-29T15:28:33.688Z","comments":true,"path":"esjava/aggregations/metrics-aggregations.html","permalink":"http://test.quanke.name/esjava/aggregations/metrics-aggregations.html","excerpt":"","text":"Metrics aggregations 计算度量这类的聚合操作是以使用一种方式或者从文档中提取需要聚合的值为基础的。这些数据不但可以从文档（使用数据属性）的属性中提取出来，也可以使用脚本生成。 数值计量聚合操作是能够产生具体的数值的一种计量聚合操作。一些聚合操作输出单个的计量数值（例如avg），并且被称作single-value numeric metric aggregation，其他产生多个计量数值（例如 stats）的称作 multi-value numeric metrics aggregation。这两种不同的聚合操作只有在桶聚合的子聚合操作中才会有不同的表现（有些桶聚合可以基于每个的数值计量来对返回的桶进行排序）。 Min Aggregatione 最小值聚合下面是如何用Java API 使用最小值聚合 准备聚合请求下面是如何创建聚合请求的是示例： MinAggregationBuilder aggregation = AggregationBuilders .min(&quot;agg&quot;) .field(&quot;height&quot;); 使用聚合请求import org.elasticsearch.search.aggregations.metrics.min.Min; // sr is here your SearchResponse objectMin agg = sr.getAggregations().get(&quot;agg&quot;);double value = agg.getValue(); Max Aggregation 最大值聚合下面是如何用Java API 使用最大值聚合 准备聚合请求下面是如何创建聚合请求的是示例： MaxAggregationBuilder aggregation = AggregationBuilders .max(&quot;agg&quot;) .field(&quot;height&quot;); 使用聚合请求import org.elasticsearch.search.aggregations.metrics.max.Max; // sr is here your SearchResponse objectMin agg = sr.getAggregations().get(&quot;agg&quot;);double value = agg.getValue(); Sum Aggregation 求和聚合下面是如何用Java API 使用求和聚合 准备聚合请求下面是如何创建聚合请求的是示例： SumAggregationBuilder aggregation = AggregationBuilders .sum(&quot;agg&quot;) .field(&quot;height&quot;); 使用聚合请求import org.elasticsearch.search.aggregations.metrics.sum.Sum; // sr is here your SearchResponse objectSum agg = sr.getAggregations().get(&quot;agg&quot;);double value = agg.getValue(); Avg Aggregation 平均值聚合下面是如何用Java API 使用平均值聚合 准备聚合请求下面是如何创建聚合请求的是示例： AvgAggregationBuilder aggregation = AggregationBuilders .avg(&quot;agg&quot;) .field(&quot;height&quot;); 使用聚合请求import org.elasticsearch.search.aggregations.metrics.avg.Avg; // sr is here your SearchResponse objectAvg agg = sr.getAggregations().get(&quot;agg&quot;);double value = agg.getValue(); Stats Aggregation 统计聚合 统计聚合——基于文档的某个值，计算出一些统计信息（min、max、sum、count、avg）, 用于计算的值可以是特定的数值型字段，也可以通过脚本计算而来。 下面是如何用Java API 使用统计聚合 准备聚合请求下面是如何创建聚合请求的是示例： StatsAggregationBuilder aggregation = AggregationBuilders .stats(&quot;agg&quot;) .field(&quot;height&quot;); 使用聚合请求import org.elasticsearch.search.aggregations.metrics.stats.Stats; // sr is here your SearchResponse objectStats agg = sr.getAggregations().get(&quot;agg&quot;);double min = agg.getMin();double max = agg.getMax();double avg = agg.getAvg();double sum = agg.getSum();long count = agg.getCount(); Extended Stats Aggregation 扩展统计聚合 扩展统计聚合——基于文档的某个值，计算出一些统计信息（比普通的stats聚合多了sum_of_squares、variance、std_deviation、std_deviation_bounds）, 用于计算的值可以是特定的数值型字段，也可以通过脚本计算而来。 下面是如何用Java API 使用扩展统计聚合 准备聚合请求下面是如何创建聚合请求的是示例： ExtendedStatsAggregationBuilder aggregation = AggregationBuilders .extendedStats(&quot;agg&quot;) .field(&quot;height&quot;); 使用聚合请求import org.elasticsearch.search.aggregations.metrics.stats.extended.ExtendedStats; // sr is here your SearchResponse objectExtendedStats agg = sr.getAggregations().get(&quot;agg&quot;);double min = agg.getMin();double max = agg.getMax();double avg = agg.getAvg();double sum = agg.getSum();long count = agg.getCount();double stdDeviation = agg.getStdDeviation();double sumOfSquares = agg.getSumOfSquares();double variance = agg.getVariance(); Value Count Aggregation 值计数聚合 值计数聚合——计算聚合文档中某个值的个数, 用于计算的值可以是特定的数值型字段，也可以通过脚本计算而来。 该聚合一般域其它 single-value 聚合联合使用，比如在计算一个字段的平均值的时候，可能还会关注这个平均值是由多少个值计算而来。 下面是如何用Java API 使用值计数聚合 准备聚合请求下面是如何创建聚合请求的是示例： ValueCountAggregationBuilder aggregation = AggregationBuilders .count(&quot;agg&quot;) .field(&quot;height&quot;); 使用聚合请求import org.elasticsearch.search.aggregations.metrics.valuecount.ValueCount; // sr is here your SearchResponse objectValueCount agg = sr.getAggregations().get(&quot;agg&quot;);long value = agg.getValue(); Percentile Aggregation 百分百聚合 百分百聚合——基于聚合文档中某个数值类型的值，求这些值中的一个或者多个百分比, 用于计算的值可以是特定的数值型字段，也可以通过脚本计算而来。 下面是如何用Java API 使用百分百聚合 准备聚合请求下面是如何创建聚合请求的是示例： PercentilesAggregationBuilder aggregation = AggregationBuilders .percentiles(&quot;agg&quot;) .field(&quot;height&quot;); 可以提供百分位数，而不是使用默认值： PercentilesAggregationBuilder aggregation = AggregationBuilders .percentiles(&quot;agg&quot;) .field(&quot;height&quot;) .percentiles(1.0, 5.0, 10.0, 20.0, 30.0, 75.0, 95.0, 99.0); 使用聚合请求import org.elasticsearch.search.aggregations.metrics.percentiles.Percentile;import org.elasticsearch.search.aggregations.metrics.percentiles.Percentiles; // sr is here your SearchResponse objectPercentiles agg = sr.getAggregations().get(&quot;agg&quot;);// For each entryfor (Percentile entry : agg) &#123; double percent = entry.getPercent(); // Percent double value = entry.getValue(); // Value logger.info(&quot;percent [&#123;&#125;], value [&#123;&#125;]&quot;, percent, value);&#125; 大概输出： percent [1.0], value [0.814338896154595]percent [5.0], value [0.8761912455821302]percent [25.0], value [1.173346540141847]percent [50.0], value [1.5432023318692198]percent [75.0], value [1.923915462033674]percent [95.0], value [2.2273644908535335]percent [99.0], value [2.284989339108279] Percentile Ranks Aggregation 百分比等级聚合 一个multi-value指标聚合，它通过从聚合文档中提取数值来计算一个或多个百分比。这些值可以从特定数值字段中提取，也可以由提供的脚本生成。 注意：请参考百分比（通常）近视值（percentiles are (usually approximate)）和压缩（Compression）以获得关于近视值的建议和内存使用的百分比排位聚合。百分比排位展示那些在某一值之下的观测值的百分比。例如，假如某一直大于等于被观测值的95%，则称其为第95百分位数。假设你的数据由网页加载时间组成。你可能有一个服务协议，95%页面需要在15ms加载完全，99%页面在30ms加载完全。 下面是如何用Java API 使用百分比等级聚合 准备聚合请求下面是如何创建聚合请求的是示例： PercentilesAggregationBuilder aggregation = AggregationBuilders .percentiles(&quot;agg&quot;) .field(&quot;height&quot;); 使用聚合请求import org.elasticsearch.search.aggregations.metrics.percentiles.Percentile;import org.elasticsearch.search.aggregations.metrics.percentiles.PercentileRanks; // sr is here your SearchResponse objectPercentileRanks agg = sr.getAggregations().get(&quot;agg&quot;);// For each entryfor (Percentile entry : agg) &#123; double percent = entry.getPercent(); // Percent double value = entry.getValue(); // Value logger.info(&quot;percent [&#123;&#125;], value [&#123;&#125;]&quot;, percent, value);&#125; 大概输出： percent [29.664353095090945], value [1.24]percent [73.9335313461868], value [1.91]percent [94.40095147327283], value [2.22] Cardinality Aggregation 基数聚合 基于文档的某个值，计算文档非重复的个数（去重计数）。。这些值可以从特定数值字段中提取，也可以由提供的脚本生成。 下面是如何用Java API 使用基数聚合 准备聚合请求下面是如何创建聚合请求的是示例： CardinalityAggregationBuilder aggregation = AggregationBuilders .cardinality(&quot;agg&quot;) .field(&quot;tags&quot;); 使用聚合请求import org.elasticsearch.search.aggregations.metrics.cardinality.Cardinality; // sr is here your SearchResponse objectCardinality agg = sr.getAggregations().get(&quot;agg&quot;);long value = agg.getValue(); Geo Bounds Aggregation 地理边界聚合 地理边界聚合——基于文档的某个字段（geo-point类型字段），计算出该字段所有地理坐标点的边界（左上角/右下角坐标点）。 下面是如何用Java API 使用地理边界聚合 准备聚合请求下面是如何创建聚合请求的是示例： GeoBoundsBuilder aggregation = GeoBoundsAggregationBuilder .geoBounds(&quot;agg&quot;) .field(&quot;address.location&quot;) .wrapLongitude(true); 使用聚合请求import org.elasticsearch.search.aggregations.metrics.geobounds.GeoBounds; // sr is here your SearchResponse objectGeoBounds agg = sr.getAggregations().get(&quot;agg&quot;);GeoPoint bottomRight = agg.bottomRight();GeoPoint topLeft = agg.topLeft();logger.info(&quot;bottomRight &#123;&#125;, topLeft &#123;&#125;&quot;, bottomRight, topLeft); 大概会输出： bottomRight [40.70500764381921, 13.952946866893775], topLeft [53.49603022435221, -4.190029308156676] Top Hits Aggregation 最高匹配权值聚合 最高匹配权值聚合——跟踪聚合中相关性最高的文档。该聚合一般用做 sub-aggregation，以此来聚合每个桶中的最高匹配的文档。 下面是如何用Java API 使用最高匹配权值聚合 准备聚合请求下面是如何创建聚合请求的是示例： AggregationBuilder aggregation = AggregationBuilders .terms(&quot;agg&quot;).field(&quot;gender&quot;) .subAggregation( AggregationBuilders.topHits(&quot;top&quot;) ); 大多数标准的搜索选项可以使用，比如：from, size, sort, highlight, explain … AggregationBuilder aggregation = AggregationBuilders .terms(&quot;agg&quot;).field(&quot;gender&quot;) .subAggregation( AggregationBuilders.topHits(&quot;top&quot;) .explain(true) .size(1) .from(10) ); 使用聚合请求import org.elasticsearch.search.aggregations.bucket.terms.Terms;import org.elasticsearch.search.aggregations.metrics.tophits.TopHits; // sr is here your SearchResponse objectTerms agg = sr.getAggregations().get(&quot;agg&quot;);// For each entryfor (Terms.Bucket entry : agg.getBuckets()) &#123; String key = entry.getKey(); // bucket key long docCount = entry.getDocCount(); // Doc count logger.info(&quot;key [&#123;&#125;], doc_count [&#123;&#125;]&quot;, key, docCount); // We ask for top_hits for each bucket TopHits topHits = entry.getAggregations().get(&quot;top&quot;); for (SearchHit hit : topHits.getHits().getHits()) &#123; logger.info(&quot; -&gt; id [&#123;&#125;], _source [&#123;&#125;]&quot;, hit.getId(), hit.getSourceAsString()); &#125;&#125; 大概会输出： key [male], doc_count [5107] -&gt; id [AUnzSZze9k7PKXtq04x2], _source [&#123;&quot;gender&quot;:&quot;male&quot;,...&#125;] -&gt; id [AUnzSZzj9k7PKXtq04x4], _source [&#123;&quot;gender&quot;:&quot;male&quot;,...&#125;] -&gt; id [AUnzSZzl9k7PKXtq04x5], _source [&#123;&quot;gender&quot;:&quot;male&quot;,...&#125;]key [female], doc_count [4893] -&gt; id [AUnzSZzM9k7PKXtq04xy], _source [&#123;&quot;gender&quot;:&quot;female&quot;,...&#125;] -&gt; id [AUnzSZzp9k7PKXtq04x8], _source [&#123;&quot;gender&quot;:&quot;female&quot;,...&#125;] -&gt; id [AUnzSZ0W9k7PKXtq04yS], _source [&#123;&quot;gender&quot;:&quot;female&quot;,...&#125;] Scripted Metric Aggregation 此功能为实验性的，不建议生产使用，所以也不做过多说明 有兴趣可以自己参考 官方文档"},{"title":"","date":"2018-02-01T07:21:14.213Z","updated":"2018-01-29T15:28:35.541Z","comments":true,"path":"esjava/aggregations/structuring-aggregations.html","permalink":"http://test.quanke.name/esjava/aggregations/structuring-aggregations.html","excerpt":"","text":"Structuring aggregations · GitBook Introduction Dependency Client Transport Client XPack Transport Client Document APIs Index API Get API Delete API Delete By Query API Update API Multi Get API Bulk API Using Bulk Processor Search API Using scrolls in Java MultiSearch API Using Aggregations Terminate After Search Template Aggregations Structuring aggregations Metrics aggregations Bucket aggregations Query DSL Match All Query Full text queries Term level queries Compound queries Joining queries Geo queries Specialized queries Span queries Indexed Scripts API Script Language Java API Administration Indices Administration Cluster Administration Published with GitBook Structuring aggregations Structuring aggregations &#x7ED3;&#x6784;&#x5316;&#x805A;&#x5408; &#x5982; Aggregations guide &#x4E2D;&#x6240;&#x8FF0;&#xFF0C;&#x53EF;&#x4EE5;&#x5728;&#x805A;&#x5408;&#x4E2D;&#x5B9A;&#x4E49;&#x5B50;&#x805A;&#x5408;&#x3002; &#x805A;&#x5408;&#x53EF;&#x80FD;&#x662F; Metrics &#x805A;&#x5408;(&#x4E00;&#x4E2A;&#x8DDF;&#x8E2A;&#x548C;&#x8BA1;&#x7B97;&#x6307;&#x6807;&#x7684;&#x805A;&#x5408;)&#x6216;&#x8005; Bucket &#x805A;&#x5408; (&#x6784;&#x5EFA;&#x6876;&#x805A;&#x5408;) &#x4F8B;&#x5982;&#xFF0C;&#x8FD9;&#x91CC;&#x662F;&#x4E00;&#x4E2A;3&#x7EA7;&#x805A;&#x5408;&#x7EC4;&#x6210;&#x7684;&#x805A;&#x5408;&#xFF1A; Terms aggregation (bucket) Date Histogram aggregation (bucket) Average aggregation (metric) SearchResponse sr = node.client().prepareSearch() .addAggregation( AggregationBuilders.terms(&quot;by_country&quot;).field(&quot;country&quot;) .subAggregation(AggregationBuilders.dateHistogram(&quot;by_year&quot;) .field(&quot;dateOfBirth&quot;) .dateHistogramInterval(DateHistogramInterval.YEAR) .subAggregation(AggregationBuilders.avg(&quot;avg_children&quot;).field(&quot;children&quot;)) ) ) .execute().actionGet(); results matching \"\" No results matching \"\" var gitbook = gitbook || []; gitbook.push(function() { gitbook.page.hasChanged({\"page\":{\"title\":\"Structuring aggregations\",\"level\":\"1.6.1\",\"depth\":2,\"next\":{\"title\":\"Metrics aggregations\",\"level\":\"1.6.2\",\"depth\":2,\"path\":\"aggregations/metrics-aggregations.md\",\"ref\":\"aggregations/metrics-aggregations.md\",\"articles\":[]},\"previous\":{\"title\":\"Aggregations\",\"level\":\"1.6\",\"depth\":1,\"path\":\"aggregations.md\",\"ref\":\"aggregations.md\",\"articles\":[{\"title\":\"Structuring aggregations\",\"level\":\"1.6.1\",\"depth\":2,\"path\":\"aggregations/structuring-aggregations.md\",\"ref\":\"aggregations/structuring-aggregations.md\",\"articles\":[]},{\"title\":\"Metrics aggregations\",\"level\":\"1.6.2\",\"depth\":2,\"path\":\"aggregations/metrics-aggregations.md\",\"ref\":\"aggregations/metrics-aggregations.md\",\"articles\":[]},{\"title\":\"Bucket aggregations\",\"level\":\"1.6.3\",\"depth\":2,\"path\":\"aggregations/bucket-aggregations.md\",\"ref\":\"aggregations/bucket-aggregations.md\",\"articles\":[]}]},\"dir\":\"ltr\"},\"config\":{\"gitbook\":\"*\",\"theme\":\"default\",\"variables\":{},\"plugins\":[],\"pluginsConfig\":{\"highlight\":{},\"search\":{},\"lunr\":{\"maxIndexSize\":1000000,\"ignoreSpecialCharacters\":false},\"sharing\":{\"facebook\":true,\"twitter\":true,\"google\":false,\"weibo\":false,\"instapaper\":false,\"vk\":false,\"all\":[\"facebook\",\"google\",\"twitter\",\"weibo\",\"instapaper\"]},\"fontsettings\":{\"theme\":\"white\",\"family\":\"sans\",\"size\":2},\"theme-default\":{\"styles\":{\"website\":\"styles/website.css\",\"pdf\":\"styles/pdf.css\",\"epub\":\"styles/epub.css\",\"mobi\":\"styles/mobi.css\",\"ebook\":\"styles/ebook.css\",\"print\":\"styles/print.css\"},\"showLevel\":false}},\"structure\":{\"langs\":\"LANGS.md\",\"readme\":\"README.md\",\"glossary\":\"GLOSSARY.md\",\"summary\":\"SUMMARY.md\"},\"pdf\":{\"pageNumbers\":true,\"fontSize\":12,\"fontFamily\":\"Arial\",\"paperSize\":\"a4\",\"chapterMark\":\"pagebreak\",\"pageBreaksBefore\":\"/\",\"margin\":{\"right\":62,\"left\":62,\"top\":56,\"bottom\":56}},\"styles\":{\"website\":\"styles/website.css\",\"pdf\":\"styles/pdf.css\",\"epub\":\"styles/epub.css\",\"mobi\":\"styles/mobi.css\",\"ebook\":\"styles/ebook.css\",\"print\":\"styles/print.css\"}},\"file\":{\"path\":\"aggregations/structuring-aggregations.md\",\"mtime\":\"2017-11-08T08:32:22.732Z\",\"type\":\"markdown\"},\"gitbook\":{\"version\":\"3.2.3\",\"time\":\"2018-01-29T15:28:32.108Z\"},\"basePath\":\"..\",\"book\":{\"language\":\"\"}}); });"},{"title":"","date":"2018-02-01T07:21:14.213Z","updated":"2018-01-29T15:28:33.690Z","comments":true,"path":"esjava/aggregations/structuring-aggregations.html","permalink":"http://test.quanke.name/esjava/aggregations/structuring-aggregations.html","excerpt":"","text":"Structuring aggregations结构化聚合 如 Aggregations guide 中所述，可以在聚合中定义子聚合。 聚合可能是 Metrics 聚合(一个跟踪和计算指标的聚合)或者 Bucket 聚合 (构建桶聚合) 例如，这里是一个3级聚合组成的聚合： Terms aggregation (bucket) Date Histogram aggregation (bucket) Average aggregation (metric) SearchResponse sr = node.client().prepareSearch() .addAggregation( AggregationBuilders.terms(&quot;by_country&quot;).field(&quot;country&quot;) .subAggregation(AggregationBuilders.dateHistogram(&quot;by_year&quot;) .field(&quot;dateOfBirth&quot;) .dateHistogramInterval(DateHistogramInterval.YEAR) .subAggregation(AggregationBuilders.avg(&quot;avg_children&quot;).field(&quot;children&quot;)) ) ) .execute().actionGet();"},{"title":"","date":"2018-02-01T07:21:14.221Z","updated":"2018-01-29T15:28:34.178Z","comments":true,"path":"esjava/client/transport-client.html","permalink":"http://test.quanke.name/esjava/client/transport-client.html","excerpt":"","text":"Transport Client · GitBook Introduction Dependency Client Transport Client XPack Transport Client Document APIs Index API Get API Delete API Delete By Query API Update API Multi Get API Bulk API Using Bulk Processor Search API Using scrolls in Java MultiSearch API Using Aggregations Terminate After Search Template Aggregations Structuring aggregations Metrics aggregations Bucket aggregations Query DSL Match All Query Full text queries Term level queries Compound queries Joining queries Geo queries Specialized queries Span queries Indexed Scripts API Script Language Java API Administration Indices Administration Cluster Administration Published with GitBook Transport Client Transport Client &#x4E0D;&#x8BBE;&#x7F6E;&#x96C6;&#x7FA4;&#x540D;&#x79F0; // on startup //&#x6B64;&#x6B65;&#x9AA4;&#x6DFB;&#x52A0;IP&#xFF0C;&#x81F3;&#x5C11;&#x4E00;&#x4E2A;&#xFF0C;&#x5982;&#x679C;&#x8BBE;&#x7F6E;&#x4E86;&quot;client.transport.sniff&quot;= true &#x4E00;&#x4E2A;&#x5C31;&#x591F;&#x4E86;&#xFF0C;&#x56E0;&#x4E3A;&#x6DFB;&#x52A0;&#x4E86;&#x81EA;&#x52A8;&#x55C5;&#x63A2;&#x914D;&#x7F6E; TransportClient client = new PreBuiltTransportClient(Settings.EMPTY) .addTransportAddress(new InetSocketTransportAddress(InetAddress.getByName(&quot;host1&quot;), 9300)) .addTransportAddress(new InetSocketTransportAddress(InetAddress.getByName(&quot;host2&quot;), 9300)); // on shutdown &#x5173;&#x95ED;client client.close(); &#x8BBE;&#x7F6E;&#x96C6;&#x7FA4;&#x540D;&#x79F0; Settings settings = Settings.builder() .put(&quot;cluster.name&quot;, &quot;myClusterName&quot;).build(); //&#x8BBE;&#x7F6E;ES&#x5B9E;&#x4F8B;&#x7684;&#x540D;&#x79F0; TransportClient client = new PreBuiltTransportClient(settings); //&#x81EA;&#x52A8;&#x55C5;&#x63A2;&#x6574;&#x4E2A;&#x96C6;&#x7FA4;&#x7684;&#x72B6;&#x6001;&#xFF0C;&#x628A;&#x96C6;&#x7FA4;&#x4E2D;&#x5176;&#x4ED6;ES&#x8282;&#x70B9;&#x7684;ip&#x6DFB;&#x52A0;&#x5230;&#x672C;&#x5730;&#x7684;&#x5BA2;&#x6237;&#x7AEF;&#x5217;&#x8868;&#x4E2D; //Add transport addresses and do something with the client... &#x589E;&#x52A0;&#x81EA;&#x52A8;&#x55C5;&#x63A2;&#x914D;&#x7F6E; Settings settings = Settings.builder() .put(&quot;client.transport.sniff&quot;, true).build(); TransportClient client = new PreBuiltTransportClient(settings); &#x5176;&#x4ED6;&#x914D;&#x7F6E; client.transport.ignore_cluster_name //&#x8BBE;&#x7F6E; true &#xFF0C;&#x5FFD;&#x7565;&#x8FDE;&#x63A5;&#x8282;&#x70B9;&#x96C6;&#x7FA4;&#x540D;&#x9A8C;&#x8BC1; client.transport.ping_timeout //ping&#x4E00;&#x4E2A;&#x8282;&#x70B9;&#x7684;&#x54CD;&#x5E94;&#x65F6;&#x95F4; &#x9ED8;&#x8BA4;5&#x79D2; client.transport.nodes_sampler_interval //sample/ping &#x8282;&#x70B9;&#x7684;&#x65F6;&#x95F4;&#x95F4;&#x9694;&#xFF0C;&#x9ED8;&#x8BA4;&#x662F;5s &#x5BF9;&#x4E8E;ES Client&#xFF0C;&#x6709;&#x4E24;&#x79CD;&#x5F62;&#x5F0F;&#xFF0C;&#x4E00;&#x4E2A;&#x662F;TransportClient&#xFF0C;&#x4E00;&#x4E2A;&#x662F;NodeClient&#x3002;&#x4E24;&#x4E2A;&#x7684;&#x533A;&#x522B;&#x4E3A;&#xFF1A; TransportClient&#x4F5C;&#x4E3A;&#x4E00;&#x4E2A;&#x5916;&#x90E8;&#x8BBF;&#x95EE;&#x8005;&#xFF0C;&#x901A;&#x8FC7;HTTP&#x53BB;&#x8BF7;&#x6C42;ES&#x7684;&#x96C6;&#x7FA4;&#xFF0C;&#x5BF9;&#x4E8E;&#x96C6;&#x7FA4;&#x800C;&#x8A00;&#xFF0C;&#x5B83;&#x662F;&#x4E00;&#x4E2A;&#x5916;&#x90E8;&#x56E0;&#x7D20;&#x3002; NodeClient&#x987E;&#x540D;&#x601D;&#x4E49;&#xFF0C;&#x662F;&#x4F5C;&#x4E3A;ES&#x96C6;&#x7FA4;&#x7684;&#x4E00;&#x4E2A;&#x8282;&#x70B9;&#xFF0C;&#x5B83;&#x662F;ES&#x4E2D;&#x7684;&#x4E00;&#x73AF;&#xFF0C;&#x5176;&#x4ED6;&#x7684;&#x8282;&#x70B9;&#x5BF9;&#x5B83;&#x662F;&#x611F;&#x77E5;&#x7684;&#xFF0C;&#x4E0D;&#x50CF;TransportClient&#x90A3;&#x6837;&#xFF0C;ES&#x96C6;&#x7FA4;&#x5BF9;&#x5B83;&#x4E00;&#x65E0;&#x6240;&#x77E5;&#x3002;NodeClient&#x901A;&#x4FE1;&#x7684;&#x6027;&#x80FD;&#x4F1A;&#x66F4;&#x597D;&#xFF0C;&#x4F46;&#x662F;&#x56E0;&#x4E3A;&#x662F;ES&#x7684;&#x4E00;&#x73AF;&#xFF0C;&#x6240;&#x4EE5;&#x5B83;&#x51FA;&#x95EE;&#x9898;&#xFF0C;&#x4E5F;&#x4F1A;&#x7ED9;ES&#x96C6;&#x7FA4;&#x5E26;&#x6765;&#x95EE;&#x9898;&#x3002;NodeClient&#x53EF;&#x4EE5;&#x8BBE;&#x7F6E;&#x4E0D;&#x4F5C;&#x4E3A;&#x6570;&#x636E;&#x8282;&#x70B9;&#xFF0C;&#x5728;elasticsearch.yml&#x4E2D;&#x8BBE;&#x7F6E;&#xFF0C;&#x8FD9;&#x6837;&#x5C31;&#x4E0D;&#x4F1A;&#x5728;&#x6B64;&#x8282;&#x70B9;&#x4E0A;&#x5206;&#x914D;&#x6570;&#x636E;&#x3002; &#x5982;&#x679C;&#x7528;ES&#x7684;&#x8282;&#x70B9;&#xFF0C;&#x5927;&#x5BB6;&#x4EC1;&#x8005;&#x89C1;&#x4EC1;&#x667A;&#x8005;&#x89C1;&#x667A;&#xFF0C;&#x5404;&#x6309;&#x6240;&#x9700;&#x3002; &#x5B9E;&#x4F8B; Settings esSettings = Settings.builder() .put(&quot;cluster.name&quot;, clusterName) //&#x8BBE;&#x7F6E;ES&#x5B9E;&#x4F8B;&#x7684;&#x540D;&#x79F0; .put(&quot;client.transport.sniff&quot;, true) //&#x81EA;&#x52A8;&#x55C5;&#x63A2;&#x6574;&#x4E2A;&#x96C6;&#x7FA4;&#x7684;&#x72B6;&#x6001;&#xFF0C;&#x628A;&#x96C6;&#x7FA4;&#x4E2D;&#x5176;&#x4ED6;ES&#x8282;&#x70B9;&#x7684;ip&#x6DFB;&#x52A0;&#x5230;&#x672C;&#x5730;&#x7684;&#x5BA2;&#x6237;&#x7AEF;&#x5217;&#x8868;&#x4E2D; .build(); client = new PreBuiltTransportClient(esSettings);//&#x521D;&#x59CB;&#x5316;client&#x8F83;&#x8001;&#x7248;&#x672C;&#x53D1;&#x751F;&#x4E86;&#x53D8;&#x5316;&#xFF0C;&#x6B64;&#x65B9;&#x6CD5;&#x6709;&#x51E0;&#x4E2A;&#x91CD;&#x8F7D;&#x65B9;&#x6CD5;&#xFF0C;&#x521D;&#x59CB;&#x5316;&#x63D2;&#x4EF6;&#x7B49;&#x3002; //&#x6B64;&#x6B65;&#x9AA4;&#x6DFB;&#x52A0;IP&#xFF0C;&#x81F3;&#x5C11;&#x4E00;&#x4E2A;&#xFF0C;&#x5176;&#x5B9E;&#x4E00;&#x4E2A;&#x5C31;&#x591F;&#x4E86;&#xFF0C;&#x56E0;&#x4E3A;&#x6DFB;&#x52A0;&#x4E86;&#x81EA;&#x52A8;&#x55C5;&#x63A2;&#x914D;&#x7F6E; client.addTransportAddress(new InetSocketTransportAddress(InetAddress.getByName(ip), esPort)); results matching \"\" No results matching \"\" var gitbook = gitbook || []; gitbook.push(function() { gitbook.page.hasChanged({\"page\":{\"title\":\"Transport Client\",\"level\":\"1.3.1\",\"depth\":2,\"next\":{\"title\":\"XPack Transport Client\",\"level\":\"1.3.2\",\"depth\":2,\"path\":\"client/xpack-transport-client.md\",\"ref\":\"client/xpack-transport-client.md\",\"articles\":[]},\"previous\":{\"title\":\"Client\",\"level\":\"1.3\",\"depth\":1,\"path\":\"client.md\",\"ref\":\"client.md\",\"articles\":[{\"title\":\"Transport Client\",\"level\":\"1.3.1\",\"depth\":2,\"path\":\"client/transport-client.md\",\"ref\":\"client/transport-client.md\",\"articles\":[]},{\"title\":\"XPack Transport Client\",\"level\":\"1.3.2\",\"depth\":2,\"path\":\"client/xpack-transport-client.md\",\"ref\":\"client/xpack-transport-client.md\",\"articles\":[]}]},\"dir\":\"ltr\"},\"config\":{\"gitbook\":\"*\",\"theme\":\"default\",\"variables\":{},\"plugins\":[],\"pluginsConfig\":{\"highlight\":{},\"search\":{},\"lunr\":{\"maxIndexSize\":1000000,\"ignoreSpecialCharacters\":false},\"sharing\":{\"facebook\":true,\"twitter\":true,\"google\":false,\"weibo\":false,\"instapaper\":false,\"vk\":false,\"all\":[\"facebook\",\"google\",\"twitter\",\"weibo\",\"instapaper\"]},\"fontsettings\":{\"theme\":\"white\",\"family\":\"sans\",\"size\":2},\"theme-default\":{\"styles\":{\"website\":\"styles/website.css\",\"pdf\":\"styles/pdf.css\",\"epub\":\"styles/epub.css\",\"mobi\":\"styles/mobi.css\",\"ebook\":\"styles/ebook.css\",\"print\":\"styles/print.css\"},\"showLevel\":false}},\"structure\":{\"langs\":\"LANGS.md\",\"readme\":\"README.md\",\"glossary\":\"GLOSSARY.md\",\"summary\":\"SUMMARY.md\"},\"pdf\":{\"pageNumbers\":true,\"fontSize\":12,\"fontFamily\":\"Arial\",\"paperSize\":\"a4\",\"chapterMark\":\"pagebreak\",\"pageBreaksBefore\":\"/\",\"margin\":{\"right\":62,\"left\":62,\"top\":56,\"bottom\":56}},\"styles\":{\"website\":\"styles/website.css\",\"pdf\":\"styles/pdf.css\",\"epub\":\"styles/epub.css\",\"mobi\":\"styles/mobi.css\",\"ebook\":\"styles/ebook.css\",\"print\":\"styles/print.css\"}},\"file\":{\"path\":\"client/transport-client.md\",\"mtime\":\"2017-11-08T08:17:57.034Z\",\"type\":\"markdown\"},\"gitbook\":{\"version\":\"3.2.3\",\"time\":\"2018-01-29T15:28:32.108Z\"},\"basePath\":\"..\",\"book\":{\"language\":\"\"}}); });"},{"title":"","date":"2018-02-01T07:21:14.222Z","updated":"2018-01-29T15:28:33.697Z","comments":true,"path":"esjava/client/transport-client.html","permalink":"http://test.quanke.name/esjava/client/transport-client.html","excerpt":"","text":"Transport Client不设置集群名称// on startup//此步骤添加IP，至少一个，如果设置了&quot;client.transport.sniff&quot;= true 一个就够了，因为添加了自动嗅探配置TransportClient client = new PreBuiltTransportClient(Settings.EMPTY) .addTransportAddress(new InetSocketTransportAddress(InetAddress.getByName(&quot;host1&quot;), 9300)) .addTransportAddress(new InetSocketTransportAddress(InetAddress.getByName(&quot;host2&quot;), 9300));// on shutdown 关闭clientclient.close(); 设置集群名称Settings settings = Settings.builder() .put(&quot;cluster.name&quot;, &quot;myClusterName&quot;).build(); //设置ES实例的名称TransportClient client = new PreBuiltTransportClient(settings); //自动嗅探整个集群的状态，把集群中其他ES节点的ip添加到本地的客户端列表中//Add transport addresses and do something with the client... 增加自动嗅探配置Settings settings = Settings.builder() .put(&quot;client.transport.sniff&quot;, true).build();TransportClient client = new PreBuiltTransportClient(settings); 其他配置client.transport.ignore_cluster_name //设置 true ，忽略连接节点集群名验证client.transport.ping_timeout //ping一个节点的响应时间 默认5秒client.transport.nodes_sampler_interval //sample/ping 节点的时间间隔，默认是5s 对于ES Client，有两种形式，一个是TransportClient，一个是NodeClient。两个的区别为：TransportClient作为一个外部访问者，通过HTTP去请求ES的集群，对于集群而言，它是一个外部因素。NodeClient顾名思义，是作为ES集群的一个节点，它是ES中的一环，其他的节点对它是感知的，不像TransportClient那样，ES集群对它一无所知。NodeClient通信的性能会更好，但是因为是ES的一环，所以它出问题，也会给ES集群带来问题。NodeClient可以设置不作为数据节点，在elasticsearch.yml中设置，这样就不会在此节点上分配数据。 如果用ES的节点，大家仁者见仁智者见智，各按所需。 实例Settings esSettings = Settings.builder() .put(&quot;cluster.name&quot;, clusterName) //设置ES实例的名称 .put(&quot;client.transport.sniff&quot;, true) //自动嗅探整个集群的状态，把集群中其他ES节点的ip添加到本地的客户端列表中 .build(); client = new PreBuiltTransportClient(esSettings);//初始化client较老版本发生了变化，此方法有几个重载方法，初始化插件等。 //此步骤添加IP，至少一个，其实一个就够了，因为添加了自动嗅探配置 client.addTransportAddress(new InetSocketTransportAddress(InetAddress.getByName(ip), esPort));"},{"title":"","date":"2018-02-01T07:21:14.223Z","updated":"2018-01-29T15:28:34.261Z","comments":true,"path":"esjava/client/xpack-transport-client.html","permalink":"http://test.quanke.name/esjava/client/xpack-transport-client.html","excerpt":"","text":"XPack Transport Client · GitBook Introduction Dependency Client Transport Client XPack Transport Client Document APIs Index API Get API Delete API Delete By Query API Update API Multi Get API Bulk API Using Bulk Processor Search API Using scrolls in Java MultiSearch API Using Aggregations Terminate After Search Template Aggregations Structuring aggregations Metrics aggregations Bucket aggregations Query DSL Match All Query Full text queries Term level queries Compound queries Joining queries Geo queries Specialized queries Span queries Indexed Scripts API Script Language Java API Administration Indices Administration Cluster Administration Published with GitBook XPack Transport Client XPackTransportClient &#x5982;&#x679C; ElasticSearch &#x670D;&#x52A1;&#x5B89;&#x88C5;&#x4E86; x-pack &#x63D2;&#x4EF6;&#xFF0C;&#x9700;&#x8981;PreBuiltXPackTransportClient&#x5B9E;&#x4F8B;&#x624D;&#x80FD;&#x8BBF;&#x95EE; &#x4F7F;&#x7528;Maven&#x7BA1;&#x7406;&#x9879;&#x76EE;&#xFF0C;&#x628A;&#x4E0B;&#x9762;&#x4EE3;&#x7801;&#x589E;&#x52A0;&#x5230;pom.xml; &#x4E00;&#x5B9A;&#x8981;&#x4FEE;&#x6539;&#x9ED8;&#x8BA4;&#x4ED3;&#x5E93;&#x5730;&#x5740;&#x4E3A;https://artifacts.elastic.co/maven &#xFF0C;&#x56E0;&#x4E3A;&#x8FD9;&#x4E2A;&#x5E93;&#x6CA1;&#x6709;&#x4E0A;&#x4F20;&#x5230;Maven&#x4E2D;&#x592E;&#x4ED3;&#x5E93; &lt;project ...&gt; &lt;repositories&gt; &lt;!-- add the elasticsearch repo --&gt; &lt;repository&gt; &lt;id&gt;elasticsearch-releases&lt;/id&gt; &lt;url&gt;https://artifacts.elastic.co/maven&lt;/url&gt; &lt;releases&gt; &lt;enabled&gt;true&lt;/enabled&gt; &lt;/releases&gt; &lt;snapshots&gt; &lt;enabled&gt;false&lt;/enabled&gt; &lt;/snapshots&gt; &lt;/repository&gt; ... &lt;/repositories&gt; ... &lt;dependencies&gt; &lt;!-- add the x-pack jar as a dependency --&gt; &lt;dependency&gt; &lt;groupId&gt;org.elasticsearch.client&lt;/groupId&gt; &lt;artifactId&gt;x-pack-transport&lt;/artifactId&gt; &lt;version&gt;5.6.3&lt;/version&gt; &lt;/dependency&gt; ... &lt;/dependencies&gt; ... &lt;/project&gt; &#x5B9E;&#x4F8B; Settings settings = Settings.builder().put(&quot;cluster.name&quot;, &quot;xxx&quot;) .put(&quot;xpack.security.transport.ssl.enabled&quot;, false) .put(&quot;xpack.security.user&quot;, &quot;xxx:xxx&quot;) .put(&quot;client.transport.sniff&quot;, true).build(); try { client = new PreBuiltXPackTransportClient(settings) .addTransportAddress(new InetSocketTransportAddress(InetAddress.getByName(&quot;xxx.xxx.xxx.xxx&quot;), 9300)) .addTransportAddress(new InetSocketTransportAddress(InetAddress.getByName(&quot;xxx.xxx.xxx.xxx&quot;), 9300)); } catch (UnknownHostException e) { e.printStackTrace(); } &#x66F4;&#x591A;&#x8BF7;&#x6D4F;&#x89C8; dayu-spring-boot-starter &#x5F00;&#x6E90;&#x9879;&#x76EE; results matching \"\" No results matching \"\" var gitbook = gitbook || []; gitbook.push(function() { gitbook.page.hasChanged({\"page\":{\"title\":\"XPack Transport Client\",\"level\":\"1.3.2\",\"depth\":2,\"next\":{\"title\":\"Document APIs\",\"level\":\"1.4\",\"depth\":1,\"path\":\"document-apis.md\",\"ref\":\"document-apis.md\",\"articles\":[{\"title\":\"Index API\",\"level\":\"1.4.1\",\"depth\":2,\"path\":\"document-apis/index-api.md\",\"ref\":\"document-apis/index-api.md\",\"articles\":[]},{\"title\":\"Get API\",\"level\":\"1.4.2\",\"depth\":2,\"path\":\"document-apis/get-api.md\",\"ref\":\"document-apis/get-api.md\",\"articles\":[]},{\"title\":\"Delete API\",\"level\":\"1.4.3\",\"depth\":2,\"path\":\"document-apis/delete-api.md\",\"ref\":\"document-apis/delete-api.md\",\"articles\":[]},{\"title\":\"Delete By Query API\",\"level\":\"1.4.4\",\"depth\":2,\"path\":\"document-apis/delete-by-query-api.md\",\"ref\":\"document-apis/delete-by-query-api.md\",\"articles\":[]},{\"title\":\"Update API\",\"level\":\"1.4.5\",\"depth\":2,\"path\":\"document-apis/update-api.md\",\"ref\":\"document-apis/update-api.md\",\"articles\":[]},{\"title\":\"Multi Get API\",\"level\":\"1.4.6\",\"depth\":2,\"path\":\"document-apis/multi-get-api.md\",\"ref\":\"document-apis/multi-get-api.md\",\"articles\":[]},{\"title\":\"Bulk API\",\"level\":\"1.4.7\",\"depth\":2,\"path\":\"document-apis/bulk-api.md\",\"ref\":\"document-apis/bulk-api.md\",\"articles\":[]},{\"title\":\"Using Bulk Processor\",\"level\":\"1.4.8\",\"depth\":2,\"path\":\"document-apis/using-bulk-processor.md\",\"ref\":\"document-apis/using-bulk-processor.md\",\"articles\":[]}]},\"previous\":{\"title\":\"Transport Client\",\"level\":\"1.3.1\",\"depth\":2,\"path\":\"client/transport-client.md\",\"ref\":\"client/transport-client.md\",\"articles\":[]},\"dir\":\"ltr\"},\"config\":{\"gitbook\":\"*\",\"theme\":\"default\",\"variables\":{},\"plugins\":[],\"pluginsConfig\":{\"highlight\":{},\"search\":{},\"lunr\":{\"maxIndexSize\":1000000,\"ignoreSpecialCharacters\":false},\"sharing\":{\"facebook\":true,\"twitter\":true,\"google\":false,\"weibo\":false,\"instapaper\":false,\"vk\":false,\"all\":[\"facebook\",\"google\",\"twitter\",\"weibo\",\"instapaper\"]},\"fontsettings\":{\"theme\":\"white\",\"family\":\"sans\",\"size\":2},\"theme-default\":{\"styles\":{\"website\":\"styles/website.css\",\"pdf\":\"styles/pdf.css\",\"epub\":\"styles/epub.css\",\"mobi\":\"styles/mobi.css\",\"ebook\":\"styles/ebook.css\",\"print\":\"styles/print.css\"},\"showLevel\":false}},\"structure\":{\"langs\":\"LANGS.md\",\"readme\":\"README.md\",\"glossary\":\"GLOSSARY.md\",\"summary\":\"SUMMARY.md\"},\"pdf\":{\"pageNumbers\":true,\"fontSize\":12,\"fontFamily\":\"Arial\",\"paperSize\":\"a4\",\"chapterMark\":\"pagebreak\",\"pageBreaksBefore\":\"/\",\"margin\":{\"right\":62,\"left\":62,\"top\":56,\"bottom\":56}},\"styles\":{\"website\":\"styles/website.css\",\"pdf\":\"styles/pdf.css\",\"epub\":\"styles/epub.css\",\"mobi\":\"styles/mobi.css\",\"ebook\":\"styles/ebook.css\",\"print\":\"styles/print.css\"}},\"file\":{\"path\":\"client/xpack-transport-client.md\",\"mtime\":\"2017-11-08T08:18:29.667Z\",\"type\":\"markdown\"},\"gitbook\":{\"version\":\"3.2.3\",\"time\":\"2018-01-29T15:28:32.108Z\"},\"basePath\":\"..\",\"book\":{\"language\":\"\"}}); });"},{"title":"","date":"2018-02-01T07:21:14.224Z","updated":"2018-01-29T15:28:33.698Z","comments":true,"path":"esjava/client/xpack-transport-client.html","permalink":"http://test.quanke.name/esjava/client/xpack-transport-client.html","excerpt":"","text":"XPackTransportClient如果 ElasticSearch 服务安装了 x-pack 插件，需要PreBuiltXPackTransportClient实例才能访问 使用Maven管理项目，把下面代码增加到pom.xml; 一定要修改默认仓库地址为https://artifacts.elastic.co/maven ，因为这个库没有上传到Maven中央仓库 &lt;project ...&gt; &lt;repositories&gt; &lt;!-- add the elasticsearch repo --&gt; &lt;repository&gt; &lt;id&gt;elasticsearch-releases&lt;/id&gt; &lt;url&gt;https://artifacts.elastic.co/maven&lt;/url&gt; &lt;releases&gt; &lt;enabled&gt;true&lt;/enabled&gt; &lt;/releases&gt; &lt;snapshots&gt; &lt;enabled&gt;false&lt;/enabled&gt; &lt;/snapshots&gt; &lt;/repository&gt; ... &lt;/repositories&gt; ... &lt;dependencies&gt; &lt;!-- add the x-pack jar as a dependency --&gt; &lt;dependency&gt; &lt;groupId&gt;org.elasticsearch.client&lt;/groupId&gt; &lt;artifactId&gt;x-pack-transport&lt;/artifactId&gt; &lt;version&gt;5.6.3&lt;/version&gt; &lt;/dependency&gt; ... &lt;/dependencies&gt; ... &lt;/project&gt; 实例Settings settings = Settings.builder().put(&quot;cluster.name&quot;, &quot;xxx&quot;) .put(&quot;xpack.security.transport.ssl.enabled&quot;, false) .put(&quot;xpack.security.user&quot;, &quot;xxx:xxx&quot;) .put(&quot;client.transport.sniff&quot;, true).build();try &#123; client = new PreBuiltXPackTransportClient(settings) .addTransportAddress(new InetSocketTransportAddress(InetAddress.getByName(&quot;xxx.xxx.xxx.xxx&quot;), 9300)) .addTransportAddress(new InetSocketTransportAddress(InetAddress.getByName(&quot;xxx.xxx.xxx.xxx&quot;), 9300));&#125; catch (UnknownHostException e) &#123; e.printStackTrace();&#125; 更多请浏览 dayu-spring-boot-starter 开源项目"},{"title":"","date":"2018-02-01T07:21:14.228Z","updated":"2018-01-29T15:28:33.699Z","comments":true,"path":"esjava/document-apis/bulk-api.html","permalink":"http://test.quanke.name/esjava/document-apis/bulk-api.html","excerpt":"","text":"Bulk APIBulk API可以批量插入： import static org.elasticsearch.common.xcontent.XContentFactory.*;BulkRequestBuilder bulkRequest = client.prepareBulk();// either use client#prepare, or use Requests# to directly build index/delete requestsbulkRequest.add(client.prepareIndex(&quot;twitter&quot;, &quot;tweet&quot;, &quot;1&quot;) .setSource(jsonBuilder() .startObject() .field(&quot;user&quot;, &quot;kimchy&quot;) .field(&quot;postDate&quot;, new Date()) .field(&quot;message&quot;, &quot;trying out Elasticsearch&quot;) .endObject() ) );bulkRequest.add(client.prepareIndex(&quot;twitter&quot;, &quot;tweet&quot;, &quot;2&quot;) .setSource(jsonBuilder() .startObject() .field(&quot;user&quot;, &quot;kimchy&quot;) .field(&quot;postDate&quot;, new Date()) .field(&quot;message&quot;, &quot;another post&quot;) .endObject() ) );BulkResponse bulkResponse = bulkRequest.get();if (bulkResponse.hasFailures()) &#123; // process failures by iterating through each bulk response item&#125;"},{"title":"","date":"2018-02-01T07:21:14.227Z","updated":"2018-01-29T15:28:34.859Z","comments":true,"path":"esjava/document-apis/bulk-api.html","permalink":"http://test.quanke.name/esjava/document-apis/bulk-api.html","excerpt":"","text":"Bulk API · GitBook Introduction Dependency Client Transport Client XPack Transport Client Document APIs Index API Get API Delete API Delete By Query API Update API Multi Get API Bulk API Using Bulk Processor Search API Using scrolls in Java MultiSearch API Using Aggregations Terminate After Search Template Aggregations Structuring aggregations Metrics aggregations Bucket aggregations Query DSL Match All Query Full text queries Term level queries Compound queries Joining queries Geo queries Specialized queries Span queries Indexed Scripts API Script Language Java API Administration Indices Administration Cluster Administration Published with GitBook Bulk API Bulk API Bulk API&#x53EF;&#x4EE5;&#x6279;&#x91CF;&#x63D2;&#x5165;&#xFF1A; import static org.elasticsearch.common.xcontent.XContentFactory.*; BulkRequestBuilder bulkRequest = client.prepareBulk(); // either use client#prepare, or use Requests# to directly build index/delete requests bulkRequest.add(client.prepareIndex(&quot;twitter&quot;, &quot;tweet&quot;, &quot;1&quot;) .setSource(jsonBuilder() .startObject() .field(&quot;user&quot;, &quot;kimchy&quot;) .field(&quot;postDate&quot;, new Date()) .field(&quot;message&quot;, &quot;trying out Elasticsearch&quot;) .endObject() ) ); bulkRequest.add(client.prepareIndex(&quot;twitter&quot;, &quot;tweet&quot;, &quot;2&quot;) .setSource(jsonBuilder() .startObject() .field(&quot;user&quot;, &quot;kimchy&quot;) .field(&quot;postDate&quot;, new Date()) .field(&quot;message&quot;, &quot;another post&quot;) .endObject() ) ); BulkResponse bulkResponse = bulkRequest.get(); if (bulkResponse.hasFailures()) { // process failures by iterating through each bulk response item } results matching \"\" No results matching \"\" var gitbook = gitbook || []; gitbook.push(function() { gitbook.page.hasChanged({\"page\":{\"title\":\"Bulk API\",\"level\":\"1.4.7\",\"depth\":2,\"next\":{\"title\":\"Using Bulk Processor\",\"level\":\"1.4.8\",\"depth\":2,\"path\":\"document-apis/using-bulk-processor.md\",\"ref\":\"document-apis/using-bulk-processor.md\",\"articles\":[]},\"previous\":{\"title\":\"Multi Get API\",\"level\":\"1.4.6\",\"depth\":2,\"path\":\"document-apis/multi-get-api.md\",\"ref\":\"document-apis/multi-get-api.md\",\"articles\":[]},\"dir\":\"ltr\"},\"config\":{\"gitbook\":\"*\",\"theme\":\"default\",\"variables\":{},\"plugins\":[],\"pluginsConfig\":{\"highlight\":{},\"search\":{},\"lunr\":{\"maxIndexSize\":1000000,\"ignoreSpecialCharacters\":false},\"sharing\":{\"facebook\":true,\"twitter\":true,\"google\":false,\"weibo\":false,\"instapaper\":false,\"vk\":false,\"all\":[\"facebook\",\"google\",\"twitter\",\"weibo\",\"instapaper\"]},\"fontsettings\":{\"theme\":\"white\",\"family\":\"sans\",\"size\":2},\"theme-default\":{\"styles\":{\"website\":\"styles/website.css\",\"pdf\":\"styles/pdf.css\",\"epub\":\"styles/epub.css\",\"mobi\":\"styles/mobi.css\",\"ebook\":\"styles/ebook.css\",\"print\":\"styles/print.css\"},\"showLevel\":false}},\"structure\":{\"langs\":\"LANGS.md\",\"readme\":\"README.md\",\"glossary\":\"GLOSSARY.md\",\"summary\":\"SUMMARY.md\"},\"pdf\":{\"pageNumbers\":true,\"fontSize\":12,\"fontFamily\":\"Arial\",\"paperSize\":\"a4\",\"chapterMark\":\"pagebreak\",\"pageBreaksBefore\":\"/\",\"margin\":{\"right\":62,\"left\":62,\"top\":56,\"bottom\":56}},\"styles\":{\"website\":\"styles/website.css\",\"pdf\":\"styles/pdf.css\",\"epub\":\"styles/epub.css\",\"mobi\":\"styles/mobi.css\",\"ebook\":\"styles/ebook.css\",\"print\":\"styles/print.css\"}},\"file\":{\"path\":\"document-apis/bulk-api.md\",\"mtime\":\"2017-11-08T08:32:22.736Z\",\"type\":\"markdown\"},\"gitbook\":{\"version\":\"3.2.3\",\"time\":\"2018-01-29T15:28:32.108Z\"},\"basePath\":\"..\",\"book\":{\"language\":\"\"}}); });"},{"title":"","date":"2018-02-01T07:21:14.229Z","updated":"2018-01-29T15:28:34.558Z","comments":true,"path":"esjava/document-apis/delete-api.html","permalink":"http://test.quanke.name/esjava/document-apis/delete-api.html","excerpt":"","text":"Delete API · GitBook Introduction Dependency Client Transport Client XPack Transport Client Document APIs Index API Get API Delete API Delete By Query API Update API Multi Get API Bulk API Using Bulk Processor Search API Using scrolls in Java MultiSearch API Using Aggregations Terminate After Search Template Aggregations Structuring aggregations Metrics aggregations Bucket aggregations Query DSL Match All Query Full text queries Term level queries Compound queries Joining queries Geo queries Specialized queries Span queries Indexed Scripts API Script Language Java API Administration Indices Administration Cluster Administration Published with GitBook Delete API Delete API &#x6839;&#x636E;ID&#x5220;&#x9664;&#xFF1A; DeleteResponse response = client.prepareDelete(&quot;twitter&quot;, &quot;tweet&quot;, &quot;1&quot;).get(); &#x66F4;&#x591A;&#x8BF7;&#x67E5;&#x770B; delete API &#x6587;&#x6863; &#x914D;&#x7F6E;&#x7EBF;&#x7A0B; operationThreaded &#x8BBE;&#x7F6E;&#x4E3A; true &#x662F;&#x5728;&#x4E0D;&#x540C;&#x7684;&#x7EBF;&#x7A0B;&#x91CC;&#x6267;&#x884C;&#x6B64;&#x6B21;&#x64CD;&#x4F5C; &#x4E0B;&#x9762;&#x7684;&#x4F8B;&#x5B50;&#x662F;operationThreaded &#x8BBE;&#x7F6E;&#x4E3A; false &#xFF1A; GetResponse response = client.prepareGet(&quot;twitter&quot;, &quot;tweet&quot;, &quot;1&quot;) .setOperationThreaded(false) .get(); DeleteResponse response = client.prepareDelete(&quot;twitter&quot;, &quot;tweet&quot;, &quot;1&quot;) .setOperationThreaded(false) .get(); results matching \"\" No results matching \"\" var gitbook = gitbook || []; gitbook.push(function() { gitbook.page.hasChanged({\"page\":{\"title\":\"Delete API\",\"level\":\"1.4.3\",\"depth\":2,\"next\":{\"title\":\"Delete By Query API\",\"level\":\"1.4.4\",\"depth\":2,\"path\":\"document-apis/delete-by-query-api.md\",\"ref\":\"document-apis/delete-by-query-api.md\",\"articles\":[]},\"previous\":{\"title\":\"Get API\",\"level\":\"1.4.2\",\"depth\":2,\"path\":\"document-apis/get-api.md\",\"ref\":\"document-apis/get-api.md\",\"articles\":[]},\"dir\":\"ltr\"},\"config\":{\"gitbook\":\"*\",\"theme\":\"default\",\"variables\":{},\"plugins\":[],\"pluginsConfig\":{\"highlight\":{},\"search\":{},\"lunr\":{\"maxIndexSize\":1000000,\"ignoreSpecialCharacters\":false},\"sharing\":{\"facebook\":true,\"twitter\":true,\"google\":false,\"weibo\":false,\"instapaper\":false,\"vk\":false,\"all\":[\"facebook\",\"google\",\"twitter\",\"weibo\",\"instapaper\"]},\"fontsettings\":{\"theme\":\"white\",\"family\":\"sans\",\"size\":2},\"theme-default\":{\"styles\":{\"website\":\"styles/website.css\",\"pdf\":\"styles/pdf.css\",\"epub\":\"styles/epub.css\",\"mobi\":\"styles/mobi.css\",\"ebook\":\"styles/ebook.css\",\"print\":\"styles/print.css\"},\"showLevel\":false}},\"structure\":{\"langs\":\"LANGS.md\",\"readme\":\"README.md\",\"glossary\":\"GLOSSARY.md\",\"summary\":\"SUMMARY.md\"},\"pdf\":{\"pageNumbers\":true,\"fontSize\":12,\"fontFamily\":\"Arial\",\"paperSize\":\"a4\",\"chapterMark\":\"pagebreak\",\"pageBreaksBefore\":\"/\",\"margin\":{\"right\":62,\"left\":62,\"top\":56,\"bottom\":56}},\"styles\":{\"website\":\"styles/website.css\",\"pdf\":\"styles/pdf.css\",\"epub\":\"styles/epub.css\",\"mobi\":\"styles/mobi.css\",\"ebook\":\"styles/ebook.css\",\"print\":\"styles/print.css\"}},\"file\":{\"path\":\"document-apis/delete-api.md\",\"mtime\":\"2017-11-08T08:21:02.672Z\",\"type\":\"markdown\"},\"gitbook\":{\"version\":\"3.2.3\",\"time\":\"2018-01-29T15:28:32.108Z\"},\"basePath\":\"..\",\"book\":{\"language\":\"\"}}); });"},{"title":"","date":"2018-02-01T07:21:14.230Z","updated":"2018-01-29T15:28:33.700Z","comments":true,"path":"esjava/document-apis/delete-api.html","permalink":"http://test.quanke.name/esjava/document-apis/delete-api.html","excerpt":"","text":"Delete API根据ID删除： DeleteResponse response = client.prepareDelete(&quot;twitter&quot;, &quot;tweet&quot;, &quot;1&quot;).get(); 更多请查看 delete API 文档 配置线程operationThreaded 设置为 true 是在不同的线程里执行此次操作 下面的例子是operationThreaded 设置为 false ：GetResponse response = client.prepareGet(&quot;twitter&quot;, &quot;tweet&quot;, &quot;1&quot;) .setOperationThreaded(false) .get(); DeleteResponse response = client.prepareDelete(&quot;twitter&quot;, &quot;tweet&quot;, &quot;1&quot;) .setOperationThreaded(false) .get();"},{"title":"","date":"2018-02-01T07:21:14.231Z","updated":"2018-01-29T15:28:34.627Z","comments":true,"path":"esjava/document-apis/delete-by-query-api.html","permalink":"http://test.quanke.name/esjava/document-apis/delete-by-query-api.html","excerpt":"","text":"Delete By Query API · GitBook Introduction Dependency Client Transport Client XPack Transport Client Document APIs Index API Get API Delete API Delete By Query API Update API Multi Get API Bulk API Using Bulk Processor Search API Using scrolls in Java MultiSearch API Using Aggregations Terminate After Search Template Aggregations Structuring aggregations Metrics aggregations Bucket aggregations Query DSL Match All Query Full text queries Term level queries Compound queries Joining queries Geo queries Specialized queries Span queries Indexed Scripts API Script Language Java API Administration Indices Administration Cluster Administration Published with GitBook Delete By Query API Delete By Query API &#x901A;&#x8FC7;&#x67E5;&#x8BE2;&#x6761;&#x4EF6;&#x5220;&#x9664; BulkByScrollResponse response = DeleteByQueryAction.INSTANCE.newRequestBuilder(client) .filter(QueryBuilders.matchQuery(&quot;gender&quot;, &quot;male&quot;)) //&#x67E5;&#x8BE2;&#x6761;&#x4EF6; .source(&quot;persons&quot;) //index(&#x7D22;&#x5F15;&#x540D;) .get(); //&#x6267;&#x884C; long deleted = response.getDeleted(); //&#x5220;&#x9664;&#x6587;&#x6863;&#x7684;&#x6570;&#x91CF; &#x5982;&#x679C;&#x9700;&#x8981;&#x6267;&#x884C;&#x7684;&#x65F6;&#x95F4;&#x6BD4;&#x8F83;&#x957F;&#xFF0C;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x5F02;&#x6B65;&#x7684;&#x65B9;&#x5F0F;&#x5904;&#x7406;,&#x7ED3;&#x679C;&#x5728;&#x56DE;&#x8C03;&#x91CC;&#x9762;&#x83B7;&#x53D6; DeleteByQueryAction.INSTANCE.newRequestBuilder(client) .filter(QueryBuilders.matchQuery(&quot;gender&quot;, &quot;male&quot;)) //&#x67E5;&#x8BE2; .source(&quot;persons&quot;) //index(&#x7D22;&#x5F15;&#x540D;) .execute(new ActionListener&lt;BulkByScrollResponse&gt;() { //&#x56DE;&#x8C03;&#x76D1;&#x542C; @Override public void onResponse(BulkByScrollResponse response) { long deleted = response.getDeleted(); //&#x5220;&#x9664;&#x6587;&#x6863;&#x7684;&#x6570;&#x91CF; } @Override public void onFailure(Exception e) { // Handle the exception } }); results matching \"\" No results matching \"\" var gitbook = gitbook || []; gitbook.push(function() { gitbook.page.hasChanged({\"page\":{\"title\":\"Delete By Query API\",\"level\":\"1.4.4\",\"depth\":2,\"next\":{\"title\":\"Update API\",\"level\":\"1.4.5\",\"depth\":2,\"path\":\"document-apis/update-api.md\",\"ref\":\"document-apis/update-api.md\",\"articles\":[]},\"previous\":{\"title\":\"Delete API\",\"level\":\"1.4.3\",\"depth\":2,\"path\":\"document-apis/delete-api.md\",\"ref\":\"document-apis/delete-api.md\",\"articles\":[]},\"dir\":\"ltr\"},\"config\":{\"gitbook\":\"*\",\"theme\":\"default\",\"variables\":{},\"plugins\":[],\"pluginsConfig\":{\"highlight\":{},\"search\":{},\"lunr\":{\"maxIndexSize\":1000000,\"ignoreSpecialCharacters\":false},\"sharing\":{\"facebook\":true,\"twitter\":true,\"google\":false,\"weibo\":false,\"instapaper\":false,\"vk\":false,\"all\":[\"facebook\",\"google\",\"twitter\",\"weibo\",\"instapaper\"]},\"fontsettings\":{\"theme\":\"white\",\"family\":\"sans\",\"size\":2},\"theme-default\":{\"styles\":{\"website\":\"styles/website.css\",\"pdf\":\"styles/pdf.css\",\"epub\":\"styles/epub.css\",\"mobi\":\"styles/mobi.css\",\"ebook\":\"styles/ebook.css\",\"print\":\"styles/print.css\"},\"showLevel\":false}},\"structure\":{\"langs\":\"LANGS.md\",\"readme\":\"README.md\",\"glossary\":\"GLOSSARY.md\",\"summary\":\"SUMMARY.md\"},\"pdf\":{\"pageNumbers\":true,\"fontSize\":12,\"fontFamily\":\"Arial\",\"paperSize\":\"a4\",\"chapterMark\":\"pagebreak\",\"pageBreaksBefore\":\"/\",\"margin\":{\"right\":62,\"left\":62,\"top\":56,\"bottom\":56}},\"styles\":{\"website\":\"styles/website.css\",\"pdf\":\"styles/pdf.css\",\"epub\":\"styles/epub.css\",\"mobi\":\"styles/mobi.css\",\"ebook\":\"styles/ebook.css\",\"print\":\"styles/print.css\"}},\"file\":{\"path\":\"document-apis/delete-by-query-api.md\",\"mtime\":\"2017-11-08T08:21:02.675Z\",\"type\":\"markdown\"},\"gitbook\":{\"version\":\"3.2.3\",\"time\":\"2018-01-29T15:28:32.108Z\"},\"basePath\":\"..\",\"book\":{\"language\":\"\"}}); });"},{"title":"","date":"2018-02-01T07:21:14.232Z","updated":"2018-01-29T15:28:33.702Z","comments":true,"path":"esjava/document-apis/delete-by-query-api.html","permalink":"http://test.quanke.name/esjava/document-apis/delete-by-query-api.html","excerpt":"","text":"Delete By Query API通过查询条件删除 BulkByScrollResponse response = DeleteByQueryAction.INSTANCE.newRequestBuilder(client) .filter(QueryBuilders.matchQuery(&quot;gender&quot;, &quot;male&quot;)) //查询条件 .source(&quot;persons&quot;) //index(索引名) .get(); //执行long deleted = response.getDeleted(); //删除文档的数量 如果需要执行的时间比较长，可以使用异步的方式处理,结果在回调里面获取 DeleteByQueryAction.INSTANCE.newRequestBuilder(client) .filter(QueryBuilders.matchQuery(&quot;gender&quot;, &quot;male&quot;)) //查询 .source(&quot;persons&quot;) //index(索引名) .execute(new ActionListener&lt;BulkByScrollResponse&gt;() &#123; //回调监听 @Override public void onResponse(BulkByScrollResponse response) &#123; long deleted = response.getDeleted(); //删除文档的数量 &#125; @Override public void onFailure(Exception e) &#123; // Handle the exception &#125; &#125;);"},{"title":"","date":"2018-02-01T07:21:14.233Z","updated":"2018-01-29T15:28:34.489Z","comments":true,"path":"esjava/document-apis/get-api.html","permalink":"http://test.quanke.name/esjava/document-apis/get-api.html","excerpt":"","text":"Get API · GitBook Introduction Dependency Client Transport Client XPack Transport Client Document APIs Index API Get API Delete API Delete By Query API Update API Multi Get API Bulk API Using Bulk Processor Search API Using scrolls in Java MultiSearch API Using Aggregations Terminate After Search Template Aggregations Structuring aggregations Metrics aggregations Bucket aggregations Query DSL Match All Query Full text queries Term level queries Compound queries Joining queries Geo queries Specialized queries Span queries Indexed Scripts API Script Language Java API Administration Indices Administration Cluster Administration Published with GitBook Get API Get API get api&#x53EF;&#x4EE5;&#x901A;&#x8FC7;id&#x67E5;&#x770B;&#x6587;&#x6863;&#xFF1A; GetResponse response = client.prepareGet(&quot;twitter&quot;, &quot;tweet&quot;, &quot;1&quot;).get(); &#x66F4;&#x591A;&#x8BF7;&#x67E5;&#x770B; rest get API &#x6587;&#x6863; &#x914D;&#x7F6E;&#x7EBF;&#x7A0B; operationThreaded &#x8BBE;&#x7F6E;&#x4E3A; true &#x662F;&#x5728;&#x4E0D;&#x540C;&#x7684;&#x7EBF;&#x7A0B;&#x91CC;&#x6267;&#x884C;&#x6B64;&#x6B21;&#x64CD;&#x4F5C; &#x4E0B;&#x9762;&#x7684;&#x4F8B;&#x5B50;&#x662F;operationThreaded &#x8BBE;&#x7F6E;&#x4E3A; false &#xFF1A; GetResponse response = client.prepareGet(&quot;twitter&quot;, &quot;tweet&quot;, &quot;1&quot;) .setOperationThreaded(false) .get(); results matching \"\" No results matching \"\" var gitbook = gitbook || []; gitbook.push(function() { gitbook.page.hasChanged({\"page\":{\"title\":\"Get API\",\"level\":\"1.4.2\",\"depth\":2,\"next\":{\"title\":\"Delete API\",\"level\":\"1.4.3\",\"depth\":2,\"path\":\"document-apis/delete-api.md\",\"ref\":\"document-apis/delete-api.md\",\"articles\":[]},\"previous\":{\"title\":\"Index API\",\"level\":\"1.4.1\",\"depth\":2,\"path\":\"document-apis/index-api.md\",\"ref\":\"document-apis/index-api.md\",\"articles\":[]},\"dir\":\"ltr\"},\"config\":{\"gitbook\":\"*\",\"theme\":\"default\",\"variables\":{},\"plugins\":[],\"pluginsConfig\":{\"highlight\":{},\"search\":{},\"lunr\":{\"maxIndexSize\":1000000,\"ignoreSpecialCharacters\":false},\"sharing\":{\"facebook\":true,\"twitter\":true,\"google\":false,\"weibo\":false,\"instapaper\":false,\"vk\":false,\"all\":[\"facebook\",\"google\",\"twitter\",\"weibo\",\"instapaper\"]},\"fontsettings\":{\"theme\":\"white\",\"family\":\"sans\",\"size\":2},\"theme-default\":{\"styles\":{\"website\":\"styles/website.css\",\"pdf\":\"styles/pdf.css\",\"epub\":\"styles/epub.css\",\"mobi\":\"styles/mobi.css\",\"ebook\":\"styles/ebook.css\",\"print\":\"styles/print.css\"},\"showLevel\":false}},\"structure\":{\"langs\":\"LANGS.md\",\"readme\":\"README.md\",\"glossary\":\"GLOSSARY.md\",\"summary\":\"SUMMARY.md\"},\"pdf\":{\"pageNumbers\":true,\"fontSize\":12,\"fontFamily\":\"Arial\",\"paperSize\":\"a4\",\"chapterMark\":\"pagebreak\",\"pageBreaksBefore\":\"/\",\"margin\":{\"right\":62,\"left\":62,\"top\":56,\"bottom\":56}},\"styles\":{\"website\":\"styles/website.css\",\"pdf\":\"styles/pdf.css\",\"epub\":\"styles/epub.css\",\"mobi\":\"styles/mobi.css\",\"ebook\":\"styles/ebook.css\",\"print\":\"styles/print.css\"}},\"file\":{\"path\":\"document-apis/get-api.md\",\"mtime\":\"2017-11-08T08:21:02.678Z\",\"type\":\"markdown\"},\"gitbook\":{\"version\":\"3.2.3\",\"time\":\"2018-01-29T15:28:32.108Z\"},\"basePath\":\"..\",\"book\":{\"language\":\"\"}}); });"},{"title":"","date":"2018-02-01T07:21:14.234Z","updated":"2018-01-29T15:28:33.703Z","comments":true,"path":"esjava/document-apis/get-api.html","permalink":"http://test.quanke.name/esjava/document-apis/get-api.html","excerpt":"","text":"Get APIget api可以通过id查看文档： GetResponse response = client.prepareGet(&quot;twitter&quot;, &quot;tweet&quot;, &quot;1&quot;).get(); 更多请查看 rest get API 文档 配置线程operationThreaded 设置为 true 是在不同的线程里执行此次操作 下面的例子是operationThreaded 设置为 false ：GetResponse response = client.prepareGet(&quot;twitter&quot;, &quot;tweet&quot;, &quot;1&quot;) .setOperationThreaded(false) .get();"},{"title":"","date":"2018-02-01T07:21:14.235Z","updated":"2018-01-29T15:28:34.417Z","comments":true,"path":"esjava/document-apis/index-api.html","permalink":"http://test.quanke.name/esjava/document-apis/index-api.html","excerpt":"","text":"Index API · GitBook Introduction Dependency Client Transport Client XPack Transport Client Document APIs Index API Get API Delete API Delete By Query API Update API Multi Get API Bulk API Using Bulk Processor Search API Using scrolls in Java MultiSearch API Using Aggregations Terminate After Search Template Aggregations Structuring aggregations Metrics aggregations Bucket aggregations Query DSL Match All Query Full text queries Term level queries Compound queries Joining queries Geo queries Specialized queries Span queries Indexed Scripts API Script Language Java API Administration Indices Administration Cluster Administration Published with GitBook Index API Index API Index API &#x5141;&#x8BB8;&#x6211;&#x4EEC;&#x5B58;&#x50A8;&#x4E00;&#x4E2A;JSON&#x683C;&#x5F0F;&#x7684;&#x6587;&#x6863;&#xFF0C;&#x4F7F;&#x6570;&#x636E;&#x53EF;&#x4EE5;&#x88AB;&#x641C;&#x7D22;&#x3002;&#x6587;&#x6863;&#x901A;&#x8FC7;index&#x3001;type&#x3001;id&#x552F;&#x4E00;&#x786E;&#x5B9A;&#x3002;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x81EA;&#x5DF1;&#x63D0;&#x4F9B;&#x4E00;&#x4E2A;id&#xFF0C;&#x6216;&#x8005;&#x4E5F;&#x4F7F;&#x7528;Index API &#x4E3A;&#x6211;&#x4EEC;&#x81EA;&#x52A8;&#x751F;&#x6210;&#x4E00;&#x4E2A;&#x3002; &#x8FD9;&#x91CC;&#x6709;&#x51E0;&#x79CD;&#x4E0D;&#x540C;&#x7684;&#x65B9;&#x5F0F;&#x6765;&#x4EA7;&#x751F;JSON&#x683C;&#x5F0F;&#x7684;&#x6587;&#x6863;(document)&#xFF1A; &#x624B;&#x52A8;&#x65B9;&#x5F0F;&#xFF0C;&#x4F7F;&#x7528;&#x539F;&#x751F;&#x7684;byte[]&#x6216;&#x8005;String &#x4F7F;&#x7528;Map&#x65B9;&#x5F0F;&#xFF0C;&#x4F1A;&#x81EA;&#x52A8;&#x8F6C;&#x6362;&#x6210;&#x4E0E;&#x4E4B;&#x7B49;&#x4EF7;&#x7684;JSON &#x4F7F;&#x7528;&#x7B2C;&#x4E09;&#x65B9;&#x5E93;&#x6765;&#x5E8F;&#x5217;&#x5316;beans&#xFF0C;&#x5982;Jackson &#x4F7F;&#x7528;&#x5185;&#x7F6E;&#x7684;&#x5E2E;&#x52A9;&#x7C7B; XContentFactory.jsonBuilder() &#x624B;&#x52A8;&#x65B9;&#x5F0F; &#x6570;&#x636E;&#x683C;&#x5F0F; String json = &quot;{&quot; + &quot;\\&quot;user\\&quot;:\\&quot;kimchy\\&quot;,&quot; + &quot;\\&quot;postDate\\&quot;:\\&quot;2013-01-30\\&quot;,&quot; + &quot;\\&quot;message\\&quot;:\\&quot;trying out Elasticsearch\\&quot;&quot; + &quot;}&quot;; &#x5B9E;&#x4F8B; /** * &#x624B;&#x52A8;&#x751F;&#x6210;JSON */ @Test public void CreateJSON(){ String json = &quot;{&quot; + &quot;\\&quot;user\\&quot;:\\&quot;fendo\\&quot;,&quot; + &quot;\\&quot;postDate\\&quot;:\\&quot;2013-01-30\\&quot;,&quot; + &quot;\\&quot;message\\&quot;:\\&quot;Hell word\\&quot;&quot; + &quot;}&quot;; IndexResponse response = client.prepareIndex(&quot;fendo&quot;, &quot;fendodate&quot;) .setSource(json) .get(); System.out.println(response.getResult()); } Map&#x65B9;&#x5F0F; Map&#x662F;key:value&#x6570;&#x636E;&#x7C7B;&#x578B;&#xFF0C;&#x53EF;&#x4EE5;&#x4EE3;&#x8868;json&#x7ED3;&#x6784;. Map&lt;String, Object&gt; json = new HashMap&lt;String, Object&gt;(); json.put(&quot;user&quot;,&quot;kimchy&quot;); json.put(&quot;postDate&quot;,new Date()); json.put(&quot;message&quot;,&quot;trying out Elasticsearch&quot;); &#x5B9E;&#x4F8B; /** * &#x4F7F;&#x7528;&#x96C6;&#x5408; */ @Test public void CreateList(){ Map&lt;String, Object&gt; json = new HashMap&lt;String, Object&gt;(); json.put(&quot;user&quot;,&quot;kimchy&quot;); json.put(&quot;postDate&quot;,&quot;2013-01-30&quot;); json.put(&quot;message&quot;,&quot;trying out Elasticsearch&quot;); IndexResponse response = client.prepareIndex(&quot;fendo&quot;, &quot;fendodate&quot;) .setSource(json) .get(); System.out.println(response.getResult()); } &#x5E8F;&#x5217;&#x5316;&#x65B9;&#x5F0F; ElasticSearch&#x5DF2;&#x7ECF;&#x4F7F;&#x7528;&#x4E86;jackson&#xFF0C;&#x53EF;&#x4EE5;&#x76F4;&#x63A5;&#x4F7F;&#x7528;&#x5B83;&#x628A;javabean&#x8F6C;&#x4E3A;json. import com.fasterxml.jackson.databind.*; // instance a json mapper ObjectMapper mapper = new ObjectMapper(); // create once, reuse // generate json byte[] json = mapper.writeValueAsBytes(yourbeaninstance); &#x5B9E;&#x4F8B; /** * &#x4F7F;&#x7528;JACKSON&#x5E8F;&#x5217;&#x5316; * @throws Exception */ @Test public void CreateJACKSON() throws Exception{ CsdnBlog csdn=new CsdnBlog(); csdn.setAuthor(&quot;fendo&quot;); csdn.setContent(&quot;&#x8FD9;&#x662F;JAVA&#x4E66;&#x7C4D;&quot;); csdn.setTag(&quot;C&quot;); csdn.setView(&quot;100&quot;); csdn.setTitile(&quot;&#x7F16;&#x7A0B;&quot;); csdn.setDate(new Date().toString()); // instance a json mapper ObjectMapper mapper = new ObjectMapper(); // create once, reuse // generate json byte[] json = mapper.writeValueAsBytes(csdn); IndexResponse response = client.prepareIndex(&quot;fendo&quot;, &quot;fendodate&quot;) .setSource(json) .get(); System.out.println(response.getResult()); } XContentBuilder&#x5E2E;&#x52A9;&#x7C7B;&#x65B9;&#x5F0F; ElasticSearch&#x63D0;&#x4F9B;&#x4E86;&#x4E00;&#x4E2A;&#x5185;&#x7F6E;&#x7684;&#x5E2E;&#x52A9;&#x7C7B;XContentBuilder&#x6765;&#x4EA7;&#x751F;JSON&#x6587;&#x6863; // Index name String _index = response.getIndex(); // Type name String _type = response.getType(); // Document ID (generated or not) String _id = response.getId(); // Version (if it&apos;s the first time you index this document, you will get: 1) long _version = response.getVersion(); // status has stored current instance statement. RestStatus status = response.status(); &#x5B9E;&#x4F8B; /** * &#x4F7F;&#x7528;ElasticSearch &#x5E2E;&#x52A9;&#x7C7B; * @throws IOException */ @Test public void CreateXContentBuilder() throws IOException{ XContentBuilder builder = XContentFactory.jsonBuilder() .startObject() .field(&quot;user&quot;, &quot;ccse&quot;) .field(&quot;postDate&quot;, new Date()) .field(&quot;message&quot;, &quot;this is Elasticsearch&quot;) .endObject(); IndexResponse response = client.prepareIndex(&quot;fendo&quot;, &quot;fendodata&quot;).setSource(builder).get(); System.out.println(&quot;&#x521B;&#x5EFA;&#x6210;&#x529F;!&quot;); } &#x7EFC;&#x5408;&#x5B9E;&#x4F8B; import java.io.IOException; import java.net.InetAddress; import java.net.UnknownHostException; import java.util.Date; import java.util.HashMap; import java.util.Map; import org.elasticsearch.action.index.IndexResponse; import org.elasticsearch.client.transport.TransportClient; import org.elasticsearch.common.settings.Settings; import org.elasticsearch.common.transport.InetSocketTransportAddress; import org.elasticsearch.common.xcontent.XContentBuilder; import org.elasticsearch.common.xcontent.XContentFactory; import org.elasticsearch.transport.client.PreBuiltTransportClient; import org.junit.Before; import org.junit.Test; import com.fasterxml.jackson.core.JsonProcessingException; import com.fasterxml.jackson.databind.ObjectMapper; public class CreateIndex { private TransportClient client; @Before public void getClient() throws Exception{ //&#x8BBE;&#x7F6E;&#x96C6;&#x7FA4;&#x540D;&#x79F0; Settings settings = Settings.builder().put(&quot;cluster.name&quot;, &quot;my-application&quot;).build();// &#x96C6;&#x7FA4;&#x540D; //&#x521B;&#x5EFA;client client = new PreBuiltTransportClient(settings) .addTransportAddress(new InetSocketTransportAddress(InetAddress.getByName(&quot;127.0.0.1&quot;), 9300)); } /** * &#x624B;&#x52A8;&#x751F;&#x6210;JSON */ @Test public void CreateJSON(){ String json = &quot;{&quot; + &quot;\\&quot;user\\&quot;:\\&quot;fendo\\&quot;,&quot; + &quot;\\&quot;postDate\\&quot;:\\&quot;2013-01-30\\&quot;,&quot; + &quot;\\&quot;message\\&quot;:\\&quot;Hell word\\&quot;&quot; + &quot;}&quot;; IndexResponse response = client.prepareIndex(&quot;fendo&quot;, &quot;fendodate&quot;) .setSource(json) .get(); System.out.println(response.getResult()); } /** * &#x4F7F;&#x7528;&#x96C6;&#x5408; */ @Test public void CreateList(){ Map&lt;String, Object&gt; json = new HashMap&lt;String, Object&gt;(); json.put(&quot;user&quot;,&quot;kimchy&quot;); json.put(&quot;postDate&quot;,&quot;2013-01-30&quot;); json.put(&quot;message&quot;,&quot;trying out Elasticsearch&quot;); IndexResponse response = client.prepareIndex(&quot;fendo&quot;, &quot;fendodate&quot;) .setSource(json) .get(); System.out.println(response.getResult()); } /** * &#x4F7F;&#x7528;JACKSON&#x5E8F;&#x5217;&#x5316; * @throws Exception */ @Test public void CreateJACKSON() throws Exception{ CsdnBlog csdn=new CsdnBlog(); csdn.setAuthor(&quot;fendo&quot;); csdn.setContent(&quot;&#x8FD9;&#x662F;JAVA&#x4E66;&#x7C4D;&quot;); csdn.setTag(&quot;C&quot;); csdn.setView(&quot;100&quot;); csdn.setTitile(&quot;&#x7F16;&#x7A0B;&quot;); csdn.setDate(new Date().toString()); // instance a json mapper ObjectMapper mapper = new ObjectMapper(); // create once, reuse // generate json byte[] json = mapper.writeValueAsBytes(csdn); IndexResponse response = client.prepareIndex(&quot;fendo&quot;, &quot;fendodate&quot;) .setSource(json) .get(); System.out.println(response.getResult()); } /** * &#x4F7F;&#x7528;ElasticSearch &#x5E2E;&#x52A9;&#x7C7B; * @throws IOException */ @Test public void CreateXContentBuilder() throws IOException{ XContentBuilder builder = XContentFactory.jsonBuilder() .startObject() .field(&quot;user&quot;, &quot;ccse&quot;) .field(&quot;postDate&quot;, new Date()) .field(&quot;message&quot;, &quot;this is Elasticsearch&quot;) .endObject(); IndexResponse response = client.prepareIndex(&quot;fendo&quot;, &quot;fendodata&quot;).setSource(builder).get(); System.out.println(&quot;&#x521B;&#x5EFA;&#x6210;&#x529F;!&quot;); } } &#x4F60;&#x8FD8;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;startArray(string)&#x548C;endArray()&#x65B9;&#x6CD5;&#x6DFB;&#x52A0;&#x6570;&#x7EC4;&#x3002;.field()&#x65B9;&#x6CD5;&#x53EF;&#x4EE5;&#x63A5;&#x53D7;&#x591A;&#x79CD;&#x5BF9;&#x8C61;&#x7C7B;&#x578B;&#x3002;&#x4F60;&#x53EF;&#x4EE5;&#x7ED9;&#x5B83;&#x4F20;&#x9012;&#x6570;&#x5B57;&#x3001;&#x65E5;&#x671F;&#x3001;&#x751A;&#x81F3;&#x5176;&#x4ED6;XContentBuilder&#x5BF9;&#x8C61;&#x3002; results matching \"\" No results matching \"\" var gitbook = gitbook || []; gitbook.push(function() { gitbook.page.hasChanged({\"page\":{\"title\":\"Index API\",\"level\":\"1.4.1\",\"depth\":2,\"next\":{\"title\":\"Get API\",\"level\":\"1.4.2\",\"depth\":2,\"path\":\"document-apis/get-api.md\",\"ref\":\"document-apis/get-api.md\",\"articles\":[]},\"previous\":{\"title\":\"Document APIs\",\"level\":\"1.4\",\"depth\":1,\"path\":\"document-apis.md\",\"ref\":\"document-apis.md\",\"articles\":[{\"title\":\"Index API\",\"level\":\"1.4.1\",\"depth\":2,\"path\":\"document-apis/index-api.md\",\"ref\":\"document-apis/index-api.md\",\"articles\":[]},{\"title\":\"Get API\",\"level\":\"1.4.2\",\"depth\":2,\"path\":\"document-apis/get-api.md\",\"ref\":\"document-apis/get-api.md\",\"articles\":[]},{\"title\":\"Delete API\",\"level\":\"1.4.3\",\"depth\":2,\"path\":\"document-apis/delete-api.md\",\"ref\":\"document-apis/delete-api.md\",\"articles\":[]},{\"title\":\"Delete By Query API\",\"level\":\"1.4.4\",\"depth\":2,\"path\":\"document-apis/delete-by-query-api.md\",\"ref\":\"document-apis/delete-by-query-api.md\",\"articles\":[]},{\"title\":\"Update API\",\"level\":\"1.4.5\",\"depth\":2,\"path\":\"document-apis/update-api.md\",\"ref\":\"document-apis/update-api.md\",\"articles\":[]},{\"title\":\"Multi Get API\",\"level\":\"1.4.6\",\"depth\":2,\"path\":\"document-apis/multi-get-api.md\",\"ref\":\"document-apis/multi-get-api.md\",\"articles\":[]},{\"title\":\"Bulk API\",\"level\":\"1.4.7\",\"depth\":2,\"path\":\"document-apis/bulk-api.md\",\"ref\":\"document-apis/bulk-api.md\",\"articles\":[]},{\"title\":\"Using Bulk Processor\",\"level\":\"1.4.8\",\"depth\":2,\"path\":\"document-apis/using-bulk-processor.md\",\"ref\":\"document-apis/using-bulk-processor.md\",\"articles\":[]}]},\"dir\":\"ltr\"},\"config\":{\"gitbook\":\"*\",\"theme\":\"default\",\"variables\":{},\"plugins\":[],\"pluginsConfig\":{\"highlight\":{},\"search\":{},\"lunr\":{\"maxIndexSize\":1000000,\"ignoreSpecialCharacters\":false},\"sharing\":{\"facebook\":true,\"twitter\":true,\"google\":false,\"weibo\":false,\"instapaper\":false,\"vk\":false,\"all\":[\"facebook\",\"google\",\"twitter\",\"weibo\",\"instapaper\"]},\"fontsettings\":{\"theme\":\"white\",\"family\":\"sans\",\"size\":2},\"theme-default\":{\"styles\":{\"website\":\"styles/website.css\",\"pdf\":\"styles/pdf.css\",\"epub\":\"styles/epub.css\",\"mobi\":\"styles/mobi.css\",\"ebook\":\"styles/ebook.css\",\"print\":\"styles/print.css\"},\"showLevel\":false}},\"structure\":{\"langs\":\"LANGS.md\",\"readme\":\"README.md\",\"glossary\":\"GLOSSARY.md\",\"summary\":\"SUMMARY.md\"},\"pdf\":{\"pageNumbers\":true,\"fontSize\":12,\"fontFamily\":\"Arial\",\"paperSize\":\"a4\",\"chapterMark\":\"pagebreak\",\"pageBreaksBefore\":\"/\",\"margin\":{\"right\":62,\"left\":62,\"top\":56,\"bottom\":56}},\"styles\":{\"website\":\"styles/website.css\",\"pdf\":\"styles/pdf.css\",\"epub\":\"styles/epub.css\",\"mobi\":\"styles/mobi.css\",\"ebook\":\"styles/ebook.css\",\"print\":\"styles/print.css\"}},\"file\":{\"path\":\"document-apis/index-api.md\",\"mtime\":\"2017-11-08T08:21:02.682Z\",\"type\":\"markdown\"},\"gitbook\":{\"version\":\"3.2.3\",\"time\":\"2018-01-29T15:28:32.108Z\"},\"basePath\":\"..\",\"book\":{\"language\":\"\"}}); });"},{"title":"","date":"2018-02-01T07:21:14.237Z","updated":"2018-01-29T15:28:33.706Z","comments":true,"path":"esjava/document-apis/multi-get-api.html","permalink":"http://test.quanke.name/esjava/document-apis/multi-get-api.html","excerpt":"","text":"Multi Get API一次获取多个文档 MultiGetResponse multiGetItemResponses = client.prepareMultiGet() .add(&quot;twitter&quot;, &quot;tweet&quot;, &quot;1&quot;) //一个id的方式 .add(&quot;twitter&quot;, &quot;tweet&quot;, &quot;2&quot;, &quot;3&quot;, &quot;4&quot;) //多个id的方式 .add(&quot;another&quot;, &quot;type&quot;, &quot;foo&quot;) //可以从另外一个索引获取 .get();for (MultiGetItemResponse itemResponse : multiGetItemResponses) &#123; //迭代返回值 GetResponse response = itemResponse.getResponse(); if (response.isExists()) &#123; //判断是否存在 String json = response.getSourceAsString(); //_source 字段 &#125;&#125; 更多请浏览REST multi get 文档"},{"title":"","date":"2018-02-01T07:21:14.235Z","updated":"2018-01-29T15:28:33.705Z","comments":true,"path":"esjava/document-apis/index-api.html","permalink":"http://test.quanke.name/esjava/document-apis/index-api.html","excerpt":"","text":"Index APIIndex API 允许我们存储一个JSON格式的文档，使数据可以被搜索。文档通过index、type、id唯一确定。我们可以自己提供一个id，或者也使用Index API 为我们自动生成一个。 这里有几种不同的方式来产生JSON格式的文档(document)： 手动方式，使用原生的byte[]或者String 使用Map方式，会自动转换成与之等价的JSON 使用第三方库来序列化beans，如Jackson 使用内置的帮助类 XContentFactory.jsonBuilder() 手动方式数据格式String json = &quot;&#123;&quot; + &quot;\\&quot;user\\&quot;:\\&quot;kimchy\\&quot;,&quot; + &quot;\\&quot;postDate\\&quot;:\\&quot;2013-01-30\\&quot;,&quot; + &quot;\\&quot;message\\&quot;:\\&quot;trying out Elasticsearch\\&quot;&quot; + &quot;&#125;&quot;; 实例/** * 手动生成JSON */ @Test public void CreateJSON()&#123; String json = &quot;&#123;&quot; + &quot;\\&quot;user\\&quot;:\\&quot;fendo\\&quot;,&quot; + &quot;\\&quot;postDate\\&quot;:\\&quot;2013-01-30\\&quot;,&quot; + &quot;\\&quot;message\\&quot;:\\&quot;Hell word\\&quot;&quot; + &quot;&#125;&quot;; IndexResponse response = client.prepareIndex(&quot;fendo&quot;, &quot;fendodate&quot;) .setSource(json) .get(); System.out.println(response.getResult()); &#125; Map方式Map是key:value数据类型，可以代表json结构. Map&lt;String, Object&gt; json = new HashMap&lt;String, Object&gt;();json.put(&quot;user&quot;,&quot;kimchy&quot;);json.put(&quot;postDate&quot;,new Date());json.put(&quot;message&quot;,&quot;trying out Elasticsearch&quot;); 实例 /** * 使用集合 */ @Test public void CreateList()&#123; Map&lt;String, Object&gt; json = new HashMap&lt;String, Object&gt;(); json.put(&quot;user&quot;,&quot;kimchy&quot;); json.put(&quot;postDate&quot;,&quot;2013-01-30&quot;); json.put(&quot;message&quot;,&quot;trying out Elasticsearch&quot;); IndexResponse response = client.prepareIndex(&quot;fendo&quot;, &quot;fendodate&quot;) .setSource(json) .get(); System.out.println(response.getResult()); &#125; 序列化方式ElasticSearch已经使用了jackson，可以直接使用它把javabean转为json. import com.fasterxml.jackson.databind.*;// instance a json mapperObjectMapper mapper = new ObjectMapper(); // create once, reuse// generate jsonbyte[] json = mapper.writeValueAsBytes(yourbeaninstance); 实例/** * 使用JACKSON序列化 * @throws Exception */ @Test public void CreateJACKSON() throws Exception&#123; CsdnBlog csdn=new CsdnBlog(); csdn.setAuthor(&quot;fendo&quot;); csdn.setContent(&quot;这是JAVA书籍&quot;); csdn.setTag(&quot;C&quot;); csdn.setView(&quot;100&quot;); csdn.setTitile(&quot;编程&quot;); csdn.setDate(new Date().toString()); // instance a json mapper ObjectMapper mapper = new ObjectMapper(); // create once, reuse // generate json byte[] json = mapper.writeValueAsBytes(csdn); IndexResponse response = client.prepareIndex(&quot;fendo&quot;, &quot;fendodate&quot;) .setSource(json) .get(); System.out.println(response.getResult()); &#125; XContentBuilder帮助类方式ElasticSearch提供了一个内置的帮助类XContentBuilder来产生JSON文档 // Index nameString _index = response.getIndex();// Type nameString _type = response.getType();// Document ID (generated or not)String _id = response.getId();// Version (if it&apos;s the first time you index this document, you will get: 1)long _version = response.getVersion();// status has stored current instance statement.RestStatus status = response.status(); 实例/** * 使用ElasticSearch 帮助类 * @throws IOException */ @Test public void CreateXContentBuilder() throws IOException&#123; XContentBuilder builder = XContentFactory.jsonBuilder() .startObject() .field(&quot;user&quot;, &quot;ccse&quot;) .field(&quot;postDate&quot;, new Date()) .field(&quot;message&quot;, &quot;this is Elasticsearch&quot;) .endObject(); IndexResponse response = client.prepareIndex(&quot;fendo&quot;, &quot;fendodata&quot;).setSource(builder).get(); System.out.println(&quot;创建成功!&quot;); &#125; 综合实例 import java.io.IOException; import java.net.InetAddress; import java.net.UnknownHostException; import java.util.Date; import java.util.HashMap; import java.util.Map; import org.elasticsearch.action.index.IndexResponse; import org.elasticsearch.client.transport.TransportClient; import org.elasticsearch.common.settings.Settings; import org.elasticsearch.common.transport.InetSocketTransportAddress; import org.elasticsearch.common.xcontent.XContentBuilder; import org.elasticsearch.common.xcontent.XContentFactory; import org.elasticsearch.transport.client.PreBuiltTransportClient; import org.junit.Before; import org.junit.Test; import com.fasterxml.jackson.core.JsonProcessingException; import com.fasterxml.jackson.databind.ObjectMapper; public class CreateIndex &#123; private TransportClient client; @Before public void getClient() throws Exception&#123; //设置集群名称 Settings settings = Settings.builder().put(&quot;cluster.name&quot;, &quot;my-application&quot;).build();// 集群名 //创建client client = new PreBuiltTransportClient(settings) .addTransportAddress(new InetSocketTransportAddress(InetAddress.getByName(&quot;127.0.0.1&quot;), 9300)); &#125; /** * 手动生成JSON */ @Test public void CreateJSON()&#123; String json = &quot;&#123;&quot; + &quot;\\&quot;user\\&quot;:\\&quot;fendo\\&quot;,&quot; + &quot;\\&quot;postDate\\&quot;:\\&quot;2013-01-30\\&quot;,&quot; + &quot;\\&quot;message\\&quot;:\\&quot;Hell word\\&quot;&quot; + &quot;&#125;&quot;; IndexResponse response = client.prepareIndex(&quot;fendo&quot;, &quot;fendodate&quot;) .setSource(json) .get(); System.out.println(response.getResult()); &#125; /** * 使用集合 */ @Test public void CreateList()&#123; Map&lt;String, Object&gt; json = new HashMap&lt;String, Object&gt;(); json.put(&quot;user&quot;,&quot;kimchy&quot;); json.put(&quot;postDate&quot;,&quot;2013-01-30&quot;); json.put(&quot;message&quot;,&quot;trying out Elasticsearch&quot;); IndexResponse response = client.prepareIndex(&quot;fendo&quot;, &quot;fendodate&quot;) .setSource(json) .get(); System.out.println(response.getResult()); &#125; /** * 使用JACKSON序列化 * @throws Exception */ @Test public void CreateJACKSON() throws Exception&#123; CsdnBlog csdn=new CsdnBlog(); csdn.setAuthor(&quot;fendo&quot;); csdn.setContent(&quot;这是JAVA书籍&quot;); csdn.setTag(&quot;C&quot;); csdn.setView(&quot;100&quot;); csdn.setTitile(&quot;编程&quot;); csdn.setDate(new Date().toString()); // instance a json mapper ObjectMapper mapper = new ObjectMapper(); // create once, reuse // generate json byte[] json = mapper.writeValueAsBytes(csdn); IndexResponse response = client.prepareIndex(&quot;fendo&quot;, &quot;fendodate&quot;) .setSource(json) .get(); System.out.println(response.getResult()); &#125; /** * 使用ElasticSearch 帮助类 * @throws IOException */ @Test public void CreateXContentBuilder() throws IOException&#123; XContentBuilder builder = XContentFactory.jsonBuilder() .startObject() .field(&quot;user&quot;, &quot;ccse&quot;) .field(&quot;postDate&quot;, new Date()) .field(&quot;message&quot;, &quot;this is Elasticsearch&quot;) .endObject(); IndexResponse response = client.prepareIndex(&quot;fendo&quot;, &quot;fendodata&quot;).setSource(builder).get(); System.out.println(&quot;创建成功!&quot;); &#125; &#125; 你还可以通过startArray(string)和endArray()方法添加数组。.field()方法可以接受多种对象类型。你可以给它传递数字、日期、甚至其他XContentBuilder对象。"},{"title":"","date":"2018-02-01T07:21:14.238Z","updated":"2018-01-29T15:28:34.714Z","comments":true,"path":"esjava/document-apis/update-api.html","permalink":"http://test.quanke.name/esjava/document-apis/update-api.html","excerpt":"","text":"Update API · GitBook Introduction Dependency Client Transport Client XPack Transport Client Document APIs Index API Get API Delete API Delete By Query API Update API Multi Get API Bulk API Using Bulk Processor Search API Using scrolls in Java MultiSearch API Using Aggregations Terminate After Search Template Aggregations Structuring aggregations Metrics aggregations Bucket aggregations Query DSL Match All Query Full text queries Term level queries Compound queries Joining queries Geo queries Specialized queries Span queries Indexed Scripts API Script Language Java API Administration Indices Administration Cluster Administration Published with GitBook Update API Update API &#x66F4;&#x65B0;&#x7D22;&#x5F15; &#x6709;&#x4E24;&#x79CD;&#x65B9;&#x5F0F;&#x66F4;&#x65B0;&#x7D22;&#x5F15;&#xFF1A; &#x521B;&#x5EFA; UpdateRequest,&#x901A;&#x8FC7;client&#x53D1;&#x9001;&#xFF1B; &#x4F7F;&#x7528; prepareUpdate() &#x65B9;&#x6CD5;&#xFF1B; &#x4F7F;&#x7528;UpdateRequest UpdateRequest updateRequest = new UpdateRequest(); updateRequest.index(&quot;index&quot;); updateRequest.type(&quot;type&quot;); updateRequest.id(&quot;1&quot;); updateRequest.doc(jsonBuilder() .startObject() .field(&quot;gender&quot;, &quot;male&quot;) .endObject()); client.update(updateRequest).get(); &#x4F7F;&#x7528; prepareUpdate() &#x65B9;&#x6CD5; client.prepareUpdate(&quot;ttl&quot;, &quot;doc&quot;, &quot;1&quot;) .setScript(new Script(&quot;ctx._source.gender = \\&quot;male\\&quot;&quot; ,ScriptService.ScriptType.INLINE, null, null))//&#x811A;&#x672C;&#x53EF;&#x4EE5;&#x662F;&#x672C;&#x5730;&#x6587;&#x4EF6;&#x5B58;&#x50A8;&#x7684;&#xFF0C;&#x5982;&#x679C;&#x4F7F;&#x7528;&#x6587;&#x4EF6;&#x5B58;&#x50A8;&#x7684;&#x811A;&#x672C;&#xFF0C;&#x9700;&#x8981;&#x8BBE;&#x7F6E; ScriptService.ScriptType.FILE .get(); client.prepareUpdate(&quot;ttl&quot;, &quot;doc&quot;, &quot;1&quot;) .setDoc(jsonBuilder() //&#x5408;&#x5E76;&#x5230;&#x73B0;&#x6709;&#x6587;&#x6863; .startObject() .field(&quot;gender&quot;, &quot;male&quot;) .endObject()) .get(); Update by script &#x4F7F;&#x7528;&#x811A;&#x672C;&#x66F4;&#x65B0;&#x6587;&#x6863; UpdateRequest updateRequest = new UpdateRequest(&quot;ttl&quot;, &quot;doc&quot;, &quot;1&quot;) .script(new Script(&quot;ctx._source.gender = \\&quot;male\\&quot;&quot;)); client.update(updateRequest).get(); Update by merging documents &#x5408;&#x5E76;&#x6587;&#x6863; UpdateRequest updateRequest = new UpdateRequest(&quot;index&quot;, &quot;type&quot;, &quot;1&quot;) .doc(jsonBuilder() .startObject() .field(&quot;gender&quot;, &quot;male&quot;) .endObject()); client.update(updateRequest).get(); Upsert &#x66F4;&#x65B0;&#x63D2;&#x5165;,&#x5982;&#x679C;&#x5B58;&#x5728;&#x6587;&#x6863;&#x5C31;&#x66F4;&#x65B0;&#xFF0C;&#x5982;&#x679C;&#x4E0D;&#x5B58;&#x5728;&#x5C31;&#x63D2;&#x5165; IndexRequest indexRequest = new IndexRequest(&quot;index&quot;, &quot;type&quot;, &quot;1&quot;) .source(jsonBuilder() .startObject() .field(&quot;name&quot;, &quot;Joe Smith&quot;) .field(&quot;gender&quot;, &quot;male&quot;) .endObject()); UpdateRequest updateRequest = new UpdateRequest(&quot;index&quot;, &quot;type&quot;, &quot;1&quot;) .doc(jsonBuilder() .startObject() .field(&quot;gender&quot;, &quot;male&quot;) .endObject()) .upsert(indexRequest); //&#x5982;&#x679C;&#x4E0D;&#x5B58;&#x5728;&#x6B64;&#x6587;&#x6863; &#xFF0C;&#x5C31;&#x589E;&#x52A0; `indexRequest` client.update(updateRequest).get(); &#x5982;&#x679C; index/type/1 &#x5B58;&#x5728;&#xFF0C;&#x7C7B;&#x4F3C;&#x4E0B;&#x9762;&#x7684;&#x6587;&#x6863;&#xFF1A; { &quot;name&quot; : &quot;Joe Dalton&quot;, &quot;gender&quot;: &quot;male&quot; } &#x5982;&#x679C;&#x4E0D;&#x5B58;&#x5728;&#xFF0C;&#x4F1A;&#x63D2;&#x5165;&#x65B0;&#x7684;&#x6587;&#x6863;&#xFF1A; { &quot;name&quot; : &quot;Joe Smith&quot;, &quot;gender&quot;: &quot;male&quot; } results matching \"\" No results matching \"\" var gitbook = gitbook || []; gitbook.push(function() { gitbook.page.hasChanged({\"page\":{\"title\":\"Update API\",\"level\":\"1.4.5\",\"depth\":2,\"next\":{\"title\":\"Multi Get API\",\"level\":\"1.4.6\",\"depth\":2,\"path\":\"document-apis/multi-get-api.md\",\"ref\":\"document-apis/multi-get-api.md\",\"articles\":[]},\"previous\":{\"title\":\"Delete By Query API\",\"level\":\"1.4.4\",\"depth\":2,\"path\":\"document-apis/delete-by-query-api.md\",\"ref\":\"document-apis/delete-by-query-api.md\",\"articles\":[]},\"dir\":\"ltr\"},\"config\":{\"gitbook\":\"*\",\"theme\":\"default\",\"variables\":{},\"plugins\":[],\"pluginsConfig\":{\"highlight\":{},\"search\":{},\"lunr\":{\"maxIndexSize\":1000000,\"ignoreSpecialCharacters\":false},\"sharing\":{\"facebook\":true,\"twitter\":true,\"google\":false,\"weibo\":false,\"instapaper\":false,\"vk\":false,\"all\":[\"facebook\",\"google\",\"twitter\",\"weibo\",\"instapaper\"]},\"fontsettings\":{\"theme\":\"white\",\"family\":\"sans\",\"size\":2},\"theme-default\":{\"styles\":{\"website\":\"styles/website.css\",\"pdf\":\"styles/pdf.css\",\"epub\":\"styles/epub.css\",\"mobi\":\"styles/mobi.css\",\"ebook\":\"styles/ebook.css\",\"print\":\"styles/print.css\"},\"showLevel\":false}},\"structure\":{\"langs\":\"LANGS.md\",\"readme\":\"README.md\",\"glossary\":\"GLOSSARY.md\",\"summary\":\"SUMMARY.md\"},\"pdf\":{\"pageNumbers\":true,\"fontSize\":12,\"fontFamily\":\"Arial\",\"paperSize\":\"a4\",\"chapterMark\":\"pagebreak\",\"pageBreaksBefore\":\"/\",\"margin\":{\"right\":62,\"left\":62,\"top\":56,\"bottom\":56}},\"styles\":{\"website\":\"styles/website.css\",\"pdf\":\"styles/pdf.css\",\"epub\":\"styles/epub.css\",\"mobi\":\"styles/mobi.css\",\"ebook\":\"styles/ebook.css\",\"print\":\"styles/print.css\"}},\"file\":{\"path\":\"document-apis/update-api.md\",\"mtime\":\"2017-11-08T08:21:02.689Z\",\"type\":\"markdown\"},\"gitbook\":{\"version\":\"3.2.3\",\"time\":\"2018-01-29T15:28:32.108Z\"},\"basePath\":\"..\",\"book\":{\"language\":\"\"}}); });"},{"title":"","date":"2018-02-01T07:21:14.236Z","updated":"2018-01-29T15:28:34.787Z","comments":true,"path":"esjava/document-apis/multi-get-api.html","permalink":"http://test.quanke.name/esjava/document-apis/multi-get-api.html","excerpt":"","text":"Multi Get API · GitBook Introduction Dependency Client Transport Client XPack Transport Client Document APIs Index API Get API Delete API Delete By Query API Update API Multi Get API Bulk API Using Bulk Processor Search API Using scrolls in Java MultiSearch API Using Aggregations Terminate After Search Template Aggregations Structuring aggregations Metrics aggregations Bucket aggregations Query DSL Match All Query Full text queries Term level queries Compound queries Joining queries Geo queries Specialized queries Span queries Indexed Scripts API Script Language Java API Administration Indices Administration Cluster Administration Published with GitBook Multi Get API Multi Get API &#x4E00;&#x6B21;&#x83B7;&#x53D6;&#x591A;&#x4E2A;&#x6587;&#x6863; MultiGetResponse multiGetItemResponses = client.prepareMultiGet() .add(&quot;twitter&quot;, &quot;tweet&quot;, &quot;1&quot;) //&#x4E00;&#x4E2A;id&#x7684;&#x65B9;&#x5F0F; .add(&quot;twitter&quot;, &quot;tweet&quot;, &quot;2&quot;, &quot;3&quot;, &quot;4&quot;) //&#x591A;&#x4E2A;id&#x7684;&#x65B9;&#x5F0F; .add(&quot;another&quot;, &quot;type&quot;, &quot;foo&quot;) //&#x53EF;&#x4EE5;&#x4ECE;&#x53E6;&#x5916;&#x4E00;&#x4E2A;&#x7D22;&#x5F15;&#x83B7;&#x53D6; .get(); for (MultiGetItemResponse itemResponse : multiGetItemResponses) { //&#x8FED;&#x4EE3;&#x8FD4;&#x56DE;&#x503C; GetResponse response = itemResponse.getResponse(); if (response.isExists()) { //&#x5224;&#x65AD;&#x662F;&#x5426;&#x5B58;&#x5728; String json = response.getSourceAsString(); //_source &#x5B57;&#x6BB5; } } &#x66F4;&#x591A;&#x8BF7;&#x6D4F;&#x89C8;REST multi get &#x6587;&#x6863; results matching \"\" No results matching \"\" var gitbook = gitbook || []; gitbook.push(function() { gitbook.page.hasChanged({\"page\":{\"title\":\"Multi Get API\",\"level\":\"1.4.6\",\"depth\":2,\"next\":{\"title\":\"Bulk API\",\"level\":\"1.4.7\",\"depth\":2,\"path\":\"document-apis/bulk-api.md\",\"ref\":\"document-apis/bulk-api.md\",\"articles\":[]},\"previous\":{\"title\":\"Update API\",\"level\":\"1.4.5\",\"depth\":2,\"path\":\"document-apis/update-api.md\",\"ref\":\"document-apis/update-api.md\",\"articles\":[]},\"dir\":\"ltr\"},\"config\":{\"gitbook\":\"*\",\"theme\":\"default\",\"variables\":{},\"plugins\":[],\"pluginsConfig\":{\"highlight\":{},\"search\":{},\"lunr\":{\"maxIndexSize\":1000000,\"ignoreSpecialCharacters\":false},\"sharing\":{\"facebook\":true,\"twitter\":true,\"google\":false,\"weibo\":false,\"instapaper\":false,\"vk\":false,\"all\":[\"facebook\",\"google\",\"twitter\",\"weibo\",\"instapaper\"]},\"fontsettings\":{\"theme\":\"white\",\"family\":\"sans\",\"size\":2},\"theme-default\":{\"styles\":{\"website\":\"styles/website.css\",\"pdf\":\"styles/pdf.css\",\"epub\":\"styles/epub.css\",\"mobi\":\"styles/mobi.css\",\"ebook\":\"styles/ebook.css\",\"print\":\"styles/print.css\"},\"showLevel\":false}},\"structure\":{\"langs\":\"LANGS.md\",\"readme\":\"README.md\",\"glossary\":\"GLOSSARY.md\",\"summary\":\"SUMMARY.md\"},\"pdf\":{\"pageNumbers\":true,\"fontSize\":12,\"fontFamily\":\"Arial\",\"paperSize\":\"a4\",\"chapterMark\":\"pagebreak\",\"pageBreaksBefore\":\"/\",\"margin\":{\"right\":62,\"left\":62,\"top\":56,\"bottom\":56}},\"styles\":{\"website\":\"styles/website.css\",\"pdf\":\"styles/pdf.css\",\"epub\":\"styles/epub.css\",\"mobi\":\"styles/mobi.css\",\"ebook\":\"styles/ebook.css\",\"print\":\"styles/print.css\"}},\"file\":{\"path\":\"document-apis/multi-get-api.md\",\"mtime\":\"2017-11-08T08:21:02.685Z\",\"type\":\"markdown\"},\"gitbook\":{\"version\":\"3.2.3\",\"time\":\"2018-01-29T15:28:32.108Z\"},\"basePath\":\"..\",\"book\":{\"language\":\"\"}}); });"},{"title":"","date":"2018-02-01T07:21:14.239Z","updated":"2018-01-29T15:28:33.707Z","comments":true,"path":"esjava/document-apis/update-api.html","permalink":"http://test.quanke.name/esjava/document-apis/update-api.html","excerpt":"","text":"Update API更新索引 有两种方式更新索引： 创建 UpdateRequest,通过client发送； 使用 prepareUpdate() 方法； 使用UpdateRequestUpdateRequest updateRequest = new UpdateRequest();updateRequest.index(&quot;index&quot;);updateRequest.type(&quot;type&quot;);updateRequest.id(&quot;1&quot;);updateRequest.doc(jsonBuilder() .startObject() .field(&quot;gender&quot;, &quot;male&quot;) .endObject());client.update(updateRequest).get(); 使用 prepareUpdate() 方法client.prepareUpdate(&quot;ttl&quot;, &quot;doc&quot;, &quot;1&quot;) .setScript(new Script(&quot;ctx._source.gender = \\&quot;male\\&quot;&quot; ,ScriptService.ScriptType.INLINE, null, null))//脚本可以是本地文件存储的，如果使用文件存储的脚本，需要设置 ScriptService.ScriptType.FILE .get();client.prepareUpdate(&quot;ttl&quot;, &quot;doc&quot;, &quot;1&quot;) .setDoc(jsonBuilder() //合并到现有文档 .startObject() .field(&quot;gender&quot;, &quot;male&quot;) .endObject()) .get(); Update by script使用脚本更新文档 UpdateRequest updateRequest = new UpdateRequest(&quot;ttl&quot;, &quot;doc&quot;, &quot;1&quot;) .script(new Script(&quot;ctx._source.gender = \\&quot;male\\&quot;&quot;));client.update(updateRequest).get(); Update by merging documents合并文档 UpdateRequest updateRequest = new UpdateRequest(&quot;index&quot;, &quot;type&quot;, &quot;1&quot;) .doc(jsonBuilder() .startObject() .field(&quot;gender&quot;, &quot;male&quot;) .endObject());client.update(updateRequest).get(); Upsert更新插入,如果存在文档就更新，如果不存在就插入 IndexRequest indexRequest = new IndexRequest(&quot;index&quot;, &quot;type&quot;, &quot;1&quot;) .source(jsonBuilder() .startObject() .field(&quot;name&quot;, &quot;Joe Smith&quot;) .field(&quot;gender&quot;, &quot;male&quot;) .endObject());UpdateRequest updateRequest = new UpdateRequest(&quot;index&quot;, &quot;type&quot;, &quot;1&quot;) .doc(jsonBuilder() .startObject() .field(&quot;gender&quot;, &quot;male&quot;) .endObject()) .upsert(indexRequest); //如果不存在此文档 ，就增加 `indexRequest`client.update(updateRequest).get(); 如果 index/type/1 存在，类似下面的文档： &#123; &quot;name&quot; : &quot;Joe Dalton&quot;, &quot;gender&quot;: &quot;male&quot; &#125; 如果不存在，会插入新的文档： &#123; &quot;name&quot; : &quot;Joe Smith&quot;, &quot;gender&quot;: &quot;male&quot;&#125;"},{"title":"","date":"2018-02-01T07:21:14.239Z","updated":"2018-01-29T15:28:34.937Z","comments":true,"path":"esjava/document-apis/using-bulk-processor.html","permalink":"http://test.quanke.name/esjava/document-apis/using-bulk-processor.html","excerpt":"","text":"Using Bulk Processor · GitBook Introduction Dependency Client Transport Client XPack Transport Client Document APIs Index API Get API Delete API Delete By Query API Update API Multi Get API Bulk API Using Bulk Processor Search API Using scrolls in Java MultiSearch API Using Aggregations Terminate After Search Template Aggregations Structuring aggregations Metrics aggregations Bucket aggregations Query DSL Match All Query Full text queries Term level queries Compound queries Joining queries Geo queries Specialized queries Span queries Indexed Scripts API Script Language Java API Administration Indices Administration Cluster Administration Published with GitBook Using Bulk Processor &#x4F7F;&#x7528; Bulk Processor BulkProcessor &#x63D0;&#x4F9B;&#x4E86;&#x4E00;&#x4E2A;&#x7B80;&#x5355;&#x7684;&#x63A5;&#x53E3;&#xFF0C;&#x5728;&#x7ED9;&#x5B9A;&#x7684;&#x5927;&#x5C0F;&#x6570;&#x91CF;&#x4E0A;&#x5B9A;&#x65F6;&#x6279;&#x91CF;&#x81EA;&#x52A8;&#x8BF7;&#x6C42; &#x521B;&#x5EFA;BulkProcessor&#x5B9E;&#x4F8B; &#x9996;&#x5148;&#x521B;&#x5EFA;BulkProcessor&#x5B9E;&#x4F8B; import org.elasticsearch.action.bulk.BackoffPolicy; import org.elasticsearch.action.bulk.BulkProcessor; import org.elasticsearch.common.unit.ByteSizeUnit; import org.elasticsearch.common.unit.ByteSizeValue; import org.elasticsearch.common.unit.TimeValue; BulkProcessor bulkProcessor = BulkProcessor.builder( client, //&#x589E;&#x52A0;elasticsearch&#x5BA2;&#x6237;&#x7AEF; new BulkProcessor.Listener() { @Override public void beforeBulk(long executionId, BulkRequest request) { ... } //&#x8C03;&#x7528;bulk&#x4E4B;&#x524D;&#x6267;&#x884C; &#xFF0C;&#x4F8B;&#x5982;&#x4F60;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;request.numberOfActions()&#x65B9;&#x6CD5;&#x77E5;&#x9053;numberOfActions @Override public void afterBulk(long executionId, BulkRequest request, BulkResponse response) { ... } //&#x8C03;&#x7528;bulk&#x4E4B;&#x540E;&#x6267;&#x884C; &#xFF0C;&#x4F8B;&#x5982;&#x4F60;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;request.hasFailures()&#x65B9;&#x6CD5;&#x77E5;&#x9053;&#x662F;&#x5426;&#x6267;&#x884C;&#x5931;&#x8D25; @Override public void afterBulk(long executionId, BulkRequest request, Throwable failure) { ... } //&#x8C03;&#x7528;&#x5931;&#x8D25;&#x629B; Throwable }) .setBulkActions(10000) //&#x6BCF;&#x6B21;10000&#x8BF7;&#x6C42; .setBulkSize(new ByteSizeValue(5, ByteSizeUnit.MB)) //&#x62C6;&#x6210;5mb&#x4E00;&#x5757; .setFlushInterval(TimeValue.timeValueSeconds(5)) //&#x65E0;&#x8BBA;&#x8BF7;&#x6C42;&#x6570;&#x91CF;&#x591A;&#x5C11;&#xFF0C;&#x6BCF;5&#x79D2;&#x949F;&#x8BF7;&#x6C42;&#x4E00;&#x6B21;&#x3002; .setConcurrentRequests(1) //&#x8BBE;&#x7F6E;&#x5E76;&#x53D1;&#x8BF7;&#x6C42;&#x7684;&#x6570;&#x91CF;&#x3002;&#x503C;&#x4E3A;0&#x610F;&#x5473;&#x7740;&#x53EA;&#x5141;&#x8BB8;&#x6267;&#x884C;&#x4E00;&#x4E2A;&#x8BF7;&#x6C42;&#x3002;&#x503C;&#x4E3A;1&#x610F;&#x5473;&#x7740;&#x5141;&#x8BB8;1&#x5E76;&#x53D1;&#x8BF7;&#x6C42;&#x3002; .setBackoffPolicy( BackoffPolicy.exponentialBackoff(TimeValue.timeValueMillis(100), 3))//&#x8BBE;&#x7F6E;&#x81EA;&#x5B9A;&#x4E49;&#x91CD;&#x590D;&#x8BF7;&#x6C42;&#x673A;&#x5236;&#xFF0C;&#x6700;&#x5F00;&#x59CB;&#x7B49;&#x5F85;100&#x6BEB;&#x79D2;&#xFF0C;&#x4E4B;&#x540E;&#x6210;&#x500D;&#x66F4;&#x52A0;&#xFF0C;&#x91CD;&#x8BD5;3&#x6B21;&#xFF0C;&#x5F53;&#x4E00;&#x6B21;&#x6216;&#x591A;&#x6B21;&#x91CD;&#x590D;&#x8BF7;&#x6C42;&#x5931;&#x8D25;&#x540E;&#x56E0;&#x4E3A;&#x8BA1;&#x7B97;&#x8D44;&#x6E90;&#x4E0D;&#x591F;&#x629B;&#x51FA; EsRejectedExecutionException &#x5F02;&#x5E38;&#xFF0C;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;BackoffPolicy.noBackoff()&#x65B9;&#x6CD5;&#x5173;&#x95ED;&#x91CD;&#x8BD5;&#x673A;&#x5236; .build(); BulkProcessor &#x9ED8;&#x8BA4;&#x8BBE;&#x7F6E; bulkActions 1000 bulkSize 5mb &#x4E0D;&#x8BBE;&#x7F6E;flushInterval concurrentRequests &#x4E3A; 1 &#xFF0C;&#x5F02;&#x6B65;&#x6267;&#x884C; backoffPolicy &#x91CD;&#x8BD5; 8&#x6B21;&#xFF0C;&#x7B49;&#x5F85;50&#x6BEB;&#x79D2; &#x589E;&#x52A0;requests &#x7136;&#x540E;&#x589E;&#x52A0;requests&#x5230;BulkProcessor bulkProcessor.add(new IndexRequest(&quot;twitter&quot;, &quot;tweet&quot;, &quot;1&quot;).source(/* your doc here */)); bulkProcessor.add(new DeleteRequest(&quot;twitter&quot;, &quot;tweet&quot;, &quot;2&quot;)); &#x5173;&#x95ED; Bulk Processor &#x5F53;&#x6240;&#x6709;&#x6587;&#x6863;&#x90FD;&#x5904;&#x7406;&#x5B8C;&#x6210;&#xFF0C;&#x4F7F;&#x7528;awaitClose &#x6216; close &#x65B9;&#x6CD5;&#x5173;&#x95ED;BulkProcessor: bulkProcessor.awaitClose(10, TimeUnit.MINUTES); &#x6216; bulkProcessor.close(); &#x5728;&#x6D4B;&#x8BD5;&#x7528;&#x4F7F;&#x7528;Bulk Processor &#x53EF;&#x4EE5;&#x6267;&#x884C;&#x540C;&#x6B65;&#x65B9;&#x6CD5; BulkProcessor bulkProcessor = BulkProcessor.builder(client, new BulkProcessor.Listener() { /* Listener methods */ }) .setBulkActions(10000) .setConcurrentRequests(0) .build(); // Add your requests bulkProcessor.add(/* Your requests */); // Flush any remaining requests bulkProcessor.flush(); // Or close the bulkProcessor if you don&apos;t need it anymore bulkProcessor.close(); // Refresh your indices client.admin().indices().prepareRefresh().get(); // Now you can start searching! client.prepareSearch().get(); results matching \"\" No results matching \"\" var gitbook = gitbook || []; gitbook.push(function() { gitbook.page.hasChanged({\"page\":{\"title\":\"Using Bulk Processor\",\"level\":\"1.4.8\",\"depth\":2,\"next\":{\"title\":\"Search API\",\"level\":\"1.5\",\"depth\":1,\"path\":\"search-api.md\",\"ref\":\"search-api.md\",\"articles\":[{\"title\":\"Using scrolls in Java\",\"level\":\"1.5.1\",\"depth\":2,\"path\":\"search-api/using-scrolls-in-java.md\",\"ref\":\"search-api/using-scrolls-in-java.md\",\"articles\":[]},{\"title\":\"MultiSearch API\",\"level\":\"1.5.2\",\"depth\":2,\"path\":\"search-api/multisearch-api.md\",\"ref\":\"search-api/multisearch-api.md\",\"articles\":[]},{\"title\":\"Using Aggregations\",\"level\":\"1.5.3\",\"depth\":2,\"path\":\"search-api/using-aggregations.md\",\"ref\":\"search-api/using-aggregations.md\",\"articles\":[]},{\"title\":\"Terminate After\",\"level\":\"1.5.4\",\"depth\":2,\"path\":\"search-api/terminate-after.md\",\"ref\":\"search-api/terminate-after.md\",\"articles\":[]},{\"title\":\"Search Template\",\"level\":\"1.5.5\",\"depth\":2,\"path\":\"search-api/search-template.md\",\"ref\":\"search-api/search-template.md\",\"articles\":[]}]},\"previous\":{\"title\":\"Bulk API\",\"level\":\"1.4.7\",\"depth\":2,\"path\":\"document-apis/bulk-api.md\",\"ref\":\"document-apis/bulk-api.md\",\"articles\":[]},\"dir\":\"ltr\"},\"config\":{\"gitbook\":\"*\",\"theme\":\"default\",\"variables\":{},\"plugins\":[],\"pluginsConfig\":{\"highlight\":{},\"search\":{},\"lunr\":{\"maxIndexSize\":1000000,\"ignoreSpecialCharacters\":false},\"sharing\":{\"facebook\":true,\"twitter\":true,\"google\":false,\"weibo\":false,\"instapaper\":false,\"vk\":false,\"all\":[\"facebook\",\"google\",\"twitter\",\"weibo\",\"instapaper\"]},\"fontsettings\":{\"theme\":\"white\",\"family\":\"sans\",\"size\":2},\"theme-default\":{\"styles\":{\"website\":\"styles/website.css\",\"pdf\":\"styles/pdf.css\",\"epub\":\"styles/epub.css\",\"mobi\":\"styles/mobi.css\",\"ebook\":\"styles/ebook.css\",\"print\":\"styles/print.css\"},\"showLevel\":false}},\"structure\":{\"langs\":\"LANGS.md\",\"readme\":\"README.md\",\"glossary\":\"GLOSSARY.md\",\"summary\":\"SUMMARY.md\"},\"pdf\":{\"pageNumbers\":true,\"fontSize\":12,\"fontFamily\":\"Arial\",\"paperSize\":\"a4\",\"chapterMark\":\"pagebreak\",\"pageBreaksBefore\":\"/\",\"margin\":{\"right\":62,\"left\":62,\"top\":56,\"bottom\":56}},\"styles\":{\"website\":\"styles/website.css\",\"pdf\":\"styles/pdf.css\",\"epub\":\"styles/epub.css\",\"mobi\":\"styles/mobi.css\",\"ebook\":\"styles/ebook.css\",\"print\":\"styles/print.css\"}},\"file\":{\"path\":\"document-apis/using-bulk-processor.md\",\"mtime\":\"2017-11-08T08:32:22.740Z\",\"type\":\"markdown\"},\"gitbook\":{\"version\":\"3.2.3\",\"time\":\"2018-01-29T15:28:32.108Z\"},\"basePath\":\"..\",\"book\":{\"language\":\"\"}}); });"},{"title":"","date":"2018-02-01T07:21:14.240Z","updated":"2018-01-29T15:28:33.708Z","comments":true,"path":"esjava/document-apis/using-bulk-processor.html","permalink":"http://test.quanke.name/esjava/document-apis/using-bulk-processor.html","excerpt":"","text":"使用 Bulk ProcessorBulkProcessor 提供了一个简单的接口，在给定的大小数量上定时批量自动请求 创建BulkProcessor实例首先创建BulkProcessor实例 import org.elasticsearch.action.bulk.BackoffPolicy;import org.elasticsearch.action.bulk.BulkProcessor;import org.elasticsearch.common.unit.ByteSizeUnit;import org.elasticsearch.common.unit.ByteSizeValue;import org.elasticsearch.common.unit.TimeValue;BulkProcessor bulkProcessor = BulkProcessor.builder( client, //增加elasticsearch客户端 new BulkProcessor.Listener() &#123; @Override public void beforeBulk(long executionId, BulkRequest request) &#123; ... &#125; //调用bulk之前执行 ，例如你可以通过request.numberOfActions()方法知道numberOfActions @Override public void afterBulk(long executionId, BulkRequest request, BulkResponse response) &#123; ... &#125; //调用bulk之后执行 ，例如你可以通过request.hasFailures()方法知道是否执行失败 @Override public void afterBulk(long executionId, BulkRequest request, Throwable failure) &#123; ... &#125; //调用失败抛 Throwable &#125;) .setBulkActions(10000) //每次10000请求 .setBulkSize(new ByteSizeValue(5, ByteSizeUnit.MB)) //拆成5mb一块 .setFlushInterval(TimeValue.timeValueSeconds(5)) //无论请求数量多少，每5秒钟请求一次。 .setConcurrentRequests(1) //设置并发请求的数量。值为0意味着只允许执行一个请求。值为1意味着允许1并发请求。 .setBackoffPolicy( BackoffPolicy.exponentialBackoff(TimeValue.timeValueMillis(100), 3))//设置自定义重复请求机制，最开始等待100毫秒，之后成倍更加，重试3次，当一次或多次重复请求失败后因为计算资源不够抛出 EsRejectedExecutionException 异常，可以通过BackoffPolicy.noBackoff()方法关闭重试机制 .build(); BulkProcessor 默认设置 bulkActions 1000 bulkSize 5mb 不设置flushInterval concurrentRequests 为 1 ，异步执行 backoffPolicy 重试 8次，等待50毫秒 增加requests然后增加requests到BulkProcessorbulkProcessor.add(new IndexRequest(&quot;twitter&quot;, &quot;tweet&quot;, &quot;1&quot;).source(/* your doc here */));bulkProcessor.add(new DeleteRequest(&quot;twitter&quot;, &quot;tweet&quot;, &quot;2&quot;)); 关闭 Bulk Processor当所有文档都处理完成，使用awaitClose 或 close 方法关闭BulkProcessor: bulkProcessor.awaitClose(10, TimeUnit.MINUTES); 或 bulkProcessor.close(); 在测试用使用Bulk Processor可以执行同步方法BulkProcessor bulkProcessor = BulkProcessor.builder(client, new BulkProcessor.Listener() &#123; /* Listener methods */ &#125;) .setBulkActions(10000) .setConcurrentRequests(0) .build();// Add your requestsbulkProcessor.add(/* Your requests */);// Flush any remaining requestsbulkProcessor.flush();// Or close the bulkProcessor if you don&apos;t need it anymorebulkProcessor.close();// Refresh your indicesclient.admin().indices().prepareRefresh().get();// Now you can start searching!client.prepareSearch().get();"},{"title":"","date":"2018-02-01T07:21:14.276Z","updated":"2018-01-29T15:28:36.593Z","comments":true,"path":"esjava/indexed-scripts-api/script-language.html","permalink":"http://test.quanke.name/esjava/indexed-scripts-api/script-language.html","excerpt":"","text":"Script Language · GitBook Introduction Dependency Client Transport Client XPack Transport Client Document APIs Index API Get API Delete API Delete By Query API Update API Multi Get API Bulk API Using Bulk Processor Search API Using scrolls in Java MultiSearch API Using Aggregations Terminate After Search Template Aggregations Structuring aggregations Metrics aggregations Bucket aggregations Query DSL Match All Query Full text queries Term level queries Compound queries Joining queries Geo queries Specialized queries Span queries Indexed Scripts API Script Language Java API Administration Indices Administration Cluster Administration Published with GitBook Script Language results matching \"\" No results matching \"\" var gitbook = gitbook || []; gitbook.push(function() { gitbook.page.hasChanged({\"page\":{\"title\":\"Script Language\",\"level\":\"1.8.1\",\"depth\":2,\"next\":{\"title\":\"Java API Administration\",\"level\":\"1.9\",\"depth\":1,\"path\":\"java-api-administration.md\",\"ref\":\"java-api-administration.md\",\"articles\":[{\"title\":\"Indices Administration\",\"level\":\"1.9.1\",\"depth\":2,\"path\":\"java-api-administration/indices-administration.md\",\"ref\":\"java-api-administration/indices-administration.md\",\"articles\":[]},{\"title\":\"Cluster Administration\",\"level\":\"1.9.2\",\"depth\":2,\"path\":\"java-api-administration/cluster-administration.md\",\"ref\":\"java-api-administration/cluster-administration.md\",\"articles\":[]}]},\"previous\":{\"title\":\"Indexed Scripts API\",\"level\":\"1.8\",\"depth\":1,\"path\":\"indexed-scripts-api.md\",\"ref\":\"indexed-scripts-api.md\",\"articles\":[{\"title\":\"Script Language\",\"level\":\"1.8.1\",\"depth\":2,\"path\":\"indexed-scripts-api/script-language.md\",\"ref\":\"indexed-scripts-api/script-language.md\",\"articles\":[]}]},\"dir\":\"neutral\"},\"config\":{\"gitbook\":\"*\",\"theme\":\"default\",\"variables\":{},\"plugins\":[],\"pluginsConfig\":{\"highlight\":{},\"search\":{},\"lunr\":{\"maxIndexSize\":1000000,\"ignoreSpecialCharacters\":false},\"sharing\":{\"facebook\":true,\"twitter\":true,\"google\":false,\"weibo\":false,\"instapaper\":false,\"vk\":false,\"all\":[\"facebook\",\"google\",\"twitter\",\"weibo\",\"instapaper\"]},\"fontsettings\":{\"theme\":\"white\",\"family\":\"sans\",\"size\":2},\"theme-default\":{\"styles\":{\"website\":\"styles/website.css\",\"pdf\":\"styles/pdf.css\",\"epub\":\"styles/epub.css\",\"mobi\":\"styles/mobi.css\",\"ebook\":\"styles/ebook.css\",\"print\":\"styles/print.css\"},\"showLevel\":false}},\"structure\":{\"langs\":\"LANGS.md\",\"readme\":\"README.md\",\"glossary\":\"GLOSSARY.md\",\"summary\":\"SUMMARY.md\"},\"pdf\":{\"pageNumbers\":true,\"fontSize\":12,\"fontFamily\":\"Arial\",\"paperSize\":\"a4\",\"chapterMark\":\"pagebreak\",\"pageBreaksBefore\":\"/\",\"margin\":{\"right\":62,\"left\":62,\"top\":56,\"bottom\":56}},\"styles\":{\"website\":\"styles/website.css\",\"pdf\":\"styles/pdf.css\",\"epub\":\"styles/epub.css\",\"mobi\":\"styles/mobi.css\",\"ebook\":\"styles/ebook.css\",\"print\":\"styles/print.css\"}},\"file\":{\"path\":\"indexed-scripts-api/script-language.md\",\"mtime\":\"2017-11-08T07:56:03.037Z\",\"type\":\"markdown\"},\"gitbook\":{\"version\":\"3.2.3\",\"time\":\"2018-01-29T15:28:32.108Z\"},\"basePath\":\"..\",\"book\":{\"language\":\"\"}}); });"},{"title":"","date":"2018-02-01T07:21:14.279Z","updated":"2018-01-29T15:28:36.795Z","comments":true,"path":"esjava/java-api-administration/cluster-administration.html","permalink":"http://test.quanke.name/esjava/java-api-administration/cluster-administration.html","excerpt":"","text":"Cluster Administration · GitBook Introduction Dependency Client Transport Client XPack Transport Client Document APIs Index API Get API Delete API Delete By Query API Update API Multi Get API Bulk API Using Bulk Processor Search API Using scrolls in Java MultiSearch API Using Aggregations Terminate After Search Template Aggregations Structuring aggregations Metrics aggregations Bucket aggregations Query DSL Match All Query Full text queries Term level queries Compound queries Joining queries Geo queries Specialized queries Span queries Indexed Scripts API Script Language Java API Administration Indices Administration Cluster Administration Published with GitBook Cluster Administration results matching \"\" No results matching \"\" var gitbook = gitbook || []; gitbook.push(function() { gitbook.page.hasChanged({\"page\":{\"title\":\"Cluster Administration\",\"level\":\"1.9.2\",\"depth\":2,\"previous\":{\"title\":\"Indices Administration\",\"level\":\"1.9.1\",\"depth\":2,\"path\":\"java-api-administration/indices-administration.md\",\"ref\":\"java-api-administration/indices-administration.md\",\"articles\":[]},\"dir\":\"neutral\"},\"config\":{\"gitbook\":\"*\",\"theme\":\"default\",\"variables\":{},\"plugins\":[],\"pluginsConfig\":{\"highlight\":{},\"search\":{},\"lunr\":{\"maxIndexSize\":1000000,\"ignoreSpecialCharacters\":false},\"sharing\":{\"facebook\":true,\"twitter\":true,\"google\":false,\"weibo\":false,\"instapaper\":false,\"vk\":false,\"all\":[\"facebook\",\"google\",\"twitter\",\"weibo\",\"instapaper\"]},\"fontsettings\":{\"theme\":\"white\",\"family\":\"sans\",\"size\":2},\"theme-default\":{\"styles\":{\"website\":\"styles/website.css\",\"pdf\":\"styles/pdf.css\",\"epub\":\"styles/epub.css\",\"mobi\":\"styles/mobi.css\",\"ebook\":\"styles/ebook.css\",\"print\":\"styles/print.css\"},\"showLevel\":false}},\"structure\":{\"langs\":\"LANGS.md\",\"readme\":\"README.md\",\"glossary\":\"GLOSSARY.md\",\"summary\":\"SUMMARY.md\"},\"pdf\":{\"pageNumbers\":true,\"fontSize\":12,\"fontFamily\":\"Arial\",\"paperSize\":\"a4\",\"chapterMark\":\"pagebreak\",\"pageBreaksBefore\":\"/\",\"margin\":{\"right\":62,\"left\":62,\"top\":56,\"bottom\":56}},\"styles\":{\"website\":\"styles/website.css\",\"pdf\":\"styles/pdf.css\",\"epub\":\"styles/epub.css\",\"mobi\":\"styles/mobi.css\",\"ebook\":\"styles/ebook.css\",\"print\":\"styles/print.css\"}},\"file\":{\"path\":\"java-api-administration/cluster-administration.md\",\"mtime\":\"2017-11-08T08:12:12.500Z\",\"type\":\"markdown\"},\"gitbook\":{\"version\":\"3.2.3\",\"time\":\"2018-01-29T15:28:32.108Z\"},\"basePath\":\"..\",\"book\":{\"language\":\"\"}}); });"},{"title":"","date":"2018-02-01T07:21:14.282Z","updated":"2018-01-29T15:28:36.732Z","comments":true,"path":"esjava/java-api-administration/indices-administration.html","permalink":"http://test.quanke.name/esjava/java-api-administration/indices-administration.html","excerpt":"","text":"Indices Administration · GitBook Introduction Dependency Client Transport Client XPack Transport Client Document APIs Index API Get API Delete API Delete By Query API Update API Multi Get API Bulk API Using Bulk Processor Search API Using scrolls in Java MultiSearch API Using Aggregations Terminate After Search Template Aggregations Structuring aggregations Metrics aggregations Bucket aggregations Query DSL Match All Query Full text queries Term level queries Compound queries Joining queries Geo queries Specialized queries Span queries Indexed Scripts API Script Language Java API Administration Indices Administration Cluster Administration Published with GitBook Indices Administration results matching \"\" No results matching \"\" var gitbook = gitbook || []; gitbook.push(function() { gitbook.page.hasChanged({\"page\":{\"title\":\"Indices Administration\",\"level\":\"1.9.1\",\"depth\":2,\"next\":{\"title\":\"Cluster Administration\",\"level\":\"1.9.2\",\"depth\":2,\"path\":\"java-api-administration/cluster-administration.md\",\"ref\":\"java-api-administration/cluster-administration.md\",\"articles\":[]},\"previous\":{\"title\":\"Java API Administration\",\"level\":\"1.9\",\"depth\":1,\"path\":\"java-api-administration.md\",\"ref\":\"java-api-administration.md\",\"articles\":[{\"title\":\"Indices Administration\",\"level\":\"1.9.1\",\"depth\":2,\"path\":\"java-api-administration/indices-administration.md\",\"ref\":\"java-api-administration/indices-administration.md\",\"articles\":[]},{\"title\":\"Cluster Administration\",\"level\":\"1.9.2\",\"depth\":2,\"path\":\"java-api-administration/cluster-administration.md\",\"ref\":\"java-api-administration/cluster-administration.md\",\"articles\":[]}]},\"dir\":\"neutral\"},\"config\":{\"gitbook\":\"*\",\"theme\":\"default\",\"variables\":{},\"plugins\":[],\"pluginsConfig\":{\"highlight\":{},\"search\":{},\"lunr\":{\"maxIndexSize\":1000000,\"ignoreSpecialCharacters\":false},\"sharing\":{\"facebook\":true,\"twitter\":true,\"google\":false,\"weibo\":false,\"instapaper\":false,\"vk\":false,\"all\":[\"facebook\",\"google\",\"twitter\",\"weibo\",\"instapaper\"]},\"fontsettings\":{\"theme\":\"white\",\"family\":\"sans\",\"size\":2},\"theme-default\":{\"styles\":{\"website\":\"styles/website.css\",\"pdf\":\"styles/pdf.css\",\"epub\":\"styles/epub.css\",\"mobi\":\"styles/mobi.css\",\"ebook\":\"styles/ebook.css\",\"print\":\"styles/print.css\"},\"showLevel\":false}},\"structure\":{\"langs\":\"LANGS.md\",\"readme\":\"README.md\",\"glossary\":\"GLOSSARY.md\",\"summary\":\"SUMMARY.md\"},\"pdf\":{\"pageNumbers\":true,\"fontSize\":12,\"fontFamily\":\"Arial\",\"paperSize\":\"a4\",\"chapterMark\":\"pagebreak\",\"pageBreaksBefore\":\"/\",\"margin\":{\"right\":62,\"left\":62,\"top\":56,\"bottom\":56}},\"styles\":{\"website\":\"styles/website.css\",\"pdf\":\"styles/pdf.css\",\"epub\":\"styles/epub.css\",\"mobi\":\"styles/mobi.css\",\"ebook\":\"styles/ebook.css\",\"print\":\"styles/print.css\"}},\"file\":{\"path\":\"java-api-administration/indices-administration.md\",\"mtime\":\"2017-11-08T07:56:40.110Z\",\"type\":\"markdown\"},\"gitbook\":{\"version\":\"3.2.3\",\"time\":\"2018-01-29T15:28:32.108Z\"},\"basePath\":\"..\",\"book\":{\"language\":\"\"}}); });"},{"title":"","date":"2018-02-01T07:21:14.244Z","updated":"2018-01-29T15:28:33.632Z","comments":true,"path":"esjava/gitbook/style.css","permalink":"http://test.quanke.name/esjava/gitbook/style.css","excerpt":"","text":"/*! normalize.css v2.1.0 | MIT License | git.io/normalize */article,aside,details,figcaption,figure,footer,header,hgroup,main,nav,section,summary{display:block}audio,canvas,video{display:inline-block}audio:not([controls]){display:none;height:0}[hidden]{display:none}html{font-family:sans-serif;-webkit-text-size-adjust:100%;-ms-text-size-adjust:100%}body{margin:0}a:focus{outline:thin dotted}a:active,a:hover{outline:0}h1{font-size:2em;margin:.67em 0}abbr[title]{border-bottom:1px dotted}b,strong{font-weight:700}dfn{font-style:italic}hr{-moz-box-sizing:content-box;box-sizing:content-box;height:0}mark{background:#ff0;color:#000}code,kbd,pre,samp{font-family:monospace,serif;font-size:1em}pre{white-space:pre-wrap}q{quotes:\"\\201C\" \"\\201D\" \"\\2018\" \"\\2019\"}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sup{top:-.5em}sub{bottom:-.25em}img{border:0}svg:not(:root){overflow:hidden}figure{margin:0}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{border:0;padding:0}button,input,select,textarea{font-family:inherit;font-size:100%;margin:0}button,input{line-height:normal}button,select{text-transform:none}button,html input[type=button],input[type=reset],input[type=submit]{-webkit-appearance:button;cursor:pointer}button[disabled],html input[disabled]{cursor:default}input[type=checkbox],input[type=radio]{box-sizing:border-box;padding:0}input[type=search]{-webkit-appearance:textfield;-moz-box-sizing:content-box;-webkit-box-sizing:content-box;box-sizing:content-box}input[type=search]::-webkit-search-cancel-button,input[type=search]::-webkit-search-decoration{-webkit-appearance:none}button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0}textarea{overflow:auto;vertical-align:top}table{border-collapse:collapse;border-spacing:0}.link-inherit{color:inherit}.link-inherit:focus,.link-inherit:hover{color:inherit}.hidden{display:none}.alert{padding:15px;margin-bottom:20px;color:#444;background:#eee;border-bottom:5px solid #ddd}.alert-success{background:#dff0d8;border-color:#d6e9c6;color:#3c763d}.alert-info{background:#d9edf7;border-color:#bce8f1;color:#31708f}.alert-danger{background:#f2dede;border-color:#ebccd1;color:#a94442}.alert-warning{background:#fcf8e3;border-color:#faebcc;color:#8a6d3b}/*! * Font Awesome 4.6.3 by @davegandy - http://fontawesome.io - @fontawesome * License - http://fontawesome.io/license (Font: SIL OFL 1.1, CSS: MIT License) */@font-face{font-family:FontAwesome;src:url(fonts/fontawesome/fontawesome-webfont.eot?v=4.6.3);src:url(fonts/fontawesome/fontawesome-webfont.eot?#iefix&v=4.6.3) format('embedded-opentype'),url(fonts/fontawesome/fontawesome-webfont.woff2?v=4.6.3) format('woff2'),url(fonts/fontawesome/fontawesome-webfont.woff?v=4.6.3) format('woff'),url(fonts/fontawesome/fontawesome-webfont.ttf?v=4.6.3) format('truetype'),url(fonts/fontawesome/fontawesome-webfont.svg?v=4.6.3#fontawesomeregular) format('svg');font-weight:400;font-style:normal}.fa{display:inline-block;font:normal normal normal 14px/1 FontAwesome;font-size:inherit;text-rendering:auto;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}.fa-lg{font-size:1.33333333em;line-height:.75em;vertical-align:-15%}.fa-2x{font-size:2em}.fa-3x{font-size:3em}.fa-4x{font-size:4em}.fa-5x{font-size:5em}.fa-fw{width:1.28571429em;text-align:center}.fa-ul{padding-left:0;margin-left:2.14285714em;list-style-type:none}.fa-ul>li{position:relative}.fa-li{position:absolute;left:-2.14285714em;width:2.14285714em;top:.14285714em;text-align:center}.fa-li.fa-lg{left:-1.85714286em}.fa-border{padding:.2em .25em .15em;border:solid .08em #eee;border-radius:.1em}.fa-pull-left{float:left}.fa-pull-right{float:right}.fa.fa-pull-left{margin-right:.3em}.fa.fa-pull-right{margin-left:.3em}.pull-right{float:right}.pull-left{float:left}.fa.pull-left{margin-right:.3em}.fa.pull-right{margin-left:.3em}.fa-spin{-webkit-animation:fa-spin 2s infinite linear;animation:fa-spin 2s infinite linear}.fa-pulse{-webkit-animation:fa-spin 1s infinite steps(8);animation:fa-spin 1s infinite steps(8)}@-webkit-keyframes fa-spin{0%{-webkit-transform:rotate(0);transform:rotate(0)}100%{-webkit-transform:rotate(359deg);transform:rotate(359deg)}}@keyframes fa-spin{0%{-webkit-transform:rotate(0);transform:rotate(0)}100%{-webkit-transform:rotate(359deg);transform:rotate(359deg)}}.fa-rotate-90{-ms-filter:\"progid:DXImageTransform.Microsoft.BasicImage(rotation=1)\";-webkit-transform:rotate(90deg);-ms-transform:rotate(90deg);transform:rotate(90deg)}.fa-rotate-180{-ms-filter:\"progid:DXImageTransform.Microsoft.BasicImage(rotation=2)\";-webkit-transform:rotate(180deg);-ms-transform:rotate(180deg);transform:rotate(180deg)}.fa-rotate-270{-ms-filter:\"progid:DXImageTransform.Microsoft.BasicImage(rotation=3)\";-webkit-transform:rotate(270deg);-ms-transform:rotate(270deg);transform:rotate(270deg)}.fa-flip-horizontal{-ms-filter:\"progid:DXImageTransform.Microsoft.BasicImage(rotation=0, mirror=1)\";-webkit-transform:scale(-1,1);-ms-transform:scale(-1,1);transform:scale(-1,1)}.fa-flip-vertical{-ms-filter:\"progid:DXImageTransform.Microsoft.BasicImage(rotation=2, mirror=1)\";-webkit-transform:scale(1,-1);-ms-transform:scale(1,-1);transform:scale(1,-1)}:root .fa-flip-horizontal,:root .fa-flip-vertical,:root .fa-rotate-180,:root .fa-rotate-270,:root .fa-rotate-90{filter:none}.fa-stack{position:relative;display:inline-block;width:2em;height:2em;line-height:2em;vertical-align:middle}.fa-stack-1x,.fa-stack-2x{position:absolute;left:0;width:100%;text-align:center}.fa-stack-1x{line-height:inherit}.fa-stack-2x{font-size:2em}.fa-inverse{color:#fff}.fa-glass:before{content:\"\\f000\"}.fa-music:before{content:\"\\f001\"}.fa-search:before{content:\"\\f002\"}.fa-envelope-o:before{content:\"\\f003\"}.fa-heart:before{content:\"\\f004\"}.fa-star:before{content:\"\\f005\"}.fa-star-o:before{content:\"\\f006\"}.fa-user:before{content:\"\\f007\"}.fa-film:before{content:\"\\f008\"}.fa-th-large:before{content:\"\\f009\"}.fa-th:before{content:\"\\f00a\"}.fa-th-list:before{content:\"\\f00b\"}.fa-check:before{content:\"\\f00c\"}.fa-close:before,.fa-remove:before,.fa-times:before{content:\"\\f00d\"}.fa-search-plus:before{content:\"\\f00e\"}.fa-search-minus:before{content:\"\\f010\"}.fa-power-off:before{content:\"\\f011\"}.fa-signal:before{content:\"\\f012\"}.fa-cog:before,.fa-gear:before{content:\"\\f013\"}.fa-trash-o:before{content:\"\\f014\"}.fa-home:before{content:\"\\f015\"}.fa-file-o:before{content:\"\\f016\"}.fa-clock-o:before{content:\"\\f017\"}.fa-road:before{content:\"\\f018\"}.fa-download:before{content:\"\\f019\"}.fa-arrow-circle-o-down:before{content:\"\\f01a\"}.fa-arrow-circle-o-up:before{content:\"\\f01b\"}.fa-inbox:before{content:\"\\f01c\"}.fa-play-circle-o:before{content:\"\\f01d\"}.fa-repeat:before,.fa-rotate-right:before{content:\"\\f01e\"}.fa-refresh:before{content:\"\\f021\"}.fa-list-alt:before{content:\"\\f022\"}.fa-lock:before{content:\"\\f023\"}.fa-flag:before{content:\"\\f024\"}.fa-headphones:before{content:\"\\f025\"}.fa-volume-off:before{content:\"\\f026\"}.fa-volume-down:before{content:\"\\f027\"}.fa-volume-up:before{content:\"\\f028\"}.fa-qrcode:before{content:\"\\f029\"}.fa-barcode:before{content:\"\\f02a\"}.fa-tag:before{content:\"\\f02b\"}.fa-tags:before{content:\"\\f02c\"}.fa-book:before{content:\"\\f02d\"}.fa-bookmark:before{content:\"\\f02e\"}.fa-print:before{content:\"\\f02f\"}.fa-camera:before{content:\"\\f030\"}.fa-font:before{content:\"\\f031\"}.fa-bold:before{content:\"\\f032\"}.fa-italic:before{content:\"\\f033\"}.fa-text-height:before{content:\"\\f034\"}.fa-text-width:before{content:\"\\f035\"}.fa-align-left:before{content:\"\\f036\"}.fa-align-center:before{content:\"\\f037\"}.fa-align-right:before{content:\"\\f038\"}.fa-align-justify:before{content:\"\\f039\"}.fa-list:before{content:\"\\f03a\"}.fa-dedent:before,.fa-outdent:before{content:\"\\f03b\"}.fa-indent:before{content:\"\\f03c\"}.fa-video-camera:before{content:\"\\f03d\"}.fa-image:before,.fa-photo:before,.fa-picture-o:before{content:\"\\f03e\"}.fa-pencil:before{content:\"\\f040\"}.fa-map-marker:before{content:\"\\f041\"}.fa-adjust:before{content:\"\\f042\"}.fa-tint:before{content:\"\\f043\"}.fa-edit:before,.fa-pencil-square-o:before{content:\"\\f044\"}.fa-share-square-o:before{content:\"\\f045\"}.fa-check-square-o:before{content:\"\\f046\"}.fa-arrows:before{content:\"\\f047\"}.fa-step-backward:before{content:\"\\f048\"}.fa-fast-backward:before{content:\"\\f049\"}.fa-backward:before{content:\"\\f04a\"}.fa-play:before{content:\"\\f04b\"}.fa-pause:before{content:\"\\f04c\"}.fa-stop:before{content:\"\\f04d\"}.fa-forward:before{content:\"\\f04e\"}.fa-fast-forward:before{content:\"\\f050\"}.fa-step-forward:before{content:\"\\f051\"}.fa-eject:before{content:\"\\f052\"}.fa-chevron-left:before{content:\"\\f053\"}.fa-chevron-right:before{content:\"\\f054\"}.fa-plus-circle:before{content:\"\\f055\"}.fa-minus-circle:before{content:\"\\f056\"}.fa-times-circle:before{content:\"\\f057\"}.fa-check-circle:before{content:\"\\f058\"}.fa-question-circle:before{content:\"\\f059\"}.fa-info-circle:before{content:\"\\f05a\"}.fa-crosshairs:before{content:\"\\f05b\"}.fa-times-circle-o:before{content:\"\\f05c\"}.fa-check-circle-o:before{content:\"\\f05d\"}.fa-ban:before{content:\"\\f05e\"}.fa-arrow-left:before{content:\"\\f060\"}.fa-arrow-right:before{content:\"\\f061\"}.fa-arrow-up:before{content:\"\\f062\"}.fa-arrow-down:before{content:\"\\f063\"}.fa-mail-forward:before,.fa-share:before{content:\"\\f064\"}.fa-expand:before{content:\"\\f065\"}.fa-compress:before{content:\"\\f066\"}.fa-plus:before{content:\"\\f067\"}.fa-minus:before{content:\"\\f068\"}.fa-asterisk:before{content:\"\\f069\"}.fa-exclamation-circle:before{content:\"\\f06a\"}.fa-gift:before{content:\"\\f06b\"}.fa-leaf:before{content:\"\\f06c\"}.fa-fire:before{content:\"\\f06d\"}.fa-eye:before{content:\"\\f06e\"}.fa-eye-slash:before{content:\"\\f070\"}.fa-exclamation-triangle:before,.fa-warning:before{content:\"\\f071\"}.fa-plane:before{content:\"\\f072\"}.fa-calendar:before{content:\"\\f073\"}.fa-random:before{content:\"\\f074\"}.fa-comment:before{content:\"\\f075\"}.fa-magnet:before{content:\"\\f076\"}.fa-chevron-up:before{content:\"\\f077\"}.fa-chevron-down:before{content:\"\\f078\"}.fa-retweet:before{content:\"\\f079\"}.fa-shopping-cart:before{content:\"\\f07a\"}.fa-folder:before{content:\"\\f07b\"}.fa-folder-open:before{content:\"\\f07c\"}.fa-arrows-v:before{content:\"\\f07d\"}.fa-arrows-h:before{content:\"\\f07e\"}.fa-bar-chart-o:before,.fa-bar-chart:before{content:\"\\f080\"}.fa-twitter-square:before{content:\"\\f081\"}.fa-facebook-square:before{content:\"\\f082\"}.fa-camera-retro:before{content:\"\\f083\"}.fa-key:before{content:\"\\f084\"}.fa-cogs:before,.fa-gears:before{content:\"\\f085\"}.fa-comments:before{content:\"\\f086\"}.fa-thumbs-o-up:before{content:\"\\f087\"}.fa-thumbs-o-down:before{content:\"\\f088\"}.fa-star-half:before{content:\"\\f089\"}.fa-heart-o:before{content:\"\\f08a\"}.fa-sign-out:before{content:\"\\f08b\"}.fa-linkedin-square:before{content:\"\\f08c\"}.fa-thumb-tack:before{content:\"\\f08d\"}.fa-external-link:before{content:\"\\f08e\"}.fa-sign-in:before{content:\"\\f090\"}.fa-trophy:before{content:\"\\f091\"}.fa-github-square:before{content:\"\\f092\"}.fa-upload:before{content:\"\\f093\"}.fa-lemon-o:before{content:\"\\f094\"}.fa-phone:before{content:\"\\f095\"}.fa-square-o:before{content:\"\\f096\"}.fa-bookmark-o:before{content:\"\\f097\"}.fa-phone-square:before{content:\"\\f098\"}.fa-twitter:before{content:\"\\f099\"}.fa-facebook-f:before,.fa-facebook:before{content:\"\\f09a\"}.fa-github:before{content:\"\\f09b\"}.fa-unlock:before{content:\"\\f09c\"}.fa-credit-card:before{content:\"\\f09d\"}.fa-feed:before,.fa-rss:before{content:\"\\f09e\"}.fa-hdd-o:before{content:\"\\f0a0\"}.fa-bullhorn:before{content:\"\\f0a1\"}.fa-bell:before{content:\"\\f0f3\"}.fa-certificate:before{content:\"\\f0a3\"}.fa-hand-o-right:before{content:\"\\f0a4\"}.fa-hand-o-left:before{content:\"\\f0a5\"}.fa-hand-o-up:before{content:\"\\f0a6\"}.fa-hand-o-down:before{content:\"\\f0a7\"}.fa-arrow-circle-left:before{content:\"\\f0a8\"}.fa-arrow-circle-right:before{content:\"\\f0a9\"}.fa-arrow-circle-up:before{content:\"\\f0aa\"}.fa-arrow-circle-down:before{content:\"\\f0ab\"}.fa-globe:before{content:\"\\f0ac\"}.fa-wrench:before{content:\"\\f0ad\"}.fa-tasks:before{content:\"\\f0ae\"}.fa-filter:before{content:\"\\f0b0\"}.fa-briefcase:before{content:\"\\f0b1\"}.fa-arrows-alt:before{content:\"\\f0b2\"}.fa-group:before,.fa-users:before{content:\"\\f0c0\"}.fa-chain:before,.fa-link:before{content:\"\\f0c1\"}.fa-cloud:before{content:\"\\f0c2\"}.fa-flask:before{content:\"\\f0c3\"}.fa-cut:before,.fa-scissors:before{content:\"\\f0c4\"}.fa-copy:before,.fa-files-o:before{content:\"\\f0c5\"}.fa-paperclip:before{content:\"\\f0c6\"}.fa-floppy-o:before,.fa-save:before{content:\"\\f0c7\"}.fa-square:before{content:\"\\f0c8\"}.fa-bars:before,.fa-navicon:before,.fa-reorder:before{content:\"\\f0c9\"}.fa-list-ul:before{content:\"\\f0ca\"}.fa-list-ol:before{content:\"\\f0cb\"}.fa-strikethrough:before{content:\"\\f0cc\"}.fa-underline:before{content:\"\\f0cd\"}.fa-table:before{content:\"\\f0ce\"}.fa-magic:before{content:\"\\f0d0\"}.fa-truck:before{content:\"\\f0d1\"}.fa-pinterest:before{content:\"\\f0d2\"}.fa-pinterest-square:before{content:\"\\f0d3\"}.fa-google-plus-square:before{content:\"\\f0d4\"}.fa-google-plus:before{content:\"\\f0d5\"}.fa-money:before{content:\"\\f0d6\"}.fa-caret-down:before{content:\"\\f0d7\"}.fa-caret-up:before{content:\"\\f0d8\"}.fa-caret-left:before{content:\"\\f0d9\"}.fa-caret-right:before{content:\"\\f0da\"}.fa-columns:before{content:\"\\f0db\"}.fa-sort:before,.fa-unsorted:before{content:\"\\f0dc\"}.fa-sort-desc:before,.fa-sort-down:before{content:\"\\f0dd\"}.fa-sort-asc:before,.fa-sort-up:before{content:\"\\f0de\"}.fa-envelope:before{content:\"\\f0e0\"}.fa-linkedin:before{content:\"\\f0e1\"}.fa-rotate-left:before,.fa-undo:before{content:\"\\f0e2\"}.fa-gavel:before,.fa-legal:before{content:\"\\f0e3\"}.fa-dashboard:before,.fa-tachometer:before{content:\"\\f0e4\"}.fa-comment-o:before{content:\"\\f0e5\"}.fa-comments-o:before{content:\"\\f0e6\"}.fa-bolt:before,.fa-flash:before{content:\"\\f0e7\"}.fa-sitemap:before{content:\"\\f0e8\"}.fa-umbrella:before{content:\"\\f0e9\"}.fa-clipboard:before,.fa-paste:before{content:\"\\f0ea\"}.fa-lightbulb-o:before{content:\"\\f0eb\"}.fa-exchange:before{content:\"\\f0ec\"}.fa-cloud-download:before{content:\"\\f0ed\"}.fa-cloud-upload:before{content:\"\\f0ee\"}.fa-user-md:before{content:\"\\f0f0\"}.fa-stethoscope:before{content:\"\\f0f1\"}.fa-suitcase:before{content:\"\\f0f2\"}.fa-bell-o:before{content:\"\\f0a2\"}.fa-coffee:before{content:\"\\f0f4\"}.fa-cutlery:before{content:\"\\f0f5\"}.fa-file-text-o:before{content:\"\\f0f6\"}.fa-building-o:before{content:\"\\f0f7\"}.fa-hospital-o:before{content:\"\\f0f8\"}.fa-ambulance:before{content:\"\\f0f9\"}.fa-medkit:before{content:\"\\f0fa\"}.fa-fighter-jet:before{content:\"\\f0fb\"}.fa-beer:before{content:\"\\f0fc\"}.fa-h-square:before{content:\"\\f0fd\"}.fa-plus-square:before{content:\"\\f0fe\"}.fa-angle-double-left:before{content:\"\\f100\"}.fa-angle-double-right:before{content:\"\\f101\"}.fa-angle-double-up:before{content:\"\\f102\"}.fa-angle-double-down:before{content:\"\\f103\"}.fa-angle-left:before{content:\"\\f104\"}.fa-angle-right:before{content:\"\\f105\"}.fa-angle-up:before{content:\"\\f106\"}.fa-angle-down:before{content:\"\\f107\"}.fa-desktop:before{content:\"\\f108\"}.fa-laptop:before{content:\"\\f109\"}.fa-tablet:before{content:\"\\f10a\"}.fa-mobile-phone:before,.fa-mobile:before{content:\"\\f10b\"}.fa-circle-o:before{content:\"\\f10c\"}.fa-quote-left:before{content:\"\\f10d\"}.fa-quote-right:before{content:\"\\f10e\"}.fa-spinner:before{content:\"\\f110\"}.fa-circle:before{content:\"\\f111\"}.fa-mail-reply:before,.fa-reply:before{content:\"\\f112\"}.fa-github-alt:before{content:\"\\f113\"}.fa-folder-o:before{content:\"\\f114\"}.fa-folder-open-o:before{content:\"\\f115\"}.fa-smile-o:before{content:\"\\f118\"}.fa-frown-o:before{content:\"\\f119\"}.fa-meh-o:before{content:\"\\f11a\"}.fa-gamepad:before{content:\"\\f11b\"}.fa-keyboard-o:before{content:\"\\f11c\"}.fa-flag-o:before{content:\"\\f11d\"}.fa-flag-checkered:before{content:\"\\f11e\"}.fa-terminal:before{content:\"\\f120\"}.fa-code:before{content:\"\\f121\"}.fa-mail-reply-all:before,.fa-reply-all:before{content:\"\\f122\"}.fa-star-half-empty:before,.fa-star-half-full:before,.fa-star-half-o:before{content:\"\\f123\"}.fa-location-arrow:before{content:\"\\f124\"}.fa-crop:before{content:\"\\f125\"}.fa-code-fork:before{content:\"\\f126\"}.fa-chain-broken:before,.fa-unlink:before{content:\"\\f127\"}.fa-question:before{content:\"\\f128\"}.fa-info:before{content:\"\\f129\"}.fa-exclamation:before{content:\"\\f12a\"}.fa-superscript:before{content:\"\\f12b\"}.fa-subscript:before{content:\"\\f12c\"}.fa-eraser:before{content:\"\\f12d\"}.fa-puzzle-piece:before{content:\"\\f12e\"}.fa-microphone:before{content:\"\\f130\"}.fa-microphone-slash:before{content:\"\\f131\"}.fa-shield:before{content:\"\\f132\"}.fa-calendar-o:before{content:\"\\f133\"}.fa-fire-extinguisher:before{content:\"\\f134\"}.fa-rocket:before{content:\"\\f135\"}.fa-maxcdn:before{content:\"\\f136\"}.fa-chevron-circle-left:before{content:\"\\f137\"}.fa-chevron-circle-right:before{content:\"\\f138\"}.fa-chevron-circle-up:before{content:\"\\f139\"}.fa-chevron-circle-down:before{content:\"\\f13a\"}.fa-html5:before{content:\"\\f13b\"}.fa-css3:before{content:\"\\f13c\"}.fa-anchor:before{content:\"\\f13d\"}.fa-unlock-alt:before{content:\"\\f13e\"}.fa-bullseye:before{content:\"\\f140\"}.fa-ellipsis-h:before{content:\"\\f141\"}.fa-ellipsis-v:before{content:\"\\f142\"}.fa-rss-square:before{content:\"\\f143\"}.fa-play-circle:before{content:\"\\f144\"}.fa-ticket:before{content:\"\\f145\"}.fa-minus-square:before{content:\"\\f146\"}.fa-minus-square-o:before{content:\"\\f147\"}.fa-level-up:before{content:\"\\f148\"}.fa-level-down:before{content:\"\\f149\"}.fa-check-square:before{content:\"\\f14a\"}.fa-pencil-square:before{content:\"\\f14b\"}.fa-external-link-square:before{content:\"\\f14c\"}.fa-share-square:before{content:\"\\f14d\"}.fa-compass:before{content:\"\\f14e\"}.fa-caret-square-o-down:before,.fa-toggle-down:before{content:\"\\f150\"}.fa-caret-square-o-up:before,.fa-toggle-up:before{content:\"\\f151\"}.fa-caret-square-o-right:before,.fa-toggle-right:before{content:\"\\f152\"}.fa-eur:before,.fa-euro:before{content:\"\\f153\"}.fa-gbp:before{content:\"\\f154\"}.fa-dollar:before,.fa-usd:before{content:\"\\f155\"}.fa-inr:before,.fa-rupee:before{content:\"\\f156\"}.fa-cny:before,.fa-jpy:before,.fa-rmb:before,.fa-yen:before{content:\"\\f157\"}.fa-rouble:before,.fa-rub:before,.fa-ruble:before{content:\"\\f158\"}.fa-krw:before,.fa-won:before{content:\"\\f159\"}.fa-bitcoin:before,.fa-btc:before{content:\"\\f15a\"}.fa-file:before{content:\"\\f15b\"}.fa-file-text:before{content:\"\\f15c\"}.fa-sort-alpha-asc:before{content:\"\\f15d\"}.fa-sort-alpha-desc:before{content:\"\\f15e\"}.fa-sort-amount-asc:before{content:\"\\f160\"}.fa-sort-amount-desc:before{content:\"\\f161\"}.fa-sort-numeric-asc:before{content:\"\\f162\"}.fa-sort-numeric-desc:before{content:\"\\f163\"}.fa-thumbs-up:before{content:\"\\f164\"}.fa-thumbs-down:before{content:\"\\f165\"}.fa-youtube-square:before{content:\"\\f166\"}.fa-youtube:before{content:\"\\f167\"}.fa-xing:before{content:\"\\f168\"}.fa-xing-square:before{content:\"\\f169\"}.fa-youtube-play:before{content:\"\\f16a\"}.fa-dropbox:before{content:\"\\f16b\"}.fa-stack-overflow:before{content:\"\\f16c\"}.fa-instagram:before{content:\"\\f16d\"}.fa-flickr:before{content:\"\\f16e\"}.fa-adn:before{content:\"\\f170\"}.fa-bitbucket:before{content:\"\\f171\"}.fa-bitbucket-square:before{content:\"\\f172\"}.fa-tumblr:before{content:\"\\f173\"}.fa-tumblr-square:before{content:\"\\f174\"}.fa-long-arrow-down:before{content:\"\\f175\"}.fa-long-arrow-up:before{content:\"\\f176\"}.fa-long-arrow-left:before{content:\"\\f177\"}.fa-long-arrow-right:before{content:\"\\f178\"}.fa-apple:before{content:\"\\f179\"}.fa-windows:before{content:\"\\f17a\"}.fa-android:before{content:\"\\f17b\"}.fa-linux:before{content:\"\\f17c\"}.fa-dribbble:before{content:\"\\f17d\"}.fa-skype:before{content:\"\\f17e\"}.fa-foursquare:before{content:\"\\f180\"}.fa-trello:before{content:\"\\f181\"}.fa-female:before{content:\"\\f182\"}.fa-male:before{content:\"\\f183\"}.fa-gittip:before,.fa-gratipay:before{content:\"\\f184\"}.fa-sun-o:before{content:\"\\f185\"}.fa-moon-o:before{content:\"\\f186\"}.fa-archive:before{content:\"\\f187\"}.fa-bug:before{content:\"\\f188\"}.fa-vk:before{content:\"\\f189\"}.fa-weibo:before{content:\"\\f18a\"}.fa-renren:before{content:\"\\f18b\"}.fa-pagelines:before{content:\"\\f18c\"}.fa-stack-exchange:before{content:\"\\f18d\"}.fa-arrow-circle-o-right:before{content:\"\\f18e\"}.fa-arrow-circle-o-left:before{content:\"\\f190\"}.fa-caret-square-o-left:before,.fa-toggle-left:before{content:\"\\f191\"}.fa-dot-circle-o:before{content:\"\\f192\"}.fa-wheelchair:before{content:\"\\f193\"}.fa-vimeo-square:before{content:\"\\f194\"}.fa-try:before,.fa-turkish-lira:before{content:\"\\f195\"}.fa-plus-square-o:before{content:\"\\f196\"}.fa-space-shuttle:before{content:\"\\f197\"}.fa-slack:before{content:\"\\f198\"}.fa-envelope-square:before{content:\"\\f199\"}.fa-wordpress:before{content:\"\\f19a\"}.fa-openid:before{content:\"\\f19b\"}.fa-bank:before,.fa-institution:before,.fa-university:before{content:\"\\f19c\"}.fa-graduation-cap:before,.fa-mortar-board:before{content:\"\\f19d\"}.fa-yahoo:before{content:\"\\f19e\"}.fa-google:before{content:\"\\f1a0\"}.fa-reddit:before{content:\"\\f1a1\"}.fa-reddit-square:before{content:\"\\f1a2\"}.fa-stumbleupon-circle:before{content:\"\\f1a3\"}.fa-stumbleupon:before{content:\"\\f1a4\"}.fa-delicious:before{content:\"\\f1a5\"}.fa-digg:before{content:\"\\f1a6\"}.fa-pied-piper-pp:before{content:\"\\f1a7\"}.fa-pied-piper-alt:before{content:\"\\f1a8\"}.fa-drupal:before{content:\"\\f1a9\"}.fa-joomla:before{content:\"\\f1aa\"}.fa-language:before{content:\"\\f1ab\"}.fa-fax:before{content:\"\\f1ac\"}.fa-building:before{content:\"\\f1ad\"}.fa-child:before{content:\"\\f1ae\"}.fa-paw:before{content:\"\\f1b0\"}.fa-spoon:before{content:\"\\f1b1\"}.fa-cube:before{content:\"\\f1b2\"}.fa-cubes:before{content:\"\\f1b3\"}.fa-behance:before{content:\"\\f1b4\"}.fa-behance-square:before{content:\"\\f1b5\"}.fa-steam:before{content:\"\\f1b6\"}.fa-steam-square:before{content:\"\\f1b7\"}.fa-recycle:before{content:\"\\f1b8\"}.fa-automobile:before,.fa-car:before{content:\"\\f1b9\"}.fa-cab:before,.fa-taxi:before{content:\"\\f1ba\"}.fa-tree:before{content:\"\\f1bb\"}.fa-spotify:before{content:\"\\f1bc\"}.fa-deviantart:before{content:\"\\f1bd\"}.fa-soundcloud:before{content:\"\\f1be\"}.fa-database:before{content:\"\\f1c0\"}.fa-file-pdf-o:before{content:\"\\f1c1\"}.fa-file-word-o:before{content:\"\\f1c2\"}.fa-file-excel-o:before{content:\"\\f1c3\"}.fa-file-powerpoint-o:before{content:\"\\f1c4\"}.fa-file-image-o:before,.fa-file-photo-o:before,.fa-file-picture-o:before{content:\"\\f1c5\"}.fa-file-archive-o:before,.fa-file-zip-o:before{content:\"\\f1c6\"}.fa-file-audio-o:before,.fa-file-sound-o:before{content:\"\\f1c7\"}.fa-file-movie-o:before,.fa-file-video-o:before{content:\"\\f1c8\"}.fa-file-code-o:before{content:\"\\f1c9\"}.fa-vine:before{content:\"\\f1ca\"}.fa-codepen:before{content:\"\\f1cb\"}.fa-jsfiddle:before{content:\"\\f1cc\"}.fa-life-bouy:before,.fa-life-buoy:before,.fa-life-ring:before,.fa-life-saver:before,.fa-support:before{content:\"\\f1cd\"}.fa-circle-o-notch:before{content:\"\\f1ce\"}.fa-ra:before,.fa-rebel:before,.fa-resistance:before{content:\"\\f1d0\"}.fa-empire:before,.fa-ge:before{content:\"\\f1d1\"}.fa-git-square:before{content:\"\\f1d2\"}.fa-git:before{content:\"\\f1d3\"}.fa-hacker-news:before,.fa-y-combinator-square:before,.fa-yc-square:before{content:\"\\f1d4\"}.fa-tencent-weibo:before{content:\"\\f1d5\"}.fa-qq:before{content:\"\\f1d6\"}.fa-wechat:before,.fa-weixin:before{content:\"\\f1d7\"}.fa-paper-plane:before,.fa-send:before{content:\"\\f1d8\"}.fa-paper-plane-o:before,.fa-send-o:before{content:\"\\f1d9\"}.fa-history:before{content:\"\\f1da\"}.fa-circle-thin:before{content:\"\\f1db\"}.fa-header:before{content:\"\\f1dc\"}.fa-paragraph:before{content:\"\\f1dd\"}.fa-sliders:before{content:\"\\f1de\"}.fa-share-alt:before{content:\"\\f1e0\"}.fa-share-alt-square:before{content:\"\\f1e1\"}.fa-bomb:before{content:\"\\f1e2\"}.fa-futbol-o:before,.fa-soccer-ball-o:before{content:\"\\f1e3\"}.fa-tty:before{content:\"\\f1e4\"}.fa-binoculars:before{content:\"\\f1e5\"}.fa-plug:before{content:\"\\f1e6\"}.fa-slideshare:before{content:\"\\f1e7\"}.fa-twitch:before{content:\"\\f1e8\"}.fa-yelp:before{content:\"\\f1e9\"}.fa-newspaper-o:before{content:\"\\f1ea\"}.fa-wifi:before{content:\"\\f1eb\"}.fa-calculator:before{content:\"\\f1ec\"}.fa-paypal:before{content:\"\\f1ed\"}.fa-google-wallet:before{content:\"\\f1ee\"}.fa-cc-visa:before{content:\"\\f1f0\"}.fa-cc-mastercard:before{content:\"\\f1f1\"}.fa-cc-discover:before{content:\"\\f1f2\"}.fa-cc-amex:before{content:\"\\f1f3\"}.fa-cc-paypal:before{content:\"\\f1f4\"}.fa-cc-stripe:before{content:\"\\f1f5\"}.fa-bell-slash:before{content:\"\\f1f6\"}.fa-bell-slash-o:before{content:\"\\f1f7\"}.fa-trash:before{content:\"\\f1f8\"}.fa-copyright:before{content:\"\\f1f9\"}.fa-at:before{content:\"\\f1fa\"}.fa-eyedropper:before{content:\"\\f1fb\"}.fa-paint-brush:before{content:\"\\f1fc\"}.fa-birthday-cake:before{content:\"\\f1fd\"}.fa-area-chart:before{content:\"\\f1fe\"}.fa-pie-chart:before{content:\"\\f200\"}.fa-line-chart:before{content:\"\\f201\"}.fa-lastfm:before{content:\"\\f202\"}.fa-lastfm-square:before{content:\"\\f203\"}.fa-toggle-off:before{content:\"\\f204\"}.fa-toggle-on:before{content:\"\\f205\"}.fa-bicycle:before{content:\"\\f206\"}.fa-bus:before{content:\"\\f207\"}.fa-ioxhost:before{content:\"\\f208\"}.fa-angellist:before{content:\"\\f209\"}.fa-cc:before{content:\"\\f20a\"}.fa-ils:before,.fa-shekel:before,.fa-sheqel:before{content:\"\\f20b\"}.fa-meanpath:before{content:\"\\f20c\"}.fa-buysellads:before{content:\"\\f20d\"}.fa-connectdevelop:before{content:\"\\f20e\"}.fa-dashcube:before{content:\"\\f210\"}.fa-forumbee:before{content:\"\\f211\"}.fa-leanpub:before{content:\"\\f212\"}.fa-sellsy:before{content:\"\\f213\"}.fa-shirtsinbulk:before{content:\"\\f214\"}.fa-simplybuilt:before{content:\"\\f215\"}.fa-skyatlas:before{content:\"\\f216\"}.fa-cart-plus:before{content:\"\\f217\"}.fa-cart-arrow-down:before{content:\"\\f218\"}.fa-diamond:before{content:\"\\f219\"}.fa-ship:before{content:\"\\f21a\"}.fa-user-secret:before{content:\"\\f21b\"}.fa-motorcycle:before{content:\"\\f21c\"}.fa-street-view:before{content:\"\\f21d\"}.fa-heartbeat:before{content:\"\\f21e\"}.fa-venus:before{content:\"\\f221\"}.fa-mars:before{content:\"\\f222\"}.fa-mercury:before{content:\"\\f223\"}.fa-intersex:before,.fa-transgender:before{content:\"\\f224\"}.fa-transgender-alt:before{content:\"\\f225\"}.fa-venus-double:before{content:\"\\f226\"}.fa-mars-double:before{content:\"\\f227\"}.fa-venus-mars:before{content:\"\\f228\"}.fa-mars-stroke:before{content:\"\\f229\"}.fa-mars-stroke-v:before{content:\"\\f22a\"}.fa-mars-stroke-h:before{content:\"\\f22b\"}.fa-neuter:before{content:\"\\f22c\"}.fa-genderless:before{content:\"\\f22d\"}.fa-facebook-official:before{content:\"\\f230\"}.fa-pinterest-p:before{content:\"\\f231\"}.fa-whatsapp:before{content:\"\\f232\"}.fa-server:before{content:\"\\f233\"}.fa-user-plus:before{content:\"\\f234\"}.fa-user-times:before{content:\"\\f235\"}.fa-bed:before,.fa-hotel:before{content:\"\\f236\"}.fa-viacoin:before{content:\"\\f237\"}.fa-train:before{content:\"\\f238\"}.fa-subway:before{content:\"\\f239\"}.fa-medium:before{content:\"\\f23a\"}.fa-y-combinator:before,.fa-yc:before{content:\"\\f23b\"}.fa-optin-monster:before{content:\"\\f23c\"}.fa-opencart:before{content:\"\\f23d\"}.fa-expeditedssl:before{content:\"\\f23e\"}.fa-battery-4:before,.fa-battery-full:before{content:\"\\f240\"}.fa-battery-3:before,.fa-battery-three-quarters:before{content:\"\\f241\"}.fa-battery-2:before,.fa-battery-half:before{content:\"\\f242\"}.fa-battery-1:before,.fa-battery-quarter:before{content:\"\\f243\"}.fa-battery-0:before,.fa-battery-empty:before{content:\"\\f244\"}.fa-mouse-pointer:before{content:\"\\f245\"}.fa-i-cursor:before{content:\"\\f246\"}.fa-object-group:before{content:\"\\f247\"}.fa-object-ungroup:before{content:\"\\f248\"}.fa-sticky-note:before{content:\"\\f249\"}.fa-sticky-note-o:before{content:\"\\f24a\"}.fa-cc-jcb:before{content:\"\\f24b\"}.fa-cc-diners-club:before{content:\"\\f24c\"}.fa-clone:before{content:\"\\f24d\"}.fa-balance-scale:before{content:\"\\f24e\"}.fa-hourglass-o:before{content:\"\\f250\"}.fa-hourglass-1:before,.fa-hourglass-start:before{content:\"\\f251\"}.fa-hourglass-2:before,.fa-hourglass-half:before{content:\"\\f252\"}.fa-hourglass-3:before,.fa-hourglass-end:before{content:\"\\f253\"}.fa-hourglass:before{content:\"\\f254\"}.fa-hand-grab-o:before,.fa-hand-rock-o:before{content:\"\\f255\"}.fa-hand-paper-o:before,.fa-hand-stop-o:before{content:\"\\f256\"}.fa-hand-scissors-o:before{content:\"\\f257\"}.fa-hand-lizard-o:before{content:\"\\f258\"}.fa-hand-spock-o:before{content:\"\\f259\"}.fa-hand-pointer-o:before{content:\"\\f25a\"}.fa-hand-peace-o:before{content:\"\\f25b\"}.fa-trademark:before{content:\"\\f25c\"}.fa-registered:before{content:\"\\f25d\"}.fa-creative-commons:before{content:\"\\f25e\"}.fa-gg:before{content:\"\\f260\"}.fa-gg-circle:before{content:\"\\f261\"}.fa-tripadvisor:before{content:\"\\f262\"}.fa-odnoklassniki:before{content:\"\\f263\"}.fa-odnoklassniki-square:before{content:\"\\f264\"}.fa-get-pocket:before{content:\"\\f265\"}.fa-wikipedia-w:before{content:\"\\f266\"}.fa-safari:before{content:\"\\f267\"}.fa-chrome:before{content:\"\\f268\"}.fa-firefox:before{content:\"\\f269\"}.fa-opera:before{content:\"\\f26a\"}.fa-internet-explorer:before{content:\"\\f26b\"}.fa-television:before,.fa-tv:before{content:\"\\f26c\"}.fa-contao:before{content:\"\\f26d\"}.fa-500px:before{content:\"\\f26e\"}.fa-amazon:before{content:\"\\f270\"}.fa-calendar-plus-o:before{content:\"\\f271\"}.fa-calendar-minus-o:before{content:\"\\f272\"}.fa-calendar-times-o:before{content:\"\\f273\"}.fa-calendar-check-o:before{content:\"\\f274\"}.fa-industry:before{content:\"\\f275\"}.fa-map-pin:before{content:\"\\f276\"}.fa-map-signs:before{content:\"\\f277\"}.fa-map-o:before{content:\"\\f278\"}.fa-map:before{content:\"\\f279\"}.fa-commenting:before{content:\"\\f27a\"}.fa-commenting-o:before{content:\"\\f27b\"}.fa-houzz:before{content:\"\\f27c\"}.fa-vimeo:before{content:\"\\f27d\"}.fa-black-tie:before{content:\"\\f27e\"}.fa-fonticons:before{content:\"\\f280\"}.fa-reddit-alien:before{content:\"\\f281\"}.fa-edge:before{content:\"\\f282\"}.fa-credit-card-alt:before{content:\"\\f283\"}.fa-codiepie:before{content:\"\\f284\"}.fa-modx:before{content:\"\\f285\"}.fa-fort-awesome:before{content:\"\\f286\"}.fa-usb:before{content:\"\\f287\"}.fa-product-hunt:before{content:\"\\f288\"}.fa-mixcloud:before{content:\"\\f289\"}.fa-scribd:before{content:\"\\f28a\"}.fa-pause-circle:before{content:\"\\f28b\"}.fa-pause-circle-o:before{content:\"\\f28c\"}.fa-stop-circle:before{content:\"\\f28d\"}.fa-stop-circle-o:before{content:\"\\f28e\"}.fa-shopping-bag:before{content:\"\\f290\"}.fa-shopping-basket:before{content:\"\\f291\"}.fa-hashtag:before{content:\"\\f292\"}.fa-bluetooth:before{content:\"\\f293\"}.fa-bluetooth-b:before{content:\"\\f294\"}.fa-percent:before{content:\"\\f295\"}.fa-gitlab:before{content:\"\\f296\"}.fa-wpbeginner:before{content:\"\\f297\"}.fa-wpforms:before{content:\"\\f298\"}.fa-envira:before{content:\"\\f299\"}.fa-universal-access:before{content:\"\\f29a\"}.fa-wheelchair-alt:before{content:\"\\f29b\"}.fa-question-circle-o:before{content:\"\\f29c\"}.fa-blind:before{content:\"\\f29d\"}.fa-audio-description:before{content:\"\\f29e\"}.fa-volume-control-phone:before{content:\"\\f2a0\"}.fa-braille:before{content:\"\\f2a1\"}.fa-assistive-listening-systems:before{content:\"\\f2a2\"}.fa-american-sign-language-interpreting:before,.fa-asl-interpreting:before{content:\"\\f2a3\"}.fa-deaf:before,.fa-deafness:before,.fa-hard-of-hearing:before{content:\"\\f2a4\"}.fa-glide:before{content:\"\\f2a5\"}.fa-glide-g:before{content:\"\\f2a6\"}.fa-sign-language:before,.fa-signing:before{content:\"\\f2a7\"}.fa-low-vision:before{content:\"\\f2a8\"}.fa-viadeo:before{content:\"\\f2a9\"}.fa-viadeo-square:before{content:\"\\f2aa\"}.fa-snapchat:before{content:\"\\f2ab\"}.fa-snapchat-ghost:before{content:\"\\f2ac\"}.fa-snapchat-square:before{content:\"\\f2ad\"}.fa-pied-piper:before{content:\"\\f2ae\"}.fa-first-order:before{content:\"\\f2b0\"}.fa-yoast:before{content:\"\\f2b1\"}.fa-themeisle:before{content:\"\\f2b2\"}.fa-google-plus-circle:before,.fa-google-plus-official:before{content:\"\\f2b3\"}.fa-fa:before,.fa-font-awesome:before{content:\"\\f2b4\"}.sr-only{position:absolute;width:1px;height:1px;padding:0;margin:-1px;overflow:hidden;clip:rect(0,0,0,0);border:0}.sr-only-focusable:active,.sr-only-focusable:focus{position:static;width:auto;height:auto;margin:0;overflow:visible;clip:auto}/*! * Preboot v2 * * Open sourced under MIT license by @mdo. * Some variables and mixins from Bootstrap (Apache 2 license). */.book-langs-index{width:100%;height:100%;padding:40px 0;margin:0;overflow:auto}@media (max-width:600px){.book-langs-index{padding:0}}.book-langs-index .inner{max-width:600px;width:100%;margin:0 auto;padding:30px;background:#fff;border-radius:3px}.book-langs-index .inner h3{margin:0}.book-langs-index .inner .languages{list-style:none;padding:20px 30px;margin-top:20px;border-top:1px solid #eee}.book-langs-index .inner .languages:after,.book-langs-index .inner .languages:before{content:\" \";display:table;line-height:0}.book-langs-index .inner .languages:after{clear:both}.book-langs-index .inner .languages li{width:50%;float:left;padding:10px 5px;font-size:16px}@media (max-width:600px){.book-langs-index .inner .languages li{width:100%;max-width:100%}}.book-header{font-family:\"Helvetica Neue\",Helvetica,Arial,sans-serif;overflow:visible;height:50px;padding:0 8px;z-index:2;font-size:.85em;color:#7e888b;background:0 0}.book-header .btn{display:block;height:50px;padding:0 15px;border-bottom:none;color:#ccc;text-transform:uppercase;line-height:50px;-webkit-box-shadow:none!important;box-shadow:none!important;position:relative;font-size:14px}.book-header .btn:hover{position:relative;text-decoration:none;color:#444;background:0 0}.book-header .btn:focus{outline:0}.book-header h1{margin:0;font-size:20px;font-weight:200;text-align:center;line-height:50px;opacity:0;-webkit-transition:opacity ease .4s;-moz-transition:opacity ease .4s;-o-transition:opacity ease .4s;transition:opacity ease .4s;padding-left:200px;padding-right:200px;-webkit-transition:opacity .2s ease;-moz-transition:opacity .2s ease;-o-transition:opacity .2s ease;transition:opacity .2s ease;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.book-header h1 a,.book-header h1 a:hover{color:inherit;text-decoration:none}@media (max-width:1000px){.book-header h1{display:none}}.book-header h1 i{display:none}.book-header:hover h1{opacity:1}.book.is-loading .book-header h1 i{display:inline-block}.book.is-loading .book-header h1 a{display:none}.dropdown{position:relative}.dropdown-menu{position:absolute;top:100%;left:0;z-index:100;display:none;float:left;min-width:160px;padding:0;margin:2px 0 0;list-style:none;font-size:14px;background-color:#fafafa;border:1px solid rgba(0,0,0,.07);border-radius:1px;-webkit-box-shadow:0 6px 12px rgba(0,0,0,.175);box-shadow:0 6px 12px rgba(0,0,0,.175);background-clip:padding-box}.dropdown-menu.open{display:block}.dropdown-menu.dropdown-left{left:auto;right:4%}.dropdown-menu.dropdown-left .dropdown-caret{right:14px;left:auto}.dropdown-menu .dropdown-caret{position:absolute;top:-8px;left:14px;width:18px;height:10px;float:left;overflow:hidden}.dropdown-menu .dropdown-caret .caret-outer{position:absolute;border-left:9px solid transparent;border-right:9px solid transparent;border-bottom:9px solid rgba(0,0,0,.1);height:auto;left:0;top:0;width:auto;display:inline-block;margin-left:-1px}.dropdown-menu .dropdown-caret .caret-inner{position:absolute;display:inline-block;margin-top:-1px;top:0;top:1px;border-left:9px solid transparent;border-right:9px solid transparent;border-bottom:9px solid #fafafa}.dropdown-menu .buttons{border-bottom:1px solid rgba(0,0,0,.07)}.dropdown-menu .buttons:after,.dropdown-menu .buttons:before{content:\" \";display:table;line-height:0}.dropdown-menu .buttons:after{clear:both}.dropdown-menu .buttons:last-child{border-bottom:none}.dropdown-menu .buttons .button{border:0;background-color:transparent;color:#a6a6a6;width:100%;text-align:center;float:left;line-height:1.42857143;padding:8px 4px}.dropdown-menu .buttons .button:hover{color:#444}.dropdown-menu .buttons .button:focus,.dropdown-menu .buttons .button:hover{outline:0}.dropdown-menu .buttons .button.size-2{width:50%}.dropdown-menu .buttons .button.size-3{width:33%}.book-summary{font-family:\"Helvetica Neue\",Helvetica,Arial,sans-serif;position:absolute;top:0;left:-300px;bottom:0;z-index:1;overflow-y:auto;width:300px;color:#364149;background:#fafafa;border-right:1px solid rgba(0,0,0,.07);-webkit-transition:left 250ms ease;-moz-transition:left 250ms ease;-o-transition:left 250ms ease;transition:left 250ms ease}.book-summary ul.summary{list-style:none;margin:0;padding:0;-webkit-transition:top .5s ease;-moz-transition:top .5s ease;-o-transition:top .5s ease;transition:top .5s ease}.book-summary ul.summary li{list-style:none}.book-summary ul.summary li.header{padding:10px 15px;padding-top:20px;text-transform:uppercase;color:#939da3}.book-summary ul.summary li.divider{height:1px;margin:7px 0;overflow:hidden;background:rgba(0,0,0,.07)}.book-summary ul.summary li i.fa-check{display:none;position:absolute;right:9px;top:16px;font-size:9px;color:#3c3}.book-summary ul.summary li.done>a{color:#364149;font-weight:400}.book-summary ul.summary li.done>a i{display:inline}.book-summary ul.summary li a,.book-summary ul.summary li span{display:block;padding:10px 15px;border-bottom:none;color:#364149;background:0 0;text-overflow:ellipsis;overflow:hidden;white-space:nowrap;position:relative}.book-summary ul.summary li a:hover{text-decoration:underline}.book-summary ul.summary li a:focus{outline:0}.book-summary ul.summary li.active>a{color:#008cff;background:0 0;text-decoration:none}.book-summary ul.summary li ul{padding-left:20px}@media (max-width:600px){.book-summary{width:calc(100% - 60px);bottom:0;left:-100%}}.book.with-summary .book-summary{left:0}.book.without-animation .book-summary{-webkit-transition:none!important;-moz-transition:none!important;-o-transition:none!important;transition:none!important}.book{position:relative;width:100%;height:100%}@media (min-width:600px){.book.with-summary .book-body{left:300px}}@media (max-width:600px){.book.with-summary{overflow:hidden}.book.with-summary .book-body{-webkit-transform:translate(calc(100% - 60px),0);-moz-transform:translate(calc(100% - 60px),0);-ms-transform:translate(calc(100% - 60px),0);-o-transform:translate(calc(100% - 60px),0);transform:translate(calc(100% - 60px),0)}}.book.without-animation .book-body{-webkit-transition:none!important;-moz-transition:none!important;-o-transition:none!important;transition:none!important}.book-body{position:absolute;top:0;right:0;left:0;bottom:0;overflow-y:auto;color:#000;background:#fff;-webkit-transition:left 250ms ease;-moz-transition:left 250ms ease;-o-transition:left 250ms ease;transition:left 250ms ease}.book-body .body-inner{position:absolute;top:0;right:0;left:0;bottom:0;overflow-y:auto}@media (max-width:1240px){.book-body{-webkit-transition:-webkit-transform 250ms ease;-moz-transition:-moz-transform 250ms ease;-o-transition:-o-transform 250ms ease;transition:transform 250ms ease;padding-bottom:20px}.book-body .body-inner{position:static;min-height:calc(100% - 50px)}}.page-wrapper{position:relative;outline:0}.page-inner{position:relative;max-width:800px;margin:0 auto;padding:20px 15px 40px 15px}.page-inner .btn-group .btn{border-radius:0;background:#eee;border:0}.buttons:after,.buttons:before{content:\" \";display:table;line-height:0}.buttons:after{clear:both}.button{border:0;background-color:transparent;background:#eee;color:#666;width:100%;text-align:center;float:left;line-height:1.42857143;padding:8px 4px}.button:hover{color:#444}.button:focus,.button:hover{outline:0}.button.size-2{width:50%}.button.size-3{width:33%}.markdown-section{display:block;word-wrap:break-word;overflow:hidden;color:#333;line-height:1.7;text-size-adjust:100%;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%;-moz-text-size-adjust:100%}.markdown-section *{box-sizing:border-box;-webkit-box-sizing:border-box;font-size:inherit}.markdown-section>:first-child{margin-top:0!important}.markdown-section>:last-child{margin-bottom:0!important}.markdown-section blockquote,.markdown-section code,.markdown-section figure,.markdown-section img,.markdown-section pre,.markdown-section table,.markdown-section tr{page-break-inside:avoid}.markdown-section h2,.markdown-section h3,.markdown-section h4,.markdown-section h5,.markdown-section p{orphans:3;widows:3}.markdown-section h1,.markdown-section h2,.markdown-section h3,.markdown-section h4,.markdown-section h5{page-break-after:avoid}.markdown-section b,.markdown-section strong{font-weight:700}.markdown-section em{font-style:italic}.markdown-section blockquote,.markdown-section dl,.markdown-section ol,.markdown-section p,.markdown-section table,.markdown-section ul{margin-top:0;margin-bottom:.85em}.markdown-section a{color:#4183c4;text-decoration:none;background:0 0}.markdown-section a:active,.markdown-section a:focus,.markdown-section a:hover{outline:0;text-decoration:underline}.markdown-section img{border:0;max-width:100%}.markdown-section hr{height:4px;padding:0;margin:1.7em 0;overflow:hidden;background-color:#e7e7e7;border:none}.markdown-section hr:after,.markdown-section hr:before{display:table;content:\" \"}.markdown-section hr:after{clear:both}.markdown-section h1,.markdown-section h2,.markdown-section h3,.markdown-section h4,.markdown-section h5,.markdown-section h6{margin-top:1.275em;margin-bottom:.85em;font-weight:700}.markdown-section h1{font-size:2em}.markdown-section h2{font-size:1.75em}.markdown-section h3{font-size:1.5em}.markdown-section h4{font-size:1.25em}.markdown-section h5{font-size:1em}.markdown-section h6{font-size:1em;color:#777}.markdown-section code,.markdown-section pre{font-family:Consolas,\"Liberation Mono\",Menlo,Courier,monospace;direction:ltr;margin:0;padding:0;border:none;color:inherit}.markdown-section pre{overflow:auto;word-wrap:normal;margin:0;padding:.85em 1em;margin-bottom:1.275em;background:#f7f7f7}.markdown-section pre>code{display:inline;max-width:initial;padding:0;margin:0;overflow:initial;line-height:inherit;font-size:.85em;white-space:pre;background:0 0}.markdown-section pre>code:after,.markdown-section pre>code:before{content:normal}.markdown-section code{padding:.2em;margin:0;font-size:.85em;background-color:#f7f7f7}.markdown-section code:after,.markdown-section code:before{letter-spacing:-.2em;content:\"\\00a0\"}.markdown-section table{display:table;width:100%;border-collapse:collapse;border-spacing:0;overflow:auto}.markdown-section table td,.markdown-section table th{padding:6px 13px;border:1px solid #ddd}.markdown-section table tr{background-color:#fff;border-top:1px solid #ccc}.markdown-section table tr:nth-child(2n){background-color:#f8f8f8}.markdown-section table th{font-weight:700}.markdown-section ol,.markdown-section ul{padding:0;margin:0;margin-bottom:.85em;padding-left:2em}.markdown-section ol ol,.markdown-section ol ul,.markdown-section ul ol,.markdown-section ul ul{margin-top:0;margin-bottom:0}.markdown-section ol ol{list-style-type:lower-roman}.markdown-section blockquote{margin:0;margin-bottom:.85em;padding:0 15px;color:#858585;border-left:4px solid #e5e5e5}.markdown-section blockquote:first-child{margin-top:0}.markdown-section blockquote:last-child{margin-bottom:0}.markdown-section dl{padding:0}.markdown-section dl dt{padding:0;margin-top:.85em;font-style:italic;font-weight:700}.markdown-section dl dd{padding:0 .85em;margin-bottom:.85em}.markdown-section dd{margin-left:0}.markdown-section .glossary-term{cursor:help;text-decoration:underline}.navigation{position:absolute;top:50px;bottom:0;margin:0;max-width:150px;min-width:90px;display:flex;justify-content:center;align-content:center;flex-direction:column;font-size:40px;color:#ccc;text-align:center;-webkit-transition:all 350ms ease;-moz-transition:all 350ms ease;-o-transition:all 350ms ease;transition:all 350ms ease}.navigation:hover{text-decoration:none;color:#444}.navigation.navigation-next{right:0}.navigation.navigation-prev{left:0}@media (max-width:1240px){.navigation{position:static;top:auto;max-width:50%;width:50%;display:inline-block;float:left}.navigation.navigation-unique{max-width:100%;width:100%}}#book-search-input{padding:6px;background:0 0;transition:top .5s ease;background:#fff;border-bottom:1px solid rgba(0,0,0,.07);border-top:1px solid rgba(0,0,0,.07);margin-bottom:10px;margin-top:-1px}#book-search-input input,#book-search-input input:focus,#book-search-input input:hover{width:100%;background:0 0;border:1px solid transparent;box-shadow:none;outline:0;line-height:22px;padding:7px 7px;color:inherit}#book-search-results{opacity:1}#book-search-results .search-results .search-results-title{text-transform:uppercase;text-align:center;font-weight:200;margin-bottom:35px;opacity:.6}#book-search-results .search-results .has-results .search-results-item{display:block;word-wrap:break-word;overflow:hidden;color:#333;line-height:1.7;text-size-adjust:100%;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%;-moz-text-size-adjust:100%}#book-search-results .search-results .has-results .search-results-item *{box-sizing:border-box;-webkit-box-sizing:border-box;font-size:inherit}#book-search-results .search-results .has-results .search-results-item>:first-child{margin-top:0!important}#book-search-results .search-results .has-results .search-results-item>:last-child{margin-bottom:0!important}#book-search-results .search-results .has-results .search-results-item blockquote,#book-search-results .search-results .has-results .search-results-item code,#book-search-results .search-results .has-results .search-results-item figure,#book-search-results .search-results .has-results .search-results-item img,#book-search-results .search-results .has-results .search-results-item pre,#book-search-results .search-results .has-results .search-results-item table,#book-search-results .search-results .has-results .search-results-item tr{page-break-inside:avoid}#book-search-results .search-results .has-results .search-results-item h2,#book-search-results .search-results .has-results .search-results-item h3,#book-search-results .search-results .has-results .search-results-item h4,#book-search-results .search-results .has-results .search-results-item h5,#book-search-results .search-results .has-results .search-results-item p{orphans:3;widows:3}#book-search-results .search-results .has-results .search-results-item h1,#book-search-results .search-results .has-results .search-results-item h2,#book-search-results .search-results .has-results .search-results-item h3,#book-search-results .search-results .has-results .search-results-item h4,#book-search-results .search-results .has-results .search-results-item h5{page-break-after:avoid}#book-search-results .search-results .has-results .search-results-item b,#book-search-results .search-results .has-results .search-results-item strong{font-weight:700}#book-search-results .search-results .has-results .search-results-item em{font-style:italic}#book-search-results .search-results .has-results .search-results-item blockquote,#book-search-results .search-results .has-results .search-results-item dl,#book-search-results .search-results .has-results .search-results-item ol,#book-search-results .search-results .has-results .search-results-item p,#book-search-results .search-results .has-results .search-results-item table,#book-search-results .search-results .has-results .search-results-item ul{margin-top:0;margin-bottom:.85em}#book-search-results .search-results .has-results .search-results-item a{color:#4183c4;text-decoration:none;background:0 0}#book-search-results .search-results .has-results .search-results-item a:active,#book-search-results .search-results .has-results .search-results-item a:focus,#book-search-results .search-results .has-results .search-results-item a:hover{outline:0;text-decoration:underline}#book-search-results .search-results .has-results .search-results-item img{border:0;max-width:100%}#book-search-results .search-results .has-results .search-results-item hr{height:4px;padding:0;margin:1.7em 0;overflow:hidden;background-color:#e7e7e7;border:none}#book-search-results .search-results .has-results .search-results-item hr:after,#book-search-results .search-results .has-results .search-results-item hr:before{display:table;content:\" \"}#book-search-results .search-results .has-results .search-results-item hr:after{clear:both}#book-search-results .search-results .has-results .search-results-item h1,#book-search-results .search-results .has-results .search-results-item h2,#book-search-results .search-results .has-results .search-results-item h3,#book-search-results .search-results .has-results .search-results-item h4,#book-search-results .search-results .has-results .search-results-item h5,#book-search-results .search-results .has-results .search-results-item h6{margin-top:1.275em;margin-bottom:.85em;font-weight:700}#book-search-results .search-results .has-results .search-results-item h1{font-size:2em}#book-search-results .search-results .has-results .search-results-item h2{font-size:1.75em}#book-search-results .search-results .has-results .search-results-item h3{font-size:1.5em}#book-search-results .search-results .has-results .search-results-item h4{font-size:1.25em}#book-search-results .search-results .has-results .search-results-item h5{font-size:1em}#book-search-results .search-results .has-results .search-results-item h6{font-size:1em;color:#777}#book-search-results .search-results .has-results .search-results-item code,#book-search-results .search-results .has-results .search-results-item pre{font-family:Consolas,\"Liberation Mono\",Menlo,Courier,monospace;direction:ltr;margin:0;padding:0;border:none;color:inherit}#book-search-results .search-results .has-results .search-results-item pre{overflow:auto;word-wrap:normal;margin:0;padding:.85em 1em;margin-bottom:1.275em;background:#f7f7f7}#book-search-results .search-results .has-results .search-results-item pre>code{display:inline;max-width:initial;padding:0;margin:0;overflow:initial;line-height:inherit;font-size:.85em;white-space:pre;background:0 0}#book-search-results .search-results .has-results .search-results-item pre>code:after,#book-search-results .search-results .has-results .search-results-item pre>code:before{content:normal}#book-search-results .search-results .has-results .search-results-item code{padding:.2em;margin:0;font-size:.85em;background-color:#f7f7f7}#book-search-results .search-results .has-results .search-results-item code:after,#book-search-results .search-results .has-results .search-results-item code:before{letter-spacing:-.2em;content:\"\\00a0\"}#book-search-results .search-results .has-results .search-results-item table{display:table;width:100%;border-collapse:collapse;border-spacing:0;overflow:auto}#book-search-results .search-results .has-results .search-results-item table td,#book-search-results .search-results .has-results .search-results-item table th{padding:6px 13px;border:1px solid #ddd}#book-search-results .search-results .has-results .search-results-item table tr{background-color:#fff;border-top:1px solid #ccc}#book-search-results .search-results .has-results .search-results-item table tr:nth-child(2n){background-color:#f8f8f8}#book-search-results .search-results .has-results .search-results-item table th{font-weight:700}#book-search-results .search-results .has-results .search-results-item ol,#book-search-results .search-results .has-results .search-results-item ul{padding:0;margin:0;margin-bottom:.85em;padding-left:2em}#book-search-results .search-results .has-results .search-results-item ol ol,#book-search-results .search-results .has-results .search-results-item ol ul,#book-search-results .search-results .has-results .search-results-item ul ol,#book-search-results .search-results .has-results .search-results-item ul ul{margin-top:0;margin-bottom:0}#book-search-results .search-results .has-results .search-results-item ol ol{list-style-type:lower-roman}#book-search-results .search-results .has-results .search-results-item blockquote{margin:0;margin-bottom:.85em;padding:0 15px;color:#858585;border-left:4px solid #e5e5e5}#book-search-results .search-results .has-results .search-results-item blockquote:first-child{margin-top:0}#book-search-results .search-results .has-results .search-results-item blockquote:last-child{margin-bottom:0}#book-search-results .search-results .has-results .search-results-item dl{padding:0}#book-search-results .search-results .has-results .search-results-item dl dt{padding:0;margin-top:.85em;font-style:italic;font-weight:700}#book-search-results .search-results .has-results .search-results-item dl dd{padding:0 .85em;margin-bottom:.85em}#book-search-results .search-results .has-results .search-results-item dd{margin-left:0}#book-search-results .search-results .has-results .search-results-item h3{margin-top:0;margin-bottom:0}#book-search-results .search-results .no-results{padding:40px 0}body.search-loading #book-search-results{opacity:.3}body.with-search .navigation{display:none}*{-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;-webkit-overflow-scrolling:touch;-webkit-tap-highlight-color:transparent;-webkit-text-size-adjust:none;-webkit-touch-callout:none;-webkit-font-smoothing:antialiased}a{text-decoration:none}body,html{height:100%}html{font-size:62.5%}body{text-rendering:optimizeLegibility;font-smoothing:antialiased;font-family:\"Helvetica Neue\",Helvetica,Arial,sans-serif;font-size:14px;letter-spacing:.2px;text-size-adjust:100%;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}"},{"title":"","date":"2018-02-01T07:21:14.285Z","updated":"2018-01-29T15:28:36.148Z","comments":true,"path":"esjava/query-dsl/compound-queries.html","permalink":"http://test.quanke.name/esjava/query-dsl/compound-queries.html","excerpt":"","text":"Compound queries · GitBook Introduction Dependency Client Transport Client XPack Transport Client Document APIs Index API Get API Delete API Delete By Query API Update API Multi Get API Bulk API Using Bulk Processor Search API Using scrolls in Java MultiSearch API Using Aggregations Terminate After Search Template Aggregations Structuring aggregations Metrics aggregations Bucket aggregations Query DSL Match All Query Full text queries Term level queries Compound queries Joining queries Geo queries Specialized queries Span queries Indexed Scripts API Script Language Java API Administration Indices Administration Cluster Administration Published with GitBook Compound queries Compound queries &#x590D;&#x5408;&#x67E5;&#x8BE2;&#x7528;&#x6765;&#x5305;&#x88C5;&#x5176;&#x4ED6;&#x590D;&#x5408;&#x6216;&#x8005;&#x53F6;&#x5B50;&#x67E5;&#x8BE2;&#xFF0C;&#x4E00;&#x65B9;&#x9762;&#x53EF;&#x7EFC;&#x5408;&#x5176;&#x7ED3;&#x679C;&#x548C;&#x5206;&#x6570;&#xFF0C;&#x4ECE;&#x800C;&#x6539;&#x53D8;&#x5B83;&#x7684;&#x884C;&#x4E3A;&#xFF0C;&#x53E6;&#x4E00;&#x65B9;&#x9762;&#x53EF;&#x4ECE;&#x67E5;&#x8BE2;&#x5207;&#x6362;&#x5230;&#x8FC7;&#x6EE4;&#x5668;&#x4E0A;&#x4E0B;&#x6587;&#x3002;&#x6B64;&#x7C7B;&#x67E5;&#x8BE2;&#x5305;&#x542B;&#xFF1A; constant_score &#x67E5;&#x8BE2; &#x8FD9;&#x662F;&#x4E00;&#x4E2A;&#x5305;&#x88C5;&#x5176;&#x4ED6;&#x67E5;&#x8BE2;&#x7684;&#x67E5;&#x8BE2;&#xFF0C;&#x5E76;&#x4E14;&#x5728;&#x8FC7;&#x6EE4;&#x5668;&#x4E0A;&#x4E0B;&#x6587;&#x4E2D;&#x6267;&#x884C;&#x3002;&#x4E0E;&#x6B64;&#x67E5;&#x8BE2;&#x5339;&#x914D;&#x7684;&#x6240;&#x6709;&#x6587;&#x4EF6;&#x90FD;&#x9700;&#x8981;&#x8FD4;&#x56DE;&#x76F8;&#x540C;&#x7684;&#x201C;&#x5E38;&#x91CF;&#x201D; _score &#x3002; &#x67E5;&#x770B;Constant Score Query QueryBuilder qb = constantScoreQuery( termQuery(&quot;name&quot;,&quot;kimchy&quot;) //&#x67E5;&#x8BE2;&#x8BED;&#x53E5; ) .boost(2.0f); //&#x5206;&#x6570; bool &#x67E5;&#x8BE2; &#x7EC4;&#x5408;&#x591A;&#x4E2A;&#x53F6;&#x5B50;&#x5E76;&#x53D1;&#x67E5;&#x8BE2;&#x6216;&#x590D;&#x5408;&#x67E5;&#x8BE2;&#x6761;&#x4EF6;&#x7684;&#x9ED8;&#x8BA4;&#x67E5;&#x8BE2;&#x7C7B;&#x578B;&#xFF0C;&#x4F8B;&#x5982;must, should, must_not, &#x4EE5;&#x53CA; filter &#x6761;&#x4EF6;&#x3002; &#x5728; must &#x548C; should &#x5B50;&#x53E5;&#x4ED6;&#x4EEC;&#x7684;&#x5206;&#x6570;&#x76F8;&#x7ED3;&#x5408;-&#x5339;&#x914D;&#x6761;&#x4EF6;&#x8D8A;&#x591A;&#xFF0C;&#x9884;&#x671F;&#x8D8A;&#x597D;-&#x800C; must_not &#x548C; filter &#x5B50;&#x53E5;&#x5728;&#x8FC7;&#x6EE4;&#x5668;&#x4E0A;&#x4E0B;&#x6587;&#x4E2D;&#x6267;&#x884C;&#x3002; &#x67E5;&#x770B;Bool Query QueryBuilder qb = boolQuery() .must(termQuery(&quot;content&quot;, &quot;test1&quot;)) //must query .must(termQuery(&quot;content&quot;, &quot;test4&quot;)) .mustNot(termQuery(&quot;content&quot;, &quot;test2&quot;)) //must not query .should(termQuery(&quot;content&quot;, &quot;test3&quot;)) // should query .filter(termQuery(&quot;content&quot;, &quot;test5// &#x4E0E;&#x4E00;&#x822C;&#x67E5;&#x8BE2;&#x4F5C;&#x7528;&#x4E00;&#x6837;&#xFF0C;&#x53EA;&#x4E0D;&#x8FC7;&#x4E0D;&#x53C2;&#x4E0E;&#x8BC4;&#x5206; dis_max &#x67E5;&#x8BE2; &#x652F;&#x6301;&#x591A;&#x5E76;&#x53D1;&#x67E5;&#x8BE2;&#x7684;&#x67E5;&#x8BE2;&#xFF0C;&#x5E76;&#x53EF;&#x8FD4;&#x56DE;&#x4E0E;&#x4EFB;&#x610F;&#x67E5;&#x8BE2;&#x6761;&#x4EF6;&#x5B50;&#x53E5;&#x5339;&#x914D;&#x7684;&#x4EFB;&#x4F55;&#x6587;&#x6863;&#x7C7B;&#x578B;&#x3002;&#x4E0E; bool &#x67E5;&#x8BE2;&#x53EF;&#x4EE5;&#x5C06;&#x6240;&#x6709;&#x5339;&#x914D;&#x67E5;&#x8BE2;&#x7684;&#x5206;&#x6570;&#x76F8;&#x7ED3;&#x5408;&#x4F7F;&#x7528;&#x7684;&#x65B9;&#x5F0F;&#x4E0D;&#x540C;&#x7684;&#x662F;&#xFF0C;dis_max &#x67E5;&#x8BE2;&#x53EA;&#x4F7F;&#x7528;&#x6700;&#x4F73;&#x5339;&#x914D;&#x67E5;&#x8BE2;&#x6761;&#x4EF6;&#x7684;&#x5206;&#x6570;&#x3002; &#x67E5;&#x770B;Dis Max Query QueryBuilder qb = disMaxQuery() .add(termQuery(&quot;name&quot;, &quot;kimchy&quot;)) .add(termQuery(&quot;name&quot;, &quot;elasticsearch&quot;)) .boost(1.2f) //boost factor .tieBreaker(0.7f); //tie breaker function_score &#x67E5;&#x8BE2; &#x4F7F;&#x7528;&#x51FD;&#x6570;&#x4FEE;&#x6539;&#x4E3B;&#x67E5;&#x8BE2;&#x8FD4;&#x56DE;&#x7684;&#x5206;&#x6570;&#xFF0C;&#x4EE5;&#x8003;&#x8651;&#x8BF8;&#x5982;&#x6D41;&#x884C;&#x5EA6;&#xFF0C;&#x65B0;&#x8FD1;&#x5EA6;&#xFF0C;&#x8DDD;&#x79BB;&#x6216;&#x4F7F;&#x7528;&#x811A;&#x672C;&#x5B9E;&#x73B0;&#x7684;&#x81EA;&#x5B9A;&#x4E49;&#x7B97;&#x6CD5;&#x7B49;&#x56E0;&#x7D20;&#x3002; &#x67E5;&#x770B;Function Score Query import static org.elasticsearch.index.query.functionscore.ScoreFunctionBuilders.*; FilterFunctionBuilder[] functions = { new FunctionScoreQueryBuilder.FilterFunctionBuilder( matchQuery(&quot;name&quot;, &quot;kimchy&quot;), //&#x6839;&#x636E;&#x67E5;&#x8BE2;&#x6DFB;&#x52A0;&#x7B2C;&#x4E00;&#x4E2A;function randomFunction(&quot;ABCDEF&quot;)), //&#x6839;&#x636E;&#x7ED9;&#x5B9A;&#x7684;&#x79CD;&#x5B50;&#x968F;&#x673A;&#x5206;&#x6570; new FunctionScoreQueryBuilder.FilterFunctionBuilder( exponentialDecayFunction(&quot;age&quot;, 0L, 1L)) //&#x6839;&#x636E;&#x5E74;&#x9F84;&#x5B57;&#x6BB5;&#x6DFB;&#x52A0;&#x53E6;&#x4E00;&#x4E2A;function }; QueryBuilder qb = QueryBuilders.functionScoreQuery(functions); boosting &#x67E5;&#x8BE2; &#x8FD4;&#x56DE;&#x5339;&#x914D; positive &#x67E5;&#x8BE2;&#x7684;&#x6587;&#x6863;&#xFF0C;&#x5E76;&#x4E14;&#x5F53;&#x51CF;&#x5C11;&#x6587;&#x6863;&#x7684;&#x5206;&#x6570;&#x65F6;&#x5176;&#x7ED3;&#x679C;&#x4E5F;&#x5339;&#x914D; negative &#x67E5;&#x8BE2;&#x3002; &#x67E5;&#x770B;Boosting Query QueryBuilder qb = boostingQuery( termQuery(&quot;name&quot;,&quot;kimchy&quot;), termQuery(&quot;name&quot;,&quot;dadoonet&quot;)) .negativeBoost(0.2f); indices &#x67E5;&#x8BE2; &#x5BF9;&#x6307;&#x5B9A;&#x7684;&#x7D22;&#x5F15;&#x6267;&#x884C;&#x4E00;&#x4E2A;&#x67E5;&#x8BE2;&#xFF0C;&#x5BF9;&#x5176;&#x4ED6;&#x7D22;&#x5F15;&#x6267;&#x884C;&#x53E6;&#x4E00;&#x4E2A;&#x67E5;&#x8BE2;&#x3002; &#x67E5;&#x770B;Indices Query &#x5728;5.0.0&#x4E2D;&#x5DF2;&#x5F03;&#x7528;&#x3002;&#x7528;&#x641C;&#x7D22; _index &#x5B57;&#x6BB5;&#x6765;&#x4EE3;&#x66FF; // Using another query when no match for the main one QueryBuilder qb = indicesQuery( termQuery(&quot;tag&quot;, &quot;wow&quot;), &quot;index1&quot;, &quot;index2&quot; ).noMatchQuery(termQuery(&quot;tag&quot;, &quot;kow&quot;)); // Using all (match all) or none (match no documents) QueryBuilder qb = indicesQuery( termQuery(&quot;tag&quot;, &quot;wow&quot;), &quot;index1&quot;, &quot;index2&quot; ).noMatchQuery(&quot;all&quot;); results matching \"\" No results matching \"\" var gitbook = gitbook || []; gitbook.push(function() { gitbook.page.hasChanged({\"page\":{\"title\":\"Compound queries\",\"level\":\"1.7.4\",\"depth\":2,\"next\":{\"title\":\"Joining queries\",\"level\":\"1.7.5\",\"depth\":2,\"path\":\"query-dsl/joining-queries.md\",\"ref\":\"query-dsl/joining-queries.md\",\"articles\":[]},\"previous\":{\"title\":\"Term level queries\",\"level\":\"1.7.3\",\"depth\":2,\"path\":\"query-dsl/term-level-queries.md\",\"ref\":\"query-dsl/term-level-queries.md\",\"articles\":[]},\"dir\":\"ltr\"},\"config\":{\"gitbook\":\"*\",\"theme\":\"default\",\"variables\":{},\"plugins\":[],\"pluginsConfig\":{\"highlight\":{},\"search\":{},\"lunr\":{\"maxIndexSize\":1000000,\"ignoreSpecialCharacters\":false},\"sharing\":{\"facebook\":true,\"twitter\":true,\"google\":false,\"weibo\":false,\"instapaper\":false,\"vk\":false,\"all\":[\"facebook\",\"google\",\"twitter\",\"weibo\",\"instapaper\"]},\"fontsettings\":{\"theme\":\"white\",\"family\":\"sans\",\"size\":2},\"theme-default\":{\"styles\":{\"website\":\"styles/website.css\",\"pdf\":\"styles/pdf.css\",\"epub\":\"styles/epub.css\",\"mobi\":\"styles/mobi.css\",\"ebook\":\"styles/ebook.css\",\"print\":\"styles/print.css\"},\"showLevel\":false}},\"structure\":{\"langs\":\"LANGS.md\",\"readme\":\"README.md\",\"glossary\":\"GLOSSARY.md\",\"summary\":\"SUMMARY.md\"},\"pdf\":{\"pageNumbers\":true,\"fontSize\":12,\"fontFamily\":\"Arial\",\"paperSize\":\"a4\",\"chapterMark\":\"pagebreak\",\"pageBreaksBefore\":\"/\",\"margin\":{\"right\":62,\"left\":62,\"top\":56,\"bottom\":56}},\"styles\":{\"website\":\"styles/website.css\",\"pdf\":\"styles/pdf.css\",\"epub\":\"styles/epub.css\",\"mobi\":\"styles/mobi.css\",\"ebook\":\"styles/ebook.css\",\"print\":\"styles/print.css\"}},\"file\":{\"path\":\"query-dsl/compound-queries.md\",\"mtime\":\"2017-11-08T08:39:31.968Z\",\"type\":\"markdown\"},\"gitbook\":{\"version\":\"3.2.3\",\"time\":\"2018-01-29T15:28:32.108Z\"},\"basePath\":\"..\",\"book\":{\"language\":\"\"}}); });"},{"title":"","date":"2018-02-01T07:21:14.286Z","updated":"2018-01-29T15:28:33.713Z","comments":true,"path":"esjava/query-dsl/compound-queries.html","permalink":"http://test.quanke.name/esjava/query-dsl/compound-queries.html","excerpt":"","text":"Compound queries复合查询用来包装其他复合或者叶子查询，一方面可综合其结果和分数，从而改变它的行为，另一方面可从查询切换到过滤器上下文。此类查询包含： constant_score 查询 这是一个包装其他查询的查询，并且在过滤器上下文中执行。与此查询匹配的所有文件都需要返回相同的“常量” _score 。 查看Constant Score Query QueryBuilder qb = constantScoreQuery( termQuery(&quot;name&quot;,&quot;kimchy&quot;) //查询语句 ) .boost(2.0f); //分数 bool 查询 组合多个叶子并发查询或复合查询条件的默认查询类型，例如must, should, must_not, 以及 filter 条件。 在 must 和 should 子句他们的分数相结合-匹配条件越多，预期越好-而 must_not 和 filter 子句在过滤器上下文中执行。 查看Bool Query QueryBuilder qb = boolQuery() .must(termQuery(&quot;content&quot;, &quot;test1&quot;)) //must query .must(termQuery(&quot;content&quot;, &quot;test4&quot;)) .mustNot(termQuery(&quot;content&quot;, &quot;test2&quot;)) //must not query .should(termQuery(&quot;content&quot;, &quot;test3&quot;)) // should query .filter(termQuery(&quot;content&quot;, &quot;test5// 与一般查询作用一样，只不过不参与评分 dis_max 查询 支持多并发查询的查询，并可返回与任意查询条件子句匹配的任何文档类型。与 bool 查询可以将所有匹配查询的分数相结合使用的方式不同的是，dis_max 查询只使用最佳匹配查询条件的分数。 查看Dis Max Query QueryBuilder qb = disMaxQuery() .add(termQuery(&quot;name&quot;, &quot;kimchy&quot;)) .add(termQuery(&quot;name&quot;, &quot;elasticsearch&quot;)) .boost(1.2f) //boost factor .tieBreaker(0.7f); //tie breaker function_score 查询 使用函数修改主查询返回的分数，以考虑诸如流行度，新近度，距离或使用脚本实现的自定义算法等因素。 查看Function Score Query import static org.elasticsearch.index.query.functionscore.ScoreFunctionBuilders.*; FilterFunctionBuilder[] functions = &#123; new FunctionScoreQueryBuilder.FilterFunctionBuilder( matchQuery(&quot;name&quot;, &quot;kimchy&quot;), //根据查询添加第一个function randomFunction(&quot;ABCDEF&quot;)), //根据给定的种子随机分数 new FunctionScoreQueryBuilder.FilterFunctionBuilder( exponentialDecayFunction(&quot;age&quot;, 0L, 1L)) //根据年龄字段添加另一个function &#125;;QueryBuilder qb = QueryBuilders.functionScoreQuery(functions); boosting 查询 返回匹配 positive 查询的文档，并且当减少文档的分数时其结果也匹配 negative 查询。 查看Boosting Query QueryBuilder qb = boostingQuery( termQuery(&quot;name&quot;,&quot;kimchy&quot;), termQuery(&quot;name&quot;,&quot;dadoonet&quot;)) .negativeBoost(0.2f); indices 查询 对指定的索引执行一个查询，对其他索引执行另一个查询。 查看Indices Query 在5.0.0中已弃用。用搜索 _index 字段来代替 // Using another query when no match for the main oneQueryBuilder qb = indicesQuery( termQuery(&quot;tag&quot;, &quot;wow&quot;), &quot;index1&quot;, &quot;index2&quot; ).noMatchQuery(termQuery(&quot;tag&quot;, &quot;kow&quot;)); // Using all (match all) or none (match no documents)QueryBuilder qb = indicesQuery( termQuery(&quot;tag&quot;, &quot;wow&quot;), &quot;index1&quot;, &quot;index2&quot; ).noMatchQuery(&quot;all&quot;);"},{"title":"","date":"2018-02-01T07:21:14.288Z","updated":"2018-01-29T15:28:35.993Z","comments":true,"path":"esjava/query-dsl/full-text-queries.html","permalink":"http://test.quanke.name/esjava/query-dsl/full-text-queries.html","excerpt":"","text":"Full text queries · GitBook Introduction Dependency Client Transport Client XPack Transport Client Document APIs Index API Get API Delete API Delete By Query API Update API Multi Get API Bulk API Using Bulk Processor Search API Using scrolls in Java MultiSearch API Using Aggregations Terminate After Search Template Aggregations Structuring aggregations Metrics aggregations Bucket aggregations Query DSL Match All Query Full text queries Term level queries Compound queries Joining queries Geo queries Specialized queries Span queries Indexed Scripts API Script Language Java API Administration Indices Administration Cluster Administration Published with GitBook Full text queries Full text queries &#x5168;&#x6587;&#x641C;&#x7D22; &#x9AD8;&#x7EA7;&#x522B;&#x7684;&#x5168;&#x6587;&#x641C;&#x7D22;&#x901A;&#x5E38;&#x7528;&#x4E8E;&#x5728;&#x5168;&#x6587;&#x5B57;&#x6BB5;&#xFF08;&#x4F8B;&#x5982;&#xFF1A;&#x4E00;&#x5C01;&#x90AE;&#x4EF6;&#x7684;&#x6B63;&#x6587;&#xFF09;&#x4E0A;&#x8FDB;&#x884C;&#x5168;&#x6587;&#x641C;&#x7D22;&#x3002;&#x5B83;&#x4EEC;&#x4E86;&#x89E3;&#x5982;&#x4F55;&#x5206;&#x6790;&#x67E5;&#x8BE2;&#x7684;&#x5B57;&#x6BB5;&#xFF0C;&#x5E76;&#x5728;&#x6267;&#x884C;&#x4E4B;&#x524D;&#x5C06;&#x6BCF;&#x4E2A;&#x5B57;&#x6BB5;&#x7684;&#x5206;&#x6790;&#x5668;&#xFF08;&#x6216;&#x641C;&#x7D22;&#x5206;&#x6790;&#x5668;&#xFF09;&#x5E94;&#x7528;&#x4E8E;&#x67E5;&#x8BE2;&#x5B57;&#x7B26;&#x4E32;&#x3002; &#x8FD9;&#x6837;&#x7684;&#x67E5;&#x8BE2;&#x6709;&#x4EE5;&#x4E0B;&#x8FD9;&#x4E9B;&#xFF1A; &#x5339;&#x914D;&#x67E5;&#x8BE2;&#xFF08;match query&#xFF09; &#x7528;&#x4E8E;&#x6267;&#x884C;&#x5168;&#x6587;&#x67E5;&#x8BE2;&#x7684;&#x6807;&#x51C6;&#x67E5;&#x8BE2;&#xFF0C;&#x5305;&#x62EC;&#x6A21;&#x7CCA;&#x5339;&#x914D;&#x548C;&#x8BCD;&#x7EC4;&#x6216;&#x90BB;&#x8FD1;&#x7A0B;&#x5EA6;&#x7684;&#x67E5;&#x8BE2; &#x67E5;&#x770B; Match Query QueryBuilder qb = matchQuery( &quot;name&quot;, //field &#x5B57;&#x6BB5; &quot;kimchy elasticsearch&quot; // text ); &#x591A;&#x5B57;&#x6BB5;&#x67E5;&#x8BE2;&#xFF08;multi_match query&#xFF09; &#x53EF;&#x4EE5;&#x7528;&#x6765;&#x5BF9;&#x591A;&#x4E2A;&#x5B57;&#x6BB5;&#x7684;&#x7248;&#x672C;&#x8FDB;&#x884C;&#x5339;&#x914D;&#x67E5;&#x8BE2; &#x67E5;&#x770B; Multi Match Query QueryBuilder qb = multiMatchQuery( &quot;kimchy elasticsearch&quot;, //text &quot;user&quot;, &quot;message&quot; //fields &#x591A;&#x4E2A;&#x5B57;&#x6BB5; ); &#x5E38;&#x7528;&#x672F;&#x8BED;&#x67E5;&#x8BE2;&#xFF08;common_terms query&#xFF09; &#x53EF;&#x4EE5;&#x5BF9;&#x4E00;&#x4E9B;&#x6BD4;&#x8F83;&#x4E13;&#x4E1A;&#x7684;&#x504F;&#x95E8;&#x8BCD;&#x8BED;&#x8FDB;&#x884C;&#x7684;&#x66F4;&#x52A0;&#x4E13;&#x4E1A;&#x7684;&#x67E5;&#x8BE2; &#x67E5;&#x770B;Common Terms Query QueryBuilder qb = commonTermsQuery(&quot;name&quot;, //field &#x5B57;&#x6BB5; &quot;kimchy&quot;); // value &#x67E5;&#x8BE2;&#x8BED;&#x53E5;&#x67E5;&#x8BE2;&#xFF08;query_string query&#xFF09; &#x4E0E;lucene&#x67E5;&#x8BE2;&#x8BED;&#x53E5;&#x7684;&#x8BED;&#x6CD5;&#x7ED3;&#x5408;&#x7684;&#x66F4;&#x52A0;&#x7D27;&#x5BC6;&#x7684;&#x4E00;&#x79CD;&#x67E5;&#x8BE2;&#xFF0C;&#x5141;&#x8BB8;&#x4F60;&#x5728;&#x4E00;&#x4E2A;&#x67E5;&#x8BE2;&#x8BED;&#x53E5;&#x4E2D;&#x4F7F;&#x7528;&#x591A;&#x4E2A; &#x7279;&#x6B8A;&#x6761;&#x4EF6;&#x5173;&#x952E;&#x5B57;&#xFF08;&#x5982;&#xFF1A;AND|OR|NOT &#xFF09;&#x5BF9;&#x591A;&#x4E2A;&#x5B57;&#x6BB5;&#x8FDB;&#x884C;&#x67E5;&#x8BE2;&#xFF0C;&#x5F53;&#x7136;&#x8FD9;&#x79CD;&#x67E5;&#x8BE2;&#x4EC5;&#x9650;&#x4E13;&#x5BB6;&#x7528;&#x6237;&#x53BB;&#x4F7F;&#x7528;&#x3002; &#x67E5;&#x770B;Query String Query QueryBuilder qb = queryStringQuery(&quot;+kimchy -elasticsearch&quot;); //text &#x7B80;&#x5355;&#x67E5;&#x8BE2;&#x8BED;&#x53E5;&#xFF08;simple_query_string&#xFF09; &#x662F;&#x4E00;&#x79CD;&#x9002;&#x5408;&#x76F4;&#x63A5;&#x66B4;&#x9732;&#x7ED9;&#x7528;&#x6237;&#x7684;&#x7B80;&#x5355;&#x7684;&#x4E14;&#x5177;&#x6709;&#x975E;&#x5E38;&#x5B8C;&#x5584;&#x7684;&#x67E5;&#x8BE2;&#x8BED;&#x6CD5;&#x7684;&#x67E5;&#x8BE2;&#x8BED;&#x53E5; &#x67E5;&#x770B;Simple Query String Query QueryBuilder qb = simpleQueryStringQuery(&quot;+kimchy -elasticsearch&quot;); //text results matching \"\" No results matching \"\" var gitbook = gitbook || []; gitbook.push(function() { gitbook.page.hasChanged({\"page\":{\"title\":\"Full text queries\",\"level\":\"1.7.2\",\"depth\":2,\"next\":{\"title\":\"Term level queries\",\"level\":\"1.7.3\",\"depth\":2,\"path\":\"query-dsl/term-level-queries.md\",\"ref\":\"query-dsl/term-level-queries.md\",\"articles\":[]},\"previous\":{\"title\":\"Match All Query\",\"level\":\"1.7.1\",\"depth\":2,\"path\":\"query-dsl/match-all-query.md\",\"ref\":\"query-dsl/match-all-query.md\",\"articles\":[]},\"dir\":\"ltr\"},\"config\":{\"gitbook\":\"*\",\"theme\":\"default\",\"variables\":{},\"plugins\":[],\"pluginsConfig\":{\"highlight\":{},\"search\":{},\"lunr\":{\"maxIndexSize\":1000000,\"ignoreSpecialCharacters\":false},\"sharing\":{\"facebook\":true,\"twitter\":true,\"google\":false,\"weibo\":false,\"instapaper\":false,\"vk\":false,\"all\":[\"facebook\",\"google\",\"twitter\",\"weibo\",\"instapaper\"]},\"fontsettings\":{\"theme\":\"white\",\"family\":\"sans\",\"size\":2},\"theme-default\":{\"styles\":{\"website\":\"styles/website.css\",\"pdf\":\"styles/pdf.css\",\"epub\":\"styles/epub.css\",\"mobi\":\"styles/mobi.css\",\"ebook\":\"styles/ebook.css\",\"print\":\"styles/print.css\"},\"showLevel\":false}},\"structure\":{\"langs\":\"LANGS.md\",\"readme\":\"README.md\",\"glossary\":\"GLOSSARY.md\",\"summary\":\"SUMMARY.md\"},\"pdf\":{\"pageNumbers\":true,\"fontSize\":12,\"fontFamily\":\"Arial\",\"paperSize\":\"a4\",\"chapterMark\":\"pagebreak\",\"pageBreaksBefore\":\"/\",\"margin\":{\"right\":62,\"left\":62,\"top\":56,\"bottom\":56}},\"styles\":{\"website\":\"styles/website.css\",\"pdf\":\"styles/pdf.css\",\"epub\":\"styles/epub.css\",\"mobi\":\"styles/mobi.css\",\"ebook\":\"styles/ebook.css\",\"print\":\"styles/print.css\"}},\"file\":{\"path\":\"query-dsl/full-text-queries.md\",\"mtime\":\"2017-11-08T08:39:31.971Z\",\"type\":\"markdown\"},\"gitbook\":{\"version\":\"3.2.3\",\"time\":\"2018-01-29T15:28:32.108Z\"},\"basePath\":\"..\",\"book\":{\"language\":\"\"}}); });"},{"title":"","date":"2018-02-01T07:21:14.289Z","updated":"2018-01-29T15:28:33.714Z","comments":true,"path":"esjava/query-dsl/full-text-queries.html","permalink":"http://test.quanke.name/esjava/query-dsl/full-text-queries.html","excerpt":"","text":"Full text queries 全文搜索高级别的全文搜索通常用于在全文字段（例如：一封邮件的正文）上进行全文搜索。它们了解如何分析查询的字段，并在执行之前将每个字段的分析器（或搜索分析器）应用于查询字符串。 这样的查询有以下这些： 匹配查询（match query） 用于执行全文查询的标准查询，包括模糊匹配和词组或邻近程度的查询 查看 Match Query QueryBuilder qb = matchQuery( &quot;name&quot;, //field 字段 &quot;kimchy elasticsearch&quot; // text ); 多字段查询（multi_match query） 可以用来对多个字段的版本进行匹配查询 查看 Multi Match Query QueryBuilder qb = multiMatchQuery( &quot;kimchy elasticsearch&quot;, //text &quot;user&quot;, &quot;message&quot; //fields 多个字段); 常用术语查询（common_terms query） 可以对一些比较专业的偏门词语进行的更加专业的查询 查看Common Terms Query QueryBuilder qb = commonTermsQuery(&quot;name&quot;, //field 字段 &quot;kimchy&quot;); // value 查询语句查询（query_string query） 与lucene查询语句的语法结合的更加紧密的一种查询，允许你在一个查询语句中使用多个 特殊条件关键字（如：AND|OR|NOT ）对多个字段进行查询，当然这种查询仅限专家用户去使用。 查看Query String Query QueryBuilder qb = queryStringQuery(&quot;+kimchy -elasticsearch&quot;); //text 简单查询语句（simple_query_string） 是一种适合直接暴露给用户的简单的且具有非常完善的查询语法的查询语句 查看Simple Query String Query QueryBuilder qb = simpleQueryStringQuery(&quot;+kimchy -elasticsearch&quot;); //text"},{"title":"","date":"2018-02-01T07:21:14.289Z","updated":"2018-01-29T15:28:36.298Z","comments":true,"path":"esjava/query-dsl/geo-queries.html","permalink":"http://test.quanke.name/esjava/query-dsl/geo-queries.html","excerpt":"","text":"Geo queries · GitBook Introduction Dependency Client Transport Client XPack Transport Client Document APIs Index API Get API Delete API Delete By Query API Update API Multi Get API Bulk API Using Bulk Processor Search API Using scrolls in Java MultiSearch API Using Aggregations Terminate After Search Template Aggregations Structuring aggregations Metrics aggregations Bucket aggregations Query DSL Match All Query Full text queries Term level queries Compound queries Joining queries Geo queries Specialized queries Span queries Indexed Scripts API Script Language Java API Administration Indices Administration Cluster Administration Published with GitBook Geo queries Geo queries &#x5730;&#x7406;&#x4F4D;&#x7F6E;&#x67E5;&#x8BE2; Elasticsearch&#x652F;&#x6301;&#x4E24;&#x79CD;&#x7C7B;&#x578B;&#x7684;&#x5730;&#x7406;&#x6570;&#x636E;&#xFF1A;geo_point&#x7C7B;&#x578B;&#x652F;&#x6301;&#x6210;&#x5BF9;&#x7684;&#x7EAC;&#x5EA6;/&#x7ECF;&#x5EA6;&#xFF0C;geo_shape&#x7C7B;&#x578B;&#x652F;&#x6301;&#x70B9;&#x3001;&#x7EBF;&#x3001;&#x5706;&#x3001;&#x591A;&#x8FB9;&#x5F62;&#x3001;&#x591A;&#x4E2A;&#x591A;&#x8FB9;&#x5F62;&#x7B49;&#x3002; &#x5728;&#x8FD9;&#x7EC4;&#x7684;&#x67E5;&#x8BE2;&#x4E2D;&#xFF1A; geo_shape&#x67E5;&#x8BE2; &#x67E5;&#x627E;&#x8981;&#x4E48;&#x76F8;&#x4EA4;&#xFF0C;&#x5305;&#x542B;&#x7684;&#xFF0C;&#x8981;&#x4E48;&#x6307;&#x5B9A;&#x5F62;&#x72B6;&#x4E0D;&#x76F8;&#x4EA4;&#x7684;&#x5730;&#x7406;&#x5F62;&#x72B6;&#x7684;&#x6587;&#x6863;&#x3002; &#x67E5;&#x770B;Geo Shape Query geo_shape &#x7C7B;&#x578B;&#x4F7F;&#x7528; Spatial4J &#x548C; JTS &#xFF0C;&#x8FD9;&#x4E24;&#x8005;&#x90FD;&#x662F;&#x53EF;&#x9009;&#x7684;&#x4F9D;&#x8D56;&#x9879;&#x3002; &#x56E0;&#x6B64;&#xFF0C;&#x5FC5;&#x987B;&#x5C06; Spatial4J &#x548C; JTS &#x6DFB;&#x52A0;&#x5230; classpath &#x4E2D;&#x624D;&#x80FD;&#x4F7F;&#x7528;&#x6B64;&#x7C7B;&#x578B;&#xFF1A; &lt;dependency&gt; &lt;groupId&gt;org.locationtech.spatial4j&lt;/groupId&gt; &lt;artifactId&gt;spatial4j&lt;/artifactId&gt; &lt;version&gt;0.6&lt;/version&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;com.vividsolutions&lt;/groupId&gt; &lt;artifactId&gt;jts&lt;/artifactId&gt; &lt;version&gt;1.13&lt;/version&gt; &lt;exclusions&gt; &lt;exclusion&gt; &lt;groupId&gt;xerces&lt;/groupId&gt; &lt;artifactId&gt;xercesImpl&lt;/artifactId&gt; &lt;/exclusion&gt; &lt;/exclusions&gt; &lt;/dependency&gt; // Import ShapeRelation and ShapeBuilder import org.elasticsearch.common.geo.ShapeRelation; import org.elasticsearch.common.geo.builders.ShapeBuilder; List&lt;Coordinate&gt; points = new ArrayList&lt;&gt;(); points.add(new Coordinate(0, 0)); points.add(new Coordinate(0, 10)); points.add(new Coordinate(10, 10)); points.add(new Coordinate(10, 0)); points.add(new Coordinate(0, 0)); QueryBuilder qb = geoShapeQuery( &quot;pin.location&quot;, //field ShapeBuilders.newMultiPoint(points) //shape .relation(ShapeRelation.WITHIN); //relation &#x53EF;&#x4EE5;&#x662F; ShapeRelation.CONTAINS, ShapeRelation.WITHIN, ShapeRelation.INTERSECTS &#x6216; ShapeRelation.DISJOINT // Using pre-indexed shapes QueryBuilder qb = geoShapeQuery( &quot;pin.location&quot;, //field &quot;DEU&quot;, //The ID of the document that containing the pre-indexed shape. &quot;countries&quot;) //Index type where the pre-indexed shape is. .relation(ShapeRelation.WITHIN)) //relation .indexedShapeIndex(&quot;shapes&quot;) //Name of the index where the pre-indexed shape is. Defaults to shapes. .indexedShapePath(&quot;location&quot;); //The field specified as path containing the pre-indexed shape. Defaults to shape. geo_bounding_box &#x67E5;&#x8BE2; &#x67E5;&#x627E;&#x843D;&#x5165;&#x6307;&#x5B9A;&#x7684;&#x77E9;&#x5F62;&#x5730;&#x7406;&#x70B9;&#x7684;&#x6587;&#x6863;&#x3002; &#x67E5;&#x770B;Geo Bounding Box Query QueryBuilder qb = geoBoundingBoxQuery(&quot;pin.location&quot;) //field .setCorners(40.73, -74.1, //bounding box top left point 40.717, -73.99); //bounding box bottom right point geo_distance &#x67E5;&#x8BE2; &#x67E5;&#x627E;&#x5728;&#x4E00;&#x4E2A;&#x4E2D;&#x5FC3;&#x70B9;&#x6307;&#x5B9A;&#x8303;&#x56F4;&#x5185;&#x7684;&#x5730;&#x7406;&#x70B9;&#x6587;&#x6863;&#x3002; &#x67E5;&#x770B;Geo Distance Query QueryBuilder qb = geoDistanceQuery(&quot;pin.location&quot;) //field .point(40, -70) //center point .distance(200, DistanceUnit.KILOMETERS); //distance from center point geo_polygon &#x67E5;&#x8BE2; &#x67E5;&#x627E;&#x6307;&#x5B9A;&#x591A;&#x8FB9;&#x5F62;&#x5185;&#x5730;&#x7406;&#x70B9;&#x7684;&#x6587;&#x6863;&#x3002; &#x67E5;&#x770B;Geo Polygon Query List&lt;GeoPoint&gt; points = new ArrayList&lt;&gt;(); //add your polygon of points a document should fall within points.add(new GeoPoint(40, -70)); points.add(new GeoPoint(30, -80)); points.add(new GeoPoint(20, -90)); QueryBuilder qb = geoPolygonQuery(&quot;pin.location&quot;, points); //initialise the query with field and points results matching \"\" No results matching \"\" var gitbook = gitbook || []; gitbook.push(function() { gitbook.page.hasChanged({\"page\":{\"title\":\"Geo queries\",\"level\":\"1.7.6\",\"depth\":2,\"next\":{\"title\":\"Specialized queries\",\"level\":\"1.7.7\",\"depth\":2,\"path\":\"query-dsl/specialized-queries.md\",\"ref\":\"query-dsl/specialized-queries.md\",\"articles\":[]},\"previous\":{\"title\":\"Joining queries\",\"level\":\"1.7.5\",\"depth\":2,\"path\":\"query-dsl/joining-queries.md\",\"ref\":\"query-dsl/joining-queries.md\",\"articles\":[]},\"dir\":\"ltr\"},\"config\":{\"gitbook\":\"*\",\"theme\":\"default\",\"variables\":{},\"plugins\":[],\"pluginsConfig\":{\"highlight\":{},\"search\":{},\"lunr\":{\"maxIndexSize\":1000000,\"ignoreSpecialCharacters\":false},\"sharing\":{\"facebook\":true,\"twitter\":true,\"google\":false,\"weibo\":false,\"instapaper\":false,\"vk\":false,\"all\":[\"facebook\",\"google\",\"twitter\",\"weibo\",\"instapaper\"]},\"fontsettings\":{\"theme\":\"white\",\"family\":\"sans\",\"size\":2},\"theme-default\":{\"styles\":{\"website\":\"styles/website.css\",\"pdf\":\"styles/pdf.css\",\"epub\":\"styles/epub.css\",\"mobi\":\"styles/mobi.css\",\"ebook\":\"styles/ebook.css\",\"print\":\"styles/print.css\"},\"showLevel\":false}},\"structure\":{\"langs\":\"LANGS.md\",\"readme\":\"README.md\",\"glossary\":\"GLOSSARY.md\",\"summary\":\"SUMMARY.md\"},\"pdf\":{\"pageNumbers\":true,\"fontSize\":12,\"fontFamily\":\"Arial\",\"paperSize\":\"a4\",\"chapterMark\":\"pagebreak\",\"pageBreaksBefore\":\"/\",\"margin\":{\"right\":62,\"left\":62,\"top\":56,\"bottom\":56}},\"styles\":{\"website\":\"styles/website.css\",\"pdf\":\"styles/pdf.css\",\"epub\":\"styles/epub.css\",\"mobi\":\"styles/mobi.css\",\"ebook\":\"styles/ebook.css\",\"print\":\"styles/print.css\"}},\"file\":{\"path\":\"query-dsl/geo-queries.md\",\"mtime\":\"2017-11-08T08:39:31.975Z\",\"type\":\"markdown\"},\"gitbook\":{\"version\":\"3.2.3\",\"time\":\"2018-01-29T15:28:32.108Z\"},\"basePath\":\"..\",\"book\":{\"language\":\"\"}}); });"},{"title":"","date":"2018-02-01T07:21:14.290Z","updated":"2018-01-29T15:28:33.715Z","comments":true,"path":"esjava/query-dsl/geo-queries.html","permalink":"http://test.quanke.name/esjava/query-dsl/geo-queries.html","excerpt":"","text":"Geo queries 地理位置查询Elasticsearch支持两种类型的地理数据：geo_point类型支持成对的纬度/经度，geo_shape类型支持点、线、圆、多边形、多个多边形等。在这组的查询中： geo_shape查询 查找要么相交，包含的，要么指定形状不相交的地理形状的文档。 查看Geo Shape Query geo_shape 类型使用 Spatial4J 和 JTS ，这两者都是可选的依赖项。 因此，必须将 Spatial4J 和 JTS 添加到 classpath 中才能使用此类型： &lt;dependency&gt; &lt;groupId&gt;org.locationtech.spatial4j&lt;/groupId&gt; &lt;artifactId&gt;spatial4j&lt;/artifactId&gt; &lt;version&gt;0.6&lt;/version&gt; &lt;/dependency&gt;&lt;dependency&gt; &lt;groupId&gt;com.vividsolutions&lt;/groupId&gt; &lt;artifactId&gt;jts&lt;/artifactId&gt; &lt;version&gt;1.13&lt;/version&gt; &lt;exclusions&gt; &lt;exclusion&gt; &lt;groupId&gt;xerces&lt;/groupId&gt; &lt;artifactId&gt;xercesImpl&lt;/artifactId&gt; &lt;/exclusion&gt; &lt;/exclusions&gt;&lt;/dependency&gt; // Import ShapeRelation and ShapeBuilderimport org.elasticsearch.common.geo.ShapeRelation;import org.elasticsearch.common.geo.builders.ShapeBuilder; List&lt;Coordinate&gt; points = new ArrayList&lt;&gt;();points.add(new Coordinate(0, 0));points.add(new Coordinate(0, 10));points.add(new Coordinate(10, 10));points.add(new Coordinate(10, 0));points.add(new Coordinate(0, 0));QueryBuilder qb = geoShapeQuery( &quot;pin.location&quot;, //field ShapeBuilders.newMultiPoint(points) //shape .relation(ShapeRelation.WITHIN); //relation 可以是 ShapeRelation.CONTAINS, ShapeRelation.WITHIN, ShapeRelation.INTERSECTS 或 ShapeRelation.DISJOINT // Using pre-indexed shapesQueryBuilder qb = geoShapeQuery( &quot;pin.location&quot;, //field &quot;DEU&quot;, //The ID of the document that containing the pre-indexed shape. &quot;countries&quot;) //Index type where the pre-indexed shape is. .relation(ShapeRelation.WITHIN)) //relation .indexedShapeIndex(&quot;shapes&quot;) //Name of the index where the pre-indexed shape is. Defaults to shapes. .indexedShapePath(&quot;location&quot;); //The field specified as path containing the pre-indexed shape. Defaults to shape. geo_bounding_box 查询 查找落入指定的矩形地理点的文档。 查看Geo Bounding Box Query QueryBuilder qb = geoBoundingBoxQuery(&quot;pin.location&quot;) //field .setCorners(40.73, -74.1, //bounding box top left point 40.717, -73.99); //bounding box bottom right point geo_distance 查询 查找在一个中心点指定范围内的地理点文档。 查看Geo Distance Query QueryBuilder qb = geoDistanceQuery(&quot;pin.location&quot;) //field .point(40, -70) //center point .distance(200, DistanceUnit.KILOMETERS); //distance from center point geo_polygon 查询 查找指定多边形内地理点的文档。 查看Geo Polygon Query List&lt;GeoPoint&gt; points = new ArrayList&lt;&gt;(); //add your polygon of points a document should fall withinpoints.add(new GeoPoint(40, -70));points.add(new GeoPoint(30, -80));points.add(new GeoPoint(20, -90));QueryBuilder qb = geoPolygonQuery(&quot;pin.location&quot;, points); //initialise the query with field and points"},{"title":"","date":"2018-02-01T07:21:14.292Z","updated":"2018-01-29T15:28:36.223Z","comments":true,"path":"esjava/query-dsl/joining-queries.html","permalink":"http://test.quanke.name/esjava/query-dsl/joining-queries.html","excerpt":"","text":"Joining queries · GitBook Introduction Dependency Client Transport Client XPack Transport Client Document APIs Index API Get API Delete API Delete By Query API Update API Multi Get API Bulk API Using Bulk Processor Search API Using scrolls in Java MultiSearch API Using Aggregations Terminate After Search Template Aggregations Structuring aggregations Metrics aggregations Bucket aggregations Query DSL Match All Query Full text queries Term level queries Compound queries Joining queries Geo queries Specialized queries Span queries Indexed Scripts API Script Language Java API Administration Indices Administration Cluster Administration Published with GitBook Joining queries Joining queries &#x5728;&#x50CF; ElasticSearch &#x8FD9;&#x6837;&#x7684;&#x5206;&#x5E03;&#x5F0F;&#x7CFB;&#x7EDF;&#x4E2D;&#x6267;&#x884C;&#x5168; SQL &#x98CE;&#x683C;&#x7684;&#x8FDE;&#x63A5;&#x67E5;&#x8BE2;&#x4EE3;&#x4EF7;&#x6602;&#x8D35;&#xFF0C;&#x662F;&#x4E0D;&#x53EF;&#x884C;&#x7684;&#x3002;&#x76F8;&#x5E94;&#x5730;&#xFF0C;&#x4E3A;&#x4E86;&#x5B9E;&#x73B0;&#x6C34;&#x5E73;&#x89C4;&#x6A21;&#x5730;&#x6269;&#x5C55;&#xFF0C;ElasticSearch &#x63D0;&#x4F9B;&#x4E86;&#x4E24;&#x79CD;&#x5F62;&#x5F0F;&#x7684; join&#x3002; nested query (&#x5D4C;&#x5957;&#x67E5;&#x8BE2;) &#x6587;&#x6863;&#x4E2D;&#x53EF;&#x80FD;&#x5305;&#x542B;&#x5D4C;&#x5957;&#x7C7B;&#x578B;&#x7684;&#x5B57;&#x6BB5;&#xFF0C;&#x8FD9;&#x4E9B;&#x5B57;&#x6BB5;&#x7528;&#x6765;&#x7D22;&#x5F15;&#x4E00;&#x4E9B;&#x6570;&#x7EC4;&#x5BF9;&#x8C61;&#xFF0C;&#x6BCF;&#x4E2A;&#x5BF9;&#x8C61;&#x90FD;&#x53EF;&#x4EE5;&#x4F5C;&#x4E3A;&#x4E00;&#x6761;&#x72EC;&#x7ACB;&#x7684;&#x6587;&#x6863;&#x88AB;&#x67E5;&#x8BE2;&#x51FA;&#x6765;(&#x7528;&#x5D4C;&#x5957;&#x67E5;&#x8BE2;) &#x67E5;&#x770B;Nested Query QueryBuilder qb = nestedQuery( &quot;obj1&quot;, //nested &#x5D4C;&#x5957;&#x6587;&#x6863;&#x7684;&#x8DEF;&#x5F84; boolQuery() // &#x67E5;&#x8BE2; &#x67E5;&#x8BE2;&#x4E2D;&#x5F15;&#x7528;&#x7684;&#x4EFB;&#x4F55;&#x5B57;&#x6BB5;&#x90FD;&#x5FC5;&#x987B;&#x4F7F;&#x7528;&#x5B8C;&#x6574;&#x8DEF;&#x5F84;&#xFF08;fully qualified&#xFF09;&#x3002; .must(matchQuery(&quot;obj1.name&quot;, &quot;blue&quot;)) .must(rangeQuery(&quot;obj1.count&quot;).gt(5)), ScoreMode.Avg // score &#x6A21;&#x578B; ScoreMode.Max, ScoreMode.Min, ScoreMode.Total, ScoreMode.Avg or ScoreMode.None ); has_child (&#x6709;&#x5B50;&#x67E5;&#x8BE2;) and has_parent (&#x6709;&#x7236;&#x67E5;&#x8BE2;) queries &#x4E00;&#x7C7B;&#x7236;&#x5B50;&#x5173;&#x7CFB;&#x53EF;&#x4EE5;&#x5B58;&#x5728;&#x5355;&#x4E2A;&#x7684;&#x7D22;&#x5F15;&#x7684;&#x4E24;&#x4E2A;&#x7C7B;&#x578B;&#x7684;&#x6587;&#x6863;&#x4E4B;&#x95F4;&#x3002;has_child &#x67E5;&#x8BE2;&#x5C06;&#x8FD4;&#x56DE;&#x5176;&#x5B50;&#x6587;&#x6863;&#x80FD;&#x6EE1;&#x8DB3;&#x7279;&#x5B9A;&#x7684;&#x67E5;&#x8BE2;&#x7684;&#x7236;&#x6587;&#x6863;&#xFF0C;&#x800C; has_parent &#x5219;&#x8FD4;&#x56DE;&#x5176;&#x7236;&#x6587;&#x6863;&#x80FD;&#x6EE1;&#x8DB3;&#x7279;&#x5B9A;&#x67E5;&#x8BE2;&#x7684;&#x5B50;&#x6587;&#x6863; Has Child Query &#x67E5;&#x770B;Has Child Query &#x4F7F;&#x7528; has_child &#x67E5;&#x8BE2;&#x65F6;&#xFF0C;&#x5FC5;&#x987B;&#x4F7F;&#x7528;PreBuiltTransportClient&#x800C;&#x4E0D;&#x662F;&#x5E38;&#x89C4; Client&#xFF0C;&#x8FD9;&#x4E2A;&#x70B9;&#x5F88;&#x91CD;&#x8981;&#xFF1A; Settings settings = Settings.builder().put(&quot;cluster.name&quot;, &quot;elasticsearch&quot;).build(); TransportClient client = new PreBuiltTransportClient(settings); client.addTransportAddress(new InetSocketTransportAddress(new InetSocketAddress(InetAddresses.forString(&quot;127.0.0.1&quot;), 9300))); &#x5426;&#x5219;&#xFF0C;parent-join &#x6A21;&#x5757;&#x4E0D;&#x4F1A;&#x88AB;&#x52A0;&#x8F7D;&#xFF0C;&#x5E76;&#x4E14;&#x4E0D;&#x80FD;&#x4ECE;transport client &#x4F7F;&#x7528;has_child&#x67E5;&#x8BE2;&#x3002; QueryBuilder qb = JoinQueryBuilders.hasChildQuery( &quot;blog_tag&quot;, //&#x8981;&#x67E5;&#x8BE2;&#x7684;&#x5B50;&#x7C7B;&#x578B; termQuery(&quot;tag&quot;,&quot;something&quot;), //&#x67E5;&#x8BE2; ScoreMode.Avg //score &#x6A21;&#x578B; ScoreMode.Avg, ScoreMode.Max, ScoreMode.Min, ScoreMode.None or ScoreMode.Total ); Has Parent Query &#x67E5;&#x770B;Has Parent &#x4F7F;&#x7528;has_parent&#x67E5;&#x8BE2;&#x65F6;&#xFF0C;&#x5FC5;&#x987B;&#x4F7F;&#x7528;PreBuiltTransportClient&#x800C;&#x4E0D;&#x662F;&#x5E38;&#x89C4; Client&#xFF0C;&#x8FD9;&#x4E2A;&#x70B9;&#x5F88;&#x91CD;&#x8981;&#xFF1A; Settings settings = Settings.builder().put(&quot;cluster.name&quot;, &quot;elasticsearch&quot;).build(); TransportClient client = new PreBuiltTransportClient(settings); client.addTransportAddress(new InetSocketTransportAddress(new InetSocketAddress(InetAddresses.forString(&quot;127.0.0.1&quot;), 9300))); &#x5426;&#x5219;&#xFF0C;parent-join &#x6A21;&#x5757;&#x4E0D;&#x4F1A;&#x88AB;&#x52A0;&#x8F7D;&#xFF0C;&#x5E76;&#x4E14;&#x4E0D;&#x80FD;&#x4ECE;transport client &#x4F7F;&#x7528;has_child&#x67E5;&#x8BE2;&#x3002; QueryBuilder qb = JoinQueryBuilders.hasParentQuery( &quot;blog&quot;, //&#x8981;&#x67E5;&#x8BE2;&#x7684;&#x5B50;&#x7C7B;&#x578B; termQuery(&quot;tag&quot;,&quot;something&quot;), //&#x67E5;&#x8BE2; false //&#x662F;&#x5426;&#x4ECE;&#x7236;hit&#x7684;score &#x4F20;&#x7ED9;&#x5B50; hit ); &#x53C2;&#x8003; term &#x67E5;&#x8BE2;&#x4E2D;&#x7684;terms-lookup mechanism &#xFF0C;&#x5B83;&#x5141;&#x8BB8;&#x4F60;&#x5728;&#x53E6;&#x4E00;&#x4E2A;&#x6587;&#x6863;&#x7684;&#x503C;&#x4E2D;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;term &#x67E5;&#x8BE2;&#x3002; results matching \"\" No results matching \"\" var gitbook = gitbook || []; gitbook.push(function() { gitbook.page.hasChanged({\"page\":{\"title\":\"Joining queries\",\"level\":\"1.7.5\",\"depth\":2,\"next\":{\"title\":\"Geo queries\",\"level\":\"1.7.6\",\"depth\":2,\"path\":\"query-dsl/geo-queries.md\",\"ref\":\"query-dsl/geo-queries.md\",\"articles\":[]},\"previous\":{\"title\":\"Compound queries\",\"level\":\"1.7.4\",\"depth\":2,\"path\":\"query-dsl/compound-queries.md\",\"ref\":\"query-dsl/compound-queries.md\",\"articles\":[]},\"dir\":\"ltr\"},\"config\":{\"gitbook\":\"*\",\"theme\":\"default\",\"variables\":{},\"plugins\":[],\"pluginsConfig\":{\"highlight\":{},\"search\":{},\"lunr\":{\"maxIndexSize\":1000000,\"ignoreSpecialCharacters\":false},\"sharing\":{\"facebook\":true,\"twitter\":true,\"google\":false,\"weibo\":false,\"instapaper\":false,\"vk\":false,\"all\":[\"facebook\",\"google\",\"twitter\",\"weibo\",\"instapaper\"]},\"fontsettings\":{\"theme\":\"white\",\"family\":\"sans\",\"size\":2},\"theme-default\":{\"styles\":{\"website\":\"styles/website.css\",\"pdf\":\"styles/pdf.css\",\"epub\":\"styles/epub.css\",\"mobi\":\"styles/mobi.css\",\"ebook\":\"styles/ebook.css\",\"print\":\"styles/print.css\"},\"showLevel\":false}},\"structure\":{\"langs\":\"LANGS.md\",\"readme\":\"README.md\",\"glossary\":\"GLOSSARY.md\",\"summary\":\"SUMMARY.md\"},\"pdf\":{\"pageNumbers\":true,\"fontSize\":12,\"fontFamily\":\"Arial\",\"paperSize\":\"a4\",\"chapterMark\":\"pagebreak\",\"pageBreaksBefore\":\"/\",\"margin\":{\"right\":62,\"left\":62,\"top\":56,\"bottom\":56}},\"styles\":{\"website\":\"styles/website.css\",\"pdf\":\"styles/pdf.css\",\"epub\":\"styles/epub.css\",\"mobi\":\"styles/mobi.css\",\"ebook\":\"styles/ebook.css\",\"print\":\"styles/print.css\"}},\"file\":{\"path\":\"query-dsl/joining-queries.md\",\"mtime\":\"2017-11-08T08:39:31.978Z\",\"type\":\"markdown\"},\"gitbook\":{\"version\":\"3.2.3\",\"time\":\"2018-01-29T15:28:32.108Z\"},\"basePath\":\"..\",\"book\":{\"language\":\"\"}}); });"},{"title":"","date":"2018-02-01T07:21:14.293Z","updated":"2018-01-29T15:28:33.717Z","comments":true,"path":"esjava/query-dsl/joining-queries.html","permalink":"http://test.quanke.name/esjava/query-dsl/joining-queries.html","excerpt":"","text":"Joining queries在像 ElasticSearch 这样的分布式系统中执行全 SQL 风格的连接查询代价昂贵，是不可行的。相应地，为了实现水平规模地扩展，ElasticSearch 提供了两种形式的 join。 nested query (嵌套查询) 文档中可能包含嵌套类型的字段，这些字段用来索引一些数组对象，每个对象都可以作为一条独立的文档被查询出来(用嵌套查询) 查看Nested Query QueryBuilder qb = nestedQuery( &quot;obj1&quot;, //nested 嵌套文档的路径 boolQuery() // 查询 查询中引用的任何字段都必须使用完整路径（fully qualified）。 .must(matchQuery(&quot;obj1.name&quot;, &quot;blue&quot;)) .must(rangeQuery(&quot;obj1.count&quot;).gt(5)), ScoreMode.Avg // score 模型 ScoreMode.Max, ScoreMode.Min, ScoreMode.Total, ScoreMode.Avg or ScoreMode.None ); has_child (有子查询) and has_parent (有父查询) queries 一类父子关系可以存在单个的索引的两个类型的文档之间。has_child 查询将返回其子文档能满足特定的查询的父文档，而 has_parent 则返回其父文档能满足特定查询的子文档 Has Child Query查看Has Child Query 使用 has_child 查询时，必须使用PreBuiltTransportClient而不是常规 Client，这个点很重要： Settings settings = Settings.builder().put(&quot;cluster.name&quot;, &quot;elasticsearch&quot;).build();TransportClient client = new PreBuiltTransportClient(settings);client.addTransportAddress(new InetSocketTransportAddress(new InetSocketAddress(InetAddresses.forString(&quot;127.0.0.1&quot;), 9300))); 否则，parent-join 模块不会被加载，并且不能从transport client 使用has_child查询。 QueryBuilder qb = JoinQueryBuilders.hasChildQuery( &quot;blog_tag&quot;, //要查询的子类型 termQuery(&quot;tag&quot;,&quot;something&quot;), //查询 ScoreMode.Avg //score 模型 ScoreMode.Avg, ScoreMode.Max, ScoreMode.Min, ScoreMode.None or ScoreMode.Total); Has Parent Query查看Has Parent 使用has_parent查询时，必须使用PreBuiltTransportClient而不是常规 Client，这个点很重要： Settings settings = Settings.builder().put(&quot;cluster.name&quot;, &quot;elasticsearch&quot;).build();TransportClient client = new PreBuiltTransportClient(settings);client.addTransportAddress(new InetSocketTransportAddress(new InetSocketAddress(InetAddresses.forString(&quot;127.0.0.1&quot;), 9300))); 否则，parent-join 模块不会被加载，并且不能从transport client 使用has_child查询。 QueryBuilder qb = JoinQueryBuilders.hasParentQuery( &quot;blog&quot;, //要查询的子类型 termQuery(&quot;tag&quot;,&quot;something&quot;), //查询 false //是否从父hit的score 传给子 hit); 参考 term 查询中的terms-lookup mechanism ，它允许你在另一个文档的值中创建一个term 查询。"},{"title":"","date":"2018-02-01T07:21:14.294Z","updated":"2018-01-29T15:28:35.913Z","comments":true,"path":"esjava/query-dsl/match-all-query.html","permalink":"http://test.quanke.name/esjava/query-dsl/match-all-query.html","excerpt":"","text":"Match All Query · GitBook Introduction Dependency Client Transport Client XPack Transport Client Document APIs Index API Get API Delete API Delete By Query API Update API Multi Get API Bulk API Using Bulk Processor Search API Using scrolls in Java MultiSearch API Using Aggregations Terminate After Search Template Aggregations Structuring aggregations Metrics aggregations Bucket aggregations Query DSL Match All Query Full text queries Term level queries Compound queries Joining queries Geo queries Specialized queries Span queries Indexed Scripts API Script Language Java API Administration Indices Administration Cluster Administration Published with GitBook Match All Query Match All Query &#x6700;&#x7B80;&#x5355;&#x7684;&#x67E5;&#x8BE2;&#xFF0C;&#x5B83;&#x5339;&#x914D;&#x6240;&#x6709;&#x6587;&#x6863; &#x67E5;&#x770B; Match All Query QueryBuilder qb = matchAllQuery(); results matching \"\" No results matching \"\" var gitbook = gitbook || []; gitbook.push(function() { gitbook.page.hasChanged({\"page\":{\"title\":\"Match All Query\",\"level\":\"1.7.1\",\"depth\":2,\"next\":{\"title\":\"Full text queries\",\"level\":\"1.7.2\",\"depth\":2,\"path\":\"query-dsl/full-text-queries.md\",\"ref\":\"query-dsl/full-text-queries.md\",\"articles\":[]},\"previous\":{\"title\":\"Query DSL\",\"level\":\"1.7\",\"depth\":1,\"path\":\"query-dsl.md\",\"ref\":\"query-dsl.md\",\"articles\":[{\"title\":\"Match All Query\",\"level\":\"1.7.1\",\"depth\":2,\"path\":\"query-dsl/match-all-query.md\",\"ref\":\"query-dsl/match-all-query.md\",\"articles\":[]},{\"title\":\"Full text queries\",\"level\":\"1.7.2\",\"depth\":2,\"path\":\"query-dsl/full-text-queries.md\",\"ref\":\"query-dsl/full-text-queries.md\",\"articles\":[]},{\"title\":\"Term level queries\",\"level\":\"1.7.3\",\"depth\":2,\"path\":\"query-dsl/term-level-queries.md\",\"ref\":\"query-dsl/term-level-queries.md\",\"articles\":[]},{\"title\":\"Compound queries\",\"level\":\"1.7.4\",\"depth\":2,\"path\":\"query-dsl/compound-queries.md\",\"ref\":\"query-dsl/compound-queries.md\",\"articles\":[]},{\"title\":\"Joining queries\",\"level\":\"1.7.5\",\"depth\":2,\"path\":\"query-dsl/joining-queries.md\",\"ref\":\"query-dsl/joining-queries.md\",\"articles\":[]},{\"title\":\"Geo queries\",\"level\":\"1.7.6\",\"depth\":2,\"path\":\"query-dsl/geo-queries.md\",\"ref\":\"query-dsl/geo-queries.md\",\"articles\":[]},{\"title\":\"Specialized queries\",\"level\":\"1.7.7\",\"depth\":2,\"path\":\"query-dsl/specialized-queries.md\",\"ref\":\"query-dsl/specialized-queries.md\",\"articles\":[]},{\"title\":\"Span queries\",\"level\":\"1.7.8\",\"depth\":2,\"path\":\"query-dsl/span-queries.md\",\"ref\":\"query-dsl/span-queries.md\",\"articles\":[]}]},\"dir\":\"ltr\"},\"config\":{\"gitbook\":\"*\",\"theme\":\"default\",\"variables\":{},\"plugins\":[],\"pluginsConfig\":{\"highlight\":{},\"search\":{},\"lunr\":{\"maxIndexSize\":1000000,\"ignoreSpecialCharacters\":false},\"sharing\":{\"facebook\":true,\"twitter\":true,\"google\":false,\"weibo\":false,\"instapaper\":false,\"vk\":false,\"all\":[\"facebook\",\"google\",\"twitter\",\"weibo\",\"instapaper\"]},\"fontsettings\":{\"theme\":\"white\",\"family\":\"sans\",\"size\":2},\"theme-default\":{\"styles\":{\"website\":\"styles/website.css\",\"pdf\":\"styles/pdf.css\",\"epub\":\"styles/epub.css\",\"mobi\":\"styles/mobi.css\",\"ebook\":\"styles/ebook.css\",\"print\":\"styles/print.css\"},\"showLevel\":false}},\"structure\":{\"langs\":\"LANGS.md\",\"readme\":\"README.md\",\"glossary\":\"GLOSSARY.md\",\"summary\":\"SUMMARY.md\"},\"pdf\":{\"pageNumbers\":true,\"fontSize\":12,\"fontFamily\":\"Arial\",\"paperSize\":\"a4\",\"chapterMark\":\"pagebreak\",\"pageBreaksBefore\":\"/\",\"margin\":{\"right\":62,\"left\":62,\"top\":56,\"bottom\":56}},\"styles\":{\"website\":\"styles/website.css\",\"pdf\":\"styles/pdf.css\",\"epub\":\"styles/epub.css\",\"mobi\":\"styles/mobi.css\",\"ebook\":\"styles/ebook.css\",\"print\":\"styles/print.css\"}},\"file\":{\"path\":\"query-dsl/match-all-query.md\",\"mtime\":\"2017-11-08T08:39:31.980Z\",\"type\":\"markdown\"},\"gitbook\":{\"version\":\"3.2.3\",\"time\":\"2018-01-29T15:28:32.108Z\"},\"basePath\":\"..\",\"book\":{\"language\":\"\"}}); });"},{"title":"","date":"2018-02-01T07:21:14.294Z","updated":"2018-01-29T15:28:33.719Z","comments":true,"path":"esjava/query-dsl/match-all-query.html","permalink":"http://test.quanke.name/esjava/query-dsl/match-all-query.html","excerpt":"","text":"Match All Query 最简单的查询，它匹配所有文档 查看 Match All Query QueryBuilder qb = matchAllQuery();"},{"title":"","date":"2018-02-01T07:21:14.296Z","updated":"2018-01-29T15:28:36.466Z","comments":true,"path":"esjava/query-dsl/span-queries.html","permalink":"http://test.quanke.name/esjava/query-dsl/span-queries.html","excerpt":"","text":"Span queries · GitBook Introduction Dependency Client Transport Client XPack Transport Client Document APIs Index API Get API Delete API Delete By Query API Update API Multi Get API Bulk API Using Bulk Processor Search API Using scrolls in Java MultiSearch API Using Aggregations Terminate After Search Template Aggregations Structuring aggregations Metrics aggregations Bucket aggregations Query DSL Match All Query Full text queries Term level queries Compound queries Joining queries Geo queries Specialized queries Span queries Indexed Scripts API Script Language Java API Administration Indices Administration Cluster Administration Published with GitBook Span queries Span queries span_term&#x67E5;&#x8BE2; &#x7B49;&#x540C;&#x4E8E; term query &#xFF0C;&#x4F46;&#x4E0E;&#x5176;&#x4ED6;Span&#x67E5;&#x8BE2;&#x4E00;&#x8D77;&#x4F7F;&#x7528;&#x3002; &#x67E5;&#x770B; Span Term Query QueryBuilder qb = spanTermQuery( &quot;user&quot;, //field &quot;kimchy&quot; //value ); span_multi&#x67E5;&#x8BE2; &#x5305;&#x542B;term, range, prefix, wildcard, regexp &#x6216;&#x8005; fuzzy &#x67E5;&#x8BE2;&#x3002; &#x67E5;&#x770B;Span Multi Term Query QueryBuilder qb = spanMultiTermQueryBuilder( prefixQuery(&quot;user&quot;, &quot;ki&quot;) //&#x53EF;&#x4EE5;&#x662F;MultiTermQueryBuilder &#x7684; &#x6269;&#x5C55; &#x6BD4;&#x5982;&#xFF1A;FuzzyQueryBuilder, PrefixQueryBuilder, RangeQueryBuilder, RegexpQueryBuilder &#xFF0C; WildcardQueryBuilder&#x3002; ); span_first&#x67E5;&#x8BE2; &#x63A5;&#x53D7;&#x53E6;&#x4E00;&#x4E2A;Span&#x67E5;&#x8BE2;&#xFF0C;&#x5176;&#x5339;&#x914D;&#x5FC5;&#x987B;&#x51FA;&#x73B0;&#x5728;&#x5B57;&#x6BB5;&#x7684;&#x524D;N&#x4E2A;&#x4F4D;&#x7F6E;&#x3002; &#x67E5;&#x770B;Span First Query QueryBuilder qb = spanFirstQuery( spanTermQuery(&quot;user&quot;, &quot;kimchy&quot;), //query 3 //max end position ); span_near&#x67E5;&#x8BE2; &#x63A5;&#x53D7;&#x591A;&#x4E2A;Span&#x67E5;&#x8BE2;&#xFF0C;&#x5176;&#x5339;&#x914D;&#x5FC5;&#x987B;&#x5728;&#x5F7C;&#x6B64;&#x7684;&#x6307;&#x5B9A;&#x8DDD;&#x79BB;&#x5185;&#xFF0C;&#x5E76;&#x4E14;&#x53EF;&#x80FD;&#x987A;&#x5E8F;&#x76F8;&#x540C;&#x3002; &#x67E5;&#x770B;Span Near Query QueryBuilder qb = spanNearQuery( spanTermQuery(&quot;field&quot;,&quot;value1&quot;), //span term queries 12) //slop factor: the maximum number of intervening unmatched positions .addClause(spanTermQuery(&quot;field&quot;,&quot;value2&quot;)) //span term queries .addClause(spanTermQuery(&quot;field&quot;,&quot;value3&quot;)) //span term queries .inOrder(false); //whether matches are required to be in-order span_or&#x67E5;&#x8BE2; &#x7EC4;&#x5408;&#x591A;&#x4E2A;Span&#x67E5;&#x8BE2; - &#x8FD4;&#x56DE;&#x4E0E;&#x4EFB;&#x4F55;&#x6307;&#x5B9A;&#x67E5;&#x8BE2;&#x5339;&#x914D;&#x7684;&#x6587;&#x6863;&#x3002; &#x67E5;&#x770B;Span Or Query QueryBuilder qb = spanOrQuery( spanTermQuery(&quot;field&quot;,&quot;value1&quot;)) .addClause(spanTermQuery(&quot;field&quot;,&quot;value2&quot;)) .addClause(spanTermQuery(&quot;field&quot;,&quot;value3&quot;)); //span term queries span_not&#x67E5;&#x8BE2; &#x5305;&#x88C5;&#x53E6;&#x4E00;&#x4E2A;Span&#x67E5;&#x8BE2;&#xFF0C;&#x5E76;&#x6392;&#x9664;&#x4E0E;&#x8BE5;&#x67E5;&#x8BE2;&#x5339;&#x914D;&#x7684;&#x6240;&#x6709;&#x6587;&#x6863;&#x3002; &#x67E5;&#x770B;Span Not Query QueryBuilder qb = spanNotQuery( spanTermQuery(&quot;field&quot;,&quot;value1&quot;), //span query whose matches are filtered spanTermQuery(&quot;field&quot;,&quot;value2&quot;)); //span query whose matches must not overlap those returned span_containing &#x67E5;&#x8BE2; &#x63A5;&#x53D7;Span&#x67E5;&#x8BE2;&#x7684;&#x5217;&#x8868;&#xFF0C;&#x4F46;&#x4EC5;&#x8FD4;&#x56DE;&#x4E0E;&#x7B2C;&#x4E8C;&#x4E2A;Spans&#x67E5;&#x8BE2;&#x5339;&#x914D;&#x7684;Span&#x3002; &#x67E5;&#x770B; Span Containing Query QueryBuilder qb = spanContainingQuery( spanNearQuery(spanTermQuery(&quot;field1&quot;,&quot;bar&quot;), 5) //big part .addClause(spanTermQuery(&quot;field1&quot;,&quot;baz&quot;)) .inOrder(true), spanTermQuery(&quot;field1&quot;,&quot;foo&quot;)); //little part span_within&#x67E5;&#x8BE2; &#x53EA;&#x8981;&#x5176; span &#x4F4D;&#x4E8E;&#x7531;&#x5176;&#x4ED6;Span&#x67E5;&#x8BE2;&#x5217;&#x8868;&#x8FD4;&#x56DE;&#x7684;&#x8303;&#x56F4;&#x5185;&#xFF0C;&#x5C31;&#x4F1A;&#x8FD4;&#x56DE;&#x5355;&#x4E2A;Span&#x67E5;&#x8BE2;&#x7684;&#x7ED3;&#x679C;&#xFF0C; &#x67E5;&#x770B;Span Within Query QueryBuilder qb = spanWithinQuery( spanNearQuery(spanTermQuery(&quot;field1&quot;, &quot;bar&quot;), 5) //big part .addClause(spanTermQuery(&quot;field1&quot;, &quot;baz&quot;)) .inOrder(true), spanTermQuery(&quot;field1&quot;, &quot;foo&quot;)); //little part results matching \"\" No results matching \"\" var gitbook = gitbook || []; gitbook.push(function() { gitbook.page.hasChanged({\"page\":{\"title\":\"Span queries\",\"level\":\"1.7.8\",\"depth\":2,\"next\":{\"title\":\"Indexed Scripts API\",\"level\":\"1.8\",\"depth\":1,\"path\":\"indexed-scripts-api.md\",\"ref\":\"indexed-scripts-api.md\",\"articles\":[{\"title\":\"Script Language\",\"level\":\"1.8.1\",\"depth\":2,\"path\":\"indexed-scripts-api/script-language.md\",\"ref\":\"indexed-scripts-api/script-language.md\",\"articles\":[]}]},\"previous\":{\"title\":\"Specialized queries\",\"level\":\"1.7.7\",\"depth\":2,\"path\":\"query-dsl/specialized-queries.md\",\"ref\":\"query-dsl/specialized-queries.md\",\"articles\":[]},\"dir\":\"ltr\"},\"config\":{\"gitbook\":\"*\",\"theme\":\"default\",\"variables\":{},\"plugins\":[],\"pluginsConfig\":{\"highlight\":{},\"search\":{},\"lunr\":{\"maxIndexSize\":1000000,\"ignoreSpecialCharacters\":false},\"sharing\":{\"facebook\":true,\"twitter\":true,\"google\":false,\"weibo\":false,\"instapaper\":false,\"vk\":false,\"all\":[\"facebook\",\"google\",\"twitter\",\"weibo\",\"instapaper\"]},\"fontsettings\":{\"theme\":\"white\",\"family\":\"sans\",\"size\":2},\"theme-default\":{\"styles\":{\"website\":\"styles/website.css\",\"pdf\":\"styles/pdf.css\",\"epub\":\"styles/epub.css\",\"mobi\":\"styles/mobi.css\",\"ebook\":\"styles/ebook.css\",\"print\":\"styles/print.css\"},\"showLevel\":false}},\"structure\":{\"langs\":\"LANGS.md\",\"readme\":\"README.md\",\"glossary\":\"GLOSSARY.md\",\"summary\":\"SUMMARY.md\"},\"pdf\":{\"pageNumbers\":true,\"fontSize\":12,\"fontFamily\":\"Arial\",\"paperSize\":\"a4\",\"chapterMark\":\"pagebreak\",\"pageBreaksBefore\":\"/\",\"margin\":{\"right\":62,\"left\":62,\"top\":56,\"bottom\":56}},\"styles\":{\"website\":\"styles/website.css\",\"pdf\":\"styles/pdf.css\",\"epub\":\"styles/epub.css\",\"mobi\":\"styles/mobi.css\",\"ebook\":\"styles/ebook.css\",\"print\":\"styles/print.css\"}},\"file\":{\"path\":\"query-dsl/span-queries.md\",\"mtime\":\"2017-11-08T08:39:31.983Z\",\"type\":\"markdown\"},\"gitbook\":{\"version\":\"3.2.3\",\"time\":\"2018-01-29T15:28:32.108Z\"},\"basePath\":\"..\",\"book\":{\"language\":\"\"}}); });"},{"title":"","date":"2018-02-01T07:21:14.297Z","updated":"2018-01-29T15:28:36.378Z","comments":true,"path":"esjava/query-dsl/specialized-queries.html","permalink":"http://test.quanke.name/esjava/query-dsl/specialized-queries.html","excerpt":"","text":"Specialized queries · GitBook Introduction Dependency Client Transport Client XPack Transport Client Document APIs Index API Get API Delete API Delete By Query API Update API Multi Get API Bulk API Using Bulk Processor Search API Using scrolls in Java MultiSearch API Using Aggregations Terminate After Search Template Aggregations Structuring aggregations Metrics aggregations Bucket aggregations Query DSL Match All Query Full text queries Term level queries Compound queries Joining queries Geo queries Specialized queries Span queries Indexed Scripts API Script Language Java API Administration Indices Administration Cluster Administration Published with GitBook Specialized queries Specialized queries more_like_this query(&#x76F8;&#x4F3C;&#x5EA6;&#x67E5;&#x8BE2;) &#x8FD9;&#x4E2A;&#x67E5;&#x8BE2;&#x80FD;&#x68C0;&#x7D22;&#x5230;&#x4E0E;&#x6307;&#x5B9A;&#x6587;&#x672C;&#x3001;&#x6587;&#x6863;&#x6216;&#x8005;&#x6587;&#x6863;&#x96C6;&#x5408;&#x76F8;&#x4F3C;&#x7684;&#x6587;&#x6863;&#x3002; &#x67E5;&#x770B;More Like This Query String[] fields = {&quot;name.first&quot;, &quot;name.last&quot;}; //fields String[] texts = {&quot;text like this one&quot;}; //text Item[] items = null; QueryBuilder qb = moreLikeThisQuery(fields, texts, items) .minTermFreq(1) //ignore threshold .maxQueryTerms(12); //max num of Terms in generated queries script query &#x8BE5;&#x67E5;&#x8BE2;&#x5141;&#x8BB8;&#x811A;&#x672C;&#x5145;&#x5F53;&#x8FC7;&#x6EE4;&#x5668;&#x3002; &#x53E6;&#x8BF7;&#x53C2;&#x9605; function_score query &#x3002; &#x67E5;&#x770B;Script Query QueryBuilder qb = scriptQuery( new Script(&quot;doc[&apos;num1&apos;].value &gt; 1&quot;) //inlined script ); &#x5982;&#x679C;&#x5DF2;&#x7ECF;&#x5728;&#x6BCF;&#x4E2A;&#x6570;&#x636E;&#x8282;&#x70B9;&#x4E0A;&#x5B58;&#x50A8;&#x540D;&#x4E3A; `myscript.painless &#x7684;&#x811A;&#x672C;&#xFF0C;&#x8BF7;&#x6267;&#x884C;&#x4EE5;&#x4E0B;&#x64CD;&#x4F5C;&#xFF1A; doc[&apos;num1&apos;].value &gt; params.param1 &#x7136;&#x540E;&#x4F7F;&#x7528;&#xFF1A; QueryBuilder qb = scriptQuery( new Script( ScriptType.FILE, //&#x811A;&#x672C;&#x7C7B;&#x578B; ScriptType.FILE, ScriptType.INLINE&#xFF0C; ScriptType.INDEXED &quot;painless&quot;, //Scripting engine &#x811A;&#x672C;&#x5F15;&#x64CE; &quot;myscript&quot;, //Script name &#x811A;&#x672C;&#x540D; Collections.singletonMap(&quot;param1&quot;, 5)) //Parameters as a Map of &lt;String, Object&gt; ); Percolate Query &#x67E5;&#x770B;Percolate Query Settings settings = Settings.builder().put(&quot;cluster.name&quot;, &quot;elasticsearch&quot;).build(); TransportClient client = new PreBuiltTransportClient(settings); client.addTransportAddress(new InetSocketTransportAddress(new InetSocketAddress(InetAddresses.forString(&quot;127.0.0.1&quot;), 9300))); &#x5728;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;percolate&#x67E5;&#x8BE2;&#x4E4B;&#x524D;&#xFF0C;&#x5E94;&#x8BE5;&#x6DFB;&#x52A0;percolator&#x6620;&#x5C04;&#xFF0C;&#x5E76;&#x4E14;&#x5E94;&#x8BE5;&#x5BF9;&#x5305;&#x542B;percolator&#x67E5;&#x8BE2;&#x7684;&#x6587;&#x6863;&#x5EFA;&#x7ACB;&#x7D22;&#x5F15;&#xFF1A; // create an index with a percolator field with the name &apos;query&apos;: client.admin().indices().prepareCreate(&quot;myIndexName&quot;) .addMapping(&quot;query&quot;, &quot;query&quot;, &quot;type=percolator&quot;) .addMapping(&quot;docs&quot;, &quot;content&quot;, &quot;type=text&quot;) .get(); //This is the query we&apos;re registering in the percolator QueryBuilder qb = termQuery(&quot;content&quot;, &quot;amazing&quot;); //Index the query = register it in the percolator client.prepareIndex(&quot;myIndexName&quot;, &quot;query&quot;, &quot;myDesignatedQueryName&quot;) .setSource(jsonBuilder() .startObject() .field(&quot;query&quot;, qb) // Register the query .endObject()) .setRefreshPolicy(RefreshPolicy.IMMEDIATE) // Needed when the query shall be available immediately .get(); &#x5728;&#x4E0A;&#x9762;&#x7684;index&#x4E2D;query&#x540D;&#x4E3A; myDesignatedQueryName &#x4E3A;&#x4E86;&#x68C0;&#x67E5;&#x6587;&#x6863;&#x6CE8;&#x518C;&#x67E5;&#x8BE2;,&#x4F7F;&#x7528;&#x8FD9;&#x4E2A;&#x4EE3;&#x7801;: //Build a document to check against the percolator XContentBuilder docBuilder = XContentFactory.jsonBuilder().startObject(); docBuilder.field(&quot;content&quot;, &quot;This is amazing!&quot;); docBuilder.endObject(); //End of the JSON root object PercolateQueryBuilder percolateQuery = new PercolateQueryBuilder(&quot;query&quot;, &quot;docs&quot;, docBuilder.bytes()); // Percolate, by executing the percolator query in the query dsl: SearchResponse response = client().prepareSearch(&quot;myIndexName&quot;) .setQuery(percolateQuery)) .get(); //Iterate over the results for(SearchHit hit : response.getHits()) { // Percolator queries as hit } results matching \"\" No results matching \"\" var gitbook = gitbook || []; gitbook.push(function() { gitbook.page.hasChanged({\"page\":{\"title\":\"Specialized queries\",\"level\":\"1.7.7\",\"depth\":2,\"next\":{\"title\":\"Span queries\",\"level\":\"1.7.8\",\"depth\":2,\"path\":\"query-dsl/span-queries.md\",\"ref\":\"query-dsl/span-queries.md\",\"articles\":[]},\"previous\":{\"title\":\"Geo queries\",\"level\":\"1.7.6\",\"depth\":2,\"path\":\"query-dsl/geo-queries.md\",\"ref\":\"query-dsl/geo-queries.md\",\"articles\":[]},\"dir\":\"ltr\"},\"config\":{\"gitbook\":\"*\",\"theme\":\"default\",\"variables\":{},\"plugins\":[],\"pluginsConfig\":{\"highlight\":{},\"search\":{},\"lunr\":{\"maxIndexSize\":1000000,\"ignoreSpecialCharacters\":false},\"sharing\":{\"facebook\":true,\"twitter\":true,\"google\":false,\"weibo\":false,\"instapaper\":false,\"vk\":false,\"all\":[\"facebook\",\"google\",\"twitter\",\"weibo\",\"instapaper\"]},\"fontsettings\":{\"theme\":\"white\",\"family\":\"sans\",\"size\":2},\"theme-default\":{\"styles\":{\"website\":\"styles/website.css\",\"pdf\":\"styles/pdf.css\",\"epub\":\"styles/epub.css\",\"mobi\":\"styles/mobi.css\",\"ebook\":\"styles/ebook.css\",\"print\":\"styles/print.css\"},\"showLevel\":false}},\"structure\":{\"langs\":\"LANGS.md\",\"readme\":\"README.md\",\"glossary\":\"GLOSSARY.md\",\"summary\":\"SUMMARY.md\"},\"pdf\":{\"pageNumbers\":true,\"fontSize\":12,\"fontFamily\":\"Arial\",\"paperSize\":\"a4\",\"chapterMark\":\"pagebreak\",\"pageBreaksBefore\":\"/\",\"margin\":{\"right\":62,\"left\":62,\"top\":56,\"bottom\":56}},\"styles\":{\"website\":\"styles/website.css\",\"pdf\":\"styles/pdf.css\",\"epub\":\"styles/epub.css\",\"mobi\":\"styles/mobi.css\",\"ebook\":\"styles/ebook.css\",\"print\":\"styles/print.css\"}},\"file\":{\"path\":\"query-dsl/specialized-queries.md\",\"mtime\":\"2017-11-08T08:39:31.986Z\",\"type\":\"markdown\"},\"gitbook\":{\"version\":\"3.2.3\",\"time\":\"2018-01-29T15:28:32.108Z\"},\"basePath\":\"..\",\"book\":{\"language\":\"\"}}); });"},{"title":"","date":"2018-02-01T07:21:14.297Z","updated":"2018-01-29T15:28:33.720Z","comments":true,"path":"esjava/query-dsl/span-queries.html","permalink":"http://test.quanke.name/esjava/query-dsl/span-queries.html","excerpt":"","text":"Span queries span_term查询 等同于 term query ，但与其他Span查询一起使用。 查看 Span Term Query QueryBuilder qb = spanTermQuery( &quot;user&quot;, //field &quot;kimchy&quot; //value); span_multi查询 包含term, range, prefix, wildcard, regexp 或者 fuzzy 查询。 查看Span Multi Term Query QueryBuilder qb = spanMultiTermQueryBuilder( prefixQuery(&quot;user&quot;, &quot;ki&quot;) //可以是MultiTermQueryBuilder 的 扩展 比如：FuzzyQueryBuilder, PrefixQueryBuilder, RangeQueryBuilder, RegexpQueryBuilder ， WildcardQueryBuilder。); span_first查询 接受另一个Span查询，其匹配必须出现在字段的前N个位置。 查看Span First Query QueryBuilder qb = spanFirstQuery( spanTermQuery(&quot;user&quot;, &quot;kimchy&quot;), //query 3 //max end position); span_near查询 接受多个Span查询，其匹配必须在彼此的指定距离内，并且可能顺序相同。 查看Span Near Query QueryBuilder qb = spanNearQuery( spanTermQuery(&quot;field&quot;,&quot;value1&quot;), //span term queries 12) //slop factor: the maximum number of intervening unmatched positions .addClause(spanTermQuery(&quot;field&quot;,&quot;value2&quot;)) //span term queries .addClause(spanTermQuery(&quot;field&quot;,&quot;value3&quot;)) //span term queries .inOrder(false); //whether matches are required to be in-order span_or查询 组合多个Span查询 - 返回与任何指定查询匹配的文档。 查看Span Or Query QueryBuilder qb = spanOrQuery( spanTermQuery(&quot;field&quot;,&quot;value1&quot;)) .addClause(spanTermQuery(&quot;field&quot;,&quot;value2&quot;)) .addClause(spanTermQuery(&quot;field&quot;,&quot;value3&quot;)); //span term queries span_not查询 包装另一个Span查询，并排除与该查询匹配的所有文档。 查看Span Not Query QueryBuilder qb = spanNotQuery( spanTermQuery(&quot;field&quot;,&quot;value1&quot;), //span query whose matches are filtered spanTermQuery(&quot;field&quot;,&quot;value2&quot;)); //span query whose matches must not overlap those returned span_containing 查询 接受Span查询的列表，但仅返回与第二个Spans查询匹配的Span。 查看 Span Containing Query QueryBuilder qb = spanContainingQuery( spanNearQuery(spanTermQuery(&quot;field1&quot;,&quot;bar&quot;), 5) //big part .addClause(spanTermQuery(&quot;field1&quot;,&quot;baz&quot;)) .inOrder(true), spanTermQuery(&quot;field1&quot;,&quot;foo&quot;)); //little part span_within查询 只要其 span 位于由其他Span查询列表返回的范围内，就会返回单个Span查询的结果， 查看Span Within Query QueryBuilder qb = spanWithinQuery( spanNearQuery(spanTermQuery(&quot;field1&quot;, &quot;bar&quot;), 5) //big part .addClause(spanTermQuery(&quot;field1&quot;, &quot;baz&quot;)) .inOrder(true), spanTermQuery(&quot;field1&quot;, &quot;foo&quot;)); //little part"},{"title":"","date":"2018-02-01T07:21:14.299Z","updated":"2018-01-29T15:28:36.073Z","comments":true,"path":"esjava/query-dsl/term-level-queries.html","permalink":"http://test.quanke.name/esjava/query-dsl/term-level-queries.html","excerpt":"","text":"Term level queries · GitBook Introduction Dependency Client Transport Client XPack Transport Client Document APIs Index API Get API Delete API Delete By Query API Update API Multi Get API Bulk API Using Bulk Processor Search API Using scrolls in Java MultiSearch API Using Aggregations Terminate After Search Template Aggregations Structuring aggregations Metrics aggregations Bucket aggregations Query DSL Match All Query Full text queries Term level queries Compound queries Joining queries Geo queries Specialized queries Span queries Indexed Scripts API Script Language Java API Administration Indices Administration Cluster Administration Published with GitBook Term level queries Term level queries &#x672F;&#x8BED;&#x67E5;&#x8BE2; &#x867D;&#x7136;&#x5168;&#x6587;&#x67E5;&#x8BE2;&#x5C06;&#x5728;&#x6267;&#x884C;&#x4E4B;&#x524D;&#x5206;&#x6790;&#x67E5;&#x8BE2;&#x5B57;&#x7B26;&#x4E32;&#xFF0C;&#x4F46;&#x662F;&#x9879;&#x7EA7;&#x522B;&#x67E5;&#x8BE2;&#x5BF9;&#x5B58;&#x50A8;&#x5728;&#x53CD;&#x5411;&#x7D22;&#x5F15;&#x4E2D;&#x7684;&#x786E;&#x5207;&#x9879;&#x8FDB;&#x884C;&#x64CD;&#x4F5C;&#x3002; &#x8FD9;&#x4E9B;&#x67E5;&#x8BE2;&#x901A;&#x5E38;&#x7528;&#x4E8E;&#x7ED3;&#x6784;&#x5316;&#x6570;&#x636E;&#xFF0C;&#x5982;&#x6570;&#x5B57;&#x3001;&#x65E5;&#x671F;&#x548C;&#x679A;&#x4E3E;&#xFF0C;&#x800C;&#x4E0D;&#x662F;&#x5168;&#x6587;&#x5B57;&#x6BB5;&#x3002;&#x6216;&#x8005;&#xFF0C;&#x5728;&#x5206;&#x6790;&#x8FC7;&#x7A0B;&#x4E4B;&#x524D;&#xFF0C;&#x5B83;&#x5141;&#x8BB8;&#x4F60;&#x7ED8;&#x5236;&#x4F4E;&#x7EA7;&#x67E5;&#x8BE2;&#x3002; &#x8FD9;&#x6837;&#x7684;&#x67E5;&#x8BE2;&#x6709;&#x4EE5;&#x4E0B;&#x8FD9;&#x4E9B;&#xFF1A; Term Query&#xFF08;&#x9879;&#x67E5;&#x8BE2;&#xFF09; &#x67E5;&#x8BE2;&#x5305;&#x542B;&#x5728;&#x6307;&#x5B9A;&#x5B57;&#x6BB5;&#x4E2D;&#x6307;&#x5B9A;&#x7684;&#x786E;&#x5207;&#x503C;&#x7684;&#x6587;&#x6863;&#x3002; &#x67E5;&#x770B;Term Query QueryBuilder qb = termQuery( &quot;name&quot;, //field &quot;kimchy&quot; //text ); Terms Query&#xFF08;&#x591A;&#x9879;&#x67E5;&#x8BE2;&#xFF09; &#x67E5;&#x8BE2;&#x5305;&#x542B;&#x4EFB;&#x610F;&#x4E00;&#x4E2A;&#x5728;&#x6307;&#x5B9A;&#x5B57;&#x6BB5;&#x4E2D;&#x6307;&#x5B9A;&#x7684;&#x591A;&#x4E2A;&#x786E;&#x5207;&#x503C;&#x7684;&#x6587;&#x6863;&#x3002; &#x67E5;&#x770B;Terms Query QueryBuilder qb = termsQuery(&quot;tags&quot;, //field &quot;blue&quot;, &quot;pill&quot;); //values Range Query&#xFF08;&#x8303;&#x56F4;&#x67E5;&#x8BE2;&#xFF09; &#x67E5;&#x8BE2;&#x6307;&#x5B9A;&#x5B57;&#x6BB5;&#x5305;&#x542B;&#x6307;&#x5B9A;&#x8303;&#x56F4;&#x5185;&#x7684;&#x503C;&#xFF08;&#x65E5;&#x671F;&#xFF0C;&#x6570;&#x5B57;&#x6216;&#x5B57;&#x7B26;&#x4E32;&#xFF09;&#x7684;&#x6587;&#x6863;&#x3002; &#x67E5;&#x770B;Range Query &#x65B9;&#x6CD5;&#xFF1A; gte() :&#x8303;&#x56F4;&#x67E5;&#x8BE2;&#x5C06;&#x5339;&#x914D;&#x5B57;&#x6BB5;&#x503C;&#x5927;&#x4E8E;&#x6216;&#x7B49;&#x4E8E;&#x6B64;&#x53C2;&#x6570;&#x503C;&#x7684;&#x6587;&#x6863;&#x3002; gt() :&#x8303;&#x56F4;&#x67E5;&#x8BE2;&#x5C06;&#x5339;&#x914D;&#x5B57;&#x6BB5;&#x503C;&#x5927;&#x4E8E;&#x6B64;&#x53C2;&#x6570;&#x503C;&#x7684;&#x6587;&#x6863;&#x3002; lte() :&#x8303;&#x56F4;&#x67E5;&#x8BE2;&#x5C06;&#x5339;&#x914D;&#x5B57;&#x6BB5;&#x503C;&#x5C0F;&#x4E8E;&#x6216;&#x7B49;&#x4E8E;&#x6B64;&#x53C2;&#x6570;&#x503C;&#x7684;&#x6587;&#x6863;&#x3002; lt() :&#x8303;&#x56F4;&#x67E5;&#x8BE2;&#x5C06;&#x5339;&#x914D;&#x5B57;&#x6BB5;&#x503C;&#x5C0F;&#x4E8E;&#x6B64;&#x53C2;&#x6570;&#x503C;&#x7684;&#x6587;&#x6863;&#x3002; from() &#x5F00;&#x59CB;&#x503C; to() &#x7ED3;&#x675F;&#x503C; &#x8FD9;&#x4E24;&#x4E2A;&#x51FD;&#x6570;&#x4E0E;includeLower()&#x548C;includeUpper()&#x51FD;&#x6570;&#x914D;&#x5957;&#x4F7F;&#x7528;&#x3002; includeLower(true) &#x8868;&#x793A; from() &#x67E5;&#x8BE2;&#x5C06;&#x5339;&#x914D;&#x5B57;&#x6BB5;&#x503C;&#x5927;&#x4E8E;&#x6216;&#x7B49;&#x4E8E;&#x6B64;&#x53C2;&#x6570;&#x503C;&#x7684;&#x6587;&#x6863;&#x3002; includeLower(false) &#x8868;&#x793A; from() &#x67E5;&#x8BE2;&#x5C06;&#x5339;&#x914D;&#x5B57;&#x6BB5;&#x503C;&#x5927;&#x4E8E;&#x6B64;&#x53C2;&#x6570;&#x503C;&#x7684;&#x6587;&#x6863;&#x3002; includeUpper(true) &#x8868;&#x793A; to() &#x67E5;&#x8BE2;&#x5C06;&#x5339;&#x914D;&#x5B57;&#x6BB5;&#x503C;&#x5C0F;&#x4E8E;&#x6216;&#x7B49;&#x4E8E;&#x6B64;&#x53C2;&#x6570;&#x503C;&#x7684;&#x6587;&#x6863;&#x3002; includeUpper(false) &#x8868;&#x793A; to() &#x67E5;&#x8BE2;&#x5C06;&#x5339;&#x914D;&#x5B57;&#x6BB5;&#x503C;&#x5C0F;&#x4E8E;&#x6B64;&#x53C2;&#x6570;&#x503C;&#x7684;&#x6587;&#x6863;&#x3002; QueryBuilder qb = rangeQuery(&quot;price&quot;) //field .from(5) //&#x5F00;&#x59CB;&#x503C;&#xFF0C;&#x4E0E;includeLower()&#x548C;includeUpper()&#x51FD;&#x6570;&#x914D;&#x5957;&#x4F7F;&#x7528; .to(10) //&#x7ED3;&#x675F;&#x503C;&#xFF0C;&#x4E0E;includeLower()&#x548C;includeUpper()&#x51FD;&#x6570;&#x914D;&#x5957;&#x4F7F;&#x7528; .includeLower(true) // true: &#x8868;&#x793A; from() &#x67E5;&#x8BE2;&#x5C06;&#x5339;&#x914D;&#x5B57;&#x6BB5;&#x503C;&#x5927;&#x4E8E;&#x6216;&#x7B49;&#x4E8E;&#x6B64;&#x53C2;&#x6570;&#x503C;&#x7684;&#x6587;&#x6863;; false:&#x8868;&#x793A; from() &#x67E5;&#x8BE2;&#x5C06;&#x5339;&#x914D;&#x5B57;&#x6BB5;&#x503C;&#x5927;&#x4E8E;&#x6B64;&#x53C2;&#x6570;&#x503C;&#x7684;&#x6587;&#x6863;&#x3002; .includeUpper(false); //true:&#x8868;&#x793A; to() &#x67E5;&#x8BE2;&#x5C06;&#x5339;&#x914D;&#x5B57;&#x6BB5;&#x503C;&#x5C0F;&#x4E8E;&#x6216;&#x7B49;&#x4E8E;&#x6B64;&#x53C2;&#x6570;&#x503C;&#x7684;&#x6587;&#x6863;; false:&#x8868;&#x793A; to() &#x67E5;&#x8BE2;&#x5C06;&#x5339;&#x914D;&#x5B57;&#x6BB5;&#x503C;&#x5C0F;&#x4E8E;&#x6B64;&#x53C2;&#x6570;&#x503C;&#x7684;&#x6587;&#x6863;&#x3002; &#x5B9E;&#x4F8B; // Query RangeQueryBuilder rangeQueryBuilder = QueryBuilders.rangeQuery(&quot;age&quot;); rangeQueryBuilder.from(19); rangeQueryBuilder.to(21); rangeQueryBuilder.includeLower(true); rangeQueryBuilder.includeUpper(true); //RangeQueryBuilder rangeQueryBuilder = QueryBuilders.rangeQuery(&quot;age&quot;).gte(19).lte(21); // Search SearchRequestBuilder searchRequestBuilder = client.prepareSearch(index); searchRequestBuilder.setTypes(type); searchRequestBuilder.setQuery(rangeQueryBuilder); // &#x6267;&#x884C; SearchResponse searchResponse = searchRequestBuilder.execute().actionGet(); &#x4E0A;&#x9762;&#x4EE3;&#x7801;&#x4E2D;&#x7684;&#x67E5;&#x8BE2;&#x8BED;&#x53E5;&#x4E0E;&#x4E0B;&#x9762;&#x7684;&#x662F;&#x7B49;&#x4EF7;&#x7684;&#xFF1A; QueryBuilder queryBuilder = QueryBuilders.rangeQuery(&quot;age&quot;).gte(19).lte(21); Exists Query&#xFF08;&#x5B58;&#x5728;&#x67E5;&#x8BE2;&#xFF09; &#x67E5;&#x8BE2;&#x6307;&#x5B9A;&#x7684;&#x5B57;&#x6BB5;&#x5305;&#x542B;&#x4EFB;&#x4F55;&#x975E;&#x7A7A;&#x503C;&#x7684;&#x6587;&#x6863;,&#x5982;&#x679C;&#x6307;&#x5B9A;&#x5B57;&#x6BB5;&#x4E0A;&#x81F3;&#x5C11;&#x5B58;&#x5728;&#x4E00;&#x4E2A;no-null&#x7684;&#x503C;&#x5C31;&#x4F1A;&#x8FD4;&#x56DE;&#x8BE5;&#x6587;&#x6863;&#x3002; &#x67E5;&#x770B;Exists Query QueryBuilder qb = existsQuery(&quot;name&quot;); &#x5B9E;&#x4F8B; // Query ExistsQueryBuilder existsQueryBuilder = QueryBuilders.existsQuery(&quot;name&quot;); // Search SearchRequestBuilder searchRequestBuilder = client.prepareSearch(index); searchRequestBuilder.setTypes(type); searchRequestBuilder.setQuery(existsQueryBuilder); // &#x6267;&#x884C; SearchResponse searchResponse = searchRequestBuilder.get(); &#x4E3E;&#x4F8B;&#x8BF4;&#x660E;&#xFF0C;&#x4E0B;&#x9762;&#x7684;&#x51E0;&#x4E2A;&#x6587;&#x6863;&#x90FD;&#x4F1A;&#x5F97;&#x5230;&#x4E0A;&#x9762;&#x4EE3;&#x7801;&#x7684;&#x5339;&#x914D;&#xFF1A; { &quot;name&quot;: &quot;yoona&quot; } { &quot;name&quot;: &quot;&quot; } { &quot;name&quot;: &quot;-&quot; } { &quot;name&quot;: [&quot;yoona&quot;] } { &quot;name&quot;: [&quot;yoona&quot;, null ] } &#x7B2C;&#x4E00;&#x4E2A;&#x662F;&#x5B57;&#x7B26;&#x4E32;&#xFF0C;&#x662F;&#x4E00;&#x4E2A;&#x975E;null&#x7684;&#x503C;&#x3002; &#x7B2C;&#x4E8C;&#x4E2A;&#x662F;&#x7A7A;&#x5B57;&#x7B26;&#x4E32;&#xFF0C;&#x4E5F;&#x662F;&#x975E;null&#x3002; &#x7B2C;&#x4E09;&#x4E2A;&#x4F7F;&#x7528;&#x6807;&#x51C6;&#x5206;&#x6790;&#x5668;&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#x5C3D;&#x7BA1;&#x4E0D;&#x4F1A;&#x8FD4;&#x56DE;&#x8BCD;&#x6761;&#xFF0C;&#x4F46;&#x662F;&#x539F;&#x59CB;&#x5B57;&#x6BB5;&#x503C;&#x662F;&#x975E;null&#x7684;&#xFF08;Even though the standard analyzer would emit zero tokens, the original field is non-null&#xFF09;&#x3002; &#x7B2C;&#x4E94;&#x4E2A;&#x4E2D;&#x81F3;&#x5C11;&#x6709;&#x4E00;&#x4E2A;&#x662F;&#x975E;null&#x503C;&#x3002; &#x4E0B;&#x9762;&#x51E0;&#x4E2A;&#x6587;&#x6863;&#x4E0D;&#x4F1A;&#x5F97;&#x5230;&#x4E0A;&#x9762;&#x4EE3;&#x7801;&#x7684;&#x5339;&#x914D;&#xFF1A; { &quot;name&quot;: null } { &quot;name&quot;: [] } { &quot;name&quot;: [null] } { &quot;user&quot;: &quot;bar&quot; } &#x7B2C;&#x4E00;&#x4E2A;&#x662F;null&#x503C;&#x3002; &#x7B2C;&#x4E8C;&#x4E2A;&#x6CA1;&#x6709;&#x503C;&#x3002; &#x7B2C;&#x4E09;&#x4E2A;&#x53EA;&#x6709;null&#x503C;&#xFF0C;&#x81F3;&#x5C11;&#x9700;&#x8981;&#x4E00;&#x4E2A;&#x975E;null&#x503C;&#x3002; &#x7B2C;&#x56DB;&#x4E2A;&#x4E0E;&#x6307;&#x5B9A;&#x5B57;&#x6BB5;&#x4E0D;&#x5339;&#x914D;&#x3002; Prefix Query&#xFF08;&#x524D;&#x7F00;&#x67E5;&#x8BE2;&#xFF09; &#x67E5;&#x627E;&#x6307;&#x5B9A;&#x5B57;&#x6BB5;&#x5305;&#x542B;&#x4EE5;&#x6307;&#x5B9A;&#x7684;&#x7CBE;&#x786E;&#x524D;&#x7F00;&#x5F00;&#x5934;&#x7684;&#x503C;&#x7684;&#x6587;&#x6863;&#x3002; &#x67E5;&#x770B;Prefix Query QueryBuilder qb = prefixQuery( &quot;brand&quot;, //field &quot;heine&quot; //prefix ); Wildcard Query&#xFF08;&#x901A;&#x914D;&#x7B26;&#x67E5;&#x8BE2;&#xFF09; &#x67E5;&#x8BE2;&#x6307;&#x5B9A;&#x5B57;&#x6BB5;&#x5305;&#x542B;&#x4E0E;&#x6307;&#x5B9A;&#x6A21;&#x5F0F;&#x5339;&#x914D;&#x7684;&#x503C;&#x7684;&#x6587;&#x6863;&#xFF0C;&#x5176;&#x4E2D;&#x8BE5;&#x6A21;&#x5F0F;&#x652F;&#x6301;&#x5355;&#x5B57;&#x7B26;&#x901A;&#x914D;&#x7B26;&#xFF08;&#xFF1F;&#xFF09;&#x548C;&#x591A;&#x5B57;&#x7B26;&#x901A;&#x914D;&#x7B26;&#xFF08;*&#xFF09;,&#x548C;&#x524D;&#x7F00;&#x67E5;&#x8BE2;&#x4E00;&#x6837;&#xFF0C;&#x901A;&#x914D;&#x7B26;&#x67E5;&#x8BE2;&#x6307;&#x5B9A;&#x5B57;&#x6BB5;&#x662F;&#x672A;&#x5206;&#x6790;&#x7684;&#xFF08;not analyzed&#xFF09; &#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x661F;&#x53F7;&#x4EE3;&#x66FF;0&#x4E2A;&#x6216;&#x591A;&#x4E2A;&#x5B57;&#x7B26;&#xFF0C;&#x4F7F;&#x7528;&#x95EE;&#x53F7;&#x4EE3;&#x66FF;&#x4E00;&#x4E2A;&#x5B57;&#x7B26;&#x3002;&#x661F;&#x53F7;&#x8868;&#x793A;&#x5339;&#x914D;&#x7684;&#x6570;&#x91CF;&#x4E0D;&#x53D7;&#x9650;&#x5236;&#xFF0C;&#x800C;&#x540E;&#x8005;&#x7684;&#x5339;&#x914D;&#x5B57;&#x7B26;&#x6570;&#x5219;&#x53D7;&#x5230;&#x9650;&#x5236;&#x3002;&#x8FD9;&#x4E2A;&#x6280;&#x5DE7;&#x4E3B;&#x8981;&#x7528;&#x4E8E;&#x82F1;&#x6587;&#x641C;&#x7D22;&#x4E2D;&#xFF0C;&#x5982;&#x8F93;&#x5165;&#x201C;&#x201C;computer*&#x201D;&#xFF0C;&#x5C31;&#x53EF;&#x4EE5;&#x627E;&#x5230;&#x201C;computer&#x3001;computers&#x3001;computerised&#x3001;computerized&#x201D;&#x7B49;&#x5355;&#x8BCD;&#xFF0C;&#x800C;&#x8F93;&#x5165;&#x201C;comp?ter&#x201D;&#xFF0C;&#x5219;&#x53EA;&#x80FD;&#x627E;&#x5230;&#x201C;computer&#x3001;compater&#x3001;competer&#x201D;&#x7B49;&#x5355;&#x8BCD;&#x3002;&#x6CE8;&#x610F;&#x7684;&#x662F;&#x901A;&#x914D;&#x7B26;&#x67E5;&#x8BE2;&#x4E0D;&#x592A;&#x6CE8;&#x91CD;&#x6027;&#x80FD;&#xFF0C;&#x5728;&#x53EF;&#x80FD;&#x65F6;&#x5C3D;&#x91CF;&#x907F;&#x514D;&#xFF0C;&#x7279;&#x522B;&#x662F;&#x8981;&#x907F;&#x514D;&#x524D;&#x7F00;&#x901A;&#x914D;&#x7B26;&#xFF08;&#x4EE5;&#x901A;&#x914D;&#x7B26;&#x5F00;&#x59CB;&#x7684;&#x8BCD;&#x6761;&#xFF09;&#x3002; QueryBuilder qb = wildcardQuery(&quot;user&quot;, &quot;k?mc*&quot;); &#x5B9E;&#x4F8B; // Query WildcardQueryBuilder wildcardQueryBuilder = QueryBuilders.wildcardQuery(&quot;country&quot;, &quot;&#x897F;*&#x7259;&quot;); // Search SearchRequestBuilder searchRequestBuilder = client.prepareSearch(index); searchRequestBuilder.setTypes(type); searchRequestBuilder.setQuery(wildcardQueryBuilder); // &#x6267;&#x884C; SearchResponse searchResponse = searchRequestBuilder.get(); &#x67E5;&#x770B;Wildcard Query Regexp Query&#xFF08;&#x6B63;&#x5219;&#x8868;&#x8FBE;&#x5F0F;&#x67E5;&#x8BE2;&#xFF09; &#x67E5;&#x8BE2;&#x6307;&#x5B9A;&#x7684;&#x5B57;&#x6BB5;&#x5305;&#x542B;&#x4E0E;&#x6307;&#x5B9A;&#x7684;&#x6B63;&#x5219;&#x8868;&#x8FBE;&#x5F0F;&#x5339;&#x914D;&#x7684;&#x503C;&#x7684;&#x6587;&#x6863;&#x3002; &#x548C;&#x524D;&#x7F00;&#x67E5;&#x8BE2;&#x4E00;&#x6837;&#xFF0C;&#x6B63;&#x5219;&#x8868;&#x8FBE;&#x5F0F;&#x67E5;&#x8BE2;&#x6307;&#x5B9A;&#x5B57;&#x6BB5;&#x662F;&#x672A;&#x5206;&#x6790;&#x7684;&#xFF08;not analyzed&#xFF09;&#x3002;&#x6B63;&#x5219;&#x8868;&#x8FBE;&#x5F0F;&#x67E5;&#x8BE2;&#x7684;&#x6027;&#x80FD;&#x53D6;&#x51B3;&#x4E8E;&#x6240;&#x9009;&#x7684;&#x6B63;&#x5219;&#x8868;&#x8FBE;&#x5F0F;&#x3002;&#x5982;&#x679C;&#x6211;&#x4EEC;&#x7684;&#x6B63;&#x5219;&#x8868;&#x8FBE;&#x5F0F;&#x5339;&#x914D;&#x8BB8;&#x591A;&#x8BCD;&#x6761;&#xFF0C;&#x67E5;&#x8BE2;&#x5C06;&#x5F88;&#x6162;&#x3002;&#x4E00;&#x822C;&#x89C4;&#x5219;&#x662F;&#xFF0C;&#x6B63;&#x5219;&#x8868;&#x8FBE;&#x5F0F;&#x5339;&#x914D;&#x7684;&#x8BCD;&#x6761;&#x6570;&#x8D8A;&#x9AD8;&#xFF0C;&#x67E5;&#x8BE2;&#x8D8A;&#x6162;&#x3002; &#x67E5;&#x770B;Regexp Query QueryBuilder qb = regexpQuery( &quot;name.first&quot;, //field &quot;s.*y&quot;); //regexp &#x5B9E;&#x4F8B; // Query RegexpQueryBuilder regexpQueryBuilder = QueryBuilders.regexpQuery(&quot;country&quot;, &quot;(&#x897F;&#x73ED;|&#x8461;&#x8404;)&#x7259;&quot;); // Search SearchRequestBuilder searchRequestBuilder = client.prepareSearch(index); searchRequestBuilder.setTypes(type); searchRequestBuilder.setQuery(regexpQueryBuilder); // &#x6267;&#x884C; SearchResponse searchResponse = searchRequestBuilder.get(); Fuzzy Query&#xFF08;&#x6A21;&#x7CCA;&#x67E5;&#x8BE2;&#xFF09; &#x67E5;&#x8BE2;&#x6307;&#x5B9A;&#x5B57;&#x6BB5;&#x5305;&#x542B;&#x4E0E;&#x6307;&#x5B9A;&#x672F;&#x8BED;&#x6A21;&#x7CCA;&#x76F8;&#x4F3C;&#x7684;&#x672F;&#x8BED;&#x7684;&#x6587;&#x6863;&#x3002;&#x6A21;&#x7CCA;&#x6027;&#x6D4B;&#x91CF;&#x4E3A;1&#x6216;2&#x7684; Levenshtein&#x3002; &#x5982;&#x679C;&#x6307;&#x5B9A;&#x7684;&#x5B57;&#x6BB5;&#x662F;string&#x7C7B;&#x578B;&#xFF0C;&#x6A21;&#x7CCA;&#x67E5;&#x8BE2;&#x662F;&#x57FA;&#x4E8E;&#x7F16;&#x8F91;&#x8DDD;&#x79BB;&#x7B97;&#x6CD5;&#x6765;&#x5339;&#x914D;&#x6587;&#x6863;&#x3002;&#x7F16;&#x8F91;&#x8DDD;&#x79BB;&#x7684;&#x8BA1;&#x7B97;&#x57FA;&#x4E8E;&#x6211;&#x4EEC;&#x63D0;&#x4F9B;&#x7684;&#x67E5;&#x8BE2;&#x8BCD;&#x6761;&#x548C;&#x88AB;&#x641C;&#x7D22;&#x6587;&#x6863;&#x3002;&#x5982;&#x679C;&#x6307;&#x5B9A;&#x7684;&#x5B57;&#x6BB5;&#x662F;&#x6570;&#x503C;&#x7C7B;&#x578B;&#x6216;&#x8005;&#x65E5;&#x671F;&#x7C7B;&#x578B;&#xFF0C;&#x6A21;&#x7CCA;&#x67E5;&#x8BE2;&#x57FA;&#x4E8E;&#x5728;&#x5B57;&#x6BB5;&#x503C;&#x4E0A;&#x8FDB;&#x884C;&#x52A0;&#x51CF;&#x64CD;&#x4F5C;&#x6765;&#x5339;&#x914D;&#x6587;&#x6863;&#xFF08;The fuzzy query uses similarity based on Levenshtein edit distance for string fields, and a +/-margin on numeric and date fields&#xFF09;&#x3002;&#x6B64;&#x67E5;&#x8BE2;&#x5F88;&#x5360;&#x7528;CPU&#x8D44;&#x6E90;&#xFF0C;&#x4F46;&#x5F53;&#x9700;&#x8981;&#x6A21;&#x7CCA;&#x5339;&#x914D;&#x65F6;&#x5B83;&#x5F88;&#x6709;&#x7528;&#xFF0C;&#x4F8B;&#x5982;&#xFF0C;&#x5F53;&#x7528;&#x6237;&#x62FC;&#x5199;&#x9519;&#x8BEF;&#x65F6;&#x3002;&#x53E6;&#x5916;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x5728;&#x641C;&#x7D22;&#x8BCD;&#x7684;&#x5C3E;&#x90E8;&#x52A0;&#x4E0A;&#x5B57;&#x7B26; &#x201C;~&#x201D; &#x6765;&#x8FDB;&#x884C;&#x6A21;&#x7CCA;&#x67E5;&#x8BE2;&#x3002; &#x67E5;&#x770B;Fuzzy Query QueryBuilder qb = fuzzyQuery( &quot;name&quot;, //field &quot;kimzhy&quot; //text ); Type Query&#xFF08;&#x7C7B;&#x578B;&#x67E5;&#x8BE2;&#xFF09; &#x67E5;&#x8BE2;&#x6307;&#x5B9A;&#x7C7B;&#x578B;&#x7684;&#x6587;&#x6863;&#x3002; &#x67E5;&#x770B;Type Query QueryBuilder qb = typeQuery(&quot;my_type&quot;); //type Ids Query&#xFF08;ID&#x67E5;&#x8BE2;&#xFF09; &#x67E5;&#x8BE2;&#x5177;&#x6709;&#x6307;&#x5B9A;&#x7C7B;&#x578B;&#x548C; ID &#x7684;&#x6587;&#x6863;&#x3002; &#x67E5;&#x770B;Ids Query QueryBuilder qb = idsQuery(&quot;my_type&quot;, &quot;type2&quot;) .addIds(&quot;1&quot;, &quot;4&quot;, &quot;100&quot;); QueryBuilder qb = idsQuery() // type &#x662F;&#x53EF;&#x9009;&#x62E9;&#x7684;&#xFF0C;&#x53EF;&#x4EE5;&#x4E0D;&#x5199; .addIds(&quot;1&quot;, &quot;4&quot;, &quot;100&quot;); results matching \"\" No results matching \"\" var gitbook = gitbook || []; gitbook.push(function() { gitbook.page.hasChanged({\"page\":{\"title\":\"Term level queries\",\"level\":\"1.7.3\",\"depth\":2,\"next\":{\"title\":\"Compound queries\",\"level\":\"1.7.4\",\"depth\":2,\"path\":\"query-dsl/compound-queries.md\",\"ref\":\"query-dsl/compound-queries.md\",\"articles\":[]},\"previous\":{\"title\":\"Full text queries\",\"level\":\"1.7.2\",\"depth\":2,\"path\":\"query-dsl/full-text-queries.md\",\"ref\":\"query-dsl/full-text-queries.md\",\"articles\":[]},\"dir\":\"ltr\"},\"config\":{\"gitbook\":\"*\",\"theme\":\"default\",\"variables\":{},\"plugins\":[],\"pluginsConfig\":{\"highlight\":{},\"search\":{},\"lunr\":{\"maxIndexSize\":1000000,\"ignoreSpecialCharacters\":false},\"sharing\":{\"facebook\":true,\"twitter\":true,\"google\":false,\"weibo\":false,\"instapaper\":false,\"vk\":false,\"all\":[\"facebook\",\"google\",\"twitter\",\"weibo\",\"instapaper\"]},\"fontsettings\":{\"theme\":\"white\",\"family\":\"sans\",\"size\":2},\"theme-default\":{\"styles\":{\"website\":\"styles/website.css\",\"pdf\":\"styles/pdf.css\",\"epub\":\"styles/epub.css\",\"mobi\":\"styles/mobi.css\",\"ebook\":\"styles/ebook.css\",\"print\":\"styles/print.css\"},\"showLevel\":false}},\"structure\":{\"langs\":\"LANGS.md\",\"readme\":\"README.md\",\"glossary\":\"GLOSSARY.md\",\"summary\":\"SUMMARY.md\"},\"pdf\":{\"pageNumbers\":true,\"fontSize\":12,\"fontFamily\":\"Arial\",\"paperSize\":\"a4\",\"chapterMark\":\"pagebreak\",\"pageBreaksBefore\":\"/\",\"margin\":{\"right\":62,\"left\":62,\"top\":56,\"bottom\":56}},\"styles\":{\"website\":\"styles/website.css\",\"pdf\":\"styles/pdf.css\",\"epub\":\"styles/epub.css\",\"mobi\":\"styles/mobi.css\",\"ebook\":\"styles/ebook.css\",\"print\":\"styles/print.css\"}},\"file\":{\"path\":\"query-dsl/term-level-queries.md\",\"mtime\":\"2017-11-08T08:39:31.988Z\",\"type\":\"markdown\"},\"gitbook\":{\"version\":\"3.2.3\",\"time\":\"2018-01-29T15:28:32.108Z\"},\"basePath\":\"..\",\"book\":{\"language\":\"\"}}); });"},{"title":"","date":"2018-02-01T07:21:14.298Z","updated":"2018-01-29T15:28:33.723Z","comments":true,"path":"esjava/query-dsl/specialized-queries.html","permalink":"http://test.quanke.name/esjava/query-dsl/specialized-queries.html","excerpt":"","text":"Specialized queries more_like_this query(相似度查询) 这个查询能检索到与指定文本、文档或者文档集合相似的文档。 查看More Like This Query String[] fields = &#123;&quot;name.first&quot;, &quot;name.last&quot;&#125;; //fieldsString[] texts = &#123;&quot;text like this one&quot;&#125;; //textItem[] items = null;QueryBuilder qb = moreLikeThisQuery(fields, texts, items) .minTermFreq(1) //ignore threshold .maxQueryTerms(12); //max num of Terms in generated queries script query 该查询允许脚本充当过滤器。 另请参阅 function_score query 。 查看Script Query QueryBuilder qb = scriptQuery( new Script(&quot;doc[&apos;num1&apos;].value &gt; 1&quot;) //inlined script); 如果已经在每个数据节点上存储名为 `myscript.painless 的脚本，请执行以下操作： doc[&apos;num1&apos;].value &gt; params.param1 然后使用： QueryBuilder qb = scriptQuery( new Script( ScriptType.FILE, //脚本类型 ScriptType.FILE, ScriptType.INLINE， ScriptType.INDEXED &quot;painless&quot;, //Scripting engine 脚本引擎 &quot;myscript&quot;, //Script name 脚本名 Collections.singletonMap(&quot;param1&quot;, 5)) //Parameters as a Map of &lt;String, Object&gt;); Percolate Query 查看Percolate Query Settings settings = Settings.builder().put(&quot;cluster.name&quot;, &quot;elasticsearch&quot;).build();TransportClient client = new PreBuiltTransportClient(settings);client.addTransportAddress(new InetSocketTransportAddress(new InetSocketAddress(InetAddresses.forString(&quot;127.0.0.1&quot;), 9300))); 在可以使用percolate查询之前，应该添加percolator映射，并且应该对包含percolator查询的文档建立索引： // create an index with a percolator field with the name &apos;query&apos;:client.admin().indices().prepareCreate(&quot;myIndexName&quot;) .addMapping(&quot;query&quot;, &quot;query&quot;, &quot;type=percolator&quot;) .addMapping(&quot;docs&quot;, &quot;content&quot;, &quot;type=text&quot;) .get();//This is the query we&apos;re registering in the percolatorQueryBuilder qb = termQuery(&quot;content&quot;, &quot;amazing&quot;);//Index the query = register it in the percolatorclient.prepareIndex(&quot;myIndexName&quot;, &quot;query&quot;, &quot;myDesignatedQueryName&quot;) .setSource(jsonBuilder() .startObject() .field(&quot;query&quot;, qb) // Register the query .endObject()) .setRefreshPolicy(RefreshPolicy.IMMEDIATE) // Needed when the query shall be available immediately .get(); 在上面的index中query名为 myDesignatedQueryName 为了检查文档注册查询,使用这个代码: //Build a document to check against the percolatorXContentBuilder docBuilder = XContentFactory.jsonBuilder().startObject();docBuilder.field(&quot;content&quot;, &quot;This is amazing!&quot;);docBuilder.endObject(); //End of the JSON root objectPercolateQueryBuilder percolateQuery = new PercolateQueryBuilder(&quot;query&quot;, &quot;docs&quot;, docBuilder.bytes());// Percolate, by executing the percolator query in the query dsl:SearchResponse response = client().prepareSearch(&quot;myIndexName&quot;) .setQuery(percolateQuery)) .get();//Iterate over the resultsfor(SearchHit hit : response.getHits()) &#123; // Percolator queries as hit&#125;"},{"title":"","date":"2018-02-01T07:21:14.299Z","updated":"2018-01-29T15:28:33.724Z","comments":true,"path":"esjava/query-dsl/term-level-queries.html","permalink":"http://test.quanke.name/esjava/query-dsl/term-level-queries.html","excerpt":"","text":"Term level queries 术语查询虽然全文查询将在执行之前分析查询字符串，但是项级别查询对存储在反向索引中的确切项进行操作。 这些查询通常用于结构化数据，如数字、日期和枚举，而不是全文字段。或者，在分析过程之前，它允许你绘制低级查询。 这样的查询有以下这些： Term Query（项查询） 查询包含在指定字段中指定的确切值的文档。 查看Term Query QueryBuilder qb = termQuery( &quot;name&quot;, //field &quot;kimchy&quot; //text); Terms Query（多项查询） 查询包含任意一个在指定字段中指定的多个确切值的文档。 查看Terms Query QueryBuilder qb = termsQuery(&quot;tags&quot;, //field &quot;blue&quot;, &quot;pill&quot;); //values Range Query（范围查询） 查询指定字段包含指定范围内的值（日期，数字或字符串）的文档。 查看Range Query 方法： gte() :范围查询将匹配字段值大于或等于此参数值的文档。 gt() :范围查询将匹配字段值大于此参数值的文档。 lte() :范围查询将匹配字段值小于或等于此参数值的文档。 lt() :范围查询将匹配字段值小于此参数值的文档。 from() 开始值 to() 结束值 这两个函数与includeLower()和includeUpper()函数配套使用。 includeLower(true) 表示 from() 查询将匹配字段值大于或等于此参数值的文档。 includeLower(false) 表示 from() 查询将匹配字段值大于此参数值的文档。 includeUpper(true) 表示 to() 查询将匹配字段值小于或等于此参数值的文档。 includeUpper(false) 表示 to() 查询将匹配字段值小于此参数值的文档。 QueryBuilder qb = rangeQuery(&quot;price&quot;) //field .from(5) //开始值，与includeLower()和includeUpper()函数配套使用 .to(10) //结束值，与includeLower()和includeUpper()函数配套使用 .includeLower(true) // true: 表示 from() 查询将匹配字段值大于或等于此参数值的文档; false:表示 from() 查询将匹配字段值大于此参数值的文档。 .includeUpper(false); //true:表示 to() 查询将匹配字段值小于或等于此参数值的文档; false:表示 to() 查询将匹配字段值小于此参数值的文档。 实例// QueryRangeQueryBuilder rangeQueryBuilder = QueryBuilders.rangeQuery(&quot;age&quot;);rangeQueryBuilder.from(19);rangeQueryBuilder.to(21);rangeQueryBuilder.includeLower(true);rangeQueryBuilder.includeUpper(true);//RangeQueryBuilder rangeQueryBuilder = QueryBuilders.rangeQuery(&quot;age&quot;).gte(19).lte(21);// SearchSearchRequestBuilder searchRequestBuilder = client.prepareSearch(index);searchRequestBuilder.setTypes(type);searchRequestBuilder.setQuery(rangeQueryBuilder);// 执行SearchResponse searchResponse = searchRequestBuilder.execute().actionGet(); 上面代码中的查询语句与下面的是等价的： QueryBuilder queryBuilder = QueryBuilders.rangeQuery(&quot;age&quot;).gte(19).lte(21); Exists Query（存在查询） 查询指定的字段包含任何非空值的文档,如果指定字段上至少存在一个no-null的值就会返回该文档。 查看Exists Query QueryBuilder qb = existsQuery(&quot;name&quot;); 实例// QueryExistsQueryBuilder existsQueryBuilder = QueryBuilders.existsQuery(&quot;name&quot;);// SearchSearchRequestBuilder searchRequestBuilder = client.prepareSearch(index);searchRequestBuilder.setTypes(type);searchRequestBuilder.setQuery(existsQueryBuilder);// 执行SearchResponse searchResponse = searchRequestBuilder.get(); 举例说明，下面的几个文档都会得到上面代码的匹配： &#123; &quot;name&quot;: &quot;yoona&quot; &#125;&#123; &quot;name&quot;: &quot;&quot; &#125;&#123; &quot;name&quot;: &quot;-&quot; &#125;&#123; &quot;name&quot;: [&quot;yoona&quot;] &#125;&#123; &quot;name&quot;: [&quot;yoona&quot;, null ] &#125; 第一个是字符串，是一个非null的值。 第二个是空字符串，也是非null。 第三个使用标准分析器的情况下尽管不会返回词条，但是原始字段值是非null的（Even though the standard analyzer would emit zero tokens, the original field is non-null）。 第五个中至少有一个是非null值。 下面几个文档不会得到上面代码的匹配： &#123; &quot;name&quot;: null &#125;&#123; &quot;name&quot;: [] &#125;&#123; &quot;name&quot;: [null] &#125;&#123; &quot;user&quot;: &quot;bar&quot; &#125; 第一个是null值。 第二个没有值。 第三个只有null值，至少需要一个非null值。 第四个与指定字段不匹配。 Prefix Query（前缀查询） 查找指定字段包含以指定的精确前缀开头的值的文档。 查看Prefix Query QueryBuilder qb = prefixQuery( &quot;brand&quot;, //field &quot;heine&quot; //prefix); Wildcard Query（通配符查询） 查询指定字段包含与指定模式匹配的值的文档，其中该模式支持单字符通配符（？）和多字符通配符（*）,和前缀查询一样，通配符查询指定字段是未分析的（not analyzed） 可以使用星号代替0个或多个字符，使用问号代替一个字符。星号表示匹配的数量不受限制，而后者的匹配字符数则受到限制。这个技巧主要用于英文搜索中，如输入““computer*”，就可以找到“computer、computers、computerised、computerized”等单词，而输入“comp?ter”，则只能找到“computer、compater、competer”等单词。注意的是通配符查询不太注重性能，在可能时尽量避免，特别是要避免前缀通配符（以通配符开始的词条）。 QueryBuilder qb = wildcardQuery(&quot;user&quot;, &quot;k?mc*&quot;); 实例// QueryWildcardQueryBuilder wildcardQueryBuilder = QueryBuilders.wildcardQuery(&quot;country&quot;, &quot;西*牙&quot;);// SearchSearchRequestBuilder searchRequestBuilder = client.prepareSearch(index);searchRequestBuilder.setTypes(type);searchRequestBuilder.setQuery(wildcardQueryBuilder);// 执行SearchResponse searchResponse = searchRequestBuilder.get(); 查看Wildcard Query Regexp Query（正则表达式查询） 查询指定的字段包含与指定的正则表达式匹配的值的文档。 和前缀查询一样，正则表达式查询指定字段是未分析的（not analyzed）。正则表达式查询的性能取决于所选的正则表达式。如果我们的正则表达式匹配许多词条，查询将很慢。一般规则是，正则表达式匹配的词条数越高，查询越慢。 查看Regexp Query QueryBuilder qb = regexpQuery( &quot;name.first&quot;, //field &quot;s.*y&quot;); //regexp 实例// QueryRegexpQueryBuilder regexpQueryBuilder = QueryBuilders.regexpQuery(&quot;country&quot;, &quot;(西班|葡萄)牙&quot;);// SearchSearchRequestBuilder searchRequestBuilder = client.prepareSearch(index);searchRequestBuilder.setTypes(type);searchRequestBuilder.setQuery(regexpQueryBuilder);// 执行SearchResponse searchResponse = searchRequestBuilder.get(); Fuzzy Query（模糊查询） 查询指定字段包含与指定术语模糊相似的术语的文档。模糊性测量为1或2的 Levenshtein。 如果指定的字段是string类型，模糊查询是基于编辑距离算法来匹配文档。编辑距离的计算基于我们提供的查询词条和被搜索文档。如果指定的字段是数值类型或者日期类型，模糊查询基于在字段值上进行加减操作来匹配文档（The fuzzy query uses similarity based on Levenshtein edit distance for string fields, and a +/-margin on numeric and date fields）。此查询很占用CPU资源，但当需要模糊匹配时它很有用，例如，当用户拼写错误时。另外我们可以在搜索词的尾部加上字符 “~” 来进行模糊查询。 查看Fuzzy Query QueryBuilder qb = fuzzyQuery( &quot;name&quot;, //field &quot;kimzhy&quot; //text); Type Query（类型查询） 查询指定类型的文档。 查看Type Query QueryBuilder qb = typeQuery(&quot;my_type&quot;); //type Ids Query（ID查询） 查询具有指定类型和 ID 的文档。 查看Ids Query QueryBuilder qb = idsQuery(&quot;my_type&quot;, &quot;type2&quot;) .addIds(&quot;1&quot;, &quot;4&quot;, &quot;100&quot;);QueryBuilder qb = idsQuery() // type 是可选择的，可以不写 .addIds(&quot;1&quot;, &quot;4&quot;, &quot;100&quot;);"},{"title":"","date":"2018-02-01T07:21:14.303Z","updated":"2018-01-29T15:28:33.725Z","comments":true,"path":"esjava/search-api/multisearch-api.html","permalink":"http://test.quanke.name/esjava/search-api/multisearch-api.html","excerpt":"","text":"MultiSearch APImulti search API 允许在同一API中执行多个搜索请求。它的端点（endpoint）是 _msearch 。 首先请看MultiSearch API Query 文档 SearchRequestBuilder srb1 = client .prepareSearch().setQuery(QueryBuilders.queryStringQuery(&quot;elasticsearch&quot;)).setSize(1);SearchRequestBuilder srb2 = client .prepareSearch().setQuery(QueryBuilders.matchQuery(&quot;name&quot;, &quot;kimchy&quot;)).setSize(1);MultiSearchResponse sr = client.prepareMultiSearch() .add(srb1) .add(srb2) .get();// You will get all individual responses from MultiSearchResponse#getResponses()long nbHits = 0;for (MultiSearchResponse.Item item : sr.getResponses()) &#123; SearchResponse response = item.getResponse(); nbHits += response.getHits().getTotalHits();&#125; 实例"},{"title":"","date":"2018-02-01T07:21:14.304Z","updated":"2018-01-29T15:28:35.387Z","comments":true,"path":"esjava/search-api/search-template.html","permalink":"http://test.quanke.name/esjava/search-api/search-template.html","excerpt":"","text":"Search Template · GitBook Introduction Dependency Client Transport Client XPack Transport Client Document APIs Index API Get API Delete API Delete By Query API Update API Multi Get API Bulk API Using Bulk Processor Search API Using scrolls in Java MultiSearch API Using Aggregations Terminate After Search Template Aggregations Structuring aggregations Metrics aggregations Bucket aggregations Query DSL Match All Query Full text queries Term level queries Compound queries Joining queries Geo queries Specialized queries Span queries Indexed Scripts API Script Language Java API Administration Indices Administration Cluster Administration Published with GitBook Search Template Search Template &#x9996;&#x5148;&#x67E5;&#x770B; Search Template &#x6587;&#x6863; /_search/template endpoint &#x5141;&#x8BB8;&#x6211;&#x4EEC;&#x5728;&#x6267;&#x884C;&#x641C;&#x7D22;&#x8BF7;&#x6C42;&#x548C;&#x4F7F;&#x7528;&#x6A21;&#x677F;&#x53C2;&#x6570;&#x586B;&#x5145;&#x73B0;&#x6709;&#x6A21;&#x677F;&#x4E4B;&#x524D;&#xFF0C;&#x80FD;&#x591F;&#x4F7F;&#x7528; mustache &#x8BED;&#x8A00;&#x9884;&#x5148;&#x5448;&#x73B0;&#x641C;&#x7D22;&#x8BF7;&#x6C42;&#x3002; &#x5C06;&#x6A21;&#x677F;&#x53C2;&#x6570;&#x5B9A;&#x4E49;&#x4E3A; Map &lt;String&#xFF0C;Object&gt;&#xFF1A; Map&lt;String, Object&gt; template_params = new HashMap&lt;&gt;(); template_params.put(&quot;param_gender&quot;, &quot;male&quot;); &#x53EF;&#x4EE5;&#x5728;config/scripts&#x4E2D;&#x4F7F;&#x7528;&#x5B58;&#x50A8;&#x7684; search templates&#x3002; &#x4F8B;&#x5982;&#xFF0C;&#x6709;&#x4E00;&#x4E2A;&#x540D;&#x4E3A; config/scripts/template_gender.mustache &#x7684;&#x6587;&#x4EF6;&#xFF0C;&#x5176;&#x4E2D;&#x5305;&#x542B;&#xFF1A; { &quot;query&quot; : { &quot;match&quot; : { &quot;gender&quot; : &quot;&quot; } } } &#x521B;&#x5EFA;search templates &#x8BF7;&#x6C42;&#xFF1A; SearchResponse sr = new SearchTemplateRequestBuilder(client) .setScript(&quot;template_gender&quot;) //template &#x540D; .setScriptType(ScriptService.ScriptType.FILE) //template &#x5B58;&#x50A8;&#x5728; gender_template.mustache &#x78C1;&#x76D8;&#x4E0A; .setScriptParams(template_params) //&#x53C2;&#x6570; .setRequest(new SearchRequest()) //&#x8BBE;&#x7F6E;&#x6267;&#x884C;&#x7684;context&#xFF08;ie: &#x8FD9;&#x91CC;&#x5B9A;&#x4E49;&#x7D22;&#x5F15;&#x540D;&#x79F0;&#xFF09; .get() .getResponse(); &#x8FD8;&#x53EF;&#x4EE5;&#x5C06; template &#x5B58;&#x50A8;&#x5728; cluster state &#x4E2D;: cluster state&#x662F;&#x5168;&#x5C40;&#x6027;&#x4FE1;&#x606F;, &#x5305;&#x542B;&#x4E86;&#x6574;&#x4E2A;&#x7FA4;&#x96C6;&#x4E2D;&#x6240;&#x6709;&#x5206;&#x7247;&#x7684;&#x5143;&#x4FE1;&#x606F;(&#x89C4;&#x5219;, &#x4F4D;&#x7F6E;, &#x5927;&#x5C0F;&#x7B49;&#x4FE1;&#x606F;), &#x5E76;&#x4FDD;&#x6301;&#x6BCF;&#x4E2A;&#x6BCF;&#x8282;&#x7684;&#x4FE1;&#x606F;&#x540C;&#x6B65;&#x3002; &#x53C2;&#x8003;&#xFF1A; &#x300A;&#x4E3A;&#x4EC0;&#x4E48;ElasticSearch&#x5E94;&#x7528;&#x5F00;&#x53D1;&#x8005;&#x9700;&#x8981;&#x4E86;&#x89E3;cluster state&#x300B; client.admin().cluster().preparePutStoredScript() .setScriptLang(&quot;mustache&quot;) .setId(&quot;template_gender&quot;) .setSource(new BytesArray( &quot;{\\n&quot; + &quot; \\&quot;query\\&quot; : {\\n&quot; + &quot; \\&quot;match\\&quot; : {\\n&quot; + &quot; \\&quot;gender\\&quot; : \\&quot;\\&quot;\\n&quot; + &quot; }\\n&quot; + &quot; }\\n&quot; + &quot;}&quot;)).get(); &#x4F7F;&#x7528;ScriptService.ScriptType.STORED &#x6267;&#x884C;&#x4E00;&#x4E2A;&#x5B58;&#x50A8;&#x7684; templates: SearchResponse sr = new SearchTemplateRequestBuilder(client) .setScript(&quot;template_gender&quot;) //template &#x540D; .setScriptType(ScriptType.STORED) //template &#x5B58;&#x50A8;&#x5728; cluster state &#x4E0A; .setScriptParams(template_params) //&#x53C2;&#x6570; .setRequest(new SearchRequest()) //&#x8BBE;&#x7F6E;&#x6267;&#x884C;&#x7684;context&#xFF08;ie: &#x8FD9;&#x91CC;&#x5B9A;&#x4E49;&#x7D22;&#x5F15;&#x540D;&#x79F0;&#xFF09; .get() //&#x6267;&#x884C;&#x83B7;&#x53D6;template &#x8BF7;&#x6C42; .getResponse(); &#x4E5F;&#x53EF;&#x4EE5;&#x6267;&#x884C; &#x5185;&#x8054;(inline) templates&#xFF1A; sr = new SearchTemplateRequestBuilder(client) .setScript(&quot;{\\n&quot; + //template &#x540D; &quot; \\&quot;query\\&quot; : {\\n&quot; + &quot; \\&quot;match\\&quot; : {\\n&quot; + &quot; \\&quot;gender\\&quot; : \\&quot;\\&quot;\\n&quot; + &quot; }\\n&quot; + &quot; }\\n&quot; + &quot;}&quot;) .setScriptType(ScriptType.INLINE) //template &#x662F;&#x5185;&#x8054;&#x4F20;&#x9012;&#x7684; .setScriptParams(template_params) //&#x53C2;&#x6570; .setRequest(new SearchRequest()) //&#x8BBE;&#x7F6E;&#x6267;&#x884C;&#x7684;context&#xFF08;ie: &#x8FD9;&#x91CC;&#x5B9A;&#x4E49;&#x7D22;&#x5F15;&#x540D;&#x79F0;&#xFF09; .get() //&#x6267;&#x884C;&#x83B7;&#x53D6;template &#x8BF7;&#x6C42; .getResponse(); results matching \"\" No results matching \"\" var gitbook = gitbook || []; gitbook.push(function() { gitbook.page.hasChanged({\"page\":{\"title\":\"Search Template\",\"level\":\"1.5.5\",\"depth\":2,\"next\":{\"title\":\"Aggregations\",\"level\":\"1.6\",\"depth\":1,\"path\":\"aggregations.md\",\"ref\":\"aggregations.md\",\"articles\":[{\"title\":\"Structuring aggregations\",\"level\":\"1.6.1\",\"depth\":2,\"path\":\"aggregations/structuring-aggregations.md\",\"ref\":\"aggregations/structuring-aggregations.md\",\"articles\":[]},{\"title\":\"Metrics aggregations\",\"level\":\"1.6.2\",\"depth\":2,\"path\":\"aggregations/metrics-aggregations.md\",\"ref\":\"aggregations/metrics-aggregations.md\",\"articles\":[]},{\"title\":\"Bucket aggregations\",\"level\":\"1.6.3\",\"depth\":2,\"path\":\"aggregations/bucket-aggregations.md\",\"ref\":\"aggregations/bucket-aggregations.md\",\"articles\":[]}]},\"previous\":{\"title\":\"Terminate After\",\"level\":\"1.5.4\",\"depth\":2,\"path\":\"search-api/terminate-after.md\",\"ref\":\"search-api/terminate-after.md\",\"articles\":[]},\"dir\":\"ltr\"},\"config\":{\"gitbook\":\"*\",\"theme\":\"default\",\"variables\":{},\"plugins\":[],\"pluginsConfig\":{\"highlight\":{},\"search\":{},\"lunr\":{\"maxIndexSize\":1000000,\"ignoreSpecialCharacters\":false},\"sharing\":{\"facebook\":true,\"twitter\":true,\"google\":false,\"weibo\":false,\"instapaper\":false,\"vk\":false,\"all\":[\"facebook\",\"google\",\"twitter\",\"weibo\",\"instapaper\"]},\"fontsettings\":{\"theme\":\"white\",\"family\":\"sans\",\"size\":2},\"theme-default\":{\"styles\":{\"website\":\"styles/website.css\",\"pdf\":\"styles/pdf.css\",\"epub\":\"styles/epub.css\",\"mobi\":\"styles/mobi.css\",\"ebook\":\"styles/ebook.css\",\"print\":\"styles/print.css\"},\"showLevel\":false}},\"structure\":{\"langs\":\"LANGS.md\",\"readme\":\"README.md\",\"glossary\":\"GLOSSARY.md\",\"summary\":\"SUMMARY.md\"},\"pdf\":{\"pageNumbers\":true,\"fontSize\":12,\"fontFamily\":\"Arial\",\"paperSize\":\"a4\",\"chapterMark\":\"pagebreak\",\"pageBreaksBefore\":\"/\",\"margin\":{\"right\":62,\"left\":62,\"top\":56,\"bottom\":56}},\"styles\":{\"website\":\"styles/website.css\",\"pdf\":\"styles/pdf.css\",\"epub\":\"styles/epub.css\",\"mobi\":\"styles/mobi.css\",\"ebook\":\"styles/ebook.css\",\"print\":\"styles/print.css\"}},\"file\":{\"path\":\"search-api/search-template.md\",\"mtime\":\"2017-11-08T08:32:22.757Z\",\"type\":\"markdown\"},\"gitbook\":{\"version\":\"3.2.3\",\"time\":\"2018-01-29T15:28:32.108Z\"},\"basePath\":\"..\",\"book\":{\"language\":\"\"}}); });"},{"title":"","date":"2018-02-01T07:21:14.305Z","updated":"2018-01-29T15:28:33.726Z","comments":true,"path":"esjava/search-api/search-template.html","permalink":"http://test.quanke.name/esjava/search-api/search-template.html","excerpt":"","text":"Search Template首先查看 Search Template 文档 /_search/template endpoint 允许我们在执行搜索请求和使用模板参数填充现有模板之前，能够使用 mustache 语言预先呈现搜索请求。 将模板参数定义为 Map &lt;String，Object&gt;： Map&lt;String, Object&gt; template_params = new HashMap&lt;&gt;();template_params.put(&quot;param_gender&quot;, &quot;male&quot;); 可以在config/scripts中使用存储的 search templates。 例如，有一个名为 config/scripts/template_gender.mustache 的文件，其中包含： &#123; &quot;query&quot; : &#123; &quot;match&quot; : &#123; &quot;gender&quot; : &quot;&#123;&#123;param_gender&#125;&#125;&quot; &#125; &#125;&#125; 创建search templates 请求： SearchResponse sr = new SearchTemplateRequestBuilder(client) .setScript(&quot;template_gender&quot;) //template 名 .setScriptType(ScriptService.ScriptType.FILE) //template 存储在 gender_template.mustache 磁盘上 .setScriptParams(template_params) //参数 .setRequest(new SearchRequest()) //设置执行的context（ie: 这里定义索引名称） .get() .getResponse(); 还可以将 template 存储在 cluster state 中: cluster state是全局性信息, 包含了整个群集中所有分片的元信息(规则, 位置, 大小等信息), 并保持每个每节的信息同步。 参考： 《为什么ElasticSearch应用开发者需要了解cluster state》 client.admin().cluster().preparePutStoredScript() .setScriptLang(&quot;mustache&quot;) .setId(&quot;template_gender&quot;) .setSource(new BytesArray( &quot;&#123;\\n&quot; + &quot; \\&quot;query\\&quot; : &#123;\\n&quot; + &quot; \\&quot;match\\&quot; : &#123;\\n&quot; + &quot; \\&quot;gender\\&quot; : \\&quot;&#123;&#123;param_gender&#125;&#125;\\&quot;\\n&quot; + &quot; &#125;\\n&quot; + &quot; &#125;\\n&quot; + &quot;&#125;&quot;)).get(); 使用ScriptService.ScriptType.STORED 执行一个存储的 templates: SearchResponse sr = new SearchTemplateRequestBuilder(client) .setScript(&quot;template_gender&quot;) //template 名 .setScriptType(ScriptType.STORED) //template 存储在 cluster state 上 .setScriptParams(template_params) //参数 .setRequest(new SearchRequest()) //设置执行的context（ie: 这里定义索引名称） .get() //执行获取template 请求 .getResponse(); 也可以执行 内联(inline) templates： sr = new SearchTemplateRequestBuilder(client) .setScript(&quot;&#123;\\n&quot; + //template 名 &quot; \\&quot;query\\&quot; : &#123;\\n&quot; + &quot; \\&quot;match\\&quot; : &#123;\\n&quot; + &quot; \\&quot;gender\\&quot; : \\&quot;&#123;&#123;param_gender&#125;&#125;\\&quot;\\n&quot; + &quot; &#125;\\n&quot; + &quot; &#125;\\n&quot; + &quot;&#125;&quot;) .setScriptType(ScriptType.INLINE) //template 是内联传递的 .setScriptParams(template_params) //参数 .setRequest(new SearchRequest()) //设置执行的context（ie: 这里定义索引名称） .get() //执行获取template 请求 .getResponse();"},{"title":"","date":"2018-02-01T07:21:14.302Z","updated":"2018-01-29T15:28:35.171Z","comments":true,"path":"esjava/search-api/multisearch-api.html","permalink":"http://test.quanke.name/esjava/search-api/multisearch-api.html","excerpt":"","text":"MultiSearch API · GitBook Introduction Dependency Client Transport Client XPack Transport Client Document APIs Index API Get API Delete API Delete By Query API Update API Multi Get API Bulk API Using Bulk Processor Search API Using scrolls in Java MultiSearch API Using Aggregations Terminate After Search Template Aggregations Structuring aggregations Metrics aggregations Bucket aggregations Query DSL Match All Query Full text queries Term level queries Compound queries Joining queries Geo queries Specialized queries Span queries Indexed Scripts API Script Language Java API Administration Indices Administration Cluster Administration Published with GitBook MultiSearch API MultiSearch API multi search API &#x5141;&#x8BB8;&#x5728;&#x540C;&#x4E00;API&#x4E2D;&#x6267;&#x884C;&#x591A;&#x4E2A;&#x641C;&#x7D22;&#x8BF7;&#x6C42;&#x3002;&#x5B83;&#x7684;&#x7AEF;&#x70B9;&#xFF08;endpoint&#xFF09;&#x662F; _msearch &#x3002; &#x9996;&#x5148;&#x8BF7;&#x770B;MultiSearch API Query &#x6587;&#x6863; SearchRequestBuilder srb1 = client .prepareSearch().setQuery(QueryBuilders.queryStringQuery(&quot;elasticsearch&quot;)).setSize(1); SearchRequestBuilder srb2 = client .prepareSearch().setQuery(QueryBuilders.matchQuery(&quot;name&quot;, &quot;kimchy&quot;)).setSize(1); MultiSearchResponse sr = client.prepareMultiSearch() .add(srb1) .add(srb2) .get(); // You will get all individual responses from MultiSearchResponse#getResponses() long nbHits = 0; for (MultiSearchResponse.Item item : sr.getResponses()) { SearchResponse response = item.getResponse(); nbHits += response.getHits().getTotalHits(); } &#x5B9E;&#x4F8B; results matching \"\" No results matching \"\" var gitbook = gitbook || []; gitbook.push(function() { gitbook.page.hasChanged({\"page\":{\"title\":\"MultiSearch API\",\"level\":\"1.5.2\",\"depth\":2,\"next\":{\"title\":\"Using Aggregations\",\"level\":\"1.5.3\",\"depth\":2,\"path\":\"search-api/using-aggregations.md\",\"ref\":\"search-api/using-aggregations.md\",\"articles\":[]},\"previous\":{\"title\":\"Using scrolls in Java\",\"level\":\"1.5.1\",\"depth\":2,\"path\":\"search-api/using-scrolls-in-java.md\",\"ref\":\"search-api/using-scrolls-in-java.md\",\"articles\":[]},\"dir\":\"ltr\"},\"config\":{\"gitbook\":\"*\",\"theme\":\"default\",\"variables\":{},\"plugins\":[],\"pluginsConfig\":{\"highlight\":{},\"search\":{},\"lunr\":{\"maxIndexSize\":1000000,\"ignoreSpecialCharacters\":false},\"sharing\":{\"facebook\":true,\"twitter\":true,\"google\":false,\"weibo\":false,\"instapaper\":false,\"vk\":false,\"all\":[\"facebook\",\"google\",\"twitter\",\"weibo\",\"instapaper\"]},\"fontsettings\":{\"theme\":\"white\",\"family\":\"sans\",\"size\":2},\"theme-default\":{\"styles\":{\"website\":\"styles/website.css\",\"pdf\":\"styles/pdf.css\",\"epub\":\"styles/epub.css\",\"mobi\":\"styles/mobi.css\",\"ebook\":\"styles/ebook.css\",\"print\":\"styles/print.css\"},\"showLevel\":false}},\"structure\":{\"langs\":\"LANGS.md\",\"readme\":\"README.md\",\"glossary\":\"GLOSSARY.md\",\"summary\":\"SUMMARY.md\"},\"pdf\":{\"pageNumbers\":true,\"fontSize\":12,\"fontFamily\":\"Arial\",\"paperSize\":\"a4\",\"chapterMark\":\"pagebreak\",\"pageBreaksBefore\":\"/\",\"margin\":{\"right\":62,\"left\":62,\"top\":56,\"bottom\":56}},\"styles\":{\"website\":\"styles/website.css\",\"pdf\":\"styles/pdf.css\",\"epub\":\"styles/epub.css\",\"mobi\":\"styles/mobi.css\",\"ebook\":\"styles/ebook.css\",\"print\":\"styles/print.css\"}},\"file\":{\"path\":\"search-api/multisearch-api.md\",\"mtime\":\"2017-11-08T08:32:22.751Z\",\"type\":\"markdown\"},\"gitbook\":{\"version\":\"3.2.3\",\"time\":\"2018-01-29T15:28:32.108Z\"},\"basePath\":\"..\",\"book\":{\"language\":\"\"}}); });"},{"title":"","date":"2018-02-01T07:21:14.306Z","updated":"2018-01-29T15:28:33.727Z","comments":true,"path":"esjava/search-api/terminate-after.html","permalink":"http://test.quanke.name/esjava/search-api/terminate-after.html","excerpt":"","text":"Terminate After获取文档的最大数量，如果设置了，需要通过SearchResponse对象里的isTerminatedEarly() 判断返回文档是否达到设置的数量： SearchResponse sr = client.prepareSearch(INDEX) .setTerminateAfter(1000) //如果达到这个数量，提前终止 .get();if (sr.isTerminatedEarly()) &#123; // We finished early&#125;"},{"title":"","date":"2018-02-01T07:21:14.306Z","updated":"2018-01-29T15:28:35.310Z","comments":true,"path":"esjava/search-api/terminate-after.html","permalink":"http://test.quanke.name/esjava/search-api/terminate-after.html","excerpt":"","text":"Terminate After · GitBook Introduction Dependency Client Transport Client XPack Transport Client Document APIs Index API Get API Delete API Delete By Query API Update API Multi Get API Bulk API Using Bulk Processor Search API Using scrolls in Java MultiSearch API Using Aggregations Terminate After Search Template Aggregations Structuring aggregations Metrics aggregations Bucket aggregations Query DSL Match All Query Full text queries Term level queries Compound queries Joining queries Geo queries Specialized queries Span queries Indexed Scripts API Script Language Java API Administration Indices Administration Cluster Administration Published with GitBook Terminate After Terminate After &#x83B7;&#x53D6;&#x6587;&#x6863;&#x7684;&#x6700;&#x5927;&#x6570;&#x91CF;&#xFF0C;&#x5982;&#x679C;&#x8BBE;&#x7F6E;&#x4E86;&#xFF0C;&#x9700;&#x8981;&#x901A;&#x8FC7;SearchResponse&#x5BF9;&#x8C61;&#x91CC;&#x7684;isTerminatedEarly() &#x5224;&#x65AD;&#x8FD4;&#x56DE;&#x6587;&#x6863;&#x662F;&#x5426;&#x8FBE;&#x5230;&#x8BBE;&#x7F6E;&#x7684;&#x6570;&#x91CF;&#xFF1A; SearchResponse sr = client.prepareSearch(INDEX) .setTerminateAfter(1000) //&#x5982;&#x679C;&#x8FBE;&#x5230;&#x8FD9;&#x4E2A;&#x6570;&#x91CF;&#xFF0C;&#x63D0;&#x524D;&#x7EC8;&#x6B62; .get(); if (sr.isTerminatedEarly()) { // We finished early } results matching \"\" No results matching \"\" var gitbook = gitbook || []; gitbook.push(function() { gitbook.page.hasChanged({\"page\":{\"title\":\"Terminate After\",\"level\":\"1.5.4\",\"depth\":2,\"next\":{\"title\":\"Search Template\",\"level\":\"1.5.5\",\"depth\":2,\"path\":\"search-api/search-template.md\",\"ref\":\"search-api/search-template.md\",\"articles\":[]},\"previous\":{\"title\":\"Using Aggregations\",\"level\":\"1.5.3\",\"depth\":2,\"path\":\"search-api/using-aggregations.md\",\"ref\":\"search-api/using-aggregations.md\",\"articles\":[]},\"dir\":\"ltr\"},\"config\":{\"gitbook\":\"*\",\"theme\":\"default\",\"variables\":{},\"plugins\":[],\"pluginsConfig\":{\"highlight\":{},\"search\":{},\"lunr\":{\"maxIndexSize\":1000000,\"ignoreSpecialCharacters\":false},\"sharing\":{\"facebook\":true,\"twitter\":true,\"google\":false,\"weibo\":false,\"instapaper\":false,\"vk\":false,\"all\":[\"facebook\",\"google\",\"twitter\",\"weibo\",\"instapaper\"]},\"fontsettings\":{\"theme\":\"white\",\"family\":\"sans\",\"size\":2},\"theme-default\":{\"styles\":{\"website\":\"styles/website.css\",\"pdf\":\"styles/pdf.css\",\"epub\":\"styles/epub.css\",\"mobi\":\"styles/mobi.css\",\"ebook\":\"styles/ebook.css\",\"print\":\"styles/print.css\"},\"showLevel\":false}},\"structure\":{\"langs\":\"LANGS.md\",\"readme\":\"README.md\",\"glossary\":\"GLOSSARY.md\",\"summary\":\"SUMMARY.md\"},\"pdf\":{\"pageNumbers\":true,\"fontSize\":12,\"fontFamily\":\"Arial\",\"paperSize\":\"a4\",\"chapterMark\":\"pagebreak\",\"pageBreaksBefore\":\"/\",\"margin\":{\"right\":62,\"left\":62,\"top\":56,\"bottom\":56}},\"styles\":{\"website\":\"styles/website.css\",\"pdf\":\"styles/pdf.css\",\"epub\":\"styles/epub.css\",\"mobi\":\"styles/mobi.css\",\"ebook\":\"styles/ebook.css\",\"print\":\"styles/print.css\"}},\"file\":{\"path\":\"search-api/terminate-after.md\",\"mtime\":\"2017-11-08T08:32:22.760Z\",\"type\":\"markdown\"},\"gitbook\":{\"version\":\"3.2.3\",\"time\":\"2018-01-29T15:28:32.108Z\"},\"basePath\":\"..\",\"book\":{\"language\":\"\"}}); });"},{"title":"","date":"2018-02-01T07:21:14.307Z","updated":"2018-01-29T15:28:35.243Z","comments":true,"path":"esjava/search-api/using-aggregations.html","permalink":"http://test.quanke.name/esjava/search-api/using-aggregations.html","excerpt":"","text":"Using Aggregations · GitBook Introduction Dependency Client Transport Client XPack Transport Client Document APIs Index API Get API Delete API Delete By Query API Update API Multi Get API Bulk API Using Bulk Processor Search API Using scrolls in Java MultiSearch API Using Aggregations Terminate After Search Template Aggregations Structuring aggregations Metrics aggregations Bucket aggregations Query DSL Match All Query Full text queries Term level queries Compound queries Joining queries Geo queries Specialized queries Span queries Indexed Scripts API Script Language Java API Administration Indices Administration Cluster Administration Published with GitBook Using Aggregations Using Aggregations &#x4E0B;&#x9762;&#x7684;&#x4EE3;&#x7801;&#x6F14;&#x793A;&#x4E86;&#x5982;&#x4F55;&#x5728;&#x641C;&#x7D22;&#x4E2D;&#x6DFB;&#x52A0;&#x4E24;&#x4E2A;&#x805A;&#x5408;&#xFF1A; &#x805A;&#x5408;&#x6846;&#x67B6;&#x6709;&#x52A9;&#x4E8E;&#x6839;&#x636E;&#x641C;&#x7D22;&#x67E5;&#x8BE2;&#x63D0;&#x4F9B;&#x805A;&#x5408;&#x6570;&#x636E;&#x3002;&#x5B83;&#x662F;&#x57FA;&#x4E8E;&#x7B80;&#x5355;&#x7684;&#x6784;&#x5EFA;&#x5757;&#x4E5F;&#x79F0;&#x4E3A;&#x6574;&#x5408;&#xFF0C;&#x6574;&#x5408;&#x5C31;&#x662F;&#x5C06;&#x590D;&#x6742;&#x7684;&#x6570;&#x636E;&#x6458;&#x8981;&#x6709;&#x5E8F;&#x7684;&#x653E;&#x5728;&#x4E00;&#x5757;&#x3002; &#x805A;&#x5408;&#x53EF;&#x4EE5;&#x88AB;&#x770B;&#x505A;&#x662F;&#x4ECE;&#x4E00;&#x7EC4;&#x6587;&#x4EF6;&#x4E2D;&#x83B7;&#x53D6;&#x5206;&#x6790;&#x4FE1;&#x606F;&#x7684;&#x4E00;&#x7CFB;&#x5217;&#x5DE5;&#x4F5C;&#x7684;&#x7EDF;&#x79F0;&#x3002;&#x805A;&#x5408;&#x7684;&#x5B9E;&#x73B0;&#x8FC7;&#x7A0B;&#x5C31;&#x662F;&#x5B9A;&#x4E49;&#x8FD9;&#x4E2A;&#x6587;&#x6863;&#x96C6;&#x7684;&#x8FC7;&#x7A0B;&#xFF08;&#x4F8B;&#x5982;&#xFF0C;&#x5728;&#x641C;&#x7D22;&#x8BF7;&#x6C42;&#x7684;&#x57FA;&#x7840;&#x4E0A;&#xFF0C;&#x6267;&#x884C;&#x67E5;&#x8BE2;/&#x8FC7;&#x6EE4;&#xFF0C;&#x624D;&#x80FD;&#x5F97;&#x5230;&#x9AD8;&#x6C34;&#x5E73;&#x7684;&#x805A;&#x5408;&#x7ED3;&#x679C;&#xFF09;&#x3002; SearchResponse sr = client.prepareSearch() .setQuery(QueryBuilders.matchAllQuery()) .addAggregation( AggregationBuilders.terms(&quot;agg1&quot;).field(&quot;field&quot;) ) .addAggregation( AggregationBuilders.dateHistogram(&quot;agg2&quot;) .field(&quot;birth&quot;) .dateHistogramInterval(DateHistogramInterval.YEAR) ) .get(); // Get your facet results Terms agg1 = sr.getAggregations().get(&quot;agg1&quot;); Histogram agg2 = sr.getAggregations().get(&quot;agg2&quot;); &#x8BE6;&#x7EC6;&#x6587;&#x6863;&#x8BF7;&#x770B; Aggregations Java API results matching \"\" No results matching \"\" var gitbook = gitbook || []; gitbook.push(function() { gitbook.page.hasChanged({\"page\":{\"title\":\"Using Aggregations\",\"level\":\"1.5.3\",\"depth\":2,\"next\":{\"title\":\"Terminate After\",\"level\":\"1.5.4\",\"depth\":2,\"path\":\"search-api/terminate-after.md\",\"ref\":\"search-api/terminate-after.md\",\"articles\":[]},\"previous\":{\"title\":\"MultiSearch API\",\"level\":\"1.5.2\",\"depth\":2,\"path\":\"search-api/multisearch-api.md\",\"ref\":\"search-api/multisearch-api.md\",\"articles\":[]},\"dir\":\"ltr\"},\"config\":{\"gitbook\":\"*\",\"theme\":\"default\",\"variables\":{},\"plugins\":[],\"pluginsConfig\":{\"highlight\":{},\"search\":{},\"lunr\":{\"maxIndexSize\":1000000,\"ignoreSpecialCharacters\":false},\"sharing\":{\"facebook\":true,\"twitter\":true,\"google\":false,\"weibo\":false,\"instapaper\":false,\"vk\":false,\"all\":[\"facebook\",\"google\",\"twitter\",\"weibo\",\"instapaper\"]},\"fontsettings\":{\"theme\":\"white\",\"family\":\"sans\",\"size\":2},\"theme-default\":{\"styles\":{\"website\":\"styles/website.css\",\"pdf\":\"styles/pdf.css\",\"epub\":\"styles/epub.css\",\"mobi\":\"styles/mobi.css\",\"ebook\":\"styles/ebook.css\",\"print\":\"styles/print.css\"},\"showLevel\":false}},\"structure\":{\"langs\":\"LANGS.md\",\"readme\":\"README.md\",\"glossary\":\"GLOSSARY.md\",\"summary\":\"SUMMARY.md\"},\"pdf\":{\"pageNumbers\":true,\"fontSize\":12,\"fontFamily\":\"Arial\",\"paperSize\":\"a4\",\"chapterMark\":\"pagebreak\",\"pageBreaksBefore\":\"/\",\"margin\":{\"right\":62,\"left\":62,\"top\":56,\"bottom\":56}},\"styles\":{\"website\":\"styles/website.css\",\"pdf\":\"styles/pdf.css\",\"epub\":\"styles/epub.css\",\"mobi\":\"styles/mobi.css\",\"ebook\":\"styles/ebook.css\",\"print\":\"styles/print.css\"}},\"file\":{\"path\":\"search-api/using-aggregations.md\",\"mtime\":\"2017-11-08T08:32:22.763Z\",\"type\":\"markdown\"},\"gitbook\":{\"version\":\"3.2.3\",\"time\":\"2018-01-29T15:28:32.108Z\"},\"basePath\":\"..\",\"book\":{\"language\":\"\"}}); });"},{"title":"","date":"2018-02-01T07:21:14.309Z","updated":"2018-01-29T15:28:33.728Z","comments":true,"path":"esjava/search-api/using-aggregations.html","permalink":"http://test.quanke.name/esjava/search-api/using-aggregations.html","excerpt":"","text":"Using Aggregations下面的代码演示了如何在搜索中添加两个聚合： 聚合框架有助于根据搜索查询提供聚合数据。它是基于简单的构建块也称为整合，整合就是将复杂的数据摘要有序的放在一块。 聚合可以被看做是从一组文件中获取分析信息的一系列工作的统称。聚合的实现过程就是定义这个文档集的过程（例如，在搜索请求的基础上，执行查询/过滤，才能得到高水平的聚合结果）。 SearchResponse sr = client.prepareSearch() .setQuery(QueryBuilders.matchAllQuery()) .addAggregation( AggregationBuilders.terms(&quot;agg1&quot;).field(&quot;field&quot;) ) .addAggregation( AggregationBuilders.dateHistogram(&quot;agg2&quot;) .field(&quot;birth&quot;) .dateHistogramInterval(DateHistogramInterval.YEAR) ) .get();// Get your facet resultsTerms agg1 = sr.getAggregations().get(&quot;agg1&quot;);Histogram agg2 = sr.getAggregations().get(&quot;agg2&quot;); 详细文档请看 Aggregations Java API"},{"title":"","date":"2018-02-01T07:21:14.309Z","updated":"2018-01-29T15:28:35.081Z","comments":true,"path":"esjava/search-api/using-scrolls-in-java.html","permalink":"http://test.quanke.name/esjava/search-api/using-scrolls-in-java.html","excerpt":"","text":"Using scrolls in Java · GitBook Introduction Dependency Client Transport Client XPack Transport Client Document APIs Index API Get API Delete API Delete By Query API Update API Multi Get API Bulk API Using Bulk Processor Search API Using scrolls in Java MultiSearch API Using Aggregations Terminate After Search Template Aggregations Structuring aggregations Metrics aggregations Bucket aggregations Query DSL Match All Query Full text queries Term level queries Compound queries Joining queries Geo queries Specialized queries Span queries Indexed Scripts API Script Language Java API Administration Indices Administration Cluster Administration Published with GitBook Using scrolls in Java Using scrolls in Java &#x9996;&#x5148;&#x9700;&#x8981;&#x9605;&#x8BFB; scroll documentation &#x4E00;&#x822C;&#x641C;&#x7D22;&#x8BF7;&#x6C42;&#x90FD;&#x662F;&#x8FD4;&#x56DE;&#x4E00;&quot;&#x9875;&quot;&#x6570;&#x636E;&#xFF0C;&#x65E0;&#x8BBA;&#x6570;&#x636E;&#x91CF;&#x591A;&#x5927;&#x90FD;&#x4E00;&#x8D77;&#x8FD4;&#x56DE;&#x7ED9;&#x7528;&#x6237;&#xFF0C;Scroll API&#x53EF;&#x4EE5;&#x5141;&#x8BB8;&#x6211;&#x4EEC;&#x68C0;&#x7D22;&#x5927;&#x91CF;&#x6570;&#x636E;&#xFF08;&#x751A;&#x81F3;&#x5168;&#x90E8;&#x6570;&#x636E;&#xFF09;&#x3002;Scroll API&#x5141;&#x8BB8;&#x6211;&#x4EEC;&#x505A;&#x4E00;&#x4E2A;&#x521D;&#x59CB;&#x9636;&#x6BB5;&#x641C;&#x7D22;&#x5E76;&#x4E14;&#x6301;&#x7EED;&#x6279;&#x91CF;&#x4ECE;Elasticsearch&#x91CC;&#x62C9;&#x53D6;&#x7ED3;&#x679C;&#x76F4;&#x5230;&#x6CA1;&#x6709;&#x7ED3;&#x679C;&#x5269;&#x4E0B;&#x3002;&#x8FD9;&#x6709;&#x70B9;&#x50CF;&#x4F20;&#x7EDF;&#x6570;&#x636E;&#x5E93;&#x91CC;&#x7684;cursors&#xFF08;&#x6E38;&#x6807;&#xFF09;&#x3002; Scroll API&#x7684;&#x521B;&#x5EFA;&#x5E76;&#x4E0D;&#x662F;&#x4E3A;&#x4E86;&#x5B9E;&#x65F6;&#x7684;&#x7528;&#x6237;&#x54CD;&#x5E94;&#xFF0C;&#x800C;&#x662F;&#x4E3A;&#x4E86;&#x5904;&#x7406;&#x5927;&#x91CF;&#x7684;&#x6570;&#x636E;&#xFF08;Scrolling is not intended for real time user requests, but rather for processing large amounts of data&#xFF09;&#x3002;&#x4ECE; scroll &#x8BF7;&#x6C42;&#x8FD4;&#x56DE;&#x7684;&#x7ED3;&#x679C;&#x53EA;&#x662F;&#x53CD;&#x6620;&#x4E86; search &#x53D1;&#x751F;&#x90A3;&#x4E00;&#x65F6;&#x523B;&#x7684;&#x7D22;&#x5F15;&#x72B6;&#x6001;&#xFF0C;&#x5C31;&#x50CF;&#x4E00;&#x4E2A;&#x5FEB;&#x7167;(The results that are returned from a scroll request reflect the state of the index at the time that the initial search request was made, like a snapshot in time)&#x3002;&#x540E;&#x7EED;&#x7684;&#x5BF9;&#x6587;&#x6863;&#x7684;&#x6539;&#x52A8;&#xFF08;&#x7D22;&#x5F15;&#x3001;&#x66F4;&#x65B0;&#x6216;&#x8005;&#x5220;&#x9664;&#xFF09;&#x90FD;&#x53EA;&#x4F1A;&#x5F71;&#x54CD;&#x540E;&#x9762;&#x7684;&#x641C;&#x7D22;&#x8BF7;&#x6C42;&#x3002; import static org.elasticsearch.index.query.QueryBuilders.*; QueryBuilder qb = termQuery(&quot;multi&quot;, &quot;test&quot;); SearchResponse scrollResp = client.prepareSearch(test) .addSort(FieldSortBuilder.DOC_FIELD_NAME, SortOrder.ASC) .setScroll(new TimeValue(60000)) //&#x4E3A;&#x4E86;&#x4F7F;&#x7528; scroll&#xFF0C;&#x521D;&#x59CB;&#x641C;&#x7D22;&#x8BF7;&#x6C42;&#x5E94;&#x8BE5;&#x5728;&#x67E5;&#x8BE2;&#x4E2D;&#x6307;&#x5B9A; scroll &#x53C2;&#x6570;&#xFF0C;&#x544A;&#x8BC9; Elasticsearch &#x9700;&#x8981;&#x4FDD;&#x6301;&#x641C;&#x7D22;&#x7684;&#x4E0A;&#x4E0B;&#x6587;&#x73AF;&#x5883;&#x591A;&#x957F;&#x65F6;&#x95F4;&#xFF08;&#x6EDA;&#x52A8;&#x65F6;&#x95F4;&#xFF09; .setQuery(qb) .setSize(100).get(); //max of 100 hits will be returned for each scroll //Scroll until no hits are returned do { for (SearchHit hit : scrollResp.getHits().getHits()) { //Handle the hit... } scrollResp = client.prepareSearchScroll(scrollResp.getScrollId()).setScroll(new TimeValue(60000)).execute().actionGet(); } while(scrollResp.getHits().getHits().length != 0); // Zero hits mark the end of the scroll and the while loop. &#x5982;&#x679C;&#x8D85;&#x8FC7;&#x6EDA;&#x52A8;&#x65F6;&#x95F4;&#xFF0C;&#x7EE7;&#x7EED;&#x4F7F;&#x7528;&#x8BE5;&#x6EDA;&#x52A8;ID&#x641C;&#x7D22;&#x6570;&#x636E;&#xFF0C;&#x5219;&#x4F1A;&#x62A5;&#x9519;&#xFF1A; Caused by: SearchContextMissingException[No search context found for id [2861]] at org.elasticsearch.search.SearchService.findContext(SearchService.java:613) at org.elasticsearch.search.SearchService.executeQueryPhase(SearchService.java:403) at org.elasticsearch.search.action.SearchServiceTransportAction$SearchQueryScrollTransportHandler.messageReceived(SearchServiceTransportAction.java:384) at org.elasticsearch.search.action.SearchServiceTransportAction$SearchQueryScrollTransportHandler.messageReceived(SearchServiceTransportAction.java:381) at org.elasticsearch.transport.TransportRequestHandler.messageReceived(TransportRequestHandler.java:33) at org.elasticsearch.transport.RequestHandlerRegistry.processMessageReceived(RequestHandlerRegistry.java:75) at org.elasticsearch.transport.TransportService$4.doRun(TransportService.java:376) at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37) at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) at java.lang.Thread.run(Thread.java:745) &#x867D;&#x7136;&#x5F53;&#x6EDA;&#x52A8;&#x6709;&#x6548;&#x65F6;&#x95F4;&#x5DF2;&#x8FC7;&#xFF0C;&#x641C;&#x7D22;&#x4E0A;&#x4E0B;&#x6587;(Search Context)&#x4F1A;&#x81EA;&#x52A8;&#x88AB;&#x6E05;&#x9664;&#xFF0C;&#x4F46;&#x662F;&#x4E00;&#x503C;&#x4FDD;&#x6301;&#x6EDA;&#x52A8;&#x4EE3;&#x4EF7;&#x4E5F;&#x662F;&#x5F88;&#x5927;&#x7684;&#xFF0C;&#x6240;&#x4EE5;&#x5F53;&#x6211;&#x4EEC;&#x4E0D;&#x5728;&#x4F7F;&#x7528;&#x6EDA;&#x52A8;&#x65F6;&#x8981;&#x5C3D;&#x5FEB;&#x4F7F;&#x7528;Clear-Scroll API&#x8FDB;&#x884C;&#x6E05;&#x9664;&#x3002; /** * &#x6E05;&#x9664;&#x6EDA;&#x52A8;ID * @param client * @param scrollIdList * @return */ public static boolean clearScroll(Client client, List&lt;String&gt; scrollIdList){ ClearScrollRequestBuilder clearScrollRequestBuilder = client.prepareClearScroll(); clearScrollRequestBuilder.setScrollIds(scrollIdList); ClearScrollResponse response = clearScrollRequestBuilder.get(); return response.isSucceeded(); } /** * &#x6E05;&#x9664;&#x6EDA;&#x52A8;ID * @param client * @param scrollId * @return */ public static boolean clearScroll(Client client, String scrollId){ ClearScrollRequestBuilder clearScrollRequestBuilder = client.prepareClearScroll(); clearScrollRequestBuilder.addScrollId(scrollId); ClearScrollResponse response = clearScrollRequestBuilder.get(); return response.isSucceeded(); } &#x5B9E;&#x4F8B; results matching \"\" No results matching \"\" var gitbook = gitbook || []; gitbook.push(function() { gitbook.page.hasChanged({\"page\":{\"title\":\"Using scrolls in Java\",\"level\":\"1.5.1\",\"depth\":2,\"next\":{\"title\":\"MultiSearch API\",\"level\":\"1.5.2\",\"depth\":2,\"path\":\"search-api/multisearch-api.md\",\"ref\":\"search-api/multisearch-api.md\",\"articles\":[]},\"previous\":{\"title\":\"Search API\",\"level\":\"1.5\",\"depth\":1,\"path\":\"search-api.md\",\"ref\":\"search-api.md\",\"articles\":[{\"title\":\"Using scrolls in Java\",\"level\":\"1.5.1\",\"depth\":2,\"path\":\"search-api/using-scrolls-in-java.md\",\"ref\":\"search-api/using-scrolls-in-java.md\",\"articles\":[]},{\"title\":\"MultiSearch API\",\"level\":\"1.5.2\",\"depth\":2,\"path\":\"search-api/multisearch-api.md\",\"ref\":\"search-api/multisearch-api.md\",\"articles\":[]},{\"title\":\"Using Aggregations\",\"level\":\"1.5.3\",\"depth\":2,\"path\":\"search-api/using-aggregations.md\",\"ref\":\"search-api/using-aggregations.md\",\"articles\":[]},{\"title\":\"Terminate After\",\"level\":\"1.5.4\",\"depth\":2,\"path\":\"search-api/terminate-after.md\",\"ref\":\"search-api/terminate-after.md\",\"articles\":[]},{\"title\":\"Search Template\",\"level\":\"1.5.5\",\"depth\":2,\"path\":\"search-api/search-template.md\",\"ref\":\"search-api/search-template.md\",\"articles\":[]}]},\"dir\":\"ltr\"},\"config\":{\"gitbook\":\"*\",\"theme\":\"default\",\"variables\":{},\"plugins\":[],\"pluginsConfig\":{\"highlight\":{},\"search\":{},\"lunr\":{\"maxIndexSize\":1000000,\"ignoreSpecialCharacters\":false},\"sharing\":{\"facebook\":true,\"twitter\":true,\"google\":false,\"weibo\":false,\"instapaper\":false,\"vk\":false,\"all\":[\"facebook\",\"google\",\"twitter\",\"weibo\",\"instapaper\"]},\"fontsettings\":{\"theme\":\"white\",\"family\":\"sans\",\"size\":2},\"theme-default\":{\"styles\":{\"website\":\"styles/website.css\",\"pdf\":\"styles/pdf.css\",\"epub\":\"styles/epub.css\",\"mobi\":\"styles/mobi.css\",\"ebook\":\"styles/ebook.css\",\"print\":\"styles/print.css\"},\"showLevel\":false}},\"structure\":{\"langs\":\"LANGS.md\",\"readme\":\"README.md\",\"glossary\":\"GLOSSARY.md\",\"summary\":\"SUMMARY.md\"},\"pdf\":{\"pageNumbers\":true,\"fontSize\":12,\"fontFamily\":\"Arial\",\"paperSize\":\"a4\",\"chapterMark\":\"pagebreak\",\"pageBreaksBefore\":\"/\",\"margin\":{\"right\":62,\"left\":62,\"top\":56,\"bottom\":56}},\"styles\":{\"website\":\"styles/website.css\",\"pdf\":\"styles/pdf.css\",\"epub\":\"styles/epub.css\",\"mobi\":\"styles/mobi.css\",\"ebook\":\"styles/ebook.css\",\"print\":\"styles/print.css\"}},\"file\":{\"path\":\"search-api/using-scrolls-in-java.md\",\"mtime\":\"2017-11-08T08:32:22.768Z\",\"type\":\"markdown\"},\"gitbook\":{\"version\":\"3.2.3\",\"time\":\"2018-01-29T15:28:32.108Z\"},\"basePath\":\"..\",\"book\":{\"language\":\"\"}}); });"},{"title":"","date":"2018-02-01T07:21:14.310Z","updated":"2018-01-29T15:28:33.730Z","comments":true,"path":"esjava/search-api/using-scrolls-in-java.html","permalink":"http://test.quanke.name/esjava/search-api/using-scrolls-in-java.html","excerpt":"","text":"Using scrolls in Java首先需要阅读 scroll documentation 一般搜索请求都是返回一”页”数据，无论数据量多大都一起返回给用户，Scroll API可以允许我们检索大量数据（甚至全部数据）。Scroll API允许我们做一个初始阶段搜索并且持续批量从Elasticsearch里拉取结果直到没有结果剩下。这有点像传统数据库里的cursors（游标）。Scroll API的创建并不是为了实时的用户响应，而是为了处理大量的数据（Scrolling is not intended for real time user requests, but rather for processing large amounts of data）。从 scroll 请求返回的结果只是反映了 search 发生那一时刻的索引状态，就像一个快照(The results that are returned from a scroll request reflect the state of the index at the time that the initial search request was made, like a snapshot in time)。后续的对文档的改动（索引、更新或者删除）都只会影响后面的搜索请求。 import static org.elasticsearch.index.query.QueryBuilders.*;QueryBuilder qb = termQuery(&quot;multi&quot;, &quot;test&quot;);SearchResponse scrollResp = client.prepareSearch(test) .addSort(FieldSortBuilder.DOC_FIELD_NAME, SortOrder.ASC) .setScroll(new TimeValue(60000)) //为了使用 scroll，初始搜索请求应该在查询中指定 scroll 参数，告诉 Elasticsearch 需要保持搜索的上下文环境多长时间（滚动时间） .setQuery(qb) .setSize(100).get(); //max of 100 hits will be returned for each scroll//Scroll until no hits are returneddo &#123; for (SearchHit hit : scrollResp.getHits().getHits()) &#123; //Handle the hit... &#125; scrollResp = client.prepareSearchScroll(scrollResp.getScrollId()).setScroll(new TimeValue(60000)).execute().actionGet();&#125; while(scrollResp.getHits().getHits().length != 0); // Zero hits mark the end of the scroll and the while loop. 如果超过滚动时间，继续使用该滚动ID搜索数据，则会报错： Caused by: SearchContextMissingException[No search context found for id [2861]] at org.elasticsearch.search.SearchService.findContext(SearchService.java:613) at org.elasticsearch.search.SearchService.executeQueryPhase(SearchService.java:403) at org.elasticsearch.search.action.SearchServiceTransportAction$SearchQueryScrollTransportHandler.messageReceived(SearchServiceTransportAction.java:384) at org.elasticsearch.search.action.SearchServiceTransportAction$SearchQueryScrollTransportHandler.messageReceived(SearchServiceTransportAction.java:381) at org.elasticsearch.transport.TransportRequestHandler.messageReceived(TransportRequestHandler.java:33) at org.elasticsearch.transport.RequestHandlerRegistry.processMessageReceived(RequestHandlerRegistry.java:75) at org.elasticsearch.transport.TransportService$4.doRun(TransportService.java:376) at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37) at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) at java.lang.Thread.run(Thread.java:745) 虽然当滚动有效时间已过，搜索上下文(Search Context)会自动被清除，但是一值保持滚动代价也是很大的，所以当我们不在使用滚动时要尽快使用Clear-Scroll API进行清除。 /** * 清除滚动ID * @param client * @param scrollIdList * @return */ public static boolean clearScroll(Client client, List&lt;String&gt; scrollIdList)&#123; ClearScrollRequestBuilder clearScrollRequestBuilder = client.prepareClearScroll(); clearScrollRequestBuilder.setScrollIds(scrollIdList); ClearScrollResponse response = clearScrollRequestBuilder.get(); return response.isSucceeded(); &#125; /** * 清除滚动ID * @param client * @param scrollId * @return */ public static boolean clearScroll(Client client, String scrollId)&#123; ClearScrollRequestBuilder clearScrollRequestBuilder = client.prepareClearScroll(); clearScrollRequestBuilder.addScrollId(scrollId); ClearScrollResponse response = clearScrollRequestBuilder.get(); return response.isSucceeded(); &#125; 实例"},{"title":"","date":"2018-02-01T07:21:14.243Z","updated":"2018-01-29T15:28:33.637Z","comments":true,"path":"esjava/gitbook/gitbook.js","permalink":"http://test.quanke.name/esjava/gitbook/gitbook.js","excerpt":"","text":"!function e(t,n,r){function o(s,a){if(!n[s]){if(!t[s]){var u=\"function\"==typeof require&&require;if(!a&&u)return u(s,!0);if(i)return i(s,!0);var c=new Error(\"Cannot find module '\"+s+\"'\");throw c.code=\"MODULE_NOT_FOUND\",c}var l=n[s]={exports:{}};t[s][0].call(l.exports,function(e){var n=t[s][1][e];return o(n?n:e)},l,l.exports,e,t,n,r)}return n[s].exports}for(var i=\"function\"==typeof require&&require,s=0;s0&&t-1 in e)}function o(e,t,n){return de.isFunction(t)?de.grep(e,function(e,r){return!!t.call(e,r,e)!==n}):t.nodeType?de.grep(e,function(e){return e===t!==n}):\"string\"!=typeof t?de.grep(e,function(e){return se.call(t,e)>-1!==n}):je.test(t)?de.filter(t,e,n):(t=de.filter(t,e),de.grep(e,function(e){return se.call(t,e)>-1!==n&&1===e.nodeType}))}function i(e,t){for(;(e=e[t])&&1!==e.nodeType;);return e}function s(e){var t={};return de.each(e.match(qe)||[],function(e,n){t[n]=!0}),t}function a(e){return e}function u(e){throw e}function c(e,t,n){var r;try{e&&de.isFunction(r=e.promise)?r.call(e).done(t).fail(n):e&&de.isFunction(r=e.then)?r.call(e,t,n):t.call(void 0,e)}catch(e){n.call(void 0,e)}}function l(){te.removeEventListener(\"DOMContentLoaded\",l),e.removeEventListener(\"load\",l),de.ready()}function f(){this.expando=de.expando+f.uid++}function p(e){return\"true\"===e||\"false\"!==e&&(\"null\"===e?null:e===+e+\"\"?+e:Ie.test(e)?JSON.parse(e):e)}function h(e,t,n){var r;if(void 0===n&&1===e.nodeType)if(r=\"data-\"+t.replace(Pe,\"-$&\").toLowerCase(),n=e.getAttribute(r),\"string\"==typeof n){try{n=p(n)}catch(e){}Re.set(e,t,n)}else n=void 0;return n}function d(e,t,n,r){var o,i=1,s=20,a=r?function(){return r.cur()}:function(){return de.css(e,t,\"\")},u=a(),c=n&&n[3]||(de.cssNumber[t]?\"\":\"px\"),l=(de.cssNumber[t]||\"px\"!==c&&+u)&&$e.exec(de.css(e,t));if(l&&l[3]!==c){c=c||l[3],n=n||[],l=+u||1;do i=i||\".5\",l/=i,de.style(e,t,l+c);while(i!==(i=a()/u)&&1!==i&&--s)}return n&&(l=+l||+u||0,o=n[1]?l+(n[1]+1)*n[2]:+n[2],r&&(r.unit=c,r.start=l,r.end=o)),o}function g(e){var t,n=e.ownerDocument,r=e.nodeName,o=Ue[r];return o?o:(t=n.body.appendChild(n.createElement(r)),o=de.css(t,\"display\"),t.parentNode.removeChild(t),\"none\"===o&&(o=\"block\"),Ue[r]=o,o)}function m(e,t){for(var n,r,o=[],i=0,s=e.length;i1&&t.uniqueSort(u)}return c&&(B=b,A=y),g};return o?r(s):s}var w,T,C,j,k,E,S,N,A,q,D,O,L,H,F,R,I,P,M,$=\"sizzle\"+1*new Date,W=e.document,B=0,_=0,U=n(),z=n(),X=n(),V=function(e,t){return e===t&&(D=!0),0},G={}.hasOwnProperty,Y=[],Q=Y.pop,J=Y.push,K=Y.push,Z=Y.slice,ee=function(e,t){for(var n=0,r=e.length;n+~]|\"+ne+\")\"+ne+\"*\"),le=new RegExp(\"=\"+ne+\"*([^\\\\]'\\\"]*?)\"+ne+\"*\\\\]\",\"g\"),fe=new RegExp(ie),pe=new RegExp(\"^\"+re+\"$\"),he={ID:new RegExp(\"^#(\"+re+\")\"),CLASS:new RegExp(\"^\\\\.(\"+re+\")\"),TAG:new RegExp(\"^(\"+re+\"|[*])\"),ATTR:new RegExp(\"^\"+oe),PSEUDO:new RegExp(\"^\"+ie),CHILD:new RegExp(\"^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\\\(\"+ne+\"*(even|odd|(([+-]|)(\\\\d*)n|)\"+ne+\"*(?:([+-]|)\"+ne+\"*(\\\\d+)|))\"+ne+\"*\\\\)|)\",\"i\"),bool:new RegExp(\"^(?:\"+te+\")$\",\"i\"),needsContext:new RegExp(\"^\"+ne+\"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\\\(\"+ne+\"*((?:-\\\\d)?\\\\d*)\"+ne+\"*\\\\)|)(?=[^-]|$)\",\"i\")},de=/^(?:input|select|textarea|button)$/i,ge=/^h\\d$/i,me=/^[^{]+\\{\\s*\\[native \\w/,ve=/^(?:#([\\w-]+)|(\\w+)|\\.([\\w-]+))$/,ye=/[+~]/,xe=new RegExp(\"\\\\\\\\([\\\\da-f]{1,6}\"+ne+\"?|(\"+ne+\")|.)\",\"ig\"),be=function(e,t,n){var r=\"0x\"+t-65536;return r!==r||n?t:r>10|55296,1023&r|56320)},we=/([\\0-\\x1f\\x7f]|^-?\\d)|^-$|[^\\0-\\x1f\\x7f-\\uFFFF\\w-]/g,Te=function(e,t){return t?\"\\0\"===e?\"�\":e.slice(0,-1)+\"\\\\\"+e.charCodeAt(e.length-1).toString(16)+\" \":\"\\\\\"+e},Ce=function(){O()},je=d(function(e){return e.disabled===!0&&(\"form\"in e||\"label\"in e)},{dir:\"parentNode\",next:\"legend\"});try{K.apply(Y=Z.call(W.childNodes),W.childNodes),Y[W.childNodes.length].nodeType}catch(e){K={apply:Y.length?function(e,t){J.apply(e,Z.call(t))}:function(e,t){for(var n=e.length,r=0;e[n++]=t[r++];);e.length=n-1}}}T=t.support={},k=t.isXML=function(e){var t=e&&(e.ownerDocument||e).documentElement;return!!t&&\"HTML\"!==t.nodeName},O=t.setDocument=function(e){var t,n,r=e?e.ownerDocument||e:W;return r!==L&&9===r.nodeType&&r.documentElement?(L=r,H=L.documentElement,F=!k(L),W!==L&&(n=L.defaultView)&&n.top!==n&&(n.addEventListener?n.addEventListener(\"unload\",Ce,!1):n.attachEvent&&n.attachEvent(\"onunload\",Ce)),T.attributes=o(function(e){return e.className=\"i\",!e.getAttribute(\"className\")}),T.getElementsByTagName=o(function(e){return e.appendChild(L.createComment(\"\")),!e.getElementsByTagName(\"*\").length}),T.getElementsByClassName=me.test(L.getElementsByClassName),T.getById=o(function(e){return H.appendChild(e).id=$,!L.getElementsByName||!L.getElementsByName($).length}),T.getById?(C.filter.ID=function(e){var t=e.replace(xe,be);return function(e){return e.getAttribute(\"id\")===t}},C.find.ID=function(e,t){if(\"undefined\"!=typeof t.getElementById&&F){var n=t.getElementById(e);return n?[n]:[]}}):(C.filter.ID=function(e){var t=e.replace(xe,be);return function(e){var n=\"undefined\"!=typeof e.getAttributeNode&&e.getAttributeNode(\"id\");return n&&n.value===t}},C.find.ID=function(e,t){if(\"undefined\"!=typeof t.getElementById&&F){var n,r,o,i=t.getElementById(e);if(i){if(n=i.getAttributeNode(\"id\"),n&&n.value===e)return[i];for(o=t.getElementsByName(e),r=0;i=o[r++];)if(n=i.getAttributeNode(\"id\"),n&&n.value===e)return[i]}return[]}}),C.find.TAG=T.getElementsByTagName?function(e,t){return\"undefined\"!=typeof t.getElementsByTagName?t.getElementsByTagName(e):T.qsa?t.querySelectorAll(e):void 0}:function(e,t){var n,r=[],o=0,i=t.getElementsByTagName(e);if(\"*\"===e){for(;n=i[o++];)1===n.nodeType&&r.push(n);return r}return i},C.find.CLASS=T.getElementsByClassName&&function(e,t){if(\"undefined\"!=typeof t.getElementsByClassName&&F)return t.getElementsByClassName(e)},I=[],R=[],(T.qsa=me.test(L.querySelectorAll))&&(o(function(e){H.appendChild(e).innerHTML=\"\",e.querySelectorAll(\"[msallowcapture^='']\").length&&R.push(\"[*^$]=\"+ne+\"*(?:''|\\\"\\\")\"),e.querySelectorAll(\"[selected]\").length||R.push(\"\\\\[\"+ne+\"*(?:value|\"+te+\")\"),e.querySelectorAll(\"[id~=\"+$+\"-]\").length||R.push(\"~=\"),e.querySelectorAll(\":checked\").length||R.push(\":checked\"),e.querySelectorAll(\"a#\"+$+\"+*\").length||R.push(\".#.+[+~]\")}),o(function(e){e.innerHTML=\"\";var t=L.createElement(\"input\");t.setAttribute(\"type\",\"hidden\"),e.appendChild(t).setAttribute(\"name\",\"D\"),e.querySelectorAll(\"[name=d]\").length&&R.push(\"name\"+ne+\"*[*^$|!~]?=\"),2!==e.querySelectorAll(\":enabled\").length&&R.push(\":enabled\",\":disabled\"),H.appendChild(e).disabled=!0,2!==e.querySelectorAll(\":disabled\").length&&R.push(\":enabled\",\":disabled\"),e.querySelectorAll(\"*,:x\"),R.push(\",.*:\")})),(T.matchesSelector=me.test(P=H.matches||H.webkitMatchesSelector||H.mozMatchesSelector||H.oMatchesSelector||H.msMatchesSelector))&&o(function(e){T.disconnectedMatch=P.call(e,\"*\"),P.call(e,\"[s!='']:x\"),I.push(\"!=\",ie)}),R=R.length&&new RegExp(R.join(\"|\")),I=I.length&&new RegExp(I.join(\"|\")),t=me.test(H.compareDocumentPosition),M=t||me.test(H.contains)?function(e,t){var n=9===e.nodeType?e.documentElement:e,r=t&&t.parentNode;return e===r||!(!r||1!==r.nodeType||!(n.contains?n.contains(r):e.compareDocumentPosition&&16&e.compareDocumentPosition(r)))}:function(e,t){if(t)for(;t=t.parentNode;)if(t===e)return!0;return!1},V=t?function(e,t){if(e===t)return D=!0,0;var n=!e.compareDocumentPosition-!t.compareDocumentPosition;return n?n:(n=(e.ownerDocument||e)===(t.ownerDocument||t)?e.compareDocumentPosition(t):1,1&n||!T.sortDetached&&t.compareDocumentPosition(e)===n?e===L||e.ownerDocument===W&&M(W,e)?-1:t===L||t.ownerDocument===W&&M(W,t)?1:q?ee(q,e)-ee(q,t):0:4&n?-1:1)}:function(e,t){if(e===t)return D=!0,0;var n,r=0,o=e.parentNode,i=t.parentNode,a=[e],u=[t];if(!o||!i)return e===L?-1:t===L?1:o?-1:i?1:q?ee(q,e)-ee(q,t):0;if(o===i)return s(e,t);for(n=e;n=n.parentNode;)a.unshift(n);for(n=t;n=n.parentNode;)u.unshift(n);for(;a[r]===u[r];)r++;return r?s(a[r],u[r]):a[r]===W?-1:u[r]===W?1:0},L):L},t.matches=function(e,n){return t(e,null,null,n)},t.matchesSelector=function(e,n){if((e.ownerDocument||e)!==L&&O(e),n=n.replace(le,\"='$1']\"),T.matchesSelector&&F&&!X[n+\" \"]&&(!I||!I.test(n))&&(!R||!R.test(n)))try{var r=P.call(e,n);if(r||T.disconnectedMatch||e.document&&11!==e.document.nodeType)return r}catch(e){}return t(n,L,null,[e]).length>0},t.contains=function(e,t){return(e.ownerDocument||e)!==L&&O(e),M(e,t)},t.attr=function(e,t){(e.ownerDocument||e)!==L&&O(e);var n=C.attrHandle[t.toLowerCase()],r=n&&G.call(C.attrHandle,t.toLowerCase())?n(e,t,!F):void 0;return void 0!==r?r:T.attributes||!F?e.getAttribute(t):(r=e.getAttributeNode(t))&&r.specified?r.value:null},t.escape=function(e){return(e+\"\").replace(we,Te)},t.error=function(e){throw new Error(\"Syntax error, unrecognized expression: \"+e)},t.uniqueSort=function(e){var t,n=[],r=0,o=0;if(D=!T.detectDuplicates,q=!T.sortStable&&e.slice(0),e.sort(V),D){for(;t=e[o++];)t===e[o]&&(r=n.push(o));for(;r--;)e.splice(n[r],1)}return q=null,e},j=t.getText=function(e){var t,n=\"\",r=0,o=e.nodeType;if(o){if(1===o||9===o||11===o){if(\"string\"==typeof e.textContent)return e.textContent;for(e=e.firstChild;e;e=e.nextSibling)n+=j(e)}else if(3===o||4===o)return e.nodeValue}else for(;t=e[r++];)n+=j(t);return n},C=t.selectors={cacheLength:50,createPseudo:r,match:he,attrHandle:{},find:{},relative:{\">\":{dir:\"parentNode\",first:!0},\" \":{dir:\"parentNode\"},\"+\":{dir:\"previousSibling\",first:!0},\"~\":{dir:\"previousSibling\"}},preFilter:{ATTR:function(e){return e[1]=e[1].replace(xe,be),e[3]=(e[3]||e[4]||e[5]||\"\").replace(xe,be),\"~=\"===e[2]&&(e[3]=\" \"+e[3]+\" \"),e.slice(0,4)},CHILD:function(e){return e[1]=e[1].toLowerCase(),\"nth\"===e[1].slice(0,3)?(e[3]||t.error(e[0]),e[4]=+(e[4]?e[5]+(e[6]||1):2*(\"even\"===e[3]||\"odd\"===e[3])),e[5]=+(e[7]+e[8]||\"odd\"===e[3])):e[3]&&t.error(e[0]),e},PSEUDO:function(e){var t,n=!e[6]&&e[2];return he.CHILD.test(e[0])?null:(e[3]?e[2]=e[4]||e[5]||\"\":n&&fe.test(n)&&(t=E(n,!0))&&(t=n.indexOf(\")\",n.length-t)-n.length)&&(e[0]=e[0].slice(0,t),e[2]=n.slice(0,t)),e.slice(0,3))}},filter:{TAG:function(e){var t=e.replace(xe,be).toLowerCase();return\"*\"===e?function(){return!0}:function(e){return e.nodeName&&e.nodeName.toLowerCase()===t}},CLASS:function(e){var t=U[e+\" \"];return t||(t=new RegExp(\"(^|\"+ne+\")\"+e+\"(\"+ne+\"|$)\"))&&U(e,function(e){return t.test(\"string\"==typeof e.className&&e.className||\"undefined\"!=typeof e.getAttribute&&e.getAttribute(\"class\")||\"\")})},ATTR:function(e,n,r){return function(o){var i=t.attr(o,e);return null==i?\"!=\"===n:!n||(i+=\"\",\"=\"===n?i===r:\"!=\"===n?i!==r:\"^=\"===n?r&&0===i.indexOf(r):\"*=\"===n?r&&i.indexOf(r)>-1:\"$=\"===n?r&&i.slice(-r.length)===r:\"~=\"===n?(\" \"+i.replace(se,\" \")+\" \").indexOf(r)>-1:\"|=\"===n&&(i===r||i.slice(0,r.length+1)===r+\"-\"))}},CHILD:function(e,t,n,r,o){var i=\"nth\"!==e.slice(0,3),s=\"last\"!==e.slice(-4),a=\"of-type\"===t;return 1===r&&0===o?function(e){return!!e.parentNode}:function(t,n,u){var c,l,f,p,h,d,g=i!==s?\"nextSibling\":\"previousSibling\",m=t.parentNode,v=a&&t.nodeName.toLowerCase(),y=!u&&!a,x=!1;if(m){if(i){for(;g;){for(p=t;p=p[g];)if(a?p.nodeName.toLowerCase()===v:1===p.nodeType)return!1;d=g=\"only\"===e&&!d&&\"nextSibling\"}return!0}if(d=[s?m.firstChild:m.lastChild],s&&y){for(p=m,f=p[$]||(p[$]={}),l=f[p.uniqueID]||(f[p.uniqueID]={}),c=l[e]||[],h=c[0]===B&&c[1],x=h&&c[2],p=h&&m.childNodes[h];p=++h&&p&&p[g]||(x=h=0)||d.pop();)if(1===p.nodeType&&++x&&p===t){l[e]=[B,h,x];break}}else if(y&&(p=t,f=p[$]||(p[$]={}),l=f[p.uniqueID]||(f[p.uniqueID]={}),c=l[e]||[],h=c[0]===B&&c[1],x=h),x===!1)for(;(p=++h&&p&&p[g]||(x=h=0)||d.pop())&&((a?p.nodeName.toLowerCase()!==v:1!==p.nodeType)||!++x||(y&&(f=p[$]||(p[$]={}),l=f[p.uniqueID]||(f[p.uniqueID]={}),l[e]=[B,x]),p!==t)););return x-=o,x===r||x%r===0&&x/r>=0}}},PSEUDO:function(e,n){var o,i=C.pseudos[e]||C.setFilters[e.toLowerCase()]||t.error(\"unsupported pseudo: \"+e);return i[$]?i(n):i.length>1?(o=[e,e,\"\",n],C.setFilters.hasOwnProperty(e.toLowerCase())?r(function(e,t){for(var r,o=i(e,n),s=o.length;s--;)r=ee(e,o[s]),e[r]=!(t[r]=o[s])}):function(e){return i(e,0,o)}):i}},pseudos:{not:r(function(e){var t=[],n=[],o=S(e.replace(ae,\"$1\"));return o[$]?r(function(e,t,n,r){for(var i,s=o(e,null,r,[]),a=e.length;a--;)(i=s[a])&&(e[a]=!(t[a]=i))}):function(e,r,i){return t[0]=e,o(t,null,i,n),t[0]=null,!n.pop()}}),has:r(function(e){return function(n){ return t(e,n).length>0}}),contains:r(function(e){return e=e.replace(xe,be),function(t){return(t.textContent||t.innerText||j(t)).indexOf(e)>-1}}),lang:r(function(e){return pe.test(e||\"\")||t.error(\"unsupported lang: \"+e),e=e.replace(xe,be).toLowerCase(),function(t){var n;do if(n=F?t.lang:t.getAttribute(\"xml:lang\")||t.getAttribute(\"lang\"))return n=n.toLowerCase(),n===e||0===n.indexOf(e+\"-\");while((t=t.parentNode)&&1===t.nodeType);return!1}}),target:function(t){var n=e.location&&e.location.hash;return n&&n.slice(1)===t.id},root:function(e){return e===H},focus:function(e){return e===L.activeElement&&(!L.hasFocus||L.hasFocus())&&!!(e.type||e.href||~e.tabIndex)},enabled:c(!1),disabled:c(!0),checked:function(e){var t=e.nodeName.toLowerCase();return\"input\"===t&&!!e.checked||\"option\"===t&&!!e.selected},selected:function(e){return e.parentNode&&e.parentNode.selectedIndex,e.selected===!0},empty:function(e){for(e=e.firstChild;e;e=e.nextSibling)if(e.nodeType=0;)e.push(r);return e}),gt:l(function(e,t,n){for(var r=n(?:|)$/i,je=/^.[^:#\\[\\.,]*$/;de.filter=function(e,t,n){var r=t[0];return n&&(e=\":not(\"+e+\")\"),1===t.length&&1===r.nodeType?de.find.matchesSelector(r,e)?[r]:[]:de.find.matches(e,de.grep(t,function(e){return 1===e.nodeType}))},de.fn.extend({find:function(e){var t,n,r=this.length,o=this;if(\"string\"!=typeof e)return this.pushStack(de(e).filter(function(){for(t=0;t]*|#([\\w-]+))$/,Se=de.fn.init=function(e,t,n){var r,o;if(!e)return this;if(n=n||ke,\"string\"==typeof e){if(r=\"\"===e[e.length-1]&&e.length>=3?[null,e,null]:Ee.exec(e),!r||!r[1]&&t)return!t||t.jquery?(t||n).find(e):this.constructor(t).find(e);if(r[1]){if(t=t instanceof de?t[0]:t,de.merge(this,de.parseHTML(r[1],t&&t.nodeType?t.ownerDocument||t:te,!0)),Ce.test(r[1])&&de.isPlainObject(t))for(r in t)de.isFunction(this[r])?this[r](t[r]):this.attr(r,t[r]);return this}return o=te.getElementById(r[2]),o&&(this[0]=o,this.length=1),this}return e.nodeType?(this[0]=e,this.length=1,this):de.isFunction(e)?void 0!==n.ready?n.ready(e):e(de):de.makeArray(e,this)};Se.prototype=de.fn,ke=de(te);var Ne=/^(?:parents|prev(?:Until|All))/,Ae={children:!0,contents:!0,next:!0,prev:!0};de.fn.extend({has:function(e){var t=de(e,this),n=t.length;return this.filter(function(){for(var e=0;e1?de.uniqueSort(i):i)},index:function(e){return e?\"string\"==typeof e?se.call(de(e),this[0]):se.call(this,e.jquery?e[0]:e):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(e,t){return this.pushStack(de.uniqueSort(de.merge(this.get(),de(e,t))))},addBack:function(e){return this.add(null==e?this.prevObject:this.prevObject.filter(e))}}),de.each({parent:function(e){var t=e.parentNode;return t&&11!==t.nodeType?t:null},parents:function(e){return be(e,\"parentNode\")},parentsUntil:function(e,t,n){return be(e,\"parentNode\",n)},next:function(e){return i(e,\"nextSibling\")},prev:function(e){return i(e,\"previousSibling\")},nextAll:function(e){return be(e,\"nextSibling\")},prevAll:function(e){return be(e,\"previousSibling\")},nextUntil:function(e,t,n){return be(e,\"nextSibling\",n)},prevUntil:function(e,t,n){return be(e,\"previousSibling\",n)},siblings:function(e){return we((e.parentNode||{}).firstChild,e)},children:function(e){return we(e.firstChild)},contents:function(e){return e.contentDocument||de.merge([],e.childNodes)}},function(e,t){de.fn[e]=function(n,r){var o=de.map(this,t,n);return\"Until\"!==e.slice(-5)&&(r=n),r&&\"string\"==typeof r&&(o=de.filter(r,o)),this.length>1&&(Ae[e]||de.uniqueSort(o),Ne.test(e)&&o.reverse()),this.pushStack(o)}});var qe=/[^\\x20\\t\\r\\n\\f]+/g;de.Callbacks=function(e){e=\"string\"==typeof e?s(e):de.extend({},e);var t,n,r,o,i=[],a=[],u=-1,c=function(){for(o=e.once,r=t=!0;a.length;u=-1)for(n=a.shift();++u-1;)i.splice(n,1),n-1:i.length>0},empty:function(){return i&&(i=[]),this},disable:function(){return o=a=[],i=n=\"\",this},disabled:function(){return!i},lock:function(){return o=a=[],n||t||(i=n=\"\"),this},locked:function(){return!!o},fireWith:function(e,n){return o||(n=n||[],n=[e,n.slice?n.slice():n],a.push(n),t||c()),this},fire:function(){return l.fireWith(this,arguments),this},fired:function(){return!!r}};return l},de.extend({Deferred:function(t){var n=[[\"notify\",\"progress\",de.Callbacks(\"memory\"),de.Callbacks(\"memory\"),2],[\"resolve\",\"done\",de.Callbacks(\"once memory\"),de.Callbacks(\"once memory\"),0,\"resolved\"],[\"reject\",\"fail\",de.Callbacks(\"once memory\"),de.Callbacks(\"once memory\"),1,\"rejected\"]],r=\"pending\",o={state:function(){return r},always:function(){return i.done(arguments).fail(arguments),this},catch:function(e){return o.then(null,e)},pipe:function(){var e=arguments;return de.Deferred(function(t){de.each(n,function(n,r){var o=de.isFunction(e[r[4]])&&e[r[4]];i[r[1]](function(){var e=o&&o.apply(this,arguments);e&&de.isFunction(e.promise)?e.promise().progress(t.notify).done(t.resolve).fail(t.reject):t[r[0]+\"With\"](this,o?[e]:arguments)})}),e=null}).promise()},then:function(t,r,o){function i(t,n,r,o){return function(){var c=this,l=arguments,f=function(){var e,f;if(!(t=s&&(r!==u&&(c=void 0,l=[e]),n.rejectWith(c,l))}};t?p():(de.Deferred.getStackHook&&(p.stackTrace=de.Deferred.getStackHook()),e.setTimeout(p))}}var s=0;return de.Deferred(function(e){n[0][3].add(i(0,e,de.isFunction(o)?o:a,e.notifyWith)),n[1][3].add(i(0,e,de.isFunction(t)?t:a)),n[2][3].add(i(0,e,de.isFunction(r)?r:u))}).promise()},promise:function(e){return null!=e?de.extend(e,o):o}},i={};return de.each(n,function(e,t){var s=t[2],a=t[5];o[t[1]]=s.add,a&&s.add(function(){r=a},n[3-e][2].disable,n[0][2].lock),s.add(t[3].fire),i[t[0]]=function(){return i[t[0]+\"With\"](this===i?void 0:this,arguments),this},i[t[0]+\"With\"]=s.fireWith}),o.promise(i),t&&t.call(i,i),i},when:function(e){var t=arguments.length,n=t,r=Array(n),o=re.call(arguments),i=de.Deferred(),s=function(e){return function(n){r[e]=this,o[e]=arguments.length>1?re.call(arguments):n,--t||i.resolveWith(r,o)}};if(t0||Oe.resolveWith(te,[de]))}}),de.ready.then=Oe.then,\"complete\"===te.readyState||\"loading\"!==te.readyState&&!te.documentElement.doScroll?e.setTimeout(de.ready):(te.addEventListener(\"DOMContentLoaded\",l),e.addEventListener(\"load\",l));var Le=function(e,t,n,r,o,i,s){var a=0,u=e.length,c=null==n;if(\"object\"===de.type(n)){o=!0;for(a in n)Le(e,t,a,n[a],!0,i,s)}else if(void 0!==r&&(o=!0,de.isFunction(r)||(s=!0),c&&(s?(t.call(e,r),t=null):(c=t,t=function(e,t,n){return c.call(de(e),n)})),t))for(;a1,null,!0)},removeData:function(e){return this.each(function(){Re.remove(this,e)})}}),de.extend({queue:function(e,t,n){var r;if(e)return t=(t||\"fx\")+\"queue\",r=Fe.get(e,t),n&&(!r||de.isArray(n)?r=Fe.access(e,t,de.makeArray(n)):r.push(n)),r||[]},dequeue:function(e,t){t=t||\"fx\";var n=de.queue(e,t),r=n.length,o=n.shift(),i=de._queueHooks(e,t),s=function(){de.dequeue(e,t)};\"inprogress\"===o&&(o=n.shift(),r--),o&&(\"fx\"===t&&n.unshift(\"inprogress\"),delete i.stop,o.call(e,s,i)),!r&&i&&i.empty.fire()},_queueHooks:function(e,t){var n=t+\"queueHooks\";return Fe.get(e,n)||Fe.access(e,n,{empty:de.Callbacks(\"once memory\").add(function(){Fe.remove(e,[t+\"queue\",n])})})}}),de.fn.extend({queue:function(e,t){var n=2;return\"string\"!=typeof e&&(t=e,e=\"fx\",n--),arguments.length\\x20\\t\\r\\n\\f]+)/i,Ve=/^$|\\/(?:java|ecma)script/i,Ge={option:[1,\"\",\"\"],thead:[1,\"\",\"\"],col:[2,\"\",\"\"],tr:[2,\"\",\"\"],td:[3,\"\",\"\"],_default:[0,\"\",\"\"]};Ge.optgroup=Ge.option,Ge.tbody=Ge.tfoot=Ge.colgroup=Ge.caption=Ge.thead,Ge.th=Ge.td;var Ye=/]*)\\/>/gi,tt=/"},{"title":"","date":"2018-02-01T07:21:14.245Z","updated":"2018-01-29T15:28:33.630Z","comments":true,"path":"esjava/gitbook/theme.js","permalink":"http://test.quanke.name/esjava/gitbook/theme.js","excerpt":"","text":"!function e(t,n,r){function o(a,s){if(!n[a]){if(!t[a]){var u=\"function\"==typeof require&&require;if(!s&&u)return u(a,!0);if(i)return i(a,!0);var l=new Error(\"Cannot find module '\"+a+\"'\");throw l.code=\"MODULE_NOT_FOUND\",l}var c=n[a]={exports:{}};t[a][0].call(c.exports,function(e){var n=t[a][1][e];return o(n?n:e)},c,c.exports,e,t,n,r)}return n[a].exports}for(var i=\"function\"==typeof require&&require,a=0;a0&&t-1 in e)}function o(e,t,n){return de.isFunction(t)?de.grep(e,function(e,r){return!!t.call(e,r,e)!==n}):t.nodeType?de.grep(e,function(e){return e===t!==n}):\"string\"!=typeof t?de.grep(e,function(e){return ae.call(t,e)>-1!==n}):ke.test(t)?de.filter(t,e,n):(t=de.filter(t,e),de.grep(e,function(e){return ae.call(t,e)>-1!==n&&1===e.nodeType}))}function i(e,t){for(;(e=e[t])&&1!==e.nodeType;);return e}function a(e){var t={};return de.each(e.match(qe)||[],function(e,n){t[n]=!0}),t}function s(e){return e}function u(e){throw e}function l(e,t,n){var r;try{e&&de.isFunction(r=e.promise)?r.call(e).done(t).fail(n):e&&de.isFunction(r=e.then)?r.call(e,t,n):t.call(void 0,e)}catch(e){n.call(void 0,e)}}function c(){te.removeEventListener(\"DOMContentLoaded\",c),e.removeEventListener(\"load\",c),de.ready()}function f(){this.expando=de.expando+f.uid++}function p(e){return\"true\"===e||\"false\"!==e&&(\"null\"===e?null:e===+e+\"\"?+e:Ie.test(e)?JSON.parse(e):e)}function h(e,t,n){var r;if(void 0===n&&1===e.nodeType)if(r=\"data-\"+t.replace(Re,\"-$&\").toLowerCase(),n=e.getAttribute(r),\"string\"==typeof n){try{n=p(n)}catch(e){}Pe.set(e,t,n)}else n=void 0;return n}function d(e,t,n,r){var o,i=1,a=20,s=r?function(){return r.cur()}:function(){return de.css(e,t,\"\")},u=s(),l=n&&n[3]||(de.cssNumber[t]?\"\":\"px\"),c=(de.cssNumber[t]||\"px\"!==l&&+u)&&$e.exec(de.css(e,t));if(c&&c[3]!==l){l=l||c[3],n=n||[],c=+u||1;do i=i||\".5\",c/=i,de.style(e,t,c+l);while(i!==(i=s()/u)&&1!==i&&--a)}return n&&(c=+c||+u||0,o=n[1]?c+(n[1]+1)*n[2]:+n[2],r&&(r.unit=l,r.start=c,r.end=o)),o}function g(e){var t,n=e.ownerDocument,r=e.nodeName,o=Ue[r];return o?o:(t=n.body.appendChild(n.createElement(r)),o=de.css(t,\"display\"),t.parentNode.removeChild(t),\"none\"===o&&(o=\"block\"),Ue[r]=o,o)}function m(e,t){for(var n,r,o=[],i=0,a=e.length;i1&&t.uniqueSort(u)}return l&&(W=x,A=y),g};return o?r(a):a}var w,C,T,k,j,E,N,S,A,q,D,O,L,H,F,P,I,R,M,$=\"sizzle\"+1*new Date,_=e.document,W=0,B=0,U=n(),z=n(),X=n(),K=function(e,t){return e===t&&(D=!0),0},V={}.hasOwnProperty,G=[],Y=G.pop,Q=G.push,J=G.push,Z=G.slice,ee=function(e,t){for(var n=0,r=e.length;n+~]|\"+ne+\")\"+ne+\"*\"),ce=new RegExp(\"=\"+ne+\"*([^\\\\]'\\\"]*?)\"+ne+\"*\\\\]\",\"g\"),fe=new RegExp(ie),pe=new RegExp(\"^\"+re+\"$\"),he={ID:new RegExp(\"^#(\"+re+\")\"),CLASS:new RegExp(\"^\\\\.(\"+re+\")\"),TAG:new RegExp(\"^(\"+re+\"|[*])\"),ATTR:new RegExp(\"^\"+oe),PSEUDO:new RegExp(\"^\"+ie),CHILD:new RegExp(\"^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\\\(\"+ne+\"*(even|odd|(([+-]|)(\\\\d*)n|)\"+ne+\"*(?:([+-]|)\"+ne+\"*(\\\\d+)|))\"+ne+\"*\\\\)|)\",\"i\"),bool:new RegExp(\"^(?:\"+te+\")$\",\"i\"),needsContext:new RegExp(\"^\"+ne+\"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\\\(\"+ne+\"*((?:-\\\\d)?\\\\d*)\"+ne+\"*\\\\)|)(?=[^-]|$)\",\"i\")},de=/^(?:input|select|textarea|button)$/i,ge=/^h\\d$/i,me=/^[^{]+\\{\\s*\\[native \\w/,ve=/^(?:#([\\w-]+)|(\\w+)|\\.([\\w-]+))$/,ye=/[+~]/,be=new RegExp(\"\\\\\\\\([\\\\da-f]{1,6}\"+ne+\"?|(\"+ne+\")|.)\",\"ig\"),xe=function(e,t,n){var r=\"0x\"+t-65536;return r!==r||n?t:r>10|55296,1023&r|56320)},we=/([\\0-\\x1f\\x7f]|^-?\\d)|^-$|[^\\0-\\x1f\\x7f-\\uFFFF\\w-]/g,Ce=function(e,t){return t?\"\\0\"===e?\"�\":e.slice(0,-1)+\"\\\\\"+e.charCodeAt(e.length-1).toString(16)+\" \":\"\\\\\"+e},Te=function(){O()},ke=d(function(e){return e.disabled===!0&&(\"form\"in e||\"label\"in e)},{dir:\"parentNode\",next:\"legend\"});try{J.apply(G=Z.call(_.childNodes),_.childNodes),G[_.childNodes.length].nodeType}catch(e){J={apply:G.length?function(e,t){Q.apply(e,Z.call(t))}:function(e,t){for(var n=e.length,r=0;e[n++]=t[r++];);e.length=n-1}}}C=t.support={},j=t.isXML=function(e){var t=e&&(e.ownerDocument||e).documentElement;return!!t&&\"HTML\"!==t.nodeName},O=t.setDocument=function(e){var t,n,r=e?e.ownerDocument||e:_;return r!==L&&9===r.nodeType&&r.documentElement?(L=r,H=L.documentElement,F=!j(L),_!==L&&(n=L.defaultView)&&n.top!==n&&(n.addEventListener?n.addEventListener(\"unload\",Te,!1):n.attachEvent&&n.attachEvent(\"onunload\",Te)),C.attributes=o(function(e){return e.className=\"i\",!e.getAttribute(\"className\")}),C.getElementsByTagName=o(function(e){return e.appendChild(L.createComment(\"\")),!e.getElementsByTagName(\"*\").length}),C.getElementsByClassName=me.test(L.getElementsByClassName),C.getById=o(function(e){return H.appendChild(e).id=$,!L.getElementsByName||!L.getElementsByName($).length}),C.getById?(T.filter.ID=function(e){var t=e.replace(be,xe);return function(e){return e.getAttribute(\"id\")===t}},T.find.ID=function(e,t){if(\"undefined\"!=typeof t.getElementById&&F){var n=t.getElementById(e);return n?[n]:[]}}):(T.filter.ID=function(e){var t=e.replace(be,xe);return function(e){var n=\"undefined\"!=typeof e.getAttributeNode&&e.getAttributeNode(\"id\");return n&&n.value===t}},T.find.ID=function(e,t){if(\"undefined\"!=typeof t.getElementById&&F){var n,r,o,i=t.getElementById(e);if(i){if(n=i.getAttributeNode(\"id\"),n&&n.value===e)return[i];for(o=t.getElementsByName(e),r=0;i=o[r++];)if(n=i.getAttributeNode(\"id\"),n&&n.value===e)return[i]}return[]}}),T.find.TAG=C.getElementsByTagName?function(e,t){return\"undefined\"!=typeof t.getElementsByTagName?t.getElementsByTagName(e):C.qsa?t.querySelectorAll(e):void 0}:function(e,t){var n,r=[],o=0,i=t.getElementsByTagName(e);if(\"*\"===e){for(;n=i[o++];)1===n.nodeType&&r.push(n);return r}return i},T.find.CLASS=C.getElementsByClassName&&function(e,t){if(\"undefined\"!=typeof t.getElementsByClassName&&F)return t.getElementsByClassName(e)},I=[],P=[],(C.qsa=me.test(L.querySelectorAll))&&(o(function(e){H.appendChild(e).innerHTML=\"\",e.querySelectorAll(\"[msallowcapture^='']\").length&&P.push(\"[*^$]=\"+ne+\"*(?:''|\\\"\\\")\"),e.querySelectorAll(\"[selected]\").length||P.push(\"\\\\[\"+ne+\"*(?:value|\"+te+\")\"),e.querySelectorAll(\"[id~=\"+$+\"-]\").length||P.push(\"~=\"),e.querySelectorAll(\":checked\").length||P.push(\":checked\"),e.querySelectorAll(\"a#\"+$+\"+*\").length||P.push(\".#.+[+~]\")}),o(function(e){e.innerHTML=\"\";var t=L.createElement(\"input\");t.setAttribute(\"type\",\"hidden\"),e.appendChild(t).setAttribute(\"name\",\"D\"),e.querySelectorAll(\"[name=d]\").length&&P.push(\"name\"+ne+\"*[*^$|!~]?=\"),2!==e.querySelectorAll(\":enabled\").length&&P.push(\":enabled\",\":disabled\"),H.appendChild(e).disabled=!0,2!==e.querySelectorAll(\":disabled\").length&&P.push(\":enabled\",\":disabled\"),e.querySelectorAll(\"*,:x\"),P.push(\",.*:\")})),(C.matchesSelector=me.test(R=H.matches||H.webkitMatchesSelector||H.mozMatchesSelector||H.oMatchesSelector||H.msMatchesSelector))&&o(function(e){C.disconnectedMatch=R.call(e,\"*\"),R.call(e,\"[s!='']:x\"),I.push(\"!=\",ie)}),P=P.length&&new RegExp(P.join(\"|\")),I=I.length&&new RegExp(I.join(\"|\")),t=me.test(H.compareDocumentPosition),M=t||me.test(H.contains)?function(e,t){var n=9===e.nodeType?e.documentElement:e,r=t&&t.parentNode;return e===r||!(!r||1!==r.nodeType||!(n.contains?n.contains(r):e.compareDocumentPosition&&16&e.compareDocumentPosition(r)))}:function(e,t){if(t)for(;t=t.parentNode;)if(t===e)return!0;return!1},K=t?function(e,t){if(e===t)return D=!0,0;var n=!e.compareDocumentPosition-!t.compareDocumentPosition;return n?n:(n=(e.ownerDocument||e)===(t.ownerDocument||t)?e.compareDocumentPosition(t):1,1&n||!C.sortDetached&&t.compareDocumentPosition(e)===n?e===L||e.ownerDocument===_&&M(_,e)?-1:t===L||t.ownerDocument===_&&M(_,t)?1:q?ee(q,e)-ee(q,t):0:4&n?-1:1)}:function(e,t){if(e===t)return D=!0,0;var n,r=0,o=e.parentNode,i=t.parentNode,s=[e],u=[t];if(!o||!i)return e===L?-1:t===L?1:o?-1:i?1:q?ee(q,e)-ee(q,t):0;if(o===i)return a(e,t);for(n=e;n=n.parentNode;)s.unshift(n);for(n=t;n=n.parentNode;)u.unshift(n);for(;s[r]===u[r];)r++;return r?a(s[r],u[r]):s[r]===_?-1:u[r]===_?1:0},L):L},t.matches=function(e,n){return t(e,null,null,n)},t.matchesSelector=function(e,n){if((e.ownerDocument||e)!==L&&O(e),n=n.replace(ce,\"='$1']\"),C.matchesSelector&&F&&!X[n+\" \"]&&(!I||!I.test(n))&&(!P||!P.test(n)))try{var r=R.call(e,n);if(r||C.disconnectedMatch||e.document&&11!==e.document.nodeType)return r}catch(e){}return t(n,L,null,[e]).length>0},t.contains=function(e,t){return(e.ownerDocument||e)!==L&&O(e),M(e,t)},t.attr=function(e,t){(e.ownerDocument||e)!==L&&O(e);var n=T.attrHandle[t.toLowerCase()],r=n&&V.call(T.attrHandle,t.toLowerCase())?n(e,t,!F):void 0;return void 0!==r?r:C.attributes||!F?e.getAttribute(t):(r=e.getAttributeNode(t))&&r.specified?r.value:null},t.escape=function(e){return(e+\"\").replace(we,Ce)},t.error=function(e){throw new Error(\"Syntax error, unrecognized expression: \"+e)},t.uniqueSort=function(e){var t,n=[],r=0,o=0;if(D=!C.detectDuplicates,q=!C.sortStable&&e.slice(0),e.sort(K),D){for(;t=e[o++];)t===e[o]&&(r=n.push(o));for(;r--;)e.splice(n[r],1)}return q=null,e},k=t.getText=function(e){var t,n=\"\",r=0,o=e.nodeType;if(o){if(1===o||9===o||11===o){if(\"string\"==typeof e.textContent)return e.textContent;for(e=e.firstChild;e;e=e.nextSibling)n+=k(e)}else if(3===o||4===o)return e.nodeValue}else for(;t=e[r++];)n+=k(t);return n},T=t.selectors={cacheLength:50,createPseudo:r,match:he,attrHandle:{},find:{},relative:{\">\":{dir:\"parentNode\",first:!0},\" \":{dir:\"parentNode\"},\"+\":{dir:\"previousSibling\",first:!0},\"~\":{dir:\"previousSibling\"}},preFilter:{ATTR:function(e){return e[1]=e[1].replace(be,xe),e[3]=(e[3]||e[4]||e[5]||\"\").replace(be,xe),\"~=\"===e[2]&&(e[3]=\" \"+e[3]+\" \"),e.slice(0,4)},CHILD:function(e){return e[1]=e[1].toLowerCase(),\"nth\"===e[1].slice(0,3)?(e[3]||t.error(e[0]),e[4]=+(e[4]?e[5]+(e[6]||1):2*(\"even\"===e[3]||\"odd\"===e[3])),e[5]=+(e[7]+e[8]||\"odd\"===e[3])):e[3]&&t.error(e[0]),e},PSEUDO:function(e){var t,n=!e[6]&&e[2];return he.CHILD.test(e[0])?null:(e[3]?e[2]=e[4]||e[5]||\"\":n&&fe.test(n)&&(t=E(n,!0))&&(t=n.indexOf(\")\",n.length-t)-n.length)&&(e[0]=e[0].slice(0,t),e[2]=n.slice(0,t)),e.slice(0,3))}},filter:{TAG:function(e){var t=e.replace(be,xe).toLowerCase();return\"*\"===e?function(){return!0}:function(e){return e.nodeName&&e.nodeName.toLowerCase()===t}},CLASS:function(e){var t=U[e+\" \"];return t||(t=new RegExp(\"(^|\"+ne+\")\"+e+\"(\"+ne+\"|$)\"))&&U(e,function(e){return t.test(\"string\"==typeof e.className&&e.className||\"undefined\"!=typeof e.getAttribute&&e.getAttribute(\"class\")||\"\")})},ATTR:function(e,n,r){return function(o){var i=t.attr(o,e);return null==i?\"!=\"===n:!n||(i+=\"\",\"=\"===n?i===r:\"!=\"===n?i!==r:\"^=\"===n?r&&0===i.indexOf(r):\"*=\"===n?r&&i.indexOf(r)>-1:\"$=\"===n?r&&i.slice(-r.length)===r:\"~=\"===n?(\" \"+i.replace(ae,\" \")+\" \").indexOf(r)>-1:\"|=\"===n&&(i===r||i.slice(0,r.length+1)===r+\"-\"))}},CHILD:function(e,t,n,r,o){var i=\"nth\"!==e.slice(0,3),a=\"last\"!==e.slice(-4),s=\"of-type\"===t;return 1===r&&0===o?function(e){return!!e.parentNode}:function(t,n,u){var l,c,f,p,h,d,g=i!==a?\"nextSibling\":\"previousSibling\",m=t.parentNode,v=s&&t.nodeName.toLowerCase(),y=!u&&!s,b=!1;if(m){if(i){for(;g;){for(p=t;p=p[g];)if(s?p.nodeName.toLowerCase()===v:1===p.nodeType)return!1;d=g=\"only\"===e&&!d&&\"nextSibling\"}return!0}if(d=[a?m.firstChild:m.lastChild],a&&y){for(p=m,f=p[$]||(p[$]={}),c=f[p.uniqueID]||(f[p.uniqueID]={}),l=c[e]||[],h=l[0]===W&&l[1],b=h&&l[2],p=h&&m.childNodes[h];p=++h&&p&&p[g]||(b=h=0)||d.pop();)if(1===p.nodeType&&++b&&p===t){c[e]=[W,h,b];break}}else if(y&&(p=t,f=p[$]||(p[$]={}),c=f[p.uniqueID]||(f[p.uniqueID]={}),l=c[e]||[],h=l[0]===W&&l[1],b=h),b===!1)for(;(p=++h&&p&&p[g]||(b=h=0)||d.pop())&&((s?p.nodeName.toLowerCase()!==v:1!==p.nodeType)||!++b||(y&&(f=p[$]||(p[$]={}),c=f[p.uniqueID]||(f[p.uniqueID]={}),c[e]=[W,b]),p!==t)););return b-=o,b===r||b%r===0&&b/r>=0}}},PSEUDO:function(e,n){var o,i=T.pseudos[e]||T.setFilters[e.toLowerCase()]||t.error(\"unsupported pseudo: \"+e);return i[$]?i(n):i.length>1?(o=[e,e,\"\",n],T.setFilters.hasOwnProperty(e.toLowerCase())?r(function(e,t){for(var r,o=i(e,n),a=o.length;a--;)r=ee(e,o[a]),e[r]=!(t[r]=o[a])}):function(e){return i(e,0,o)}):i}},pseudos:{not:r(function(e){var t=[],n=[],o=N(e.replace(se,\"$1\"));return o[$]?r(function(e,t,n,r){for(var i,a=o(e,null,r,[]),s=e.length;s--;)(i=a[s])&&(e[s]=!(t[s]=i))}):function(e,r,i){return t[0]=e,o(t,null,i,n),t[0]=null,!n.pop()}}),has:r(function(e){return function(n){ return t(e,n).length>0}}),contains:r(function(e){return e=e.replace(be,xe),function(t){return(t.textContent||t.innerText||k(t)).indexOf(e)>-1}}),lang:r(function(e){return pe.test(e||\"\")||t.error(\"unsupported lang: \"+e),e=e.replace(be,xe).toLowerCase(),function(t){var n;do if(n=F?t.lang:t.getAttribute(\"xml:lang\")||t.getAttribute(\"lang\"))return n=n.toLowerCase(),n===e||0===n.indexOf(e+\"-\");while((t=t.parentNode)&&1===t.nodeType);return!1}}),target:function(t){var n=e.location&&e.location.hash;return n&&n.slice(1)===t.id},root:function(e){return e===H},focus:function(e){return e===L.activeElement&&(!L.hasFocus||L.hasFocus())&&!!(e.type||e.href||~e.tabIndex)},enabled:l(!1),disabled:l(!0),checked:function(e){var t=e.nodeName.toLowerCase();return\"input\"===t&&!!e.checked||\"option\"===t&&!!e.selected},selected:function(e){return e.parentNode&&e.parentNode.selectedIndex,e.selected===!0},empty:function(e){for(e=e.firstChild;e;e=e.nextSibling)if(e.nodeType=0;)e.push(r);return e}),gt:c(function(e,t,n){for(var r=n(?:|)$/i,ke=/^.[^:#\\[\\.,]*$/;de.filter=function(e,t,n){var r=t[0];return n&&(e=\":not(\"+e+\")\"),1===t.length&&1===r.nodeType?de.find.matchesSelector(r,e)?[r]:[]:de.find.matches(e,de.grep(t,function(e){return 1===e.nodeType}))},de.fn.extend({find:function(e){var t,n,r=this.length,o=this;if(\"string\"!=typeof e)return this.pushStack(de(e).filter(function(){for(t=0;t]*|#([\\w-]+))$/,Ne=de.fn.init=function(e,t,n){var r,o;if(!e)return this;if(n=n||je,\"string\"==typeof e){if(r=\"\"===e[e.length-1]&&e.length>=3?[null,e,null]:Ee.exec(e),!r||!r[1]&&t)return!t||t.jquery?(t||n).find(e):this.constructor(t).find(e);if(r[1]){if(t=t instanceof de?t[0]:t,de.merge(this,de.parseHTML(r[1],t&&t.nodeType?t.ownerDocument||t:te,!0)),Te.test(r[1])&&de.isPlainObject(t))for(r in t)de.isFunction(this[r])?this[r](t[r]):this.attr(r,t[r]);return this}return o=te.getElementById(r[2]),o&&(this[0]=o,this.length=1),this}return e.nodeType?(this[0]=e,this.length=1,this):de.isFunction(e)?void 0!==n.ready?n.ready(e):e(de):de.makeArray(e,this)};Ne.prototype=de.fn,je=de(te);var Se=/^(?:parents|prev(?:Until|All))/,Ae={children:!0,contents:!0,next:!0,prev:!0};de.fn.extend({has:function(e){var t=de(e,this),n=t.length;return this.filter(function(){for(var e=0;e1?de.uniqueSort(i):i)},index:function(e){return e?\"string\"==typeof e?ae.call(de(e),this[0]):ae.call(this,e.jquery?e[0]:e):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(e,t){return this.pushStack(de.uniqueSort(de.merge(this.get(),de(e,t))))},addBack:function(e){return this.add(null==e?this.prevObject:this.prevObject.filter(e))}}),de.each({parent:function(e){var t=e.parentNode;return t&&11!==t.nodeType?t:null},parents:function(e){return xe(e,\"parentNode\")},parentsUntil:function(e,t,n){return xe(e,\"parentNode\",n)},next:function(e){return i(e,\"nextSibling\")},prev:function(e){return i(e,\"previousSibling\")},nextAll:function(e){return xe(e,\"nextSibling\")},prevAll:function(e){return xe(e,\"previousSibling\")},nextUntil:function(e,t,n){return xe(e,\"nextSibling\",n)},prevUntil:function(e,t,n){return xe(e,\"previousSibling\",n)},siblings:function(e){return we((e.parentNode||{}).firstChild,e)},children:function(e){return we(e.firstChild)},contents:function(e){return e.contentDocument||de.merge([],e.childNodes)}},function(e,t){de.fn[e]=function(n,r){var o=de.map(this,t,n);return\"Until\"!==e.slice(-5)&&(r=n),r&&\"string\"==typeof r&&(o=de.filter(r,o)),this.length>1&&(Ae[e]||de.uniqueSort(o),Se.test(e)&&o.reverse()),this.pushStack(o)}});var qe=/[^\\x20\\t\\r\\n\\f]+/g;de.Callbacks=function(e){e=\"string\"==typeof e?a(e):de.extend({},e);var t,n,r,o,i=[],s=[],u=-1,l=function(){for(o=e.once,r=t=!0;s.length;u=-1)for(n=s.shift();++u-1;)i.splice(n,1),n-1:i.length>0},empty:function(){return i&&(i=[]),this},disable:function(){return o=s=[],i=n=\"\",this},disabled:function(){return!i},lock:function(){return o=s=[],n||t||(i=n=\"\"),this},locked:function(){return!!o},fireWith:function(e,n){return o||(n=n||[],n=[e,n.slice?n.slice():n],s.push(n),t||l()),this},fire:function(){return c.fireWith(this,arguments),this},fired:function(){return!!r}};return c},de.extend({Deferred:function(t){var n=[[\"notify\",\"progress\",de.Callbacks(\"memory\"),de.Callbacks(\"memory\"),2],[\"resolve\",\"done\",de.Callbacks(\"once memory\"),de.Callbacks(\"once memory\"),0,\"resolved\"],[\"reject\",\"fail\",de.Callbacks(\"once memory\"),de.Callbacks(\"once memory\"),1,\"rejected\"]],r=\"pending\",o={state:function(){return r},always:function(){return i.done(arguments).fail(arguments),this},catch:function(e){return o.then(null,e)},pipe:function(){var e=arguments;return de.Deferred(function(t){de.each(n,function(n,r){var o=de.isFunction(e[r[4]])&&e[r[4]];i[r[1]](function(){var e=o&&o.apply(this,arguments);e&&de.isFunction(e.promise)?e.promise().progress(t.notify).done(t.resolve).fail(t.reject):t[r[0]+\"With\"](this,o?[e]:arguments)})}),e=null}).promise()},then:function(t,r,o){function i(t,n,r,o){return function(){var l=this,c=arguments,f=function(){var e,f;if(!(t=a&&(r!==u&&(l=void 0,c=[e]),n.rejectWith(l,c))}};t?p():(de.Deferred.getStackHook&&(p.stackTrace=de.Deferred.getStackHook()),e.setTimeout(p))}}var a=0;return de.Deferred(function(e){n[0][3].add(i(0,e,de.isFunction(o)?o:s,e.notifyWith)),n[1][3].add(i(0,e,de.isFunction(t)?t:s)),n[2][3].add(i(0,e,de.isFunction(r)?r:u))}).promise()},promise:function(e){return null!=e?de.extend(e,o):o}},i={};return de.each(n,function(e,t){var a=t[2],s=t[5];o[t[1]]=a.add,s&&a.add(function(){r=s},n[3-e][2].disable,n[0][2].lock),a.add(t[3].fire),i[t[0]]=function(){return i[t[0]+\"With\"](this===i?void 0:this,arguments),this},i[t[0]+\"With\"]=a.fireWith}),o.promise(i),t&&t.call(i,i),i},when:function(e){var t=arguments.length,n=t,r=Array(n),o=re.call(arguments),i=de.Deferred(),a=function(e){return function(n){r[e]=this,o[e]=arguments.length>1?re.call(arguments):n,--t||i.resolveWith(r,o)}};if(t0||Oe.resolveWith(te,[de]))}}),de.ready.then=Oe.then,\"complete\"===te.readyState||\"loading\"!==te.readyState&&!te.documentElement.doScroll?e.setTimeout(de.ready):(te.addEventListener(\"DOMContentLoaded\",c),e.addEventListener(\"load\",c));var Le=function(e,t,n,r,o,i,a){var s=0,u=e.length,l=null==n;if(\"object\"===de.type(n)){o=!0;for(s in n)Le(e,t,s,n[s],!0,i,a)}else if(void 0!==r&&(o=!0,de.isFunction(r)||(a=!0),l&&(a?(t.call(e,r),t=null):(l=t,t=function(e,t,n){return l.call(de(e),n)})),t))for(;s1,null,!0)},removeData:function(e){return this.each(function(){Pe.remove(this,e)})}}),de.extend({queue:function(e,t,n){var r;if(e)return t=(t||\"fx\")+\"queue\",r=Fe.get(e,t),n&&(!r||de.isArray(n)?r=Fe.access(e,t,de.makeArray(n)):r.push(n)),r||[]},dequeue:function(e,t){t=t||\"fx\";var n=de.queue(e,t),r=n.length,o=n.shift(),i=de._queueHooks(e,t),a=function(){de.dequeue(e,t)};\"inprogress\"===o&&(o=n.shift(),r--),o&&(\"fx\"===t&&n.unshift(\"inprogress\"),delete i.stop,o.call(e,a,i)),!r&&i&&i.empty.fire()},_queueHooks:function(e,t){var n=t+\"queueHooks\";return Fe.get(e,n)||Fe.access(e,n,{empty:de.Callbacks(\"once memory\").add(function(){Fe.remove(e,[t+\"queue\",n])})})}}),de.fn.extend({queue:function(e,t){var n=2;return\"string\"!=typeof e&&(t=e,e=\"fx\",n--),arguments.length\\x20\\t\\r\\n\\f]+)/i,Ke=/^$|\\/(?:java|ecma)script/i,Ve={option:[1,\"\",\"\"],thead:[1,\"\",\"\"],col:[2,\"\",\"\"],tr:[2,\"\",\"\"],td:[3,\"\",\"\"],_default:[0,\"\",\"\"]};Ve.optgroup=Ve.option,Ve.tbody=Ve.tfoot=Ve.colgroup=Ve.caption=Ve.thead,Ve.th=Ve.td;var Ge=/]*)\\/>/gi,tt=/"},{"title":"","date":"2018-02-01T07:21:14.256Z","updated":"2018-01-29T15:28:33.655Z","comments":true,"path":"esjava/gitbook/gitbook-plugin-fontsettings/fontsettings.js","permalink":"http://test.quanke.name/esjava/gitbook/gitbook-plugin-fontsettings/fontsettings.js","excerpt":"","text":"require(['gitbook', 'jquery'], function(gitbook, $) { // Configuration var MAX_SIZE = 4, MIN_SIZE = 0, BUTTON_ID; // Current fontsettings state var fontState; // Default themes var THEMES = [ { config: 'white', text: 'White', id: 0 }, { config: 'sepia', text: 'Sepia', id: 1 }, { config: 'night', text: 'Night', id: 2 } ]; // Default font families var FAMILIES = [ { config: 'serif', text: 'Serif', id: 0 }, { config: 'sans', text: 'Sans', id: 1 } ]; // Return configured themes function getThemes() { return THEMES; } // Modify configured themes function setThemes(themes) { THEMES = themes; updateButtons(); } // Return configured font families function getFamilies() { return FAMILIES; } // Modify configured font families function setFamilies(families) { FAMILIES = families; updateButtons(); } // Save current font settings function saveFontSettings() { gitbook.storage.set('fontState', fontState); update(); } // Increase font size function enlargeFontSize(e) { e.preventDefault(); if (fontState.size >= MAX_SIZE) return; fontState.size++; saveFontSettings(); } // Decrease font size function reduceFontSize(e) { e.preventDefault(); if (fontState.size"},{"title":"","date":"2018-02-01T07:21:14.257Z","updated":"2018-01-29T15:28:33.652Z","comments":true,"path":"esjava/gitbook/gitbook-plugin-fontsettings/website.css","permalink":"http://test.quanke.name/esjava/gitbook/gitbook-plugin-fontsettings/website.css","excerpt":"","text":"/* * Theme 1 */ .color-theme-1 .dropdown-menu { background-color: #111111; border-color: #7e888b; } .color-theme-1 .dropdown-menu .dropdown-caret .caret-inner { border-bottom: 9px solid #111111; } .color-theme-1 .dropdown-menu .buttons { border-color: #7e888b; } .color-theme-1 .dropdown-menu .button { color: #afa790; } .color-theme-1 .dropdown-menu .button:hover { color: #73553c; } /* * Theme 2 */ .color-theme-2 .dropdown-menu { background-color: #2d3143; border-color: #272a3a; } .color-theme-2 .dropdown-menu .dropdown-caret .caret-inner { border-bottom: 9px solid #2d3143; } .color-theme-2 .dropdown-menu .buttons { border-color: #272a3a; } .color-theme-2 .dropdown-menu .button { color: #62677f; } .color-theme-2 .dropdown-menu .button:hover { color: #f4f4f5; } .book .book-header .font-settings .font-enlarge { line-height: 30px; font-size: 1.4em; } .book .book-header .font-settings .font-reduce { line-height: 30px; font-size: 1em; } .book.color-theme-1 .book-body { color: #704214; background: #f3eacb; } .book.color-theme-1 .book-body .page-wrapper .page-inner section { background: #f3eacb; } .book.color-theme-2 .book-body { color: #bdcadb; background: #1c1f2b; } .book.color-theme-2 .book-body .page-wrapper .page-inner section { background: #1c1f2b; } .book.font-size-0 .book-body .page-inner section { font-size: 1.2rem; } .book.font-size-1 .book-body .page-inner section { font-size: 1.4rem; } .book.font-size-2 .book-body .page-inner section { font-size: 1.6rem; } .book.font-size-3 .book-body .page-inner section { font-size: 2.2rem; } .book.font-size-4 .book-body .page-inner section { font-size: 4rem; } .book.font-family-0 { font-family: Georgia, serif; } .book.font-family-1 { font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif; } .book.color-theme-1 .book-body .page-wrapper .page-inner section.normal { color: #704214; } .book.color-theme-1 .book-body .page-wrapper .page-inner section.normal a { color: inherit; } .book.color-theme-1 .book-body .page-wrapper .page-inner section.normal h1, .book.color-theme-1 .book-body .page-wrapper .page-inner section.normal h2, .book.color-theme-1 .book-body .page-wrapper .page-inner section.normal h3, .book.color-theme-1 .book-body .page-wrapper .page-inner section.normal h4, .book.color-theme-1 .book-body .page-wrapper .page-inner section.normal h5, .book.color-theme-1 .book-body .page-wrapper .page-inner section.normal h6 { color: inherit; } .book.color-theme-1 .book-body .page-wrapper .page-inner section.normal h1, .book.color-theme-1 .book-body .page-wrapper .page-inner section.normal h2 { border-color: inherit; } .book.color-theme-1 .book-body .page-wrapper .page-inner section.normal h6 { color: inherit; } .book.color-theme-1 .book-body .page-wrapper .page-inner section.normal hr { background-color: inherit; } .book.color-theme-1 .book-body .page-wrapper .page-inner section.normal blockquote { border-color: inherit; } .book.color-theme-1 .book-body .page-wrapper .page-inner section.normal pre, .book.color-theme-1 .book-body .page-wrapper .page-inner section.normal code { background: #fdf6e3; color: #657b83; border-color: #f8df9c; } .book.color-theme-1 .book-body .page-wrapper .page-inner section.normal .highlight { background-color: inherit; } .book.color-theme-1 .book-body .page-wrapper .page-inner section.normal table th, .book.color-theme-1 .book-body .page-wrapper .page-inner section.normal table td { border-color: #f5d06c; } .book.color-theme-1 .book-body .page-wrapper .page-inner section.normal table tr { color: inherit; background-color: #fdf6e3; border-color: #444444; } .book.color-theme-1 .book-body .page-wrapper .page-inner section.normal table tr:nth-child(2n) { background-color: #fbeecb; } .book.color-theme-2 .book-body .page-wrapper .page-inner section.normal { color: #bdcadb; } .book.color-theme-2 .book-body .page-wrapper .page-inner section.normal a { color: #3eb1d0; } .book.color-theme-2 .book-body .page-wrapper .page-inner section.normal h1, .book.color-theme-2 .book-body .page-wrapper .page-inner section.normal h2, .book.color-theme-2 .book-body .page-wrapper .page-inner section.normal h3, .book.color-theme-2 .book-body .page-wrapper .page-inner section.normal h4, .book.color-theme-2 .book-body .page-wrapper .page-inner section.normal h5, .book.color-theme-2 .book-body .page-wrapper .page-inner section.normal h6 { color: #fffffa; } .book.color-theme-2 .book-body .page-wrapper .page-inner section.normal h1, .book.color-theme-2 .book-body .page-wrapper .page-inner section.normal h2 { border-color: #373b4e; } .book.color-theme-2 .book-body .page-wrapper .page-inner section.normal h6 { color: #373b4e; } .book.color-theme-2 .book-body .page-wrapper .page-inner section.normal hr { background-color: #373b4e; } .book.color-theme-2 .book-body .page-wrapper .page-inner section.normal blockquote { border-color: #373b4e; } .book.color-theme-2 .book-body .page-wrapper .page-inner section.normal pre, .book.color-theme-2 .book-body .page-wrapper .page-inner section.normal code { color: #9dbed8; background: #2d3143; border-color: #2d3143; } .book.color-theme-2 .book-body .page-wrapper .page-inner section.normal .highlight { background-color: #282a39; } .book.color-theme-2 .book-body .page-wrapper .page-inner section.normal table th, .book.color-theme-2 .book-body .page-wrapper .page-inner section.normal table td { border-color: #3b3f54; } .book.color-theme-2 .book-body .page-wrapper .page-inner section.normal table tr { color: #b6c2d2; background-color: #2d3143; border-color: #3b3f54; } .book.color-theme-2 .book-body .page-wrapper .page-inner section.normal table tr:nth-child(2n) { background-color: #35394b; } .book.color-theme-1 .book-header { color: #afa790; background: transparent; } .book.color-theme-1 .book-header .btn { color: #afa790; } .book.color-theme-1 .book-header .btn:hover { color: #73553c; background: none; } .book.color-theme-1 .book-header h1 { color: #704214; } .book.color-theme-2 .book-header { color: #7e888b; background: transparent; } .book.color-theme-2 .book-header .btn { color: #3b3f54; } .book.color-theme-2 .book-header .btn:hover { color: #fffff5; background: none; } .book.color-theme-2 .book-header h1 { color: #bdcadb; } .book.color-theme-1 .book-body .navigation { color: #afa790; } .book.color-theme-1 .book-body .navigation:hover { color: #73553c; } .book.color-theme-2 .book-body .navigation { color: #383f52; } .book.color-theme-2 .book-body .navigation:hover { color: #fffff5; } /* * Theme 1 */ .book.color-theme-1 .book-summary { color: #afa790; background: #111111; border-right: 1px solid rgba(0, 0, 0, 0.07); } .book.color-theme-1 .book-summary .book-search { background: transparent; } .book.color-theme-1 .book-summary .book-search input, .book.color-theme-1 .book-summary .book-search input:focus { border: 1px solid transparent; } .book.color-theme-1 .book-summary ul.summary li.divider { background: #7e888b; box-shadow: none; } .book.color-theme-1 .book-summary ul.summary li i.fa-check { color: #33cc33; } .book.color-theme-1 .book-summary ul.summary li.done > a { color: #877f6a; } .book.color-theme-1 .book-summary ul.summary li a, .book.color-theme-1 .book-summary ul.summary li span { color: #877f6a; background: transparent; font-weight: normal; } .book.color-theme-1 .book-summary ul.summary li.active > a, .book.color-theme-1 .book-summary ul.summary li a:hover { color: #704214; background: transparent; font-weight: normal; } /* * Theme 2 */ .book.color-theme-2 .book-summary { color: #bcc1d2; background: #2d3143; border-right: none; } .book.color-theme-2 .book-summary .book-search { background: transparent; } .book.color-theme-2 .book-summary .book-search input, .book.color-theme-2 .book-summary .book-search input:focus { border: 1px solid transparent; } .book.color-theme-2 .book-summary ul.summary li.divider { background: #272a3a; box-shadow: none; } .book.color-theme-2 .book-summary ul.summary li i.fa-check { color: #33cc33; } .book.color-theme-2 .book-summary ul.summary li.done > a { color: #62687f; } .book.color-theme-2 .book-summary ul.summary li a, .book.color-theme-2 .book-summary ul.summary li span { color: #c1c6d7; background: transparent; font-weight: 600; } .book.color-theme-2 .book-summary ul.summary li.active > a, .book.color-theme-2 .book-summary ul.summary li a:hover { color: #f4f4f5; background: #252737; font-weight: 600; }"},{"title":"","date":"2018-02-01T07:21:14.260Z","updated":"2018-01-29T15:28:33.680Z","comments":true,"path":"esjava/gitbook/gitbook-plugin-highlight/website.css","permalink":"http://test.quanke.name/esjava/gitbook/gitbook-plugin-highlight/website.css","excerpt":"","text":".book .book-body .page-wrapper .page-inner section.normal pre, .book .book-body .page-wrapper .page-inner section.normal code { /* http://jmblog.github.com/color-themes-for-google-code-highlightjs */ /* Tomorrow Comment */ /* Tomorrow Red */ /* Tomorrow Orange */ /* Tomorrow Yellow */ /* Tomorrow Green */ /* Tomorrow Aqua */ /* Tomorrow Blue */ /* Tomorrow Purple */ } .book .book-body .page-wrapper .page-inner section.normal pre .hljs-comment, .book .book-body .page-wrapper .page-inner section.normal code .hljs-comment, .book .book-body .page-wrapper .page-inner section.normal pre .hljs-title, .book .book-body .page-wrapper .page-inner section.normal code .hljs-title { color: #8e908c; } .book .book-body .page-wrapper .page-inner section.normal pre .hljs-variable, .book .book-body .page-wrapper .page-inner section.normal code .hljs-variable, .book .book-body .page-wrapper .page-inner section.normal pre .hljs-attribute, .book .book-body .page-wrapper .page-inner section.normal code .hljs-attribute, .book .book-body .page-wrapper .page-inner section.normal pre .hljs-tag, .book .book-body .page-wrapper .page-inner section.normal code .hljs-tag, .book .book-body .page-wrapper .page-inner section.normal pre .hljs-regexp, .book .book-body .page-wrapper .page-inner section.normal code .hljs-regexp, .book .book-body .page-wrapper .page-inner section.normal pre .hljs-deletion, .book .book-body .page-wrapper .page-inner section.normal code .hljs-deletion, .book .book-body .page-wrapper .page-inner section.normal pre .ruby .hljs-constant, .book .book-body .page-wrapper .page-inner section.normal code .ruby .hljs-constant, .book .book-body .page-wrapper .page-inner section.normal pre .xml .hljs-tag .hljs-title, .book .book-body .page-wrapper .page-inner section.normal code .xml .hljs-tag .hljs-title, .book .book-body .page-wrapper .page-inner section.normal pre .xml .hljs-pi, .book .book-body .page-wrapper .page-inner section.normal code .xml .hljs-pi, .book .book-body .page-wrapper .page-inner section.normal pre .xml .hljs-doctype, .book .book-body .page-wrapper .page-inner section.normal code .xml .hljs-doctype, .book .book-body .page-wrapper .page-inner section.normal pre .html .hljs-doctype, .book .book-body .page-wrapper .page-inner section.normal code .html .hljs-doctype, .book .book-body .page-wrapper .page-inner section.normal pre .css .hljs-id, .book .book-body .page-wrapper .page-inner section.normal code .css .hljs-id, .book .book-body .page-wrapper .page-inner section.normal pre .css .hljs-class, .book .book-body .page-wrapper .page-inner section.normal code .css .hljs-class, .book .book-body .page-wrapper .page-inner section.normal pre .css .hljs-pseudo, .book .book-body .page-wrapper .page-inner section.normal code .css .hljs-pseudo { color: #c82829; } .book .book-body .page-wrapper .page-inner section.normal pre .hljs-number, .book .book-body .page-wrapper .page-inner section.normal code .hljs-number, .book .book-body .page-wrapper .page-inner section.normal pre .hljs-preprocessor, .book .book-body .page-wrapper .page-inner section.normal code .hljs-preprocessor, .book .book-body .page-wrapper .page-inner section.normal pre .hljs-pragma, .book .book-body .page-wrapper .page-inner section.normal code .hljs-pragma, .book .book-body .page-wrapper .page-inner section.normal pre .hljs-built_in, .book .book-body .page-wrapper .page-inner section.normal code .hljs-built_in, .book .book-body .page-wrapper .page-inner section.normal pre .hljs-literal, .book .book-body .page-wrapper .page-inner section.normal code .hljs-literal, .book .book-body .page-wrapper .page-inner section.normal pre .hljs-params, .book .book-body .page-wrapper .page-inner section.normal code .hljs-params, .book .book-body .page-wrapper .page-inner section.normal pre .hljs-constant, .book .book-body .page-wrapper .page-inner section.normal code .hljs-constant { color: #f5871f; } .book .book-body .page-wrapper .page-inner section.normal pre .ruby .hljs-class .hljs-title, .book .book-body .page-wrapper .page-inner section.normal code .ruby .hljs-class .hljs-title, .book .book-body .page-wrapper .page-inner section.normal pre .css .hljs-rules .hljs-attribute, .book .book-body .page-wrapper .page-inner section.normal code .css .hljs-rules .hljs-attribute { color: #eab700; } .book .book-body .page-wrapper .page-inner section.normal pre .hljs-string, .book .book-body .page-wrapper .page-inner section.normal code .hljs-string, .book .book-body .page-wrapper .page-inner section.normal pre .hljs-value, .book .book-body .page-wrapper .page-inner section.normal code .hljs-value, .book .book-body .page-wrapper .page-inner section.normal pre .hljs-inheritance, .book .book-body .page-wrapper .page-inner section.normal code .hljs-inheritance, .book .book-body .page-wrapper .page-inner section.normal pre .hljs-header, .book .book-body .page-wrapper .page-inner section.normal code .hljs-header, .book .book-body .page-wrapper .page-inner section.normal pre .hljs-addition, .book .book-body .page-wrapper .page-inner section.normal code .hljs-addition, .book .book-body .page-wrapper .page-inner section.normal pre .ruby .hljs-symbol, .book .book-body .page-wrapper .page-inner section.normal code .ruby .hljs-symbol, .book .book-body .page-wrapper .page-inner section.normal pre .xml .hljs-cdata, .book .book-body .page-wrapper .page-inner section.normal code .xml .hljs-cdata { color: #718c00; } .book .book-body .page-wrapper .page-inner section.normal pre .css .hljs-hexcolor, .book .book-body .page-wrapper .page-inner section.normal code .css .hljs-hexcolor { color: #3e999f; } .book .book-body .page-wrapper .page-inner section.normal pre .hljs-function, .book .book-body .page-wrapper .page-inner section.normal code .hljs-function, .book .book-body .page-wrapper .page-inner section.normal pre .python .hljs-decorator, .book .book-body .page-wrapper .page-inner section.normal code .python .hljs-decorator, .book .book-body .page-wrapper .page-inner section.normal pre .python .hljs-title, .book .book-body .page-wrapper .page-inner section.normal code .python .hljs-title, .book .book-body .page-wrapper .page-inner section.normal pre .ruby .hljs-function .hljs-title, .book .book-body .page-wrapper .page-inner section.normal code .ruby .hljs-function .hljs-title, .book .book-body .page-wrapper .page-inner section.normal pre .ruby .hljs-title .hljs-keyword, .book .book-body .page-wrapper .page-inner section.normal code .ruby .hljs-title .hljs-keyword, .book .book-body .page-wrapper .page-inner section.normal pre .perl .hljs-sub, .book .book-body .page-wrapper .page-inner section.normal code .perl .hljs-sub, .book .book-body .page-wrapper .page-inner section.normal pre .javascript .hljs-title, .book .book-body .page-wrapper .page-inner section.normal code .javascript .hljs-title, .book .book-body .page-wrapper .page-inner section.normal pre .coffeescript .hljs-title, .book .book-body .page-wrapper .page-inner section.normal code .coffeescript .hljs-title { color: #4271ae; } .book .book-body .page-wrapper .page-inner section.normal pre .hljs-keyword, .book .book-body .page-wrapper .page-inner section.normal code .hljs-keyword, .book .book-body .page-wrapper .page-inner section.normal pre .javascript .hljs-function, .book .book-body .page-wrapper .page-inner section.normal code .javascript .hljs-function { color: #8959a8; } .book .book-body .page-wrapper .page-inner section.normal pre .hljs, .book .book-body .page-wrapper .page-inner section.normal code .hljs { display: block; background: white; color: #4d4d4c; padding: 0.5em; } .book .book-body .page-wrapper .page-inner section.normal pre .coffeescript .javascript, .book .book-body .page-wrapper .page-inner section.normal code .coffeescript .javascript, .book .book-body .page-wrapper .page-inner section.normal pre .javascript .xml, .book .book-body .page-wrapper .page-inner section.normal code .javascript .xml, .book .book-body .page-wrapper .page-inner section.normal pre .tex .hljs-formula, .book .book-body .page-wrapper .page-inner section.normal code .tex .hljs-formula, .book .book-body .page-wrapper .page-inner section.normal pre .xml .javascript, .book .book-body .page-wrapper .page-inner section.normal code .xml .javascript, .book .book-body .page-wrapper .page-inner section.normal pre .xml .vbscript, .book .book-body .page-wrapper .page-inner section.normal code .xml .vbscript, .book .book-body .page-wrapper .page-inner section.normal pre .xml .css, .book .book-body .page-wrapper .page-inner section.normal code .xml .css, .book .book-body .page-wrapper .page-inner section.normal pre .xml .hljs-cdata, .book .book-body .page-wrapper .page-inner section.normal code .xml .hljs-cdata { opacity: 0.5; } .book.color-theme-1 .book-body .page-wrapper .page-inner section.normal pre, .book.color-theme-1 .book-body .page-wrapper .page-inner section.normal code { /* Orginal Style from ethanschoonover.com/solarized (c) Jeremy Hull */ /* Solarized Green */ /* Solarized Cyan */ /* Solarized Blue */ /* Solarized Yellow */ /* Solarized Orange */ /* Solarized Red */ /* Solarized Violet */ } .book.color-theme-1 .book-body .page-wrapper .page-inner section.normal pre .hljs, .book.color-theme-1 .book-body .page-wrapper .page-inner section.normal code .hljs { display: block; padding: 0.5em; background: #fdf6e3; color: #657b83; } .book.color-theme-1 .book-body .page-wrapper .page-inner section.normal pre .hljs-comment, .book.color-theme-1 .book-body .page-wrapper .page-inner section.normal code .hljs-comment, .book.color-theme-1 .book-body .page-wrapper .page-inner section.normal pre .hljs-template_comment, .book.color-theme-1 .book-body .page-wrapper .page-inner section.normal code .hljs-template_comment, .book.color-theme-1 .book-body .page-wrapper .page-inner section.normal pre .diff .hljs-header, .book.color-theme-1 .book-body .page-wrapper .page-inner section.normal code .diff .hljs-header, .book.color-theme-1 .book-body .page-wrapper .page-inner section.normal pre .hljs-doctype, .book.color-theme-1 .book-body .page-wrapper .page-inner section.normal code .hljs-doctype, .book.color-theme-1 .book-body .page-wrapper .page-inner section.normal pre .hljs-pi, .book.color-theme-1 .book-body .page-wrapper .page-inner section.normal code .hljs-pi, .book.color-theme-1 .book-body .page-wrapper .page-inner section.normal pre .lisp .hljs-string, .book.color-theme-1 .book-body .page-wrapper .page-inner section.normal code .lisp .hljs-string, .book.color-theme-1 .book-body .page-wrapper .page-inner section.normal pre .hljs-javadoc, .book.color-theme-1 .book-body .page-wrapper .page-inner section.normal code .hljs-javadoc { color: #93a1a1; } .book.color-theme-1 .book-body .page-wrapper .page-inner section.normal pre .hljs-keyword, .book.color-theme-1 .book-body .page-wrapper .page-inner section.normal code .hljs-keyword, .book.color-theme-1 .book-body .page-wrapper .page-inner section.normal pre .hljs-winutils, .book.color-theme-1 .book-body .page-wrapper .page-inner section.normal code .hljs-winutils, .book.color-theme-1 .book-body .page-wrapper .page-inner section.normal pre .method, .book.color-theme-1 .book-body .page-wrapper .page-inner section.normal code .method, .book.color-theme-1 .book-body .page-wrapper .page-inner section.normal pre .hljs-addition, .book.color-theme-1 .book-body .page-wrapper .page-inner section.normal code .hljs-addition, .book.color-theme-1 .book-body .page-wrapper .page-inner section.normal pre .css .hljs-tag, .book.color-theme-1 .book-body .page-wrapper .page-inner section.normal code .css .hljs-tag, .book.color-theme-1 .book-body .page-wrapper .page-inner section.normal pre .hljs-request, .book.color-theme-1 .book-body .page-wrapper .page-inner section.normal code .hljs-request, .book.color-theme-1 .book-body .page-wrapper .page-inner section.normal pre .hljs-status, .book.color-theme-1 .book-body .page-wrapper .page-inner section.normal code .hljs-status, .book.color-theme-1 .book-body .page-wrapper .page-inner section.normal pre .nginx .hljs-title, .book.color-theme-1 .book-body .page-wrapper .page-inner section.normal code .nginx .hljs-title { color: #859900; } .book.color-theme-1 .book-body .page-wrapper .page-inner section.normal pre .hljs-number, .book.color-theme-1 .book-body .page-wrapper .page-inner section.normal code .hljs-number, .book.color-theme-1 .book-body .page-wrapper .page-inner section.normal pre .hljs-command, .book.color-theme-1 .book-body .page-wrapper .page-inner section.normal code .hljs-command, .book.color-theme-1 .book-body .page-wrapper .page-inner section.normal pre .hljs-string, .book.color-theme-1 .book-body .page-wrapper .page-inner section.normal code .hljs-string, .book.color-theme-1 .book-body .page-wrapper .page-inner section.normal pre .hljs-tag .hljs-value, .book.color-theme-1 .book-body .page-wrapper .page-inner section.normal code .hljs-tag .hljs-value, .book.color-theme-1 .book-body .page-wrapper .page-inner section.normal pre .hljs-rules .hljs-value, .book.color-theme-1 .book-body .page-wrapper .page-inner section.normal code .hljs-rules .hljs-value, .book.color-theme-1 .book-body .page-wrapper .page-inner section.normal pre .hljs-phpdoc, .book.color-theme-1 .book-body .page-wrapper .page-inner section.normal code .hljs-phpdoc, .book.color-theme-1 .book-body .page-wrapper .page-inner section.normal pre .tex .hljs-formula, .book.color-theme-1 .book-body .page-wrapper .page-inner section.normal code .tex .hljs-formula, .book.color-theme-1 .book-body .page-wrapper .page-inner section.normal pre .hljs-regexp, .book.color-theme-1 .book-body .page-wrapper .page-inner section.normal code .hljs-regexp, .book.color-theme-1 .book-body .page-wrapper .page-inner section.normal pre .hljs-hexcolor, .book.color-theme-1 .book-body .page-wrapper .page-inner section.normal code .hljs-hexcolor, .book.color-theme-1 .book-body .page-wrapper .page-inner section.normal pre .hljs-link_url, .book.color-theme-1 .book-body .page-wrapper .page-inner section.normal code .hljs-link_url { color: #2aa198; } .book.color-theme-1 .book-body .page-wrapper .page-inner section.normal pre .hljs-title, .book.color-theme-1 .book-body .page-wrapper .page-inner section.normal code .hljs-title, .book.color-theme-1 .book-body .page-wrapper .page-inner section.normal pre .hljs-localvars, .book.color-theme-1 .book-body .page-wrapper .page-inner section.normal code .hljs-localvars, .book.color-theme-1 .book-body .page-wrapper .page-inner section.normal pre .hljs-chunk, .book.color-theme-1 .book-body .page-wrapper .page-inner section.normal code .hljs-chunk, .book.color-theme-1 .book-body .page-wrapper .page-inner section.normal pre .hljs-decorator, .book.color-theme-1 .book-body .page-wrapper .page-inner section.normal code .hljs-decorator, .book.color-theme-1 .book-body .page-wrapper .page-inner section.normal pre .hljs-built_in, .book.color-theme-1 .book-body .page-wrapper .page-inner section.normal code .hljs-built_in, .book.color-theme-1 .book-body .page-wrapper .page-inner section.normal pre .hljs-identifier, .book.color-theme-1 .book-body .page-wrapper .page-inner section.normal code .hljs-identifier, .book.color-theme-1 .book-body .page-wrapper .page-inner section.normal pre .vhdl .hljs-literal, .book.color-theme-1 .book-body .page-wrapper .page-inner section.normal code .vhdl .hljs-literal, .book.color-theme-1 .book-body .page-wrapper .page-inner section.normal pre .hljs-id, .book.color-theme-1 .book-body .page-wrapper .page-inner section.normal code .hljs-id, .book.color-theme-1 .book-body .page-wrapper .page-inner section.normal pre .css .hljs-function, .book.color-theme-1 .book-body .page-wrapper .page-inner section.normal code .css .hljs-function { color: #268bd2; } .book.color-theme-1 .book-body .page-wrapper .page-inner section.normal pre .hljs-attribute, .book.color-theme-1 .book-body .page-wrapper .page-inner section.normal code .hljs-attribute, .book.color-theme-1 .book-body .page-wrapper .page-inner section.normal pre .hljs-variable, .book.color-theme-1 .book-body .page-wrapper .page-inner section.normal code .hljs-variable, .book.color-theme-1 .book-body .page-wrapper .page-inner section.normal pre .lisp .hljs-body, .book.color-theme-1 .book-body .page-wrapper .page-inner section.normal code .lisp .hljs-body, .book.color-theme-1 .book-body .page-wrapper .page-inner section.normal pre .smalltalk .hljs-number, .book.color-theme-1 .book-body .page-wrapper .page-inner section.normal code .smalltalk .hljs-number, .book.color-theme-1 .book-body .page-wrapper .page-inner section.normal pre .hljs-constant, .book.color-theme-1 .book-body .page-wrapper .page-inner section.normal code .hljs-constant, .book.color-theme-1 .book-body .page-wrapper .page-inner section.normal pre .hljs-class .hljs-title, .book.color-theme-1 .book-body .page-wrapper .page-inner section.normal code .hljs-class .hljs-title, .book.color-theme-1 .book-body .page-wrapper .page-inner section.normal pre .hljs-parent, .book.color-theme-1 .book-body .page-wrapper .page-inner section.normal code .hljs-parent, .book.color-theme-1 .book-body .page-wrapper .page-inner section.normal pre .haskell .hljs-type, .book.color-theme-1 .book-body .page-wrapper .page-inner section.normal code .haskell .hljs-type, .book.color-theme-1 .book-body .page-wrapper .page-inner section.normal pre .hljs-link_reference, .book.color-theme-1 .book-body .page-wrapper .page-inner section.normal code .hljs-link_reference { color: #b58900; } .book.color-theme-1 .book-body .page-wrapper .page-inner section.normal pre .hljs-preprocessor, .book.color-theme-1 .book-body .page-wrapper .page-inner section.normal code .hljs-preprocessor, .book.color-theme-1 .book-body .page-wrapper .page-inner section.normal pre .hljs-preprocessor .hljs-keyword, .book.color-theme-1 .book-body .page-wrapper .page-inner section.normal code .hljs-preprocessor .hljs-keyword, .book.color-theme-1 .book-body .page-wrapper .page-inner section.normal pre .hljs-pragma, .book.color-theme-1 .book-body .page-wrapper .page-inner section.normal code .hljs-pragma, .book.color-theme-1 .book-body .page-wrapper .page-inner section.normal pre .hljs-shebang, .book.color-theme-1 .book-body .page-wrapper .page-inner section.normal code .hljs-shebang, .book.color-theme-1 .book-body .page-wrapper .page-inner section.normal pre .hljs-symbol, .book.color-theme-1 .book-body .page-wrapper .page-inner section.normal code .hljs-symbol, .book.color-theme-1 .book-body .page-wrapper .page-inner section.normal pre .hljs-symbol .hljs-string, .book.color-theme-1 .book-body .page-wrapper .page-inner section.normal code .hljs-symbol .hljs-string, .book.color-theme-1 .book-body .page-wrapper .page-inner section.normal pre .diff .hljs-change, .book.color-theme-1 .book-body .page-wrapper .page-inner section.normal code .diff .hljs-change, .book.color-theme-1 .book-body .page-wrapper .page-inner section.normal pre .hljs-special, .book.color-theme-1 .book-body .page-wrapper .page-inner section.normal code .hljs-special, .book.color-theme-1 .book-body .page-wrapper .page-inner section.normal pre .hljs-attr_selector, .book.color-theme-1 .book-body .page-wrapper .page-inner section.normal code .hljs-attr_selector, .book.color-theme-1 .book-body .page-wrapper .page-inner section.normal pre .hljs-subst, .book.color-theme-1 .book-body .page-wrapper .page-inner section.normal code .hljs-subst, .book.color-theme-1 .book-body .page-wrapper .page-inner section.normal pre .hljs-cdata, .book.color-theme-1 .book-body .page-wrapper .page-inner section.normal code .hljs-cdata, .book.color-theme-1 .book-body .page-wrapper .page-inner section.normal pre .clojure .hljs-title, .book.color-theme-1 .book-body .page-wrapper .page-inner section.normal code .clojure .hljs-title, .book.color-theme-1 .book-body .page-wrapper .page-inner section.normal pre .css .hljs-pseudo, .book.color-theme-1 .book-body .page-wrapper .page-inner section.normal code .css .hljs-pseudo, .book.color-theme-1 .book-body .page-wrapper .page-inner section.normal pre .hljs-header, .book.color-theme-1 .book-body .page-wrapper .page-inner section.normal code .hljs-header { color: #cb4b16; } .book.color-theme-1 .book-body .page-wrapper .page-inner section.normal pre .hljs-deletion, .book.color-theme-1 .book-body .page-wrapper .page-inner section.normal code .hljs-deletion, .book.color-theme-1 .book-body .page-wrapper .page-inner section.normal pre .hljs-important, .book.color-theme-1 .book-body .page-wrapper .page-inner section.normal code .hljs-important { color: #dc322f; } .book.color-theme-1 .book-body .page-wrapper .page-inner section.normal pre .hljs-link_label, .book.color-theme-1 .book-body .page-wrapper .page-inner section.normal code .hljs-link_label { color: #6c71c4; } .book.color-theme-1 .book-body .page-wrapper .page-inner section.normal pre .tex .hljs-formula, .book.color-theme-1 .book-body .page-wrapper .page-inner section.normal code .tex .hljs-formula { background: #eee8d5; } .book.color-theme-2 .book-body .page-wrapper .page-inner section.normal pre, .book.color-theme-2 .book-body .page-wrapper .page-inner section.normal code { /* Tomorrow Night Bright Theme */ /* Original theme - https://github.com/chriskempson/tomorrow-theme */ /* http://jmblog.github.com/color-themes-for-google-code-highlightjs */ /* Tomorrow Comment */ /* Tomorrow Red */ /* Tomorrow Orange */ /* Tomorrow Yellow */ /* Tomorrow Green */ /* Tomorrow Aqua */ /* Tomorrow Blue */ /* Tomorrow Purple */ } .book.color-theme-2 .book-body .page-wrapper .page-inner section.normal pre .hljs-comment, .book.color-theme-2 .book-body .page-wrapper .page-inner section.normal code .hljs-comment, .book.color-theme-2 .book-body .page-wrapper .page-inner section.normal pre .hljs-title, .book.color-theme-2 .book-body .page-wrapper .page-inner section.normal code .hljs-title { color: #969896; } .book.color-theme-2 .book-body .page-wrapper .page-inner section.normal pre .hljs-variable, .book.color-theme-2 .book-body .page-wrapper .page-inner section.normal code .hljs-variable, .book.color-theme-2 .book-body .page-wrapper .page-inner section.normal pre .hljs-attribute, .book.color-theme-2 .book-body .page-wrapper .page-inner section.normal code .hljs-attribute, .book.color-theme-2 .book-body .page-wrapper .page-inner section.normal pre .hljs-tag, .book.color-theme-2 .book-body .page-wrapper .page-inner section.normal code .hljs-tag, .book.color-theme-2 .book-body .page-wrapper .page-inner section.normal pre .hljs-regexp, .book.color-theme-2 .book-body .page-wrapper .page-inner section.normal code .hljs-regexp, .book.color-theme-2 .book-body .page-wrapper .page-inner section.normal pre .hljs-deletion, .book.color-theme-2 .book-body .page-wrapper .page-inner section.normal code .hljs-deletion, .book.color-theme-2 .book-body .page-wrapper .page-inner section.normal pre .ruby .hljs-constant, .book.color-theme-2 .book-body .page-wrapper .page-inner section.normal code .ruby .hljs-constant, .book.color-theme-2 .book-body .page-wrapper .page-inner section.normal pre .xml .hljs-tag .hljs-title, .book.color-theme-2 .book-body .page-wrapper .page-inner section.normal code .xml .hljs-tag .hljs-title, .book.color-theme-2 .book-body .page-wrapper .page-inner section.normal pre .xml .hljs-pi, .book.color-theme-2 .book-body .page-wrapper .page-inner section.normal code .xml .hljs-pi, .book.color-theme-2 .book-body .page-wrapper .page-inner section.normal pre .xml .hljs-doctype, .book.color-theme-2 .book-body .page-wrapper .page-inner section.normal code .xml .hljs-doctype, .book.color-theme-2 .book-body .page-wrapper .page-inner section.normal pre .html .hljs-doctype, .book.color-theme-2 .book-body .page-wrapper .page-inner section.normal code .html .hljs-doctype, .book.color-theme-2 .book-body .page-wrapper .page-inner section.normal pre .css .hljs-id, .book.color-theme-2 .book-body .page-wrapper .page-inner section.normal code .css .hljs-id, .book.color-theme-2 .book-body .page-wrapper .page-inner section.normal pre .css .hljs-class, .book.color-theme-2 .book-body .page-wrapper .page-inner section.normal code .css .hljs-class, .book.color-theme-2 .book-body .page-wrapper .page-inner section.normal pre .css .hljs-pseudo, .book.color-theme-2 .book-body .page-wrapper .page-inner section.normal code .css .hljs-pseudo { color: #d54e53; } .book.color-theme-2 .book-body .page-wrapper .page-inner section.normal pre .hljs-number, .book.color-theme-2 .book-body .page-wrapper .page-inner section.normal code .hljs-number, .book.color-theme-2 .book-body .page-wrapper .page-inner section.normal pre .hljs-preprocessor, .book.color-theme-2 .book-body .page-wrapper .page-inner section.normal code .hljs-preprocessor, .book.color-theme-2 .book-body .page-wrapper .page-inner section.normal pre .hljs-pragma, .book.color-theme-2 .book-body .page-wrapper .page-inner section.normal code .hljs-pragma, .book.color-theme-2 .book-body .page-wrapper .page-inner section.normal pre .hljs-built_in, .book.color-theme-2 .book-body .page-wrapper .page-inner section.normal code .hljs-built_in, .book.color-theme-2 .book-body .page-wrapper .page-inner section.normal pre .hljs-literal, .book.color-theme-2 .book-body .page-wrapper .page-inner section.normal code .hljs-literal, .book.color-theme-2 .book-body .page-wrapper .page-inner section.normal pre .hljs-params, .book.color-theme-2 .book-body .page-wrapper .page-inner section.normal code .hljs-params, .book.color-theme-2 .book-body .page-wrapper .page-inner section.normal pre .hljs-constant, .book.color-theme-2 .book-body .page-wrapper .page-inner section.normal code .hljs-constant { color: #e78c45; } .book.color-theme-2 .book-body .page-wrapper .page-inner section.normal pre .ruby .hljs-class .hljs-title, .book.color-theme-2 .book-body .page-wrapper .page-inner section.normal code .ruby .hljs-class .hljs-title, .book.color-theme-2 .book-body .page-wrapper .page-inner section.normal pre .css .hljs-rules .hljs-attribute, .book.color-theme-2 .book-body .page-wrapper .page-inner section.normal code .css .hljs-rules .hljs-attribute { color: #e7c547; } .book.color-theme-2 .book-body .page-wrapper .page-inner section.normal pre .hljs-string, .book.color-theme-2 .book-body .page-wrapper .page-inner section.normal code .hljs-string, .book.color-theme-2 .book-body .page-wrapper .page-inner section.normal pre .hljs-value, .book.color-theme-2 .book-body .page-wrapper .page-inner section.normal code .hljs-value, .book.color-theme-2 .book-body .page-wrapper .page-inner section.normal pre .hljs-inheritance, .book.color-theme-2 .book-body .page-wrapper .page-inner section.normal code .hljs-inheritance, .book.color-theme-2 .book-body .page-wrapper .page-inner section.normal pre .hljs-header, .book.color-theme-2 .book-body .page-wrapper .page-inner section.normal code .hljs-header, .book.color-theme-2 .book-body .page-wrapper .page-inner section.normal pre .hljs-addition, .book.color-theme-2 .book-body .page-wrapper .page-inner section.normal code .hljs-addition, .book.color-theme-2 .book-body .page-wrapper .page-inner section.normal pre .ruby .hljs-symbol, .book.color-theme-2 .book-body .page-wrapper .page-inner section.normal code .ruby .hljs-symbol, .book.color-theme-2 .book-body .page-wrapper .page-inner section.normal pre .xml .hljs-cdata, .book.color-theme-2 .book-body .page-wrapper .page-inner section.normal code .xml .hljs-cdata { color: #b9ca4a; } .book.color-theme-2 .book-body .page-wrapper .page-inner section.normal pre .css .hljs-hexcolor, .book.color-theme-2 .book-body .page-wrapper .page-inner section.normal code .css .hljs-hexcolor { color: #70c0b1; } .book.color-theme-2 .book-body .page-wrapper .page-inner section.normal pre .hljs-function, .book.color-theme-2 .book-body .page-wrapper .page-inner section.normal code .hljs-function, .book.color-theme-2 .book-body .page-wrapper .page-inner section.normal pre .python .hljs-decorator, .book.color-theme-2 .book-body .page-wrapper .page-inner section.normal code .python .hljs-decorator, .book.color-theme-2 .book-body .page-wrapper .page-inner section.normal pre .python .hljs-title, .book.color-theme-2 .book-body .page-wrapper .page-inner section.normal code .python .hljs-title, .book.color-theme-2 .book-body .page-wrapper .page-inner section.normal pre .ruby .hljs-function .hljs-title, .book.color-theme-2 .book-body .page-wrapper .page-inner section.normal code .ruby .hljs-function .hljs-title, .book.color-theme-2 .book-body .page-wrapper .page-inner section.normal pre .ruby .hljs-title .hljs-keyword, .book.color-theme-2 .book-body .page-wrapper .page-inner section.normal code .ruby .hljs-title .hljs-keyword, .book.color-theme-2 .book-body .page-wrapper .page-inner section.normal pre .perl .hljs-sub, .book.color-theme-2 .book-body .page-wrapper .page-inner section.normal code .perl .hljs-sub, .book.color-theme-2 .book-body .page-wrapper .page-inner section.normal pre .javascript .hljs-title, .book.color-theme-2 .book-body .page-wrapper .page-inner section.normal code .javascript .hljs-title, .book.color-theme-2 .book-body .page-wrapper .page-inner section.normal pre .coffeescript .hljs-title, .book.color-theme-2 .book-body .page-wrapper .page-inner section.normal code .coffeescript .hljs-title { color: #7aa6da; } .book.color-theme-2 .book-body .page-wrapper .page-inner section.normal pre .hljs-keyword, .book.color-theme-2 .book-body .page-wrapper .page-inner section.normal code .hljs-keyword, .book.color-theme-2 .book-body .page-wrapper .page-inner section.normal pre .javascript .hljs-function, .book.color-theme-2 .book-body .page-wrapper .page-inner section.normal code .javascript .hljs-function { color: #c397d8; } .book.color-theme-2 .book-body .page-wrapper .page-inner section.normal pre .hljs, .book.color-theme-2 .book-body .page-wrapper .page-inner section.normal code .hljs { display: block; background: black; color: #eaeaea; padding: 0.5em; } .book.color-theme-2 .book-body .page-wrapper .page-inner section.normal pre .coffeescript .javascript, .book.color-theme-2 .book-body .page-wrapper .page-inner section.normal code .coffeescript .javascript, .book.color-theme-2 .book-body .page-wrapper .page-inner section.normal pre .javascript .xml, .book.color-theme-2 .book-body .page-wrapper .page-inner section.normal code .javascript .xml, .book.color-theme-2 .book-body .page-wrapper .page-inner section.normal pre .tex .hljs-formula, .book.color-theme-2 .book-body .page-wrapper .page-inner section.normal code .tex .hljs-formula, .book.color-theme-2 .book-body .page-wrapper .page-inner section.normal pre .xml .javascript, .book.color-theme-2 .book-body .page-wrapper .page-inner section.normal code .xml .javascript, .book.color-theme-2 .book-body .page-wrapper .page-inner section.normal pre .xml .vbscript, .book.color-theme-2 .book-body .page-wrapper .page-inner section.normal code .xml .vbscript, .book.color-theme-2 .book-body .page-wrapper .page-inner section.normal pre .xml .css, .book.color-theme-2 .book-body .page-wrapper .page-inner section.normal code .xml .css, .book.color-theme-2 .book-body .page-wrapper .page-inner section.normal pre .xml .hljs-cdata, .book.color-theme-2 .book-body .page-wrapper .page-inner section.normal code .xml .hljs-cdata { opacity: 0.5; }"},{"title":"","date":"2018-02-01T07:21:14.259Z","updated":"2018-01-29T15:28:33.683Z","comments":true,"path":"esjava/gitbook/gitbook-plugin-highlight/ebook.css","permalink":"http://test.quanke.name/esjava/gitbook/gitbook-plugin-highlight/ebook.css","excerpt":"","text":"pre, code { /* http://jmblog.github.io/color-themes-for-highlightjs */ /* Tomorrow Comment */ /* Tomorrow Red */ /* Tomorrow Orange */ /* Tomorrow Yellow */ /* Tomorrow Green */ /* Tomorrow Aqua */ /* Tomorrow Blue */ /* Tomorrow Purple */ } pre .hljs-comment, code .hljs-comment, pre .hljs-title, code .hljs-title { color: #8e908c; } pre .hljs-variable, code .hljs-variable, pre .hljs-attribute, code .hljs-attribute, pre .hljs-tag, code .hljs-tag, pre .hljs-regexp, code .hljs-regexp, pre .hljs-deletion, code .hljs-deletion, pre .ruby .hljs-constant, code .ruby .hljs-constant, pre .xml .hljs-tag .hljs-title, code .xml .hljs-tag .hljs-title, pre .xml .hljs-pi, code .xml .hljs-pi, pre .xml .hljs-doctype, code .xml .hljs-doctype, pre .html .hljs-doctype, code .html .hljs-doctype, pre .css .hljs-id, code .css .hljs-id, pre .css .hljs-class, code .css .hljs-class, pre .css .hljs-pseudo, code .css .hljs-pseudo { color: #c82829; } pre .hljs-number, code .hljs-number, pre .hljs-preprocessor, code .hljs-preprocessor, pre .hljs-pragma, code .hljs-pragma, pre .hljs-built_in, code .hljs-built_in, pre .hljs-literal, code .hljs-literal, pre .hljs-params, code .hljs-params, pre .hljs-constant, code .hljs-constant { color: #f5871f; } pre .ruby .hljs-class .hljs-title, code .ruby .hljs-class .hljs-title, pre .css .hljs-rules .hljs-attribute, code .css .hljs-rules .hljs-attribute { color: #eab700; } pre .hljs-string, code .hljs-string, pre .hljs-value, code .hljs-value, pre .hljs-inheritance, code .hljs-inheritance, pre .hljs-header, code .hljs-header, pre .hljs-addition, code .hljs-addition, pre .ruby .hljs-symbol, code .ruby .hljs-symbol, pre .xml .hljs-cdata, code .xml .hljs-cdata { color: #718c00; } pre .css .hljs-hexcolor, code .css .hljs-hexcolor { color: #3e999f; } pre .hljs-function, code .hljs-function, pre .python .hljs-decorator, code .python .hljs-decorator, pre .python .hljs-title, code .python .hljs-title, pre .ruby .hljs-function .hljs-title, code .ruby .hljs-function .hljs-title, pre .ruby .hljs-title .hljs-keyword, code .ruby .hljs-title .hljs-keyword, pre .perl .hljs-sub, code .perl .hljs-sub, pre .javascript .hljs-title, code .javascript .hljs-title, pre .coffeescript .hljs-title, code .coffeescript .hljs-title { color: #4271ae; } pre .hljs-keyword, code .hljs-keyword, pre .javascript .hljs-function, code .javascript .hljs-function { color: #8959a8; } pre .hljs, code .hljs { display: block; background: white; color: #4d4d4c; padding: 0.5em; } pre .coffeescript .javascript, code .coffeescript .javascript, pre .javascript .xml, code .javascript .xml, pre .tex .hljs-formula, code .tex .hljs-formula, pre .xml .javascript, code .xml .javascript, pre .xml .vbscript, code .xml .vbscript, pre .xml .css, code .xml .css, pre .xml .hljs-cdata, code .xml .hljs-cdata { opacity: 0.5; }"},{"title":"","date":"2018-02-01T07:21:14.262Z","updated":"2018-01-29T15:28:33.666Z","comments":true,"path":"esjava/gitbook/gitbook-plugin-lunr/lunr.min.js","permalink":"http://test.quanke.name/esjava/gitbook/gitbook-plugin-lunr/lunr.min.js","excerpt":"","text":"/** * lunr - http://lunrjs.com - A bit like Solr, but much smaller and not as bright - 0.5.12 * Copyright (C) 2015 Oliver Nightingale * MIT Licensed * @license */ !function(){var t=function(e){var n=new t.Index;return n.pipeline.add(t.trimmer,t.stopWordFilter,t.stemmer),e&&e.call(n,n),n};t.version=\"0.5.12\",t.utils={},t.utils.warn=function(t){return function(e){t.console&&console.warn&&console.warn(e)}}(this),t.EventEmitter=function(){this.events={}},t.EventEmitter.prototype.addListener=function(){var t=Array.prototype.slice.call(arguments),e=t.pop(),n=t;if(\"function\"!=typeof e)throw new TypeError(\"last argument must be a function\");n.forEach(function(t){this.hasHandler(t)||(this.events[t]=[]),this.events[t].push(e)},this)},t.EventEmitter.prototype.removeListener=function(t,e){if(this.hasHandler(t)){var n=this.events[t].indexOf(e);this.events[t].splice(n,1),this.events[t].length||delete this.events[t]}},t.EventEmitter.prototype.emit=function(t){if(this.hasHandler(t)){var e=Array.prototype.slice.call(arguments,1);this.events[t].forEach(function(t){t.apply(void 0,e)})}},t.EventEmitter.prototype.hasHandler=function(t){return t in this.events},t.tokenizer=function(t){return arguments.length&&null!=t&&void 0!=t?Array.isArray(t)?t.map(function(t){return t.toLowerCase()}):t.toString().trim().toLowerCase().split(/[\\s\\-]+/):[]},t.Pipeline=function(){this._stack=[]},t.Pipeline.registeredFunctions={},t.Pipeline.registerFunction=function(e,n){n in this.registeredFunctions&&t.utils.warn(\"Overwriting existing registered function: \"+n),e.label=n,t.Pipeline.registeredFunctions[e.label]=e},t.Pipeline.warnIfFunctionNotRegistered=function(e){var n=e.label&&e.label in this.registeredFunctions;n||t.utils.warn(\"Function is not registered with pipeline. This may cause problems when serialising the index.\\n\",e)},t.Pipeline.load=function(e){var n=new t.Pipeline;return e.forEach(function(e){var i=t.Pipeline.registeredFunctions[e];if(!i)throw new Error(\"Cannot load un-registered function: \"+e);n.add(i)}),n},t.Pipeline.prototype.add=function(){var e=Array.prototype.slice.call(arguments);e.forEach(function(e){t.Pipeline.warnIfFunctionNotRegistered(e),this._stack.push(e)},this)},t.Pipeline.prototype.after=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._stack.indexOf(e);if(-1==i)throw new Error(\"Cannot find existingFn\");i+=1,this._stack.splice(i,0,n)},t.Pipeline.prototype.before=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._stack.indexOf(e);if(-1==i)throw new Error(\"Cannot find existingFn\");this._stack.splice(i,0,n)},t.Pipeline.prototype.remove=function(t){var e=this._stack.indexOf(t);-1!=e&&this._stack.splice(e,1)},t.Pipeline.prototype.run=function(t){for(var e=[],n=t.length,i=this._stack.length,o=0;n>o;o++){for(var r=t[o],s=0;i>s&&(r=this._stack[s](r,o,t),void 0!==r);s++);void 0!==r&&e.push(r)}return e},t.Pipeline.prototype.reset=function(){this._stack=[]},t.Pipeline.prototype.toJSON=function(){return this._stack.map(function(e){return t.Pipeline.warnIfFunctionNotRegistered(e),e.label})},t.Vector=function(){this._magnitude=null,this.list=void 0,this.length=0},t.Vector.Node=function(t,e,n){this.idx=t,this.val=e,this.next=n},t.Vector.prototype.insert=function(e,n){this._magnitude=void 0;var i=this.list;if(!i)return this.list=new t.Vector.Node(e,n,i),this.length++;if(en.idx?n=n.next:(i+=e.val*n.val,e=e.next,n=n.next);return i},t.Vector.prototype.similarity=function(t){return this.dot(t)/(this.magnitude()*t.magnitude())},t.SortedSet=function(){this.length=0,this.elements=[]},t.SortedSet.load=function(t){var e=new this;return e.elements=t,e.length=t.length,e},t.SortedSet.prototype.add=function(){var t,e;for(t=0;t1;){if(r===t)return o;t>r&&(e=o),r>t&&(n=o),i=n-e,o=e+Math.floor(i/2),r=this.elements[o]}return r===t?o:-1},t.SortedSet.prototype.locationFor=function(t){for(var e=0,n=this.elements.length,i=n-e,o=e+Math.floor(i/2),r=this.elements[o];i>1;)t>r&&(e=o),r>t&&(n=o),i=n-e,o=e+Math.floor(i/2),r=this.elements[o];return r>t?o:t>r?o+1:void 0},t.SortedSet.prototype.intersect=function(e){for(var n=new t.SortedSet,i=0,o=0,r=this.length,s=e.length,a=this.elements,h=e.elements;;){if(i>r-1||o>s-1)break;a[i]!==h[o]?a[i]h[o]&&o++:(n.add(a[i]),i++,o++)}return n},t.SortedSet.prototype.clone=function(){var e=new t.SortedSet;return e.elements=this.toArray(),e.length=e.elements.length,e},t.SortedSet.prototype.union=function(t){var e,n,i;return this.length>=t.length?(e=this,n=t):(e=t,n=this),i=e.clone(),i.add.apply(i,n.toArray()),i},t.SortedSet.prototype.toJSON=function(){return this.toArray()},t.Index=function(){this._fields=[],this._ref=\"id\",this.pipeline=new t.Pipeline,this.documentStore=new t.Store,this.tokenStore=new t.TokenStore,this.corpusTokens=new t.SortedSet,this.eventEmitter=new t.EventEmitter,this._idfCache={},this.on(\"add\",\"remove\",\"update\",function(){this._idfCache={}}.bind(this))},t.Index.prototype.on=function(){var t=Array.prototype.slice.call(arguments);return this.eventEmitter.addListener.apply(this.eventEmitter,t)},t.Index.prototype.off=function(t,e){return this.eventEmitter.removeListener(t,e)},t.Index.load=function(e){e.version!==t.version&&t.utils.warn(\"version mismatch: current \"+t.version+\" importing \"+e.version);var n=new this;return n._fields=e.fields,n._ref=e.ref,n.documentStore=t.Store.load(e.documentStore),n.tokenStore=t.TokenStore.load(e.tokenStore),n.corpusTokens=t.SortedSet.load(e.corpusTokens),n.pipeline=t.Pipeline.load(e.pipeline),n},t.Index.prototype.field=function(t,e){var e=e||{},n={name:t,boost:e.boost||1};return this._fields.push(n),this},t.Index.prototype.ref=function(t){return this._ref=t,this},t.Index.prototype.add=function(e,n){var i={},o=new t.SortedSet,r=e[this._ref],n=void 0===n?!0:n;this._fields.forEach(function(n){var r=this.pipeline.run(t.tokenizer(e[n.name]));i[n.name]=r,t.SortedSet.prototype.add.apply(o,r)},this),this.documentStore.set(r,o),t.SortedSet.prototype.add.apply(this.corpusTokens,o.toArray());for(var s=0;s0&&(i=1+Math.log(this.documentStore.length/n)),this._idfCache[e]=i},t.Index.prototype.search=function(e){var n=this.pipeline.run(t.tokenizer(e)),i=new t.Vector,o=[],r=this._fields.reduce(function(t,e){return t+e.boost},0),s=n.some(function(t){return this.tokenStore.has(t)},this);if(!s)return[];n.forEach(function(e,n,s){var a=1/s.length*this._fields.length*r,h=this,l=this.tokenStore.expand(e).reduce(function(n,o){var r=h.corpusTokens.indexOf(o),s=h.idf(o),l=1,u=new t.SortedSet;if(o!==e){var c=Math.max(3,o.length-e.length);l=1/Math.log(c)}return r>-1&&i.insert(r,a*s*l),Object.keys(h.tokenStore.get(o)).forEach(function(t){u.add(t)}),n.union(u)},new t.SortedSet);o.push(l)},this);var a=o.reduce(function(t,e){return t.intersect(e)});return a.map(function(t){return{ref:t,score:i.similarity(this.documentVector(t))}},this).sort(function(t,e){return e.score-t.score})},t.Index.prototype.documentVector=function(e){for(var n=this.documentStore.get(e),i=n.length,o=new t.Vector,r=0;i>r;r++){var s=n.elements[r],a=this.tokenStore.get(s)[e].tf,h=this.idf(s);o.insert(this.corpusTokens.indexOf(s),a*h)}return o},t.Index.prototype.toJSON=function(){return{version:t.version,fields:this._fields,ref:this._ref,documentStore:this.documentStore.toJSON(),tokenStore:this.tokenStore.toJSON(),corpusTokens:this.corpusTokens.toJSON(),pipeline:this.pipeline.toJSON()}},t.Index.prototype.use=function(t){var e=Array.prototype.slice.call(arguments,1);e.unshift(this),t.apply(this,e)},t.Store=function(){this.store={},this.length=0},t.Store.load=function(e){var n=new this;return n.length=e.length,n.store=Object.keys(e.store).reduce(function(n,i){return n[i]=t.SortedSet.load(e.store[i]),n},{}),n},t.Store.prototype.set=function(t,e){this.has(t)||this.length++,this.store[t]=e},t.Store.prototype.get=function(t){return this.store[t]},t.Store.prototype.has=function(t){return t in this.store},t.Store.prototype.remove=function(t){this.has(t)&&(delete this.store[t],this.length--)},t.Store.prototype.toJSON=function(){return{store:this.store,length:this.length}},t.stemmer=function(){var t={ational:\"ate\",tional:\"tion\",enci:\"ence\",anci:\"ance\",izer:\"ize\",bli:\"ble\",alli:\"al\",entli:\"ent\",eli:\"e\",ousli:\"ous\",ization:\"ize\",ation:\"ate\",ator:\"ate\",alism:\"al\",iveness:\"ive\",fulness:\"ful\",ousness:\"ous\",aliti:\"al\",iviti:\"ive\",biliti:\"ble\",logi:\"log\"},e={icate:\"ic\",ative:\"\",alize:\"al\",iciti:\"ic\",ical:\"ic\",ful:\"\",ness:\"\"},n=\"[^aeiou]\",i=\"[aeiouy]\",o=n+\"[^aeiouy]*\",r=i+\"[aeiou]*\",s=\"^(\"+o+\")?\"+r+o,a=\"^(\"+o+\")?\"+r+o+\"(\"+r+\")?$\",h=\"^(\"+o+\")?\"+r+o+r+o,l=\"^(\"+o+\")?\"+i,u=new RegExp(s),c=new RegExp(h),f=new RegExp(a),d=new RegExp(l),p=/^(.+?)(ss|i)es$/,m=/^(.+?)([^s])s$/,v=/^(.+?)eed$/,y=/^(.+?)(ed|ing)$/,g=/.$/,S=/(at|bl|iz)$/,w=new RegExp(\"([^aeiouylsz])\\\\1$\"),x=new RegExp(\"^\"+o+i+\"[^aeiouwxy]$\"),k=/^(.+?[^aeiou])y$/,b=/^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/,E=/^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/,_=/^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/,F=/^(.+?)(s|t)(ion)$/,O=/^(.+?)e$/,P=/ll$/,N=new RegExp(\"^\"+o+i+\"[^aeiouwxy]$\"),T=function(n){var i,o,r,s,a,h,l;if(n.length"},{"title":"","date":"2018-02-01T07:21:14.263Z","updated":"2018-01-29T15:28:33.664Z","comments":true,"path":"esjava/gitbook/gitbook-plugin-lunr/search-lunr.js","permalink":"http://test.quanke.name/esjava/gitbook/gitbook-plugin-lunr/search-lunr.js","excerpt":"","text":"require([ 'gitbook', 'jquery' ], function(gitbook, $) { // Define global search engine function LunrSearchEngine() { this.index = null; this.store = {}; this.name = 'LunrSearchEngine'; } // Initialize lunr by fetching the search index LunrSearchEngine.prototype.init = function() { var that = this; var d = $.Deferred(); $.getJSON(gitbook.state.basePath+'/search_index.json') .then(function(data) { // eslint-disable-next-line no-undef that.index = lunr.Index.load(data.index); that.store = data.store; d.resolve(); }); return d.promise(); }; // Search for a term and return results LunrSearchEngine.prototype.search = function(q, offset, length) { var that = this; var results = []; if (this.index) { results = $.map(this.index.search(q), function(result) { var doc = that.store[result.ref]; return { title: doc.title, url: doc.url, body: doc.summary || doc.body }; }); } return $.Deferred().resolve({ query: q, results: results.slice(0, length), count: results.length }).promise(); }; // Set gitbook research gitbook.events.bind('start', function(e, config) { var engine = gitbook.search.getEngine(); if (!engine) { gitbook.search.setEngine(LunrSearchEngine, config); } }); });"},{"title":"","date":"2018-02-01T07:21:14.266Z","updated":"2018-01-29T15:28:33.672Z","comments":true,"path":"esjava/gitbook/gitbook-plugin-search/search-engine.js","permalink":"http://test.quanke.name/esjava/gitbook/gitbook-plugin-search/search-engine.js","excerpt":"","text":"require([ 'gitbook', 'jquery' ], function(gitbook, $) { // Global search objects var engine = null; var initialized = false; // Set a new search engine function setEngine(Engine, config) { initialized = false; engine = new Engine(config); init(config); } // Initialize search engine with config function init(config) { if (!engine) throw new Error('No engine set for research. Set an engine using gitbook.research.setEngine(Engine).'); return engine.init(config) .then(function() { initialized = true; gitbook.events.trigger('search.ready'); }); } // Launch search for query q function query(q, offset, length) { if (!initialized) throw new Error('Search has not been initialized'); return engine.search(q, offset, length); } // Get stats about search function getEngine() { return engine? engine.name : null; } function isInitialized() { return initialized; } // Initialize gitbook.search gitbook.search = { setEngine: setEngine, getEngine: getEngine, query: query, isInitialized: isInitialized }; });"},{"title":"","date":"2018-02-01T07:21:14.265Z","updated":"2018-01-29T15:28:33.674Z","comments":true,"path":"esjava/gitbook/gitbook-plugin-search/lunr.min.js","permalink":"http://test.quanke.name/esjava/gitbook/gitbook-plugin-search/lunr.min.js","excerpt":"","text":"/** * lunr - http://lunrjs.com - A bit like Solr, but much smaller and not as bright - 0.5.12 * Copyright (C) 2015 Oliver Nightingale * MIT Licensed * @license */ !function(){var t=function(e){var n=new t.Index;return n.pipeline.add(t.trimmer,t.stopWordFilter,t.stemmer),e&&e.call(n,n),n};t.version=\"0.5.12\",t.utils={},t.utils.warn=function(t){return function(e){t.console&&console.warn&&console.warn(e)}}(this),t.EventEmitter=function(){this.events={}},t.EventEmitter.prototype.addListener=function(){var t=Array.prototype.slice.call(arguments),e=t.pop(),n=t;if(\"function\"!=typeof e)throw new TypeError(\"last argument must be a function\");n.forEach(function(t){this.hasHandler(t)||(this.events[t]=[]),this.events[t].push(e)},this)},t.EventEmitter.prototype.removeListener=function(t,e){if(this.hasHandler(t)){var n=this.events[t].indexOf(e);this.events[t].splice(n,1),this.events[t].length||delete this.events[t]}},t.EventEmitter.prototype.emit=function(t){if(this.hasHandler(t)){var e=Array.prototype.slice.call(arguments,1);this.events[t].forEach(function(t){t.apply(void 0,e)})}},t.EventEmitter.prototype.hasHandler=function(t){return t in this.events},t.tokenizer=function(t){return arguments.length&&null!=t&&void 0!=t?Array.isArray(t)?t.map(function(t){return t.toLowerCase()}):t.toString().trim().toLowerCase().split(/[\\s\\-]+/):[]},t.Pipeline=function(){this._stack=[]},t.Pipeline.registeredFunctions={},t.Pipeline.registerFunction=function(e,n){n in this.registeredFunctions&&t.utils.warn(\"Overwriting existing registered function: \"+n),e.label=n,t.Pipeline.registeredFunctions[e.label]=e},t.Pipeline.warnIfFunctionNotRegistered=function(e){var n=e.label&&e.label in this.registeredFunctions;n||t.utils.warn(\"Function is not registered with pipeline. This may cause problems when serialising the index.\\n\",e)},t.Pipeline.load=function(e){var n=new t.Pipeline;return e.forEach(function(e){var i=t.Pipeline.registeredFunctions[e];if(!i)throw new Error(\"Cannot load un-registered function: \"+e);n.add(i)}),n},t.Pipeline.prototype.add=function(){var e=Array.prototype.slice.call(arguments);e.forEach(function(e){t.Pipeline.warnIfFunctionNotRegistered(e),this._stack.push(e)},this)},t.Pipeline.prototype.after=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._stack.indexOf(e);if(-1==i)throw new Error(\"Cannot find existingFn\");i+=1,this._stack.splice(i,0,n)},t.Pipeline.prototype.before=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._stack.indexOf(e);if(-1==i)throw new Error(\"Cannot find existingFn\");this._stack.splice(i,0,n)},t.Pipeline.prototype.remove=function(t){var e=this._stack.indexOf(t);-1!=e&&this._stack.splice(e,1)},t.Pipeline.prototype.run=function(t){for(var e=[],n=t.length,i=this._stack.length,o=0;n>o;o++){for(var r=t[o],s=0;i>s&&(r=this._stack[s](r,o,t),void 0!==r);s++);void 0!==r&&e.push(r)}return e},t.Pipeline.prototype.reset=function(){this._stack=[]},t.Pipeline.prototype.toJSON=function(){return this._stack.map(function(e){return t.Pipeline.warnIfFunctionNotRegistered(e),e.label})},t.Vector=function(){this._magnitude=null,this.list=void 0,this.length=0},t.Vector.Node=function(t,e,n){this.idx=t,this.val=e,this.next=n},t.Vector.prototype.insert=function(e,n){this._magnitude=void 0;var i=this.list;if(!i)return this.list=new t.Vector.Node(e,n,i),this.length++;if(en.idx?n=n.next:(i+=e.val*n.val,e=e.next,n=n.next);return i},t.Vector.prototype.similarity=function(t){return this.dot(t)/(this.magnitude()*t.magnitude())},t.SortedSet=function(){this.length=0,this.elements=[]},t.SortedSet.load=function(t){var e=new this;return e.elements=t,e.length=t.length,e},t.SortedSet.prototype.add=function(){var t,e;for(t=0;t1;){if(r===t)return o;t>r&&(e=o),r>t&&(n=o),i=n-e,o=e+Math.floor(i/2),r=this.elements[o]}return r===t?o:-1},t.SortedSet.prototype.locationFor=function(t){for(var e=0,n=this.elements.length,i=n-e,o=e+Math.floor(i/2),r=this.elements[o];i>1;)t>r&&(e=o),r>t&&(n=o),i=n-e,o=e+Math.floor(i/2),r=this.elements[o];return r>t?o:t>r?o+1:void 0},t.SortedSet.prototype.intersect=function(e){for(var n=new t.SortedSet,i=0,o=0,r=this.length,s=e.length,a=this.elements,h=e.elements;;){if(i>r-1||o>s-1)break;a[i]!==h[o]?a[i]h[o]&&o++:(n.add(a[i]),i++,o++)}return n},t.SortedSet.prototype.clone=function(){var e=new t.SortedSet;return e.elements=this.toArray(),e.length=e.elements.length,e},t.SortedSet.prototype.union=function(t){var e,n,i;return this.length>=t.length?(e=this,n=t):(e=t,n=this),i=e.clone(),i.add.apply(i,n.toArray()),i},t.SortedSet.prototype.toJSON=function(){return this.toArray()},t.Index=function(){this._fields=[],this._ref=\"id\",this.pipeline=new t.Pipeline,this.documentStore=new t.Store,this.tokenStore=new t.TokenStore,this.corpusTokens=new t.SortedSet,this.eventEmitter=new t.EventEmitter,this._idfCache={},this.on(\"add\",\"remove\",\"update\",function(){this._idfCache={}}.bind(this))},t.Index.prototype.on=function(){var t=Array.prototype.slice.call(arguments);return this.eventEmitter.addListener.apply(this.eventEmitter,t)},t.Index.prototype.off=function(t,e){return this.eventEmitter.removeListener(t,e)},t.Index.load=function(e){e.version!==t.version&&t.utils.warn(\"version mismatch: current \"+t.version+\" importing \"+e.version);var n=new this;return n._fields=e.fields,n._ref=e.ref,n.documentStore=t.Store.load(e.documentStore),n.tokenStore=t.TokenStore.load(e.tokenStore),n.corpusTokens=t.SortedSet.load(e.corpusTokens),n.pipeline=t.Pipeline.load(e.pipeline),n},t.Index.prototype.field=function(t,e){var e=e||{},n={name:t,boost:e.boost||1};return this._fields.push(n),this},t.Index.prototype.ref=function(t){return this._ref=t,this},t.Index.prototype.add=function(e,n){var i={},o=new t.SortedSet,r=e[this._ref],n=void 0===n?!0:n;this._fields.forEach(function(n){var r=this.pipeline.run(t.tokenizer(e[n.name]));i[n.name]=r,t.SortedSet.prototype.add.apply(o,r)},this),this.documentStore.set(r,o),t.SortedSet.prototype.add.apply(this.corpusTokens,o.toArray());for(var s=0;s0&&(i=1+Math.log(this.documentStore.length/n)),this._idfCache[e]=i},t.Index.prototype.search=function(e){var n=this.pipeline.run(t.tokenizer(e)),i=new t.Vector,o=[],r=this._fields.reduce(function(t,e){return t+e.boost},0),s=n.some(function(t){return this.tokenStore.has(t)},this);if(!s)return[];n.forEach(function(e,n,s){var a=1/s.length*this._fields.length*r,h=this,l=this.tokenStore.expand(e).reduce(function(n,o){var r=h.corpusTokens.indexOf(o),s=h.idf(o),l=1,u=new t.SortedSet;if(o!==e){var c=Math.max(3,o.length-e.length);l=1/Math.log(c)}return r>-1&&i.insert(r,a*s*l),Object.keys(h.tokenStore.get(o)).forEach(function(t){u.add(t)}),n.union(u)},new t.SortedSet);o.push(l)},this);var a=o.reduce(function(t,e){return t.intersect(e)});return a.map(function(t){return{ref:t,score:i.similarity(this.documentVector(t))}},this).sort(function(t,e){return e.score-t.score})},t.Index.prototype.documentVector=function(e){for(var n=this.documentStore.get(e),i=n.length,o=new t.Vector,r=0;i>r;r++){var s=n.elements[r],a=this.tokenStore.get(s)[e].tf,h=this.idf(s);o.insert(this.corpusTokens.indexOf(s),a*h)}return o},t.Index.prototype.toJSON=function(){return{version:t.version,fields:this._fields,ref:this._ref,documentStore:this.documentStore.toJSON(),tokenStore:this.tokenStore.toJSON(),corpusTokens:this.corpusTokens.toJSON(),pipeline:this.pipeline.toJSON()}},t.Index.prototype.use=function(t){var e=Array.prototype.slice.call(arguments,1);e.unshift(this),t.apply(this,e)},t.Store=function(){this.store={},this.length=0},t.Store.load=function(e){var n=new this;return n.length=e.length,n.store=Object.keys(e.store).reduce(function(n,i){return n[i]=t.SortedSet.load(e.store[i]),n},{}),n},t.Store.prototype.set=function(t,e){this.has(t)||this.length++,this.store[t]=e},t.Store.prototype.get=function(t){return this.store[t]},t.Store.prototype.has=function(t){return t in this.store},t.Store.prototype.remove=function(t){this.has(t)&&(delete this.store[t],this.length--)},t.Store.prototype.toJSON=function(){return{store:this.store,length:this.length}},t.stemmer=function(){var t={ational:\"ate\",tional:\"tion\",enci:\"ence\",anci:\"ance\",izer:\"ize\",bli:\"ble\",alli:\"al\",entli:\"ent\",eli:\"e\",ousli:\"ous\",ization:\"ize\",ation:\"ate\",ator:\"ate\",alism:\"al\",iveness:\"ive\",fulness:\"ful\",ousness:\"ous\",aliti:\"al\",iviti:\"ive\",biliti:\"ble\",logi:\"log\"},e={icate:\"ic\",ative:\"\",alize:\"al\",iciti:\"ic\",ical:\"ic\",ful:\"\",ness:\"\"},n=\"[^aeiou]\",i=\"[aeiouy]\",o=n+\"[^aeiouy]*\",r=i+\"[aeiou]*\",s=\"^(\"+o+\")?\"+r+o,a=\"^(\"+o+\")?\"+r+o+\"(\"+r+\")?$\",h=\"^(\"+o+\")?\"+r+o+r+o,l=\"^(\"+o+\")?\"+i,u=new RegExp(s),c=new RegExp(h),f=new RegExp(a),d=new RegExp(l),p=/^(.+?)(ss|i)es$/,m=/^(.+?)([^s])s$/,v=/^(.+?)eed$/,y=/^(.+?)(ed|ing)$/,g=/.$/,S=/(at|bl|iz)$/,w=new RegExp(\"([^aeiouylsz])\\\\1$\"),x=new RegExp(\"^\"+o+i+\"[^aeiouwxy]$\"),k=/^(.+?[^aeiou])y$/,b=/^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/,E=/^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/,_=/^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/,F=/^(.+?)(s|t)(ion)$/,O=/^(.+?)e$/,P=/ll$/,N=new RegExp(\"^\"+o+i+\"[^aeiouwxy]$\"),T=function(n){var i,o,r,s,a,h,l;if(n.length"},{"title":"","date":"2018-02-01T07:21:14.266Z","updated":"2018-01-29T15:28:33.671Z","comments":true,"path":"esjava/gitbook/gitbook-plugin-search/search.css","permalink":"http://test.quanke.name/esjava/gitbook/gitbook-plugin-search/search.css","excerpt":"","text":"/* This CSS only styled the search results section, not the search input It defines the basic interraction to hide content when displaying results, etc */ #book-search-results .search-results { display: none; } #book-search-results .search-results ul.search-results-list { list-style-type: none; padding-left: 0; } #book-search-results .search-results ul.search-results-list li { margin-bottom: 1.5rem; padding-bottom: 0.5rem; /* Highlight results */ } #book-search-results .search-results ul.search-results-list li p em { background-color: rgba(255, 220, 0, 0.4); font-style: normal; } #book-search-results .search-results .no-results { display: none; } #book-search-results.open .search-results { display: block; } #book-search-results.open .search-noresults { display: none; } #book-search-results.no-results .search-results .has-results { display: none; } #book-search-results.no-results .search-results .no-results { display: block; }"},{"title":"","date":"2018-02-01T07:21:14.268Z","updated":"2018-01-29T15:28:33.669Z","comments":true,"path":"esjava/gitbook/gitbook-plugin-search/search.js","permalink":"http://test.quanke.name/esjava/gitbook/gitbook-plugin-search/search.js","excerpt":"","text":"require([ 'gitbook', 'jquery' ], function(gitbook, $) { var MAX_RESULTS = 15; var MAX_DESCRIPTION_SIZE = 500; var usePushState = (typeof history.pushState !== 'undefined'); // DOM Elements var $body = $('body'); var $bookSearchResults; var $searchInput; var $searchList; var $searchTitle; var $searchResultsCount; var $searchQuery; // Throttle search function throttle(fn, wait) { var timeout; return function() { var ctx = this, args = arguments; if (!timeout) { timeout = setTimeout(function() { timeout = null; fn.apply(ctx, args); }, wait); } }; } function displayResults(res) { $bookSearchResults.addClass('open'); var noResults = res.count == 0; $bookSearchResults.toggleClass('no-results', noResults); // Clear old results $searchList.empty(); // Display title for research $searchResultsCount.text(res.count); $searchQuery.text(res.query); // Create an element for each result res.results.forEach(function(res) { var $li = $('', { 'class': 'search-results-item' }); var $title = $(''); var $link = $('', { 'href': gitbook.state.basePath + '/' + res.url, 'text': res.title }); var content = res.body.trim(); if (content.length > MAX_DESCRIPTION_SIZE) { content = content.slice(0, MAX_DESCRIPTION_SIZE).trim()+'...'; } var $content = $('').html(content); $link.appendTo($title); $title.appendTo($li); $content.appendTo($li); $li.appendTo($searchList); }); } function launchSearch(q) { // Add class for loading $body.addClass('with-search'); $body.addClass('search-loading'); // Launch search query throttle(gitbook.search.query(q, 0, MAX_RESULTS) .then(function(results) { displayResults(results); }) .always(function() { $body.removeClass('search-loading'); }), 1000); } function closeSearch() { $body.removeClass('with-search'); $bookSearchResults.removeClass('open'); } function launchSearchFromQueryString() { var q = getParameterByName('q'); if (q && q.length > 0) { // Update search input $searchInput.val(q); // Launch search launchSearch(q); } } function bindSearch() { // Bind DOM $searchInput = $('#book-search-input input'); $bookSearchResults = $('#book-search-results'); $searchList = $bookSearchResults.find('.search-results-list'); $searchTitle = $bookSearchResults.find('.search-results-title'); $searchResultsCount = $searchTitle.find('.search-results-count'); $searchQuery = $searchTitle.find('.search-query'); // Launch query based on input content function handleUpdate() { var q = $searchInput.val(); if (q.length == 0) { closeSearch(); } else { launchSearch(q); } } // Detect true content change in search input // Workaround for IE < 9 var propertyChangeUnbound = false; $searchInput.on('propertychange', function(e) { if (e.originalEvent.propertyName == 'value') { handleUpdate(); } }); // HTML5 (IE9 & others) $searchInput.on('input', function(e) { // Unbind propertychange event for IE9+ if (!propertyChangeUnbound) { $(this).unbind('propertychange'); propertyChangeUnbound = true; } handleUpdate(); }); // Push to history on blur $searchInput.on('blur', function(e) { // Update history state if (usePushState) { var uri = updateQueryString('q', $(this).val()); history.pushState({ path: uri }, null, uri); } }); } gitbook.events.on('page.change', function() { bindSearch(); closeSearch(); // Launch search based on query parameter if (gitbook.search.isInitialized()) { launchSearchFromQueryString(); } }); gitbook.events.on('search.ready', function() { bindSearch(); // Launch search from query param at start launchSearchFromQueryString(); }); function getParameterByName(name) { var url = window.location.href; name = name.replace(/[\\[\\]]/g, '\\\\$&'); var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)', 'i'), results = regex.exec(url); if (!results) return null; if (!results[2]) return ''; return decodeURIComponent(results[2].replace(/\\+/g, ' ')); } function updateQueryString(key, value) { value = encodeURIComponent(value); var url = window.location.href; var re = new RegExp('([?&])' + key + '=.*?(&|#|$)(.*)', 'gi'), hash; if (re.test(url)) { if (typeof value !== 'undefined' && value !== null) return url.replace(re, '$1' + key + '=' + value + '$2$3'); else { hash = url.split('#'); url = hash[0].replace(re, '$1$3').replace(/(&|\\?)$/, ''); if (typeof hash[1] !== 'undefined' && hash[1] !== null) url += '#' + hash[1]; return url; } } else { if (typeof value !== 'undefined' && value !== null) { var separator = url.indexOf('?') !== -1 ? '&' : '?'; hash = url.split('#'); url = hash[0] + separator + key + '=' + value; if (typeof hash[1] !== 'undefined' && hash[1] !== null) url += '#' + hash[1]; return url; } else return url; } } });"},{"title":"","date":"2018-02-01T07:21:14.270Z","updated":"2018-01-29T15:28:33.658Z","comments":true,"path":"esjava/gitbook/gitbook-plugin-sharing/buttons.js","permalink":"http://test.quanke.name/esjava/gitbook/gitbook-plugin-sharing/buttons.js","excerpt":"","text":"require(['gitbook', 'jquery'], function(gitbook, $) { var SITES = { 'facebook': { 'label': 'Facebook', 'icon': 'fa fa-facebook', 'onClick': function(e) { e.preventDefault(); window.open('http://www.facebook.com/sharer/sharer.php?s=100&p[url]='+encodeURIComponent(location.href)); } }, 'twitter': { 'label': 'Twitter', 'icon': 'fa fa-twitter', 'onClick': function(e) { e.preventDefault(); window.open('http://twitter.com/home?status='+encodeURIComponent(document.title+' '+location.href)); } }, 'google': { 'label': 'Google+', 'icon': 'fa fa-google-plus', 'onClick': function(e) { e.preventDefault(); window.open('https://plus.google.com/share?url='+encodeURIComponent(location.href)); } }, 'weibo': { 'label': 'Weibo', 'icon': 'fa fa-weibo', 'onClick': function(e) { e.preventDefault(); window.open('http://service.weibo.com/share/share.php?content=utf-8&url='+encodeURIComponent(location.href)+'&title='+encodeURIComponent(document.title)); } }, 'instapaper': { 'label': 'Instapaper', 'icon': 'fa fa-instapaper', 'onClick': function(e) { e.preventDefault(); window.open('http://www.instapaper.com/text?u='+encodeURIComponent(location.href)); } }, 'vk': { 'label': 'VK', 'icon': 'fa fa-vk', 'onClick': function(e) { e.preventDefault(); window.open('http://vkontakte.ru/share.php?url='+encodeURIComponent(location.href)); } } }; gitbook.events.bind('start', function(e, config) { var opts = config.sharing; // Create dropdown menu var menu = $.map(opts.all, function(id) { var site = SITES[id]; return { text: site.label, onClick: site.onClick }; }); // Create main button with dropdown if (menu.length > 0) { gitbook.toolbar.createButton({ icon: 'fa fa-share-alt', label: 'Share', position: 'right', dropdown: [menu] }); } // Direct actions to share $.each(SITES, function(sideId, site) { if (!opts[sideId]) return; gitbook.toolbar.createButton({ icon: site.icon, label: site.text, position: 'right', onClick: site.onClick }); }); }); });"},{"title":"","date":"2018-02-01T07:21:14.321Z","updated":"2018-01-29T15:28:36.825Z","comments":true,"path":"esjava/search_index.json","permalink":"http://test.quanke.name/esjava/search_index.json","excerpt":"","text":"{\"index\":{\"version\":\"0.5.12\",\"fields\":[{\"name\":\"title\",\"boost\":10},{\"name\":\"keywords\",\"boost\":15},{\"name\":\"body\",\"boost\":1}],\"ref\":\"url\",\"documentStore\":{\"store\":{\"./\":[\"5.0.1\",\"aggreg\",\"aggregations）\",\"aggregation）\",\"apachecn（apache中文网\",\"api\",\"api)\",\"api之termqueri\",\"api操作\",\"elast\",\"elasticsearch\",\"elasticsearch性能调优\",\"fendo\",\"github地址：https://github.com/quanke/elasticsearch\",\"introduct\",\"java\",\"percentil\",\"rank\",\"下载地址：https://www.gitbook.com/book/quanke/elasticsearch\",\"之\",\"全科\",\"参考\",\"官方文档\",\"手册\",\"更多请关注我的微信公众号：\",\"本书由\",\"滚动搜索(scroll\",\"类目\",\"编辑整理辛苦，还望大神们点一下star\",\"编辑：http://quanke.nam\",\"翻译，并且整理成电子书，支持pdf,epub,mobi格式，方便大家下载阅读。\",\"详解2（metric\",\"详解3（bucket\",\"阅读地址：https://es.quanke.nam\",\"，抚平我虚荣的心\"],\"dependency.html\":[\"5.6.3\",\"api包已经上传到\",\"central\",\"depend\",\"elasticsearch\",\"java\",\"maven\",\"org.elasticsearch.cli\",\"repositori\",\"transport\",\"在pom.xml文件中增加：\",\"安装\",\"版本号选择自己合适的。\"],\"client.html\":[\"client\"],\"client/transport-client.html\":[\"\\\"myclustername\\\").build();\",\".addtransportaddress(new\",\".build();\",\".put(\\\"client.transport.sniff\\\",\",\".put(\\\"cluster.name\\\",\",\"//\",\"//add\",\"//ping一个节点的响应时间\",\"//sample/p\",\"//此步骤添加ip，至少一个，其实一个就够了，因为添加了自动嗅探配置\",\"//此步骤添加ip，至少一个，如果设置了\\\"client.transport.sniff\\\"=\",\"//自动嗅探整个集群的状态，把集群中其他es节点的ip添加到本地的客户端列表中\",\"//设置\",\"//设置es实例的名称\",\"9300))\",\"9300));\",\"=\",\"address\",\"client\",\"client...\",\"client.addtransportaddress(new\",\"client.close();\",\"client.transport.ignore_cluster_nam\",\"client.transport.nodes_sampler_interv\",\"client.transport.ping_timeout\",\"client，有两种形式，一个是transportclient，一个是nodeclient。两个的区别为：\",\"clustername)\",\"esport));\",\"esset\",\"inetsockettransportaddress(inetaddress.getbyname(\\\"host1\\\"),\",\"inetsockettransportaddress(inetaddress.getbyname(\\\"host2\\\"),\",\"inetsockettransportaddress(inetaddress.getbyname(ip),\",\"new\",\"nodeclient顾名思义，是作为es集群的一个节点，它是es中的一环，其他的节点对它是感知的，不像transportclient那样，es集群对它一无所知。nodeclient通信的性能会更好，但是因为是es的一环，所以它出问题，也会给es集群带来问题。nodeclient可以设置不作为数据节点，在elasticsearch.yml中设置，这样就不会在此节点上分配数据。\",\"prebuilttransportclient(essettings);//初始化client较老版本发生了变化，此方法有几个重载方法，初始化插件等。\",\"prebuilttransportclient(settings);\",\"prebuilttransportclient(settings.empty)\",\"set\",\"settings.builder()\",\"shutdown\",\"someth\",\"startup\",\"transport\",\"transportcli\",\"transportclient作为一个外部访问者，通过http去请求es的集群，对于集群而言，它是一个外部因素。\",\"true\",\"true)\",\"true).build();\",\"一个就够了，因为添加了自动嗅探配置\",\"不设置集群名称\",\"关闭client\",\"其他配置\",\"增加自动嗅探配置\",\"如果用es的节点，大家仁者见仁智者见智，各按所需。\",\"实例\",\"对于e\",\"节点的时间间隔，默认是5\",\"设置集群名称\",\"默认5秒\",\"，忽略连接节点集群名验证\"],\"client/xpack-transport-client.html\":[\"\\\"xxx\\\")\",\"\\\"xxx:xxx\\\")\",\"(unknownhostexcept\",\"...\",\".addtransportaddress(new\",\".put(\\\"client.transport.sniff\\\",\",\".put(\\\"xpack.security.transport.ssl.enabled\\\",\",\".put(\\\"xpack.security.user\\\",\",\"5.6.3\",\"9300))\",\"9300));\",\"=\",\"boot\",\"catch\",\"client\",\"dayu\",\"e)\",\"e.printstacktrace();\",\"elasticsearch\",\"fals\",\"false)\",\"https://artifacts.elastic.co/maven\",\"inetsockettransportaddress(inetaddress.getbyname(\\\"xxx.xxx.xxx.xxx\\\"),\",\"new\",\"org.elasticsearch.cli\",\"pack\",\"prebuiltxpacktransportclient(settings)\",\"releas\",\"set\",\"settings.builder().put(\\\"cluster.name\\\",\",\"spring\",\"starter\",\"transport\",\"tri\",\"true\",\"true).build();\",\"x\",\"xpack\",\"xpacktransportcli\",\"{\",\"}\",\"一定要修改默认仓库地址为https://artifacts.elastic.co/maven\",\"使用maven管理项目，把下面代码增加到pom.xml;\",\"如果\",\"实例\",\"开源项目\",\"插件，需要prebuiltxpacktransportclient实例才能访问\",\"更多请浏览\",\"服务安装了\",\"，因为这个库没有上传到maven中央仓库\"],\"document-apis.html\":[\"api\",\"document\"],\"document-apis/index-api.html\":[\"\\\"\\\\\\\"message\\\\\\\":\\\\\\\"hel\",\"\\\"\\\\\\\"message\\\\\\\":\\\\\\\"tri\",\"\\\"\\\\\\\"postdate\\\\\\\":\\\\\\\"2013\",\"\\\"\\\\\\\"user\\\\\\\":\\\\\\\"fendo\\\\\\\",\\\"\",\"\\\"\\\\\\\"user\\\\\\\":\\\\\\\"kimchy\\\\\\\",\\\"\",\"\\\"ccse\\\")\",\"\\\"fendodata\\\").setsource(builder).get();\",\"\\\"fendodate\\\")\",\"\\\"mi\",\"\\\"thi\",\"\\\"{\\\"\",\"\\\"}\\\";\",\"(gener\",\"(if\",\"*\",\"*/\",\"+\",\".addtransportaddress(new\",\".endobject();\",\".field(\\\"message\\\",\",\".field(\\\"postdate\\\",\",\".field(\\\"user\\\",\",\".get();\",\".setsource(json)\",\".startobject()\",\"/**\",\"//\",\"//创建client\",\"//设置集群名称\",\"01\",\"1)\",\"30\\\");\",\"30\\\\\\\",\\\"\",\"9300));\",\"=\",\"@befor\",\"@test\",\"@throw\",\"_id\",\"_index\",\"_type\",\"_version\",\"api\",\"application\\\").build();//\",\"builder\",\"byte[]\",\"class\",\"client\",\"client.prepareindex(\\\"fendo\\\",\",\"client;\",\"com.fasterxml.jackson.core.jsonprocessingexception;\",\"com.fasterxml.jackson.databind.*;\",\"com.fasterxml.jackson.databind.objectmapper;\",\"creat\",\"createindex\",\"createjackson()\",\"createjson(){\",\"createlist(){\",\"createxcontentbuilder()\",\"csdn.setauthor(\\\"fendo\\\");\",\"csdn.setcontent(\\\"这是java书籍\\\");\",\"csdn.setdate(new\",\"csdn.settag(\\\"c\\\");\",\"csdn.settitile(\\\"编程\\\");\",\"csdn.setview(\\\"100\\\");\",\"csdn=new\",\"csdnblog\",\"csdnblog();\",\"current\",\"date())\",\"date());\",\"date().tostring());\",\"document\",\"document,\",\"elasticsearch\\\")\",\"elasticsearch\\\");\",\"elasticsearch\\\\\\\"\\\"\",\"elasticsearch已经使用了jackson，可以直接使用它把javabean转为json.\",\"elasticsearch提供了一个内置的帮助类xcontentbuilder来产生json文档\",\"except\",\"exception{\",\"first\",\"gener\",\"get:\",\"getclient()\",\"hashmap();\",\"id\",\"import\",\"index\",\"indexrespons\",\"inetsockettransportaddress(inetaddress.getbyname(\\\"127.0.0.1\\\"),\",\"instanc\",\"ioexcept\",\"ioexception{\",\"it'\",\"java.io.ioexception;\",\"java.net.inetaddress;\",\"java.net.unknownhostexception;\",\"java.util.date;\",\"java.util.hashmap;\",\"java.util.map;\",\"json\",\"json.put(\\\"message\\\",\\\"tri\",\"json.put(\\\"postdate\\\",\\\"2013\",\"json.put(\\\"postdate\\\",new\",\"json.put(\\\"user\\\",\\\"kimchy\\\");\",\"long\",\"map\",\"mapper\",\"mapper.writevalueasbytes(csdn);\",\"mapper.writevalueasbytes(yourbeaninstance);\",\"map方式\",\"map是key:value数据类型，可以代表json结构.\",\"name\",\"new\",\"not)\",\"objectmapp\",\"objectmapper();\",\"once,\",\"org.elasticsearch.action.index.indexresponse;\",\"org.elasticsearch.client.transport.transportclient;\",\"org.elasticsearch.common.settings.settings;\",\"org.elasticsearch.common.transport.inetsockettransportaddress;\",\"org.elasticsearch.common.xcontent.xcontentbuilder;\",\"org.elasticsearch.common.xcontent.xcontentfactory;\",\"org.elasticsearch.transport.client.prebuilttransportclient;\",\"org.junit.before;\",\"org.junit.test;\",\"out\",\"prebuilttransportclient(settings)\",\"privat\",\"public\",\"respons\",\"response.getid();\",\"response.getindex();\",\"response.gettype();\",\"response.getversion();\",\"response.status();\",\"reststatu\",\"reus\",\"set\",\"settings.builder().put(\\\"cluster.name\\\",\",\"statement.\",\"statu\",\"store\",\"string\",\"system.out.println(\\\"创建成功!\\\");\",\"system.out.println(response.getresult());\",\"throw\",\"time\",\"transportcli\",\"type\",\"version\",\"void\",\"word\\\\\\\"\\\"\",\"xcontentbuild\",\"xcontentbuilder帮助类方式\",\"xcontentfactory.jsonbuilder()\",\"{\",\"}\",\"为我们自动生成一个。\",\"你还可以通过startarray(string)和endarray()方法添加数组。.field()方法可以接受多种对象类型。你可以给它传递数字、日期、甚至其他xcontentbuilder对象。\",\"使用elasticsearch\",\"使用jackson序列化\",\"使用map方式，会自动转换成与之等价的json\",\"使用内置的帮助类\",\"使用第三方库来序列化beans，如jackson\",\"使用集合\",\"允许我们存储一个json格式的文档，使数据可以被搜索。文档通过index、type、id唯一确定。我们可以自己提供一个id，或者也使用index\",\"实例\",\"帮助类\",\"序列化方式\",\"手动方式\",\"手动方式，使用原生的byte[]或者str\",\"手动生成json\",\"数据格式\",\"综合实例\",\"这里有几种不同的方式来产生json格式的文档(document)：\",\"集群名\"],\"document-apis/get-api.html\":[\"\\\"1\\\")\",\"\\\"1\\\").get();\",\"\\\"tweet\\\",\",\".get();\",\".setoperationthreaded(false)\",\"=\",\"api\",\"api可以通过id查看文档：\",\"client.prepareget(\\\"twitter\\\",\",\"fals\",\"getrespons\",\"operationthread\",\"respons\",\"rest\",\"true\",\"下面的例子是operationthread\",\"文档\",\"是在不同的线程里执行此次操作\",\"更多请查看\",\"设置为\",\"配置线程\",\"：\"],\"document-apis/delete-api.html\":[\"\\\"1\\\")\",\"\\\"1\\\").get();\",\"\\\"tweet\\\",\",\".get();\",\".setoperationthreaded(false)\",\"=\",\"api\",\"client.preparedelete(\\\"twitter\\\",\",\"client.prepareget(\\\"twitter\\\",\",\"delet\",\"deleterespons\",\"fals\",\"getrespons\",\"operationthread\",\"respons\",\"true\",\"下面的例子是operationthread\",\"文档\",\"是在不同的线程里执行此次操作\",\"更多请查看\",\"根据id删除：\",\"设置为\",\"配置线程\",\"：\"],\"document-apis/delete-by-query-api.html\":[\"\\\"male\\\"))\",\".execute(new\",\".filter(querybuilders.matchquery(\\\"gender\\\",\",\".get();\",\".source(\\\"persons\\\")\",\"//\",\"//index(索引名)\",\"//删除文档的数量\",\"//回调监听\",\"//执行\",\"//查询\",\"//查询条件\",\"=\",\"@overrid\",\"actionlistener()\",\"api\",\"bulkbyscrollrespons\",\"delet\",\"deletebyqueryaction.instance.newrequestbuilder(client)\",\"e)\",\"except\",\"handl\",\"long\",\"onfailure(except\",\"onresponse(bulkbyscrollrespons\",\"public\",\"queri\",\"respons\",\"response)\",\"response.getdeleted();\",\"void\",\"{\",\"}\",\"});\",\"如果需要执行的时间比较长，可以使用异步的方式处理,结果在回调里面获取\",\"通过查询条件删除\"],\"document-apis/update-api.html\":[\"\\\"1\\\")\",\"\\\"doc\\\",\",\"\\\"gender\\\":\",\"\\\"joe\",\"\\\"male\\\"\",\"\\\"male\\\")\",\"\\\"name\\\"\",\"\\\"type\\\",\",\",scriptservice.scripttype.inline,\",\".doc(jsonbuilder()\",\".endobject())\",\".endobject());\",\".field(\\\"gender\\\",\",\".field(\\\"name\\\",\",\".get();\",\".script(new\",\".setdoc(jsonbuilder()\",\".setscript(new\",\".source(jsonbuilder()\",\".startobject()\",\".upsert(indexrequest);\",\"//合并到现有文档\",\"//如果不存在此文档\",\":\",\"=\",\"\\\\\\\"male\\\\\\\"\\\"\",\"\\\\\\\"male\\\\\\\"\\\"));\",\"`indexrequest`\",\"api\",\"client.prepareupdate(\\\"ttl\\\",\",\"client.update(updaterequest).get();\",\"dalton\\\",\",\"document\",\"index/type/1\",\"indexrequest\",\"indexrequest(\\\"index\\\",\",\"merg\",\"new\",\"null))//脚本可以是本地文件存储的，如果使用文件存储的脚本，需要设置\",\"null,\",\"prepareupdate()\",\"script\",\"script(\\\"ctx._source.gend\",\"scriptservice.scripttype.fil\",\"smith\\\")\",\"smith\\\",\",\"updat\",\"updaterequest\",\"updaterequest(\\\"index\\\",\",\"updaterequest(\\\"ttl\\\",\",\"updaterequest();\",\"updaterequest,通过client发送；\",\"updaterequest.doc(jsonbuilder()\",\"updaterequest.id(\\\"1\\\");\",\"updaterequest.index(\\\"index\\\");\",\"updaterequest.type(\\\"type\\\");\",\"upsert\",\"{\",\"}\",\"使用\",\"使用updaterequest\",\"使用脚本更新文档\",\"创建\",\"合并文档\",\"如果\",\"如果不存在，会插入新的文档：\",\"存在，类似下面的文档：\",\"方法\",\"方法；\",\"更新插入,如果存在文档就更新，如果不存在就插入\",\"更新索引\",\"有两种方式更新索引：\",\"，就增加\"],\"document-apis/multi-get-api.html\":[\"\\\"1\\\")\",\"\\\"2\\\",\",\"\\\"3\\\",\",\"\\\"4\\\")\",\"\\\"foo\\\")\",\"\\\"tweet\\\",\",\"\\\"type\\\",\",\"(multigetitemrespons\",\"(response.isexists())\",\".add(\\\"another\\\",\",\".add(\\\"twitter\\\",\",\".get();\",\"//_sourc\",\"//一个id的方式\",\"//判断是否存在\",\"//可以从另外一个索引获取\",\"//多个id的方式\",\"//迭代返回值\",\":\",\"=\",\"api\",\"client.preparemultiget()\",\"getrespons\",\"itemrespons\",\"itemresponse.getresponse();\",\"json\",\"multi\",\"multigetitemrespons\",\"multigetitemresponses)\",\"multigetrespons\",\"respons\",\"response.getsourceasstring();\",\"string\",\"{\",\"}\",\"一次获取多个文档\",\"字段\",\"文档\",\"更多请浏览rest\"],\"document-apis/bulk-api.html\":[\"\\\"1\\\")\",\"\\\"2\\\")\",\"\\\"anoth\",\"\\\"kimchy\\\")\",\"\\\"tri\",\"\\\"tweet\\\",\",\"(bulkresponse.hasfailures())\",\")\",\");\",\".endobject()\",\".field(\\\"message\\\",\",\".field(\\\"postdate\\\",\",\".field(\\\"user\\\",\",\".setsource(jsonbuilder()\",\".startobject()\",\"//\",\"=\",\"api\",\"api可以批量插入：\",\"build\",\"bulk\",\"bulkrequest\",\"bulkrequest.add(client.prepareindex(\\\"twitter\\\",\",\"bulkrequest.get();\",\"bulkrequestbuild\",\"bulkrespons\",\"client#prepare,\",\"client.preparebulk();\",\"date())\",\"directli\",\"each\",\"elasticsearch\\\")\",\"failur\",\"import\",\"index/delet\",\"item\",\"iter\",\"new\",\"org.elasticsearch.common.xcontent.xcontentfactory.*;\",\"out\",\"post\\\")\",\"process\",\"request\",\"requests#\",\"respons\",\"static\",\"through\",\"us\",\"{\",\"}\"],\"document-apis/using-bulk-processor.html\":[\"\\\"1\\\").source(/*\",\"\\\"2\\\"));\",\"\\\"tweet\\\",\",\"*/\",\"*/));\",\"*/);\",\"...\",\".build();\",\".setbackoffpolicy(\",\".setbulkactions(10000)\",\".setbulksize(new\",\".setconcurrentrequests(0)\",\".setconcurrentrequests(1)\",\".setflushinterval(timevalue.timevalueseconds(5))\",\"/*\",\"//\",\"//增加elasticsearch客户端\",\"//拆成5mb一块\",\"//无论请求数量多少，每5秒钟请求一次。\",\"//每次10000请求\",\"//设置并发请求的数量。值为0意味着只允许执行一个请求。值为1意味着允许1并发请求。\",\"//调用bulk之前执行\",\"//调用bulk之后执行\",\"//调用失败抛\",\"1\",\"1000\",\"3))//设置自定义重复请求机制，最开始等待100毫秒，之后成倍更加，重试3次，当一次或多次重复请求失败后因为计算资源不够抛出\",\"5mb\",\"8次，等待50毫秒\",\"=\",\"@overrid\",\"add\",\"afterbulk(long\",\"anymor\",\"backoffpolici\",\"backoffpolicy.exponentialbackoff(timevalue.timevaluemillis(100),\",\"beforebulk(long\",\"bulk\",\"bulkact\",\"bulkprocessor\",\"bulkprocessor.add(/*\",\"bulkprocessor.add(new\",\"bulkprocessor.awaitclose(10,\",\"bulkprocessor.builder(\",\"bulkprocessor.builder(client,\",\"bulkprocessor.close();\",\"bulkprocessor.flush();\",\"bulkprocessor.listener()\",\"bulkrequest\",\"bulkrespons\",\"bulksiz\",\"bytesizeunit.mb))\",\"bytesizevalue(5,\",\"client,\",\"client.admin().indices().preparerefresh().get();\",\"client.preparesearch().get();\",\"close\",\"concurrentrequest\",\"deleterequest(\\\"twitter\\\",\",\"doc\",\"don't\",\"esrejectedexecutionexcept\",\"executionid,\",\"failure)\",\"flush\",\"here\",\"import\",\"indexrequest(\\\"twitter\\\",\",\"indic\",\"listen\",\"method\",\"need\",\"new\",\"now\",\"org.elasticsearch.action.bulk.backoffpolicy;\",\"org.elasticsearch.action.bulk.bulkprocessor;\",\"org.elasticsearch.common.unit.bytesizeunit;\",\"org.elasticsearch.common.unit.bytesizevalue;\",\"org.elasticsearch.common.unit.timevalue;\",\"processor\",\"public\",\"refresh\",\"remain\",\"request\",\"request)\",\"request,\",\"response)\",\"searching!\",\"start\",\"throwabl\",\"timeunit.minutes);\",\"us\",\"void\",\"{\",\"}\",\"})\",\"不设置flushinterv\",\"为\",\"使用\",\"关闭\",\"创建bulkprocessor实例\",\"可以执行同步方法\",\"在测试用使用bulk\",\"增加request\",\"异常，可以通过backoffpolicy.nobackoff()方法关闭重试机制\",\"当所有文档都处理完成，使用awaitclos\",\"或\",\"提供了一个简单的接口，在给定的大小数量上定时批量自动请求\",\"方法关闭bulkprocessor:\",\"然后增加requests到bulkprocessor\",\"重试\",\"首先创建bulkprocessor实例\",\"默认设置\",\"，例如你可以通过request.hasfailures()方法知道是否执行失败\",\"，例如你可以通过request.numberofactions()方法知道numberofact\",\"，异步执行\"],\"search-api.html\":[\"\\\"index2\\\")\",\"\\\"test\\\"))\",\"\\\"type2\\\")\",\".get();\",\".setfrom(0).setsize(60).setexplain(true)\",\".setpostfilter(querybuilders.rangequery(\\\"age\\\").from(12).to(18))\",\".setquery(querybuilders.termquery(\\\"multi\\\",\",\".setsearchtype(searchtype.dfs_query_then_fetch)\",\".settypes(\\\"type1\\\",\",\"/\",\"//\",\"=\",\"api\",\"api默认提供query_and_fetch\",\"client.preparesearch(\\\"index1\\\",\",\"client.preparesearch().get();\",\"cluster\",\"default\",\"dfs_query_and_fetch\",\"filter\",\"import\",\"java\",\"matchal\",\"option\",\"org.elasticsearch.action.search.searchresponse;\",\"org.elasticsearch.action.search.searchtype;\",\"org.elasticsearch.index.query.querybuilders.*;\",\"queri\",\"respons\",\"rest\",\"search\",\"searchrespons\",\"type\",\"type，可以使用\",\"whole\",\"两种\",\"作为查询条件，下面是例子：\",\"和\",\"尽管java\",\"或者多个index\",\"所有的参数都是可选的，下面是最小调用：\",\"搜索api可以支持搜索查询，返回查询匹配的结果，它可以搜索一个index\",\"文档\",\"更多请移步\",\"查询条件\",\"过滤\",\"，但是这种模式应该由系统选择，用户不要手动指定\"],\"search-api/using-scrolls-in-java.html\":[\"!=\",\"\\\"test\\\");\",\"(searchhit\",\"*\",\"*/\",\".addsort(fieldsortbuilder.doc_field_name,\",\".setquery(qb)\",\".setscroll(new\",\".setsize(100).get();\",\"/**\",\"//\",\"//handl\",\"//max\",\"//scroll\",\"//为了使用\",\"0);\",\"100\",\":\",\"=\",\"@param\",\"@return\",\"[2861]]\",\"amount\",\"api允许我们做一个初始阶段搜索并且持续批量从elasticsearch里拉取结果直到没有结果剩下。这有点像传统数据库里的cursors（游标）。\",\"api可以允许我们检索大量数据（甚至全部数据）。scrol\",\"api的创建并不是为了实时的用户响应，而是为了处理大量的数据（scrol\",\"api进行清除。\",\"boolean\",\"by:\",\"caus\",\"clearscroll(cli\",\"clearscrollrequestbuild\",\"clearscrollrequestbuilder.addscrollid(scrollid);\",\"clearscrollrequestbuilder.get();\",\"clearscrollrequestbuilder.setscrollids(scrollidlist);\",\"clearscrollrespons\",\"client\",\"client,\",\"client.prepareclearscroll();\",\"client.preparesearch(test)\",\"client.preparesearchscroll(scrollresp.getscrollid()).setscroll(new\",\"context\",\"context)会自动被清除，但是一值保持滚动代价也是很大的，所以当我们不在使用滚动时要尽快使用clear\",\"data）。从\",\"document\",\"each\",\"elasticsearch\",\"end\",\"found\",\"hit\",\"hit...\",\"id\",\"import\",\"index\",\"initi\",\"intend\",\"java\",\"java.lang.thread.run(thread.java:745)\",\"java.util.concurrent.threadpoolexecutor$worker.run(threadpoolexecutor.java:617)\",\"java.util.concurrent.threadpoolexecutor.runworker(threadpoolexecutor.java:1142)\",\"larg\",\"list\",\"loop.\",\"made,\",\"mark\",\"org.elasticsearch.common.util.concurrent.abstractrunnable.run(abstractrunnable.java:37)\",\"org.elasticsearch.index.query.querybuilders.*;\",\"org.elasticsearch.search.action.searchservicetransportaction$searchqueryscrolltransporthandler.messagereceived(searchservicetransportaction.java:381)\",\"org.elasticsearch.search.action.searchservicetransportaction$searchqueryscrolltransporthandler.messagereceived(searchservicetransportaction.java:384)\",\"org.elasticsearch.search.searchservice.executequeryphase(searchservice.java:403)\",\"org.elasticsearch.search.searchservice.findcontext(searchservice.java:613)\",\"org.elasticsearch.transport.requesthandlerregistry.processmessagereceived(requesthandlerregistry.java:75)\",\"org.elasticsearch.transport.transportrequesthandler.messagereceived(transportrequesthandler.java:33)\",\"org.elasticsearch.transport.transportservice$4.dorun(transportservice.java:376)\",\"process\",\"public\",\"qb\",\"querybuild\",\"real\",\"reflect\",\"request\",\"requests,\",\"respons\",\"response.issucceeded();\",\"result\",\"return\",\"scroll\",\"scrollid\",\"scrollid){\",\"scrollidlist\",\"scrollidlist){\",\"scrollresp\",\"scrollresp.gethits().gethits())\",\"scroll，初始搜索请求应该在查询中指定\",\"search\",\"searchcontextmissingexception[no\",\"searchrespons\",\"snapshot\",\"sortorder.asc)\",\"state\",\"static\",\"string\",\"termquery(\\\"multi\\\",\",\"time\",\"time)。后续的对文档的改动（索引、更新或者删除）都只会影响后面的搜索请求。\",\"timevalue(60000))\",\"timevalue(60000)).execute().actionget();\",\"until\",\"us\",\"user\",\"while(scrollresp.gethits().gethits().length\",\"zero\",\"{\",\"}\",\"一般搜索请求都是返回一\\\"页\\\"数据，无论数据量多大都一起返回给用户，scroll\",\"参数，告诉\",\"发生那一时刻的索引状态，就像一个快照(the\",\"如果超过滚动时间，继续使用该滚动id搜索数据，则会报错：\",\"实例\",\"清除滚动id\",\"虽然当滚动有效时间已过，搜索上下文(search\",\"请求返回的结果只是反映了\",\"需要保持搜索的上下文环境多长时间（滚动时间）\",\"首先需要阅读\"],\"search-api/multisearch-api.html\":[\"\\\"kimchy\\\")).setsize(1);\",\"(multisearchresponse.item\",\"+=\",\".add(srb1)\",\".add(srb2)\",\".get();\",\".preparesearch().setquery(querybuilders.matchquery(\\\"name\\\",\",\".preparesearch().setquery(querybuilders.querystringquery(\\\"elasticsearch\\\")).setsize(1);\",\"//\",\"0;\",\":\",\"=\",\"_msearch\",\"api\",\"client\",\"client.preparemultisearch()\",\"individu\",\"item\",\"item.getresponse();\",\"long\",\"multi\",\"multisearch\",\"multisearchrespons\",\"multisearchresponse#getresponses()\",\"nbhit\",\"queri\",\"respons\",\"response.gethits().gettotalhits();\",\"search\",\"searchrequestbuild\",\"searchrespons\",\"sr\",\"sr.getresponses())\",\"srb1\",\"srb2\",\"{\",\"}\",\"。\",\"允许在同一api中执行多个搜索请求。它的端点（endpoint）是\",\"实例\",\"文档\",\"首先请看multisearch\"],\"search-api/using-aggregations.html\":[\")\",\".addaggregation(\",\".datehistograminterval(datehistograminterval.year)\",\".field(\\\"birth\\\")\",\".get();\",\".setquery(querybuilders.matchallquery())\",\"//\",\"=\",\"agg1\",\"agg2\",\"aggreg\",\"aggregationbuilders.datehistogram(\\\"agg2\\\")\",\"aggregationbuilders.terms(\\\"agg1\\\").field(\\\"field\\\")\",\"api\",\"client.preparesearch()\",\"facet\",\"histogram\",\"java\",\"result\",\"searchrespons\",\"sr\",\"sr.getaggregations().get(\\\"agg1\\\");\",\"sr.getaggregations().get(\\\"agg2\\\");\",\"term\",\"us\",\"下面的代码演示了如何在搜索中添加两个聚合：\",\"聚合可以被看做是从一组文件中获取分析信息的一系列工作的统称。聚合的实现过程就是定义这个文档集的过程（例如，在搜索请求的基础上，执行查询/过滤，才能得到高水平的聚合结果）。\",\"聚合框架有助于根据搜索查询提供聚合数据。它是基于简单的构建块也称为整合，整合就是将复杂的数据摘要有序的放在一块。\",\"详细文档请看\"],\"search-api/terminate-after.html\":[\"(sr.isterminatedearly())\",\".get();\",\".setterminateafter(1000)\",\"//\",\"//如果达到这个数量，提前终止\",\"=\",\"client.preparesearch(index)\",\"earli\",\"finish\",\"searchrespons\",\"sr\",\"termin\",\"{\",\"}\",\"判断返回文档是否达到设置的数量：\",\"获取文档的最大数量，如果设置了，需要通过searchresponse对象里的isterminatedearly()\"],\"search-api/search-template.html\":[\"\\\"\",\"\\\"\\\"\",\"\\\"gender\\\"\",\"\\\"male\\\");\",\"\\\"match\\\"\",\"\\\"query\\\"\",\"\\\"{\\\\n\\\"\",\"\\\"}\\\")\",\"\\\"}\\\")).get();\",\"+\",\".get()\",\".getresponse();\",\".setid(\\\"template_gender\\\")\",\".setrequest(new\",\".setscript(\\\"template_gender\\\")\",\".setscript(\\\"{\\\\n\\\"\",\".setscriptlang(\\\"mustache\\\")\",\".setscriptparams(template_params)\",\".setscripttype(scriptservice.scripttype.file)\",\".setscripttype(scripttype.inline)\",\".setscripttype(scripttype.stored)\",\".setsource(new\",\"//templat\",\"//参数\",\"//执行获取templat\",\"//设置执行的context（ie:\",\"/_search/templ\",\":\",\"=\",\"\\\\\\\"\\\\\\\"\\\\n\\\"\",\"\\\\\\\"gender\\\\\\\"\",\"\\\\\\\"match\\\\\\\"\",\"\\\\\\\"query\\\\\\\"\",\"bytesarray(\",\"client.admin().cluster().prepareputstoredscript()\",\"cluster\",\"config/scripts/template_gender.mustach\",\"endpoint\",\"gender_template.mustach\",\"hashmap();\",\"map\",\"mustach\",\"new\",\"search\",\"searchrequest())\",\"searchrespons\",\"searchtemplaterequestbuilder(client)\",\"sr\",\"state\",\"state》\",\"state是全局性信息,\",\"templat\",\"template_param\",\"template_params.put(\\\"param_gender\\\",\",\"templates:\",\"templates。\",\"templates：\",\"{\",\"{\\\\n\\\"\",\"}\",\"}\\\\n\\\"\",\"《为什么elasticsearch应用开发者需要了解clust\",\"上\",\"中:\",\"也可以执行\",\"位置,\",\"使用scriptservice.scripttype.stor\",\"例如，有一个名为\",\"允许我们在执行搜索请求和使用模板参数填充现有模板之前，能够使用\",\"内联(inline)\",\"创建search\",\"包含了整个群集中所有分片的元信息(规则,\",\"参考：\",\"可以在config/scripts中使用存储的\",\"名\",\"大小等信息),\",\"存储在\",\"将模板参数定义为\",\"并保持每个每节的信息同步。\",\"执行一个存储的\",\"文档\",\"是内联传递的\",\"的文件，其中包含：\",\"磁盘上\",\"语言预先呈现搜索请求。\",\"请求\",\"请求：\",\"还可以将\",\"这里定义索引名称）\",\"首先查看\",\"：\"],\"aggregations.html\":[\")\",\"*/\",\".addaggregation(\",\".execute().actionget();\",\".setquery(\",\"/*\",\"=\",\"add\",\"aggreg\",\"aggregationbuild\",\"api来使用聚合。\",\"elasticsearch提供完整的java\",\"import\",\"node.client().preparesearch()\",\"org.elasticsearch.search.aggregations.aggregationbuilders;\",\"queri\",\"searchrespons\",\"sr\",\"使用\",\"构建对象，增加到搜索请求中:\",\"聚合\",\"请参阅聚合指南。\"],\"aggregations/structuring-aggregations.html\":[\"(bucket)\",\"(metric)\",\"(构建桶聚合)\",\")\",\".addaggregation(\",\".datehistograminterval(datehistograminterval.year)\",\".execute().actionget();\",\".field(\\\"dateofbirth\\\")\",\".subaggregation(aggregationbuilders.avg(\\\"avg_children\\\").field(\\\"children\\\"))\",\".subaggregation(aggregationbuilders.datehistogram(\\\"by_year\\\")\",\"=\",\"aggreg\",\"aggregationbuilders.terms(\\\"by_country\\\").field(\\\"country\\\")\",\"averag\",\"bucket\",\"date\",\"guid\",\"histogram\",\"metric\",\"node.client().preparesearch()\",\"searchrespons\",\"sr\",\"structur\",\"term\",\"中所述，可以在聚合中定义子聚合。\",\"例如，这里是一个3级聚合组成的聚合：\",\"如\",\"结构化聚合\",\"聚合\",\"聚合(一个跟踪和计算指标的聚合)或者\",\"聚合可能是\"],\"aggregations/metrics-aggregations.html\":[\"(percentil\",\"(searchhit\",\"(terms.bucket\",\"(usual\",\");\",\".avg(\\\"agg\\\")\",\".cardinality(\\\"agg\\\")\",\".count(\\\"agg\\\")\",\".explain(true)\",\".extendedstats(\\\"agg\\\")\",\".field(\\\"address.location\\\")\",\".field(\\\"height\\\")\",\".field(\\\"height\\\");\",\".field(\\\"tags\\\");\",\".from(10)\",\".geobounds(\\\"agg\\\")\",\".max(\\\"agg\\\")\",\".min(\\\"agg\\\")\",\".percentiles(\\\"agg\\\")\",\".percentiles(1.0,\",\".size(1)\",\".stats(\\\"agg\\\")\",\".subaggregation(\",\".sum(\\\"agg\\\")\",\".terms(\\\"agg\\\").field(\\\"gender\\\")\",\".wraplongitude(true);\",\"//\",\"10.0,\",\"13.952946866893775],\",\"20.0,\",\"30.0,\",\"4.190029308156676]\",\"5.0,\",\"75.0,\",\"95.0,\",\"99.0);\",\":\",\"=\",\">\",\"[0.814338896154595]\",\"[0.8761912455821302]\",\"[1.0],\",\"[1.173346540141847]\",\"[1.24]\",\"[1.5432023318692198]\",\"[1.91]\",\"[1.923915462033674]\",\"[2.2273644908535335]\",\"[2.22]\",\"[2.284989339108279]\",\"[25.0],\",\"[29.664353095090945],\",\"[40.70500764381921,\",\"[4893]\",\"[5.0],\",\"[50.0],\",\"[5107]\",\"[53.49603022435221,\",\"[73.9335313461868],\",\"[75.0],\",\"[94.40095147327283],\",\"[95.0],\",\"[99.0],\",\"[aunzsz0w9k7pkxtq04ys],\",\"[aunzszze9k7pkxtq04x2],\",\"[aunzszzj9k7pkxtq04x4],\",\"[aunzszzl9k7pkxtq04x5],\",\"[aunzszzm9k7pkxtq04xy],\",\"[aunzszzp9k7pkxtq04x8],\",\"[female],\",\"[male],\",\"[{\\\"gender\\\":\\\"female\\\",...}]\",\"[{\\\"gender\\\":\\\"male\\\",...}]\",\"[{}]\\\",\",\"[{}],\",\"_sourc\",\"agg\",\"agg)\",\"agg.bottomright();\",\"agg.getavg();\",\"agg.getbuckets())\",\"agg.getcount();\",\"agg.getmax();\",\"agg.getmin();\",\"agg.getstddeviation();\",\"agg.getsum();\",\"agg.getsumofsquares();\",\"agg.getvalue();\",\"agg.getvariance();\",\"agg.topleft();\",\"aggreg\",\"aggregation\",\"aggregationbuild\",\"aggregationbuilders.tophits(\\\"top\\\")\",\"aggregation。这两种不同的聚合操作只有在桶聚合的子聚合操作中才会有不同的表现（有些桶聚合可以基于每个的数值计量来对返回的桶进行排序）。\",\"aggregation，以此来聚合每个桶中的最高匹配的文档。\",\"aggregation，其他产生多个计量数值（例如\",\"api\",\"approximate)）和压缩（compression）以获得关于近视值的建议和内存使用的百分比排位聚合。百分比排位展示那些在某一值之下的观测值的百分比。例如，假如某一直大于等于被观测值的95%，则称其为第95百分位数。假设你的数据由网页加载时间组成。你可能有一个服务协议，95%页面需要在15ms加载完全，99%页面在30ms加载完全。\",\"ask\",\"avg\",\"avgaggregationbuild\",\"bottomright\",\"bottomright,\",\"bound\",\"bucket\",\"cardin\",\"cardinalityaggregationbuild\",\"count\",\"doc\",\"doc_count\",\"doccount\",\"doccount);\",\"doubl\",\"each\",\"entri\",\"entry.getaggregations().get(\\\"top\\\");\",\"entry.getdoccount();\",\"entry.getkey();\",\"entry.getpercent();\",\"entry.getvalue();\",\"explain\",\"extend\",\"extendedstat\",\"extendedstatsaggregationbuild\",\"geo\",\"geobound\",\"geoboundsaggregationbuild\",\"geoboundsbuild\",\"geopoint\",\"here\",\"highlight,\",\"hit\",\"hit.getid(),\",\"hit.getsourceasstring());\",\"id\",\"import\",\"key\",\"key,\",\"logger.info(\\\"\",\"logger.info(\\\"bottomright\",\"logger.info(\\\"key\",\"logger.info(\\\"perc\",\"long\",\"max\",\"maxaggregationbuild\",\"metric\",\"min\",\"minaggregationbuild\",\"multi\",\"numer\",\"object\",\"org.elasticsearch.search.aggregations.bucket.terms.terms;\",\"org.elasticsearch.search.aggregations.metrics.avg.avg;\",\"org.elasticsearch.search.aggregations.metrics.cardinality.cardinality;\",\"org.elasticsearch.search.aggregations.metrics.geobounds.geobounds;\",\"org.elasticsearch.search.aggregations.metrics.max.max;\",\"org.elasticsearch.search.aggregations.metrics.min.min;\",\"org.elasticsearch.search.aggregations.metrics.percentiles.percentile;\",\"org.elasticsearch.search.aggregations.metrics.percentiles.percentileranks;\",\"org.elasticsearch.search.aggregations.metrics.percentiles.percentiles;\",\"org.elasticsearch.search.aggregations.metrics.stats.extended.extendedstats;\",\"org.elasticsearch.search.aggregations.metrics.stats.stats;\",\"org.elasticsearch.search.aggregations.metrics.sum.sum;\",\"org.elasticsearch.search.aggregations.metrics.tophits.tophits;\",\"org.elasticsearch.search.aggregations.metrics.valuecount.valuecount;\",\"percent\",\"percent,\",\"percentil\",\"percentilerank\",\"percentilesaggregationbuild\",\"point类型字段），计算出该字段所有地理坐标点的边界（左上角/右下角坐标点）。\",\"rank\",\"script\",\"searchrespons\",\"singl\",\"size,\",\"sort,\",\"sr\",\"sr.getaggregations().get(\\\"agg\\\");\",\"stat\",\"statsaggregationbuild\",\"stats）的称作\",\"stddeviat\",\"string\",\"sub\",\"sum\",\"sumaggregationbuild\",\"sumofsquar\",\"term\",\"top\",\"top_hit\",\"tophit\",\"tophits.gethits().gethits())\",\"topleft\",\"topleft);\",\"valu\",\"value);\",\"valuecount\",\"valuecountaggregationbuild\",\"value指标聚合，它通过从聚合文档中提取数值来计算一个或多个百分比。这些值可以从特定数值字段中提取，也可以由提供的脚本生成。\",\"varianc\",\"{\",\"{}\\\",\",\"{},\",\"}\",\"…\",\"一个multi\",\"下面是如何创建聚合请求的是示例：\",\"下面是如何用java\",\"使用值计数聚合\",\"使用地理边界聚合\",\"使用基数聚合\",\"使用平均值聚合\",\"使用扩展统计聚合\",\"使用最大值聚合\",\"使用最小值聚合\",\"使用最高匹配权值聚合\",\"使用求和聚合\",\"使用百分比等级聚合\",\"使用百分百聚合\",\"使用统计聚合\",\"使用聚合请求\",\"值计数聚合\",\"值计数聚合——计算聚合文档中某个值的个数,\",\"准备聚合请求\",\"可以提供百分位数，而不是使用默认值：\",\"地理边界聚合\",\"地理边界聚合——基于文档的某个字段（geo\",\"基于文档的某个值，计算文档非重复的个数（去重计数）。。这些值可以从特定数值字段中提取，也可以由提供的脚本生成。\",\"基数聚合\",\"大多数标准的搜索选项可以使用，比如：from,\",\"大概会输出：\",\"大概输出：\",\"官方文档\",\"平均值聚合\",\"扩展统计聚合\",\"扩展统计聚合——基于文档的某个值，计算出一些统计信息（比普通的stats聚合多了sum_of_squares、variance、std_deviation、std_deviation_bounds）,\",\"数值计量聚合操作是能够产生具体的数值的一种计量聚合操作。一些聚合操作输出单个的计量数值（例如avg），并且被称作singl\",\"最大值聚合\",\"最小值聚合\",\"最高匹配权值聚合\",\"最高匹配权值聚合——跟踪聚合中相关性最高的文档。该聚合一般用做\",\"有兴趣可以自己参考\",\"此功能为实验性的，不建议生产使用，所以也不做过多说明\",\"求和聚合\",\"注意：请参考百分比（通常）近视值（percentil\",\"用于计算的值可以是特定的数值型字段，也可以通过脚本计算而来。\",\"百分比等级聚合\",\"百分百聚合\",\"百分百聚合——基于聚合文档中某个数值类型的值，求这些值中的一个或者多个百分比,\",\"统计聚合\",\"统计聚合——基于文档的某个值，计算出一些统计信息（min、max、sum、count、avg）,\",\"聚合联合使用，比如在计算一个字段的平均值的时候，可能还会关注这个平均值是由多少个值计算而来。\",\"计算度量这类的聚合操作是以使用一种方式或者从文档中提取需要聚合的值为基础的。这些数据不但可以从文档（使用数据属性）的属性中提取出来，也可以使用脚本生成。\",\"该聚合一般域其它\"],\"aggregations/bucket-aggregations.html\":[\"\\\"192.168.2.0\\\")\",\"\\\"1960\\\")\",\"\\\"female\\\")));\",\"\\\"male\\\"))\",\"\\\"male\\\")),\",\"\\\"male\\\"));\",\"\\\"reseller\\\");\",\"\\\"resellers\\\")\",\"\\\"resellers\\\");\",\"(datetime)\",\"(excluded)\",\"(filters.bucket\",\"(geohashgrid.bucket\",\"(geopoint)\",\"(histogram.bucket\",\"(number)\",\"(range.bucket\",\"(significantterms.bucket\",\"(terms.bucket\",\")\",\");\",\"*],\",\"+infin\",\"...\",\".addaggregation(aggregation)\",\".addrange(\\\"192.168.1.0\\\",\",\".addrange(\\\"1950\\\",\",\".addrange(1.0f,\",\".addrange(10.0,\",\".addrange(3.0,\",\".addunboundedfrom(\\\"192.168.2.0\\\");\",\".addunboundedfrom(\\\"1960\\\");\",\".addunboundedfrom(1.5f);\",\".addunboundedto(\\\"192.168.1.0\\\")\",\".addunboundedto(\\\"1950\\\")\",\".addunboundedto(1.0f)\",\".addunboundedto(3.0)\",\".children(\\\"agg\\\",\",\".datehistogram(\\\"agg\\\")\",\".datehistograminterval(datehistograminterval.days(10));\",\".datehistograminterval(datehistograminterval.year);\",\".daterange(\\\"agg\\\")\",\".field(\\\"address.country\\\");\",\".field(\\\"address.location\\\")\",\".field(\\\"dateofbirth\\\")\",\".field(\\\"gender\\\")\",\".field(\\\"gender\\\");\",\".field(\\\"height\\\")\",\".field(\\\"ip\\\")\",\".filter(\\\"agg\\\",\",\".filters(\\\"agg\\\",\",\".format(\\\"yyyy\\\")\",\".geodistance(\\\"agg\\\",\",\".geohashgrid(\\\"agg\\\")\",\".get();\",\".global(\\\"agg\\\")\",\".histogram(\\\"agg\\\")\",\".interval(1);\",\".iprange(\\\"agg\\\")\",\".nested(\\\"agg\\\",\",\".order(terms.order.aggregation(\\\"avg_height\\\",\",\".order(terms.order.count(true))\",\".order(terms.order.term(true))\",\".precision(4);\",\".range(\\\"agg\\\")\",\".reversenested(\\\"reseller_to_product\\\")\",\".setquery(querybuilders.termquery(\\\"gender\\\",\",\".significantterms(\\\"significant_countries\\\")\",\".subaggregation(\",\".subaggregation(aggregationbuilders.terms(\\\"genders\\\").field(\\\"gender\\\"));\",\".terms(\\\"genders\\\")\",\".terms(\\\"name\\\").field(\\\"resellers.name\\\")\",\".unit(distanceunit.kilometers)\",\"//\",\"01\",\"01t00:00:00.000z],\",\"1.0\",\"1.0],\",\"1.5\",\"1.58203125],\",\"1.5],\",\"1.5f)\",\"10.0)\",\"10.0],\",\"192.168.1.0\",\"192.168.2.0\",\"1950\",\"1950],\",\"1960\",\"1960],\",\"3.0],\",\"4.04296875],\",\"500.0);\",\"500.0],\",\"7.20703125],\",\"7.55859375],\",\":\",\"=\",\"[\",\"[*\",\"[0.0],\",\"[1.0\",\"[1.0],\",\"[1.5\",\"[1.5],\",\"[10.0\",\"[10.0],\",\"[1138]\",\"[1156]\",\"[1248]\",\"[1282]\",\"[161]\",\"[1942\",\"[1942],\",\"[1945\",\"[1945],\",\"[1946\",\"[1946],\",\"[1950\",\"[1960\",\"[1]\",\"[2005\",\"[2005],\",\"[2007\",\"[2007],\",\"[2008\",\"[2008],\",\"[20]\",\"[21]\",\"[2]\",\"[3.0\",\"[3.0],\",\"[37]\",\"[3]\",\"[45.087890625,\",\"[460]\",\"[47.197265625,\",\"[4925]\",\"[4982]\",\"[50.361328125,\",\"[50.712890625,\",\"[500.0],\",\"[5018]\",\"[5]\",\"[8]\",\"[9]\",\"[gbqu],\",\"[gbvn],\",\"[infinity],\",\"[men],\",\"[null],\",\"[u0j2],\",\"[u1j0],\",\"[women],\",\"[{}]\\\",\",\"[{}],\",\"```\",\"agg\",\"agg.getaggregations().get(\\\"name\\\");\",\"agg.getbuckets())\",\"agg.getdoccount();\",\"aggreg\",\"aggregationbuild\",\"aggregationbuilders.avg(\\\"avg_height\\\").field(\\\"height\\\")\",\"aggregationbuilders.missing(\\\"agg\\\").field(\\\"gender\\\");\",\"aggregatorbuild\",\"api\",\"bucket\",\"bucket.getaggregations().get(\\\"reseller_to_product\\\");\",\"children\",\"client.preparesearch()\",\"count\",\"date\",\"datetim\",\"distanc\",\"doc\",\"doc_count\",\"doccount\",\"doccount);\",\"each\",\"entri\",\"entry.getdoccount();\",\"entry.getfrom();\",\"entry.getfromasstring();\",\"entry.getkey();\",\"entry.getkeyasstring();\",\"entry.getto();\",\"entry.gettoasstring();\",\"false))\",\"field\",\"filter\",\"filtersaggregator.keyedfilter(\\\"men\\\",\",\"filtersaggregator.keyedfilter(\\\"women\\\",\",\"from,\",\"fromasd\",\"fromasdate,\",\"fromasstr\",\"fromasstring,\",\"gender\",\"genders.getbuckets())\",\"geo\",\"geohash\",\"geohashgrid\",\"geohash网格聚合\",\"geopoint\",\"geopoint(48.84237171118314,2.33320027692004))\",\"global\",\"grid\",\"hash\",\"here\",\"histogram\",\"import\",\"infin\",\"infinity],\",\"ip\",\"ip范围聚合\",\"java\",\"key\",\"key,\",\"key.getyear(),\",\"keyasstr\",\"keyasstring,\",\"logger.info(\\\"key\",\"long\",\"math\",\"men\",\"metric\",\"miss\",\"name\",\"name.getbuckets())\",\"nest\",\"new\",\"number\",\"object\",\"order\",\"org.elasticsearch.join.aggregations.children;\",\"org.elasticsearch.search.aggregations.bucket.filter.filter;\",\"org.elasticsearch.search.aggregations.bucket.filters.filters;\",\"org.elasticsearch.search.aggregations.bucket.geogrid.geohashgrid;\",\"org.elasticsearch.search.aggregations.bucket.global.global;\",\"org.elasticsearch.search.aggregations.bucket.histogram.histogram;\",\"org.elasticsearch.search.aggregations.bucket.missing.missing;\",\"org.elasticsearch.search.aggregations.bucket.nested.nested;\",\"org.elasticsearch.search.aggregations.bucket.nested.reversenested;\",\"org.elasticsearch.search.aggregations.bucket.range.range;\",\"org.elasticsearch.search.aggregations.bucket.significant.significantterms;\",\"org.elasticsearch.search.aggregations.bucket.terms.terms;\",\"point\",\"querybuilders.termquery(\\\"gender\\\",\",\"rang\",\"resellertoproduct\",\"resellertoproduct.getdoccount();\",\"revers\",\"reverse_nest\",\"reversenest\",\"script），以【字段范围】来桶分聚合。范围聚合包括\",\"search\",\"searchrespons\",\"signific\",\"significantterm\",\"sr\",\"sr.getaggregations().get(\\\"agg\\\");\",\"sr.getaggregations().get(\\\"genders\\\");\",\"sr.getaggregations().get(\\\"significant_countries\\\");\",\"string\",\"term\",\"to,\",\"toasdat\",\"toasdate,\",\"toasstr\",\"toasstring,\",\"valu\",\"{\",\"{},\",\"}\",\"一个特殊的单桶聚合，可以从嵌套文档中聚合父文档。实际上，这种聚合可以从嵌套的块结构中跳出来，并链接到其他嵌套的结构或根文档.这允许嵌套不是嵌套对象的一部分的其他聚合在嵌套聚合中。\",\"一种特殊的单桶聚合，可以将父文档类型上的桶聚合到子文档上。\",\"下面是如何使用\",\"下面是如何创建聚合请求的是示例：\",\"不像\",\"与度量聚合相比，bucket聚合可以保存子聚合，这些子聚合将针对由其“父”bucket聚合创建的bucket进行聚合。\",\"与直方图类似的多bucket聚合，但只能应用于日期值.。\",\"使用\",\"使用children\",\"使用date\",\"使用geo\",\"使用histogram\",\"使用ip\",\"使用rang\",\"使用revers\",\"使用signific\",\"使用term\",\"使用全局聚合\",\"使用基于字段数据的单桶聚合\",\"使用多过滤聚合\",\"使用嵌套类型聚合\",\"使用聚合请求\",\"使用过滤聚合\",\"值（区间前闭后开）。\",\"值，不包括\",\"全局聚合\",\"全局聚合器只能作为顶层聚合器放置，因为将全局聚合器嵌入到另一个分组聚合器中是没有意义的。\",\"内的每一个【唯一词元】为一个桶，并计算每个桶内文档个数。默认返回顺序是按照文档个数多少排序。当不返回所有\",\"准备聚合请求\",\"同样的，包括\",\"在geo_point字段上工作的多bucket聚合和概念上的工作非常类似于range(范围)聚合.用户可以定义原点的点和距离范围的集合。聚合计算每个文档值与原点的距离，并根据范围确定其所属的bucket(桶)（如果文档和原点之间的距离落在bucket(桶)的距离范围内，则文档属于bucket(桶)\",\"在geo_point字段和组上工作的多bucket聚合将指向网格中表示单元格的bucket。生成的网格可以是稀疏的，并且只包含具有匹配数据的单元格。每个单元格使用具有用户可定义精度的\",\"地理距离聚合\",\"基于字段数据的单桶聚合\",\"基于字段数据的单桶聚合，创建当前文档集上下文中缺少字段值的所有文档的bucket（桶）（有效地，丢失了一个字段或配置了null值集），此聚合器通常与其他字段数据桶聚合器（例如范围）结合使用，以返回由于缺少字段数据值而无法放置在任何其他存储区中的所有文档的信息。\",\"基于嵌套（nested）数据类型，把该【嵌套类型的信息】聚合到单个桶里，然后就可以对嵌套类型做进一步的聚合操作。\",\"基于文档中的某个【数值类型】字段，通过计算来动态的分桶。\",\"基于某个field，该\",\"基于某个值（可以是\",\"多过滤聚合\",\"多过滤聚合——基于多个过滤条件，来对当前文档进行【过滤】的聚合，每个过滤都包含所有满足它的文档（多个bucket中可能重复）。\",\"大概输出\",\"子聚合排列（标示为聚合名）\",\"定义搜索执行上下文中的所有文档的单个bucket，这个上下文由索引和您正在搜索的文档类型定义，但不受搜索查询本身的影响。\",\"嵌套类型聚合\",\"或\",\"或者把时间间隔设置为10天\",\"按metric\",\"按升序排列：\",\"按字词顺序，升序排列：\",\"排序\",\"日期范围可以用各种\",\"日期范围直方图聚合\",\"日期范围聚合\",\"日期范围聚合——基于日期类型的值，以【日期范围】来桶分聚合。\",\"是子类型\",\"是聚合名，resel\",\"有不同的bucket聚合器，每个具有不同的“bucketing”策略,一些定义一个单独的bucket，一些定义多个bucket的固定数量，另一些定义在聚合过程中动态创建bucket\",\"桶分聚合\",\"的值。\",\"的值，不包括\",\"的情况，文档个数可能不准确。\",\"直方图聚合\",\"聚合必须定义在nested之中\",\"范围聚合\",\"表达式。\",\"词元聚合\",\"输出：\",\"过滤聚合\",\"过滤聚合——基于一个条件，来对当前的文档进行过滤的聚合。\",\"返回集合中感兴趣的或者不常见的词条的聚合\",\"进行标记。\",\"通过\",\"那样计算指标，恰恰相反，它创建文档的buckets，每个buckets与标准（取决于聚合类型）相关联，它决定了当前上下文中的文档是否会“falls”到它。换句话说，bucket可以有效地定义文档集合。除了buckets本身，bucket集合还计算并返回“落入”每个bucket的文档数量。\"],\"query-dsl.html\":[\"api\",\"dsl\",\"elasticsearch\",\"elasticsearch以类似于rest\",\"import\",\"json\",\"org.elasticsearch.index.query.querybuilders.*;\",\"queri\",\"querybuilders。\",\"querybuilder可以用于接受任何查询api，如count和search。\",\"static\",\"。\",\"一旦的查询准备就绪，就可以使用search\",\"提供了一个基于\",\"来定义查询。\",\"查询构建器的工厂是\",\"注意，可以使用querybuilder对象上的tostring（）方法打印。\",\"的完整的查询\",\"的方式提供完整的java查询dsl。\",\"要使用querybuilder，只需将它们导入到类中：\"],\"query-dsl/match-all-query.html\":[\"=\",\"match\",\"matchallquery();\",\"qb\",\"queri\",\"querybuild\",\"最简单的查询，它匹配所有文档\",\"查看\"],\"query-dsl/full-text-queries.html\":[\"\\\"kimchi\",\"\\\"kimchy\\\");\",\"\\\"message\\\"\",\"\\\"name\\\",\",\"\\\"user\\\",\",\");\",\"//\",\"//field\",\"//text\",\"=\",\"commontermsquery(\\\"name\\\",\",\"elasticsearch\\\"\",\"elasticsearch\\\");\",\"elasticsearch\\\",\",\"full\",\"match\",\"matchquery(\",\"multi\",\"multimatchquery(\",\"qb\",\"queri\",\"querybuild\",\"querystringquery(\\\"+kimchi\",\"query）\",\"simplequerystringquery(\\\"+kimchi\",\"string\",\"term\",\"text\",\"valu\",\"与lucene查询语句的语法结合的更加紧密的一种查询，允许你在一个查询语句中使用多个\",\"全文搜索\",\"匹配查询（match\",\"可以对一些比较专业的偏门词语进行的更加专业的查询\",\"可以用来对多个字段的版本进行匹配查询\",\"多个字段\",\"多字段查询（multi_match\",\"字段\",\"常用术语查询（common_term\",\"是一种适合直接暴露给用户的简单的且具有非常完善的查询语法的查询语句\",\"查看\",\"查看common\",\"查看queri\",\"查看simpl\",\"查询语句查询（query_str\",\"特殊条件关键字（如：and|or|not\",\"用于执行全文查询的标准查询，包括模糊匹配和词组或邻近程度的查询\",\"简单查询语句（simple_query_string）\",\"这样的查询有以下这些：\",\"高级别的全文搜索通常用于在全文字段（例如：一封邮件的正文）上进行全文搜索。它们了解如何分析查询的字段，并在执行之前将每个字段的分析器（或搜索分析器）应用于查询字符串。\",\"）对多个字段进行查询，当然这种查询仅限专家用户去使用。\"],\"query-dsl/term-level-queries.html\":[\"\\\"\",\"\\\"\\\"\",\"\\\"(西班|葡萄)牙\\\");\",\"\\\"100\\\");\",\"\\\"4\\\",\",\"\\\"bar\\\"\",\"\\\"blue\\\",\",\"\\\"brand\\\",\",\"\\\"heine\\\"\",\"\\\"k?mc*\\\");\",\"\\\"kimchy\\\"\",\"\\\"kimzhy\\\"\",\"\\\"name\\\",\",\"\\\"name\\\":\",\"\\\"name.first\\\",\",\"\\\"pill\\\");\",\"\\\"s.*y\\\");\",\"\\\"type2\\\")\",\"\\\"user\\\":\",\"\\\"yoona\\\"\",\"\\\"西*牙\\\");\",\");\",\"+/\",\".addids(\\\"1\\\",\",\".from(5)\",\".includelower(true)\",\".includeupper(false);\",\".to(10)\",\"//\",\"//field\",\"//prefix\",\"//rangequerybuild\",\"//regexp\",\"//text\",\"//true:表示\",\"//type\",\"//valu\",\"//开始值，与includelower()和includeupper()函数配套使用\",\"//结束值，与includelower()和includeupper()函数配套使用\",\":范围查询将匹配字段值大于或等于此参数值的文档。\",\":范围查询将匹配字段值大于此参数值的文档。\",\":范围查询将匹配字段值小于或等于此参数值的文档。\",\":范围查询将匹配字段值小于此参数值的文档。\",\"=\",\"[\\\"yoona\\\",\",\"[\\\"yoona\\\"]\",\"[]\",\"[null]\",\"]\",\"analyz\",\"analyzed）\",\"analyzed）。正则表达式查询的性能取决于所选的正则表达式。如果我们的正则表达式匹配许多词条，查询将很慢。一般规则是，正则表达式匹配的词条数越高，查询越慢。\",\"base\",\"client.preparesearch(index);\",\"date\",\"distanc\",\"edit\",\"emit\",\"exist\",\"existsquery(\\\"name\\\");\",\"existsquerybuild\",\"false:表示\",\"field\",\"fields,\",\"fields）。此查询很占用cpu资源，但当需要模糊匹配时它很有用，例如，当用户拼写错误时。另外我们可以在搜索词的尾部加上字符\",\"from()\",\"fuzzi\",\"fuzzyquery(\",\"gt()\",\"gte()\",\"id\",\"idsquery(\\\"my_type\\\",\",\"idsquery()\",\"includelower(false)\",\"includelower(true)\",\"includeupper(false)\",\"includeupper(true)\",\"level\",\"levenshtein\",\"levenshtein。\",\"lt()\",\"lte()\",\"margin\",\"non\",\"null\",\"null的值就会返回该文档。\",\"null）。\",\"numer\",\"origin\",\"prefix\",\"prefixquery(\",\"qb\",\"queri\",\"querybuild\",\"querybuilders.existsquery(\\\"name\\\");\",\"querybuilders.rangequery(\\\"age\\\").gte(19).lte(21);\",\"querybuilders.rangequery(\\\"age\\\");\",\"querybuilders.regexpquery(\\\"country\\\",\",\"querybuilders.wildcardquery(\\\"country\\\",\",\"query（id查询）\",\"query（前缀查询）\",\"query（多项查询）\",\"query（存在查询）\",\"query（模糊查询）\",\"query（正则表达式查询）\",\"query（类型查询）\",\"query（范围查询）\",\"query（通配符查询）\",\"query（项查询）\",\"rang\",\"rangequery(\\\"price\\\")\",\"rangequerybuild\",\"rangequerybuilder.from(19);\",\"rangequerybuilder.includelower(true);\",\"rangequerybuilder.includeupper(true);\",\"rangequerybuilder.to(21);\",\"regexp\",\"regexpquery(\",\"regexpquerybuild\",\"search\",\"searchrequestbuild\",\"searchrequestbuilder.execute().actionget();\",\"searchrequestbuilder.get();\",\"searchrequestbuilder.setquery(existsquerybuilder);\",\"searchrequestbuilder.setquery(rangequerybuilder);\",\"searchrequestbuilder.setquery(regexpquerybuilder);\",\"searchrequestbuilder.setquery(wildcardquerybuilder);\",\"searchrequestbuilder.settypes(type);\",\"searchrespons\",\"similar\",\"standard\",\"string\",\"term\",\"termquery(\",\"termsquery(\\\"tags\\\",\",\"though\",\"to()\",\"tokens,\",\"true:\",\"type\",\"typequery(\\\"my_type\\\");\",\"us\",\"wildcard\",\"wildcardquery(\\\"user\\\",\",\"wildcardquerybuild\",\"zero\",\"{\",\"}\",\"“~”\",\"上面代码中的查询语句与下面的是等价的：\",\"下面几个文档不会得到上面代码的匹配：\",\"举例说明，下面的几个文档都会得到上面代码的匹配：\",\"可以使用星号代替0个或多个字符，使用问号代替一个字符。星号表示匹配的数量不受限制，而后者的匹配字符数则受到限制。这个技巧主要用于英文搜索中，如输入““computer*”，就可以找到“computer、computers、computerised、computerized”等单词，而输入“comp?ter”，则只能找到“computer、compater、competer”等单词。注意的是通配符查询不太注重性能，在可能时尽量避免，特别是要避免前缀通配符（以通配符开始的词条）。\",\"和前缀查询一样，正则表达式查询指定字段是未分析的（not\",\"如果指定的字段是string类型，模糊查询是基于编辑距离算法来匹配文档。编辑距离的计算基于我们提供的查询词条和被搜索文档。如果指定的字段是数值类型或者日期类型，模糊查询基于在字段值上进行加减操作来匹配文档（th\",\"实例\",\"开始值\",\"执行\",\"方法：\",\"是可选择的，可以不写\",\"术语查询\",\"来进行模糊查询。\",\"查找指定字段包含以指定的精确前缀开头的值的文档。\",\"查看exist\",\"查看fuzzi\",\"查看id\",\"查看prefix\",\"查看rang\",\"查看regexp\",\"查看term\",\"查看type\",\"查看wildcard\",\"查询具有指定类型和\",\"查询包含任意一个在指定字段中指定的多个确切值的文档。\",\"查询包含在指定字段中指定的确切值的文档。\",\"查询将匹配字段值大于或等于此参数值的文档;\",\"查询将匹配字段值大于或等于此参数值的文档。\",\"查询将匹配字段值大于此参数值的文档。\",\"查询将匹配字段值小于或等于此参数值的文档;\",\"查询将匹配字段值小于或等于此参数值的文档。\",\"查询将匹配字段值小于此参数值的文档。\",\"查询指定字段包含与指定术语模糊相似的术语的文档。模糊性测量为1或2的\",\"查询指定字段包含与指定模式匹配的值的文档，其中该模式支持单字符通配符（？）和多字符通配符（*）,和前缀查询一样，通配符查询指定字段是未分析的（not\",\"查询指定字段包含指定范围内的值（日期，数字或字符串）的文档。\",\"查询指定的字段包含与指定的正则表达式匹配的值的文档。\",\"查询指定的字段包含任何非空值的文档,如果指定字段上至少存在一个no\",\"查询指定类型的文档。\",\"的文档。\",\"第一个是null值。\",\"第一个是字符串，是一个非null的值。\",\"第三个使用标准分析器的情况下尽管不会返回词条，但是原始字段值是非null的（even\",\"第三个只有null值，至少需要一个非null值。\",\"第二个是空字符串，也是非null。\",\"第二个没有值。\",\"第五个中至少有一个是非null值。\",\"第四个与指定字段不匹配。\",\"结束值\",\"虽然全文查询将在执行之前分析查询字符串，但是项级别查询对存储在反向索引中的确切项进行操作。\",\"表示\",\"这两个函数与includelower()和includeupper()函数配套使用。\",\"这些查询通常用于结构化数据，如数字、日期和枚举，而不是全文字段。或者，在分析过程之前，它允许你绘制低级查询。\",\"这样的查询有以下这些：\"],\"query-dsl/compound-queries.html\":[\"\\\"elasticsearch\\\"))\",\"\\\"index1\\\",\",\"\\\"index2\\\"\",\"\\\"kimchy\\\"))\",\"\\\"kimchy\\\"),\",\"\\\"kow\\\"));\",\"\\\"test1\\\"))\",\"\\\"test2\\\"))\",\"\\\"test3\\\"))\",\"\\\"test4\\\"))\",\"\\\"test5//\",\"\\\"wow\\\"),\",\"(match\",\")\",\").nomatchquery(\\\"all\\\");\",\").nomatchquery(termquery(\\\"tag\\\",\",\".add(termquery(\\\"name\\\",\",\".boost(1.2f)\",\".boost(2.0f);\",\".filter(termquery(\\\"content\\\",\",\".must(termquery(\\\"content\\\",\",\".mustnot(termquery(\\\"content\\\",\",\".negativeboost(0.2f);\",\".should(termquery(\\\"content\\\",\",\".tiebreaker(0.7f);\",\"//\",\"//boost\",\"//must\",\"//tie\",\"//分数\",\"//查询语句\",\"//根据年龄字段添加另一个function\",\"//根据查询添加第一个function\",\"//根据给定的种子随机分数\",\"0l,\",\"1l))\",\"=\",\"_index\",\"_score\",\"all)\",\"anoth\",\"bool\",\"boolquery()\",\"boost\",\"boostingquery(\",\"breaker\",\"compound\",\"constant_scor\",\"constantscorequery(\",\"dis_max\",\"dismaxquery()\",\"documents)\",\"exponentialdecayfunction(\\\"age\\\",\",\"factor\",\"filter\",\"filterfunctionbuilder[]\",\"function\",\"function_scor\",\"functionscorequerybuilder.filterfunctionbuilder(\",\"import\",\"indic\",\"indicesquery(\",\"main\",\"match\",\"matchquery(\\\"name\\\",\",\"max\",\"must_not\",\"must_not,\",\"neg\",\"new\",\"none\",\"on\",\"org.elasticsearch.index.query.functionscore.scorefunctionbuilders.*;\",\"posit\",\"qb\",\"queri\",\"querybuild\",\"querybuilders.functionscorequery(functions);\",\"randomfunction(\\\"abcdef\\\")),\",\"score\",\"should,\",\"static\",\"termquery(\\\"name\\\",\\\"dadoonet\\\"))\",\"termquery(\\\"name\\\",\\\"kimchy\\\")\",\"termquery(\\\"name\\\",\\\"kimchy\\\"),\",\"termquery(\\\"tag\\\",\",\"us\",\"{\",\"};\",\"。\",\"与一般查询作用一样，只不过不参与评分\",\"以及\",\"使用函数修改主查询返回的分数，以考虑诸如流行度，新近度，距离或使用脚本实现的自定义算法等因素。\",\"匹配条件越多，预期越好\",\"和\",\"在\",\"在5.0.0中已弃用。用搜索\",\"复合查询用来包装其他复合或者叶子查询，一方面可综合其结果和分数，从而改变它的行为，另一方面可从查询切换到过滤器上下文。此类查询包含：\",\"子句他们的分数相结合\",\"子句在过滤器上下文中执行。\",\"字段来代替\",\"对指定的索引执行一个查询，对其他索引执行另一个查询。\",\"支持多并发查询的查询，并可返回与任意查询条件子句匹配的任何文档类型。与\",\"条件。\",\"查看bool\",\"查看boost\",\"查看constant\",\"查看di\",\"查看function\",\"查看indic\",\"查询\",\"查询。\",\"查询只使用最佳匹配查询条件的分数。\",\"查询可以将所有匹配查询的分数相结合使用的方式不同的是，dis_max\",\"查询的文档，并且当减少文档的分数时其结果也匹配\",\"组合多个叶子并发查询或复合查询条件的默认查询类型，例如must,\",\"而\",\"返回匹配\",\"这是一个包装其他查询的查询，并且在过滤器上下文中执行。与此查询匹配的所有文件都需要返回相同的“常量”\"],\"query-dsl/joining-queries.html\":[\"\\\"blog\\\",\",\"\\\"blog_tag\\\",\",\"\\\"blue\\\"))\",\"\\\"elasticsearch\\\").build();\",\"\\\"obj1\\\",\",\"(嵌套查询)\",\"(有子查询)\",\"(有父查询)\",\");\",\".must(matchquery(\\\"obj1.name\\\",\",\".must(rangequery(\\\"obj1.count\\\").gt(5)),\",\"//\",\"//nest\",\"//score\",\"//是否从父hit的scor\",\"//查询\",\"//要查询的子类型\",\"9300)));\",\"=\",\"boolquery()\",\"child\",\"client\",\"client.addtransportaddress(new\",\"client，这个点很重要：\",\"elasticsearch\",\"fals\",\"has_child\",\"has_par\",\"hit\",\"inetsocketaddress(inetaddresses.forstring(\\\"127.0.0.1\\\"),\",\"inetsockettransportaddress(new\",\"join\",\"joinquerybuilders.haschildquery(\",\"joinquerybuilders.hasparentquery(\",\"join。\",\"lookup\",\"mechan\",\"nest\",\"nestedquery(\",\"new\",\"parent\",\"prebuilttransportclient(settings);\",\"qb\",\"qualified）。\",\"queri\",\"querybuild\",\"score\",\"scoremode.avg\",\"scoremode.avg,\",\"scoremode.max,\",\"scoremode.min,\",\"scoremode.non\",\"scoremode.tot\",\"scoremode.total,\",\"set\",\"settings.builder().put(\\\"cluster.name\\\",\",\"sql\",\"term\",\"termquery(\\\"tag\\\",\\\"something\\\"),\",\"transportcli\",\"一类父子关系可以存在单个的索引的两个类型的文档之间。has_child\",\"传给子\",\"使用\",\"使用has_child查询。\",\"使用has_parent查询时，必须使用prebuilttransportclient而不是常规\",\"则返回其父文档能满足特定查询的子文档\",\"参考\",\"否则，parent\",\"在像\",\"嵌套文档的路径\",\"提供了两种形式的\",\"文档中可能包含嵌套类型的字段，这些字段用来索引一些数组对象，每个对象都可以作为一条独立的文档被查询出来(用嵌套查询)\",\"查看ha\",\"查看nest\",\"查询\",\"查询。\",\"查询中引用的任何字段都必须使用完整路径（fulli\",\"查询中的term\",\"查询将返回其子文档能满足特定的查询的父文档，而\",\"查询时，必须使用prebuilttransportclient而不是常规\",\"模块不会被加载，并且不能从transport\",\"模型\",\"这样的分布式系统中执行全\",\"风格的连接查询代价昂贵，是不可行的。相应地，为了实现水平规模地扩展，elasticsearch\",\"，它允许你在另一个文档的值中创建一个term\"],\"query-dsl/geo-queries.html\":[\"\\\"countries\\\")\",\"\\\"deu\\\",\",\"\\\"pin.location\\\",\",\".distance(200,\",\".indexedshapeindex(\\\"shapes\\\")\",\".indexedshapepath(\\\"location\\\");\",\".point(40,\",\".relation(shaperelation.within))\",\".relation(shaperelation.within);\",\".setcorners(40.73,\",\"//\",\"//add\",\"//bound\",\"//center\",\"//distanc\",\"//field\",\"//index\",\"//initialis\",\"//name\",\"//relat\",\"//shape\",\"//the\",\"0));\",\"0.6\",\"1.13\",\"10));\",\"40.717,\",\"70)\",\"70));\",\"73.99);\",\"74.1,\",\"80));\",\"90));\",\"=\",\"arraylist();\",\"bottom\",\"bound\",\"box\",\"center\",\"classpath\",\"com.vividsolut\",\"contain\",\"coordinate(0,\",\"coordinate(10,\",\"default\",\"distanc\",\"distanceunit.kilometers);\",\"document\",\"elasticsearch支持两种类型的地理数据：geo_point类型支持成对的纬度/经度，geo_shape类型支持点、线、圆、多边形、多个多边形等。\",\"fall\",\"field\",\"geo\",\"geo_bounding_box\",\"geo_dist\",\"geo_polygon\",\"geo_shap\",\"geo_shape查询\",\"geoboundingboxquery(\\\"pin.location\\\")\",\"geodistancequery(\\\"pin.location\\\")\",\"geopoint(20,\",\"geopoint(30,\",\"geopoint(40,\",\"geopolygonquery(\\\"pin.location\\\",\",\"geoshapequery(\",\"id\",\"import\",\"index\",\"is.\",\"jt\",\"left\",\"list\",\"new\",\"org.elasticsearch.common.geo.builders.shapebuilder;\",\"org.elasticsearch.common.geo.shaperelation;\",\"org.locationtech.spatial4j\",\"path\",\"point\",\"points);\",\"points.add(new\",\"polygon\",\"pre\",\"qb\",\"queri\",\"querybuild\",\"right\",\"shape\",\"shape.\",\"shapebuild\",\"shapebuilders.newmultipoint(points)\",\"shaperel\",\"shaperelation.contains,\",\"shaperelation.disjoint\",\"shaperelation.intersect\",\"shaperelation.within,\",\"shapes.\",\"spatial4j\",\"specifi\",\"top\",\"type\",\"us\",\"within\",\"xerc\",\"xercesimpl\",\"中才能使用此类型：\",\"可以是\",\"和\",\"因此，必须将\",\"在这组的查询中：\",\"地理位置查询\",\"或\",\"查找在一个中心点指定范围内的地理点文档。\",\"查找指定多边形内地理点的文档。\",\"查找落入指定的矩形地理点的文档。\",\"查找要么相交，包含的，要么指定形状不相交的地理形状的文档。\",\"查看geo\",\"查询\",\"添加到\",\"类型使用\",\"，这两者都是可选的依赖项。\"],\"query-dsl/specialized-queries.html\":[\"\\\"amazing\\\");\",\"\\\"content\\\",\",\"\\\"docs\\\",\",\"\\\"elasticsearch\\\").build();\",\"\\\"mydesignatedqueryname\\\")\",\"\\\"myscript\\\",\",\"\\\"name.last\\\"};\",\"\\\"painless\\\",\",\"\\\"query\\\",\",\"\\\"thi\",\"\\\"type=percolator\\\")\",\"\\\"type=text\\\")\",\"'query':\",\");\",\".addmapping(\\\"docs\\\",\",\".addmapping(\\\"query\\\",\",\".endobject())\",\".field(\\\"query\\\",\",\".get();\",\".maxqueryterms(12);\",\".mintermfreq(1)\",\".setquery(percolatequery))\",\".setrefreshpolicy(refreshpolicy.immediate)\",\".setsource(jsonbuilder()\",\".startobject()\",\"//\",\"//build\",\"//end\",\"//field\",\"//ignor\",\"//index\",\"//inlin\",\"//iter\",\"//max\",\"//paramet\",\"//script\",\"//text\",\"//thi\",\"//脚本类型\",\"1\\\")\",\"5))\",\"9300)));\",\":\",\"=\",\">\",\"`myscript.painless\",\"against\",\"amazing!\\\");\",\"avail\",\"check\",\"client\",\"client().preparesearch(\\\"myindexname\\\")\",\"client.addtransportaddress(new\",\"client.admin().indices().preparecreate(\\\"myindexname\\\")\",\"client.prepareindex(\\\"myindexname\\\",\",\"collections.singletonmap(\\\"param1\\\",\",\"creat\",\"doc['num1'].valu\",\"docbuild\",\"docbuilder.bytes());\",\"docbuilder.endobject();\",\"docbuilder.field(\\\"content\\\",\",\"document\",\"dsl:\",\"engin\",\"execut\",\"field\",\"for(searchhit\",\"function_scor\",\"gener\",\"hit\",\"immedi\",\"index\",\"inetsocketaddress(inetaddresses.forstring(\\\"127.0.0.1\\\"),\",\"inetsockettransportaddress(new\",\"item\",\"item[]\",\"items)\",\"json\",\"map\",\"more_like_thi\",\"morelikethisquery(fields,\",\"mydesignatedquerynam\",\"name\",\"need\",\"new\",\"null;\",\"num\",\"object\",\"one\\\"};\",\"over\",\"params.param1\",\"percol\",\"percolate,\",\"percolatequeri\",\"percolatequerybuild\",\"percolatequerybuilder(\\\"query\\\",\",\"prebuilttransportclient(settings);\",\"qb\",\"qb)\",\"queri\",\"query(相似度查询)\",\"querybuild\",\"regist\",\"respons\",\"response.gethits())\",\"result\",\"root\",\"script\",\"script(\",\"script(\\\"doc['num1'].valu\",\"scriptquery(\",\"scripttype.file,\",\"scripttype.index\",\"scripttype.inline，\",\"searchrespons\",\"set\",\"settings.builder().put(\\\"cluster.name\\\",\",\"shall\",\"special\",\"string[]\",\"term\",\"termquery(\\\"content\\\",\",\"text\",\"texts,\",\"threshold\",\"transportcli\",\"we'r\",\"xcontentbuild\",\"xcontentfactory.jsonbuilder().startobject();\",\"{\",\"{\\\"name.first\\\",\",\"{\\\"text\",\"}\",\"。\",\"为了检查文档注册查询,使用这个代码:\",\"另请参阅\",\"在上面的index中query名为\",\"在可以使用percolate查询之前，应该添加percolator映射，并且应该对包含percolator查询的文档建立索引：\",\"如果已经在每个数据节点上存储名为\",\"查看more\",\"查看percol\",\"查看script\",\"然后使用：\",\"的脚本，请执行以下操作：\",\"脚本名\",\"脚本引擎\",\"该查询允许脚本充当过滤器。\",\"这个查询能检索到与指定文本、文档或者文档集合相似的文档。\"],\"query-dsl/span-queries.html\":[\"\\\"bar\\\"),\",\"\\\"baz\\\"))\",\"\\\"foo\\\"));\",\"\\\"ki\\\")\",\"\\\"kimchy\\\"\",\"\\\"kimchy\\\"),\",\"\\\"user\\\",\",\");\",\".addclause(spantermquery(\\\"field\\\",\\\"value2\\\"))\",\".addclause(spantermquery(\\\"field\\\",\\\"value3\\\"))\",\".addclause(spantermquery(\\\"field\\\",\\\"value3\\\"));\",\".addclause(spantermquery(\\\"field1\\\",\",\".addclause(spantermquery(\\\"field1\\\",\\\"baz\\\"))\",\".inorder(false);\",\".inorder(true),\",\"//big\",\"//field\",\"//littl\",\"//max\",\"//queri\",\"//slop\",\"//span\",\"//valu\",\"//whether\",\"//可以是multitermquerybuild\",\"12)\",\"3\",\"5)\",\"=\",\"contain\",\"end\",\"factor:\",\"filter\",\"first\",\"fuzzi\",\"interven\",\"match\",\"maximum\",\"multi\",\"near\",\"number\",\"order\",\"overlap\",\"part\",\"posit\",\"prefix,\",\"prefixquery(\\\"user\\\",\",\"prefixquerybuilder,\",\"qb\",\"queri\",\"querybuild\",\"range,\",\"rangequerybuilder,\",\"regexp\",\"regexpquerybuild\",\"requir\",\"return\",\"span\",\"span_contain\",\"span_first查询\",\"span_multi查询\",\"span_near查询\",\"span_not查询\",\"span_or查询\",\"span_term查询\",\"span_within查询\",\"spancontainingquery(\",\"spanfirstquery(\",\"spanmultitermquerybuilder(\",\"spannearquery(\",\"spannearquery(spantermquery(\\\"field1\\\",\",\"spannearquery(spantermquery(\\\"field1\\\",\\\"bar\\\"),\",\"spannotquery(\",\"spanorquery(\",\"spantermquery(\",\"spantermquery(\\\"field\\\",\\\"value1\\\"))\",\"spantermquery(\\\"field\\\",\\\"value1\\\"),\",\"spantermquery(\\\"field\\\",\\\"value2\\\"));\",\"spantermquery(\\\"field1\\\",\",\"spantermquery(\\\"field1\\\",\\\"foo\\\"));\",\"spantermquery(\\\"user\\\",\",\"spanwithinquery(\",\"term\",\"those\",\"unmatch\",\"whose\",\"wildcard,\",\"wildcardquerybuilder。\",\"within\",\"位于由其他span查询列表返回的范围内，就会返回单个span查询的结果，\",\"包含term,\",\"包装另一个span查询，并排除与该查询匹配的所有文档。\",\"只要其\",\"或者\",\"扩展\",\"接受span查询的列表，但仅返回与第二个spans查询匹配的span。\",\"接受另一个span查询，其匹配必须出现在字段的前n个位置。\",\"接受多个span查询，其匹配必须在彼此的指定距离内，并且可能顺序相同。\",\"查看\",\"查看span\",\"查询\",\"查询。\",\"比如：fuzzyquerybuilder,\",\"的\",\"等同于\",\"组合多个span查询\",\"返回与任何指定查询匹配的文档。\",\"，\",\"，但与其他span查询一起使用。\"],\"indexed-scripts-api.html\":[\"api\",\"index\",\"script\"],\"indexed-scripts-api/script-language.html\":[\"languag\",\"script\"],\"java-api-administration.html\":[\"administr\",\"api\",\"java\"],\"java-api-administration/indices-administration.html\":[\"administr\",\"indic\"],\"java-api-administration/cluster-administration.html\":[\"administr\",\"cluster\"]},\"length\":38},\"tokenStore\":{\"root\":{\"0\":{\"1\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.010330578512396695},\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.011570247933884297}},\"t\":{\"0\":{\"0\":{\"docs\":{},\":\":{\"0\":{\"0\":{\"docs\":{},\":\":{\"0\":{\"0\":{\"docs\":{},\".\":{\"0\":{\"0\":{\"0\":{\"docs\":{},\"z\":{\"docs\":{},\"]\":{\"docs\":{},\",\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.011570247933884297}}}}}},\"docs\":{}},\"docs\":{}},\"docs\":{}}},\"docs\":{}},\"docs\":{}}},\"docs\":{}},\"docs\":{}}},\"docs\":{}},\"docs\":{}}},\"docs\":{},\")\":{\"docs\":{},\";\":{\"docs\":{\"search-api/using-scrolls-in-java.html\":{\"ref\":\"search-api/using-scrolls-in-java.html\",\"tf\":0.00546448087431694}}},\")\":{\"docs\":{},\";\":{\"docs\":{\"query-dsl/geo-queries.html\":{\"ref\":\"query-dsl/geo-queries.html\",\"tf\":0.014705882352941176}}}}},\";\":{\"docs\":{\"search-api/multisearch-api.html\":{\"ref\":\"search-api/multisearch-api.html\",\"tf\":0.019230769230769232}}},\"l\":{\"docs\":{},\",\":{\"docs\":{\"query-dsl/compound-queries.html\":{\"ref\":\"query-dsl/compound-queries.html\",\"tf\":0.005847953216374269}}}},\".\":{\"6\":{\"docs\":{\"query-dsl/geo-queries.html\":{\"ref\":\"query-dsl/geo-queries.html\",\"tf\":0.004901960784313725}}},\"docs\":{}}},\"1\":{\"0\":{\"0\":{\"0\":{\"docs\":{\"document-apis/using-bulk-processor.html\":{\"ref\":\"document-apis/using-bulk-processor.html\",\"tf\":0.006024096385542169}}},\"docs\":{\"search-api/using-scrolls-in-java.html\":{\"ref\":\"search-api/using-scrolls-in-java.html\",\"tf\":0.00546448087431694}}},\"docs\":{},\".\":{\"0\":{\"docs\":{},\",\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}}},\")\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}},\"]\":{\"docs\":{},\",\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}},\"docs\":{}},\")\":{\"docs\":{},\")\":{\"docs\":{},\";\":{\"docs\":{\"query-dsl/geo-queries.html\":{\"ref\":\"query-dsl/geo-queries.html\",\"tf\":0.00980392156862745}}}}}},\"2\":{\"docs\":{},\")\":{\"docs\":{\"query-dsl/span-queries.html\":{\"ref\":\"query-dsl/span-queries.html\",\"tf\":0.005555555555555556}}}},\"3\":{\"docs\":{},\".\":{\"9\":{\"5\":{\"2\":{\"9\":{\"4\":{\"6\":{\"8\":{\"6\":{\"6\":{\"8\":{\"9\":{\"3\":{\"7\":{\"7\":{\"5\":{\"docs\":{},\"]\":{\"docs\":{},\",\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}}}}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}}},\"9\":{\"2\":{\"docs\":{},\".\":{\"1\":{\"6\":{\"8\":{\"docs\":{},\".\":{\"1\":{\"docs\":{},\".\":{\"0\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.001652892561983471}}},\"docs\":{}}},\"2\":{\"docs\":{},\".\":{\"0\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.001652892561983471}}},\"docs\":{}}},\"docs\":{}}},\"docs\":{}},\"docs\":{}},\"docs\":{}}},\"5\":{\"0\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.001652892561983471}},\"]\":{\"docs\":{},\",\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.001652892561983471}}}}},\"docs\":{}},\"6\":{\"0\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.001652892561983471}},\"]\":{\"docs\":{},\",\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.001652892561983471}}}}},\"docs\":{}},\"docs\":{}},\"docs\":{\"document-apis/using-bulk-processor.html\":{\"ref\":\"document-apis/using-bulk-processor.html\",\"tf\":0.006024096385542169}},\")\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.002066115702479339}}},\".\":{\"0\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.001652892561983471}},\"]\":{\"docs\":{},\",\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}},\"1\":{\"3\":{\"docs\":{\"query-dsl/geo-queries.html\":{\"ref\":\"query-dsl/geo-queries.html\",\"tf\":0.004901960784313725}}},\"docs\":{}},\"5\":{\"8\":{\"2\":{\"0\":{\"3\":{\"1\":{\"2\":{\"5\":{\"docs\":{},\"]\":{\"docs\":{},\",\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.001652892561983471}},\"]\":{\"docs\":{},\",\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}},\"f\":{\"docs\":{},\")\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}},\"docs\":{}},\"l\":{\"docs\":{},\")\":{\"docs\":{},\")\":{\"docs\":{\"query-dsl/compound-queries.html\":{\"ref\":\"query-dsl/compound-queries.html\",\"tf\":0.005847953216374269}}}}},\"\\\"\":{\"docs\":{},\")\":{\"docs\":{\"query-dsl/specialized-queries.html\":{\"ref\":\"query-dsl/specialized-queries.html\",\"tf\":0.004761904761904762}}}}},\"2\":{\"0\":{\"docs\":{},\".\":{\"0\":{\"docs\":{},\",\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}}}},\"docs\":{}}},\"docs\":{}},\"3\":{\"0\":{\"docs\":{},\"\\\"\":{\"docs\":{},\")\":{\"docs\":{},\";\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.004132231404958678}}}}},\"\\\\\":{\"docs\":{},\"\\\"\":{\"docs\":{},\",\":{\"docs\":{},\"\\\"\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.006198347107438017}}}}}},\".\":{\"0\":{\"docs\":{},\",\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}}}},\"docs\":{}}},\"docs\":{\"query-dsl/span-queries.html\":{\"ref\":\"query-dsl/span-queries.html\",\"tf\":0.005555555555555556}},\")\":{\"docs\":{},\")\":{\"docs\":{},\"/\":{\"docs\":{},\"/\":{\"docs\":{},\"设\":{\"docs\":{},\"置\":{\"docs\":{},\"自\":{\"docs\":{},\"定\":{\"docs\":{},\"义\":{\"docs\":{},\"重\":{\"docs\":{},\"复\":{\"docs\":{},\"请\":{\"docs\":{},\"求\":{\"docs\":{},\"机\":{\"docs\":{},\"制\":{\"docs\":{},\"，\":{\"docs\":{},\"最\":{\"docs\":{},\"开\":{\"docs\":{},\"始\":{\"docs\":{},\"等\":{\"docs\":{},\"待\":{\"1\":{\"0\":{\"0\":{\"docs\":{},\"毫\":{\"docs\":{},\"秒\":{\"docs\":{},\"，\":{\"docs\":{},\"之\":{\"docs\":{},\"后\":{\"docs\":{},\"成\":{\"docs\":{},\"倍\":{\"docs\":{},\"更\":{\"docs\":{},\"加\":{\"docs\":{},\"，\":{\"docs\":{},\"重\":{\"docs\":{},\"试\":{\"3\":{\"docs\":{},\"次\":{\"docs\":{},\"，\":{\"docs\":{},\"当\":{\"docs\":{},\"一\":{\"docs\":{},\"次\":{\"docs\":{},\"或\":{\"docs\":{},\"多\":{\"docs\":{},\"次\":{\"docs\":{},\"重\":{\"docs\":{},\"复\":{\"docs\":{},\"请\":{\"docs\":{},\"求\":{\"docs\":{},\"失\":{\"docs\":{},\"败\":{\"docs\":{},\"后\":{\"docs\":{},\"因\":{\"docs\":{},\"为\":{\"docs\":{},\"计\":{\"docs\":{},\"算\":{\"docs\":{},\"资\":{\"docs\":{},\"源\":{\"docs\":{},\"不\":{\"docs\":{},\"够\":{\"docs\":{},\"抛\":{\"docs\":{},\"出\":{\"docs\":{\"document-apis/using-bulk-processor.html\":{\"ref\":\"document-apis/using-bulk-processor.html\",\"tf\":0.006024096385542169}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"docs\":{}}}}}}}}}}}}}},\"docs\":{}},\"docs\":{}},\"docs\":{}}}}}}}}}}}}}}}}}}}}}},\".\":{\"0\":{\"docs\":{},\"]\":{\"docs\":{},\",\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}},\"docs\":{}}},\"4\":{\"0\":{\"docs\":{},\".\":{\"7\":{\"1\":{\"7\":{\"docs\":{},\",\":{\"docs\":{\"query-dsl/geo-queries.html\":{\"ref\":\"query-dsl/geo-queries.html\",\"tf\":0.004901960784313725}}}},\"docs\":{}},\"docs\":{}},\"docs\":{}}},\"docs\":{},\".\":{\"0\":{\"4\":{\"2\":{\"9\":{\"6\":{\"8\":{\"7\":{\"5\":{\"docs\":{},\"]\":{\"docs\":{},\",\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"1\":{\"9\":{\"0\":{\"0\":{\"2\":{\"9\":{\"3\":{\"0\":{\"8\":{\"1\":{\"5\":{\"6\":{\"6\":{\"7\":{\"6\":{\"docs\":{},\"]\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}}}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}}},\"5\":{\"0\":{\"0\":{\"docs\":{},\".\":{\"0\":{\"docs\":{},\")\":{\"docs\":{},\";\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}},\"]\":{\"docs\":{},\",\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}},\"docs\":{}}},\"docs\":{}},\"docs\":{},\".\":{\"0\":{\"docs\":{},\".\":{\"1\":{\"docs\":{\"./\":{\"ref\":\"./\",\"tf\":0.020833333333333332}}},\"docs\":{}},\",\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}}}},\"6\":{\"docs\":{},\".\":{\"3\":{\"docs\":{\"dependency.html\":{\"ref\":\"dependency.html\",\"tf\":0.07692307692307693},\"client/xpack-transport-client.html\":{\"ref\":\"client/xpack-transport-client.html\",\"tf\":0.01639344262295082}}},\"docs\":{}}},\"docs\":{}},\"m\":{\"docs\":{},\"b\":{\"docs\":{\"document-apis/using-bulk-processor.html\":{\"ref\":\"document-apis/using-bulk-processor.html\",\"tf\":0.006024096385542169}}}},\")\":{\"docs\":{\"query-dsl/span-queries.html\":{\"ref\":\"query-dsl/span-queries.html\",\"tf\":0.011111111111111112}},\")\":{\"docs\":{\"query-dsl/specialized-queries.html\":{\"ref\":\"query-dsl/specialized-queries.html\",\"tf\":0.004761904761904762}}}}},\"7\":{\"0\":{\"docs\":{},\")\":{\"docs\":{\"query-dsl/geo-queries.html\":{\"ref\":\"query-dsl/geo-queries.html\",\"tf\":0.004901960784313725}},\")\":{\"docs\":{},\";\":{\"docs\":{\"query-dsl/geo-queries.html\":{\"ref\":\"query-dsl/geo-queries.html\",\"tf\":0.004901960784313725}}}}}},\"3\":{\"docs\":{},\".\":{\"9\":{\"9\":{\"docs\":{},\")\":{\"docs\":{},\";\":{\"docs\":{\"query-dsl/geo-queries.html\":{\"ref\":\"query-dsl/geo-queries.html\",\"tf\":0.004901960784313725}}}}},\"docs\":{}},\"docs\":{}}},\"4\":{\"docs\":{},\".\":{\"1\":{\"docs\":{},\",\":{\"docs\":{\"query-dsl/geo-queries.html\":{\"ref\":\"query-dsl/geo-queries.html\",\"tf\":0.004901960784313725}}}},\"docs\":{}}},\"5\":{\"docs\":{},\".\":{\"0\":{\"docs\":{},\",\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}}}},\"docs\":{}}},\"docs\":{},\".\":{\"2\":{\"0\":{\"7\":{\"0\":{\"3\":{\"1\":{\"2\":{\"5\":{\"docs\":{},\"]\":{\"docs\":{},\",\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"5\":{\"5\":{\"8\":{\"5\":{\"9\":{\"3\":{\"7\":{\"5\":{\"docs\":{},\"]\":{\"docs\":{},\",\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}}},\"8\":{\"0\":{\"docs\":{},\")\":{\"docs\":{},\")\":{\"docs\":{},\";\":{\"docs\":{\"query-dsl/geo-queries.html\":{\"ref\":\"query-dsl/geo-queries.html\",\"tf\":0.004901960784313725}}}}}},\"docs\":{},\"次\":{\"docs\":{},\"，\":{\"docs\":{},\"等\":{\"docs\":{},\"待\":{\"5\":{\"0\":{\"docs\":{},\"毫\":{\"docs\":{},\"秒\":{\"docs\":{\"document-apis/using-bulk-processor.html\":{\"ref\":\"document-apis/using-bulk-processor.html\",\"tf\":0.006024096385542169}}}}},\"docs\":{}},\"docs\":{}}}}}},\"9\":{\"0\":{\"docs\":{},\")\":{\"docs\":{},\")\":{\"docs\":{},\";\":{\"docs\":{\"query-dsl/geo-queries.html\":{\"ref\":\"query-dsl/geo-queries.html\",\"tf\":0.004901960784313725}}}}}},\"3\":{\"0\":{\"0\":{\"docs\":{},\")\":{\"docs\":{},\")\":{\"docs\":{\"client/transport-client.html\":{\"ref\":\"client/transport-client.html\",\"tf\":0.011111111111111112},\"client/xpack-transport-client.html\":{\"ref\":\"client/xpack-transport-client.html\",\"tf\":0.01639344262295082}},\";\":{\"docs\":{\"client/transport-client.html\":{\"ref\":\"client/transport-client.html\",\"tf\":0.011111111111111112},\"client/xpack-transport-client.html\":{\"ref\":\"client/xpack-transport-client.html\",\"tf\":0.01639344262295082},\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.002066115702479339}}},\")\":{\"docs\":{},\";\":{\"docs\":{\"query-dsl/joining-queries.html\":{\"ref\":\"query-dsl/joining-queries.html\",\"tf\":0.014388489208633094},\"query-dsl/specialized-queries.html\":{\"ref\":\"query-dsl/specialized-queries.html\",\"tf\":0.004761904761904762}}}}}}},\"docs\":{}},\"docs\":{}},\"5\":{\"docs\":{},\".\":{\"0\":{\"docs\":{},\",\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}}}},\"docs\":{}}},\"9\":{\"docs\":{},\".\":{\"0\":{\"docs\":{},\")\":{\"docs\":{},\";\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}}}}},\"docs\":{}}},\"docs\":{}},\"docs\":{},\"a\":{\"docs\":{},\"g\":{\"docs\":{},\"g\":{\"1\":{\"docs\":{\"search-api/using-aggregations.html\":{\"ref\":\"search-api/using-aggregations.html\",\"tf\":0.029411764705882353}}},\"2\":{\"docs\":{\"search-api/using-aggregations.html\":{\"ref\":\"search-api/using-aggregations.html\",\"tf\":0.029411764705882353}}},\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.017518248175182483},\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.013223140495867768}},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"g\":{\"docs\":{\"./\":{\"ref\":\"./\",\"tf\":0.0625},\"search-api/using-aggregations.html\":{\"ref\":\"search-api/using-aggregations.html\",\"tf\":5.0588235294117645},\"aggregations.html\":{\"ref\":\"aggregations.html\",\"tf\":10.076923076923077},\"aggregations/structuring-aggregations.html\":{\"ref\":\"aggregations/structuring-aggregations.html\",\"tf\":5.135135135135135},\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":5.039416058394161},\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":5.034710743801653}},\"a\":{\"docs\":{},\"t\":{\"docs\":{},\"i\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}},\"s\":{\"docs\":{},\"）\":{\"docs\":{\"./\":{\"ref\":\"./\",\"tf\":0.020833333333333332}}}},\"）\":{\"docs\":{\"./\":{\"ref\":\"./\",\"tf\":0.020833333333333332}}},\"b\":{\"docs\":{},\"u\":{\"docs\":{},\"i\":{\"docs\":{},\"l\":{\"docs\":{},\"d\":{\"docs\":{\"aggregations.html\":{\"ref\":\"aggregations.html\",\"tf\":0.038461538461538464},\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.021897810218978103},\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.026446280991735537}},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"s\":{\"docs\":{},\".\":{\"docs\":{},\"d\":{\"docs\":{},\"a\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"h\":{\"docs\":{},\"i\":{\"docs\":{},\"s\":{\"docs\":{},\"t\":{\"docs\":{},\"o\":{\"docs\":{},\"g\":{\"docs\":{},\"r\":{\"docs\":{},\"a\":{\"docs\":{},\"m\":{\"docs\":{},\"(\":{\"docs\":{},\"\\\"\":{\"docs\":{},\"a\":{\"docs\":{},\"g\":{\"docs\":{},\"g\":{\"2\":{\"docs\":{},\"\\\"\":{\"docs\":{},\")\":{\"docs\":{\"search-api/using-aggregations.html\":{\"ref\":\"search-api/using-aggregations.html\",\"tf\":0.029411764705882353}}}}},\"docs\":{}}}}}}}}}}}}}}}}}}},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"m\":{\"docs\":{},\"s\":{\"docs\":{},\"(\":{\"docs\":{},\"\\\"\":{\"docs\":{},\"a\":{\"docs\":{},\"g\":{\"docs\":{},\"g\":{\"1\":{\"docs\":{},\"\\\"\":{\"docs\":{},\")\":{\"docs\":{},\".\":{\"docs\":{},\"f\":{\"docs\":{},\"i\":{\"docs\":{},\"e\":{\"docs\":{},\"l\":{\"docs\":{},\"d\":{\"docs\":{},\"(\":{\"docs\":{},\"\\\"\":{\"docs\":{},\"f\":{\"docs\":{},\"i\":{\"docs\":{},\"e\":{\"docs\":{},\"l\":{\"docs\":{},\"d\":{\"docs\":{},\"\\\"\":{\"docs\":{},\")\":{\"docs\":{\"search-api/using-aggregations.html\":{\"ref\":\"search-api/using-aggregations.html\",\"tf\":0.029411764705882353}}}}}}}}}}}}}}}}}}}},\"docs\":{}}}},\"b\":{\"docs\":{},\"y\":{\"docs\":{},\"_\":{\"docs\":{},\"c\":{\"docs\":{},\"o\":{\"docs\":{},\"u\":{\"docs\":{},\"n\":{\"docs\":{},\"t\":{\"docs\":{},\"r\":{\"docs\":{},\"y\":{\"docs\":{},\"\\\"\":{\"docs\":{},\")\":{\"docs\":{},\".\":{\"docs\":{},\"f\":{\"docs\":{},\"i\":{\"docs\":{},\"e\":{\"docs\":{},\"l\":{\"docs\":{},\"d\":{\"docs\":{},\"(\":{\"docs\":{},\"\\\"\":{\"docs\":{},\"c\":{\"docs\":{},\"o\":{\"docs\":{},\"u\":{\"docs\":{},\"n\":{\"docs\":{},\"t\":{\"docs\":{},\"r\":{\"docs\":{},\"y\":{\"docs\":{},\"\\\"\":{\"docs\":{},\")\":{\"docs\":{\"aggregations/structuring-aggregations.html\":{\"ref\":\"aggregations/structuring-aggregations.html\",\"tf\":0.02702702702702703}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"o\":{\"docs\":{},\"p\":{\"docs\":{},\"h\":{\"docs\":{},\"i\":{\"docs\":{},\"t\":{\"docs\":{},\"s\":{\"docs\":{},\"(\":{\"docs\":{},\"\\\"\":{\"docs\":{},\"t\":{\"docs\":{},\"o\":{\"docs\":{},\"p\":{\"docs\":{},\"\\\"\":{\"docs\":{},\")\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00291970802919708}}}}}}}}}}}}}}}},\"a\":{\"docs\":{},\"v\":{\"docs\":{},\"g\":{\"docs\":{},\"(\":{\"docs\":{},\"\\\"\":{\"docs\":{},\"a\":{\"docs\":{},\"v\":{\"docs\":{},\"g\":{\"docs\":{},\"_\":{\"docs\":{},\"h\":{\"docs\":{},\"e\":{\"docs\":{},\"i\":{\"docs\":{},\"g\":{\"docs\":{},\"h\":{\"docs\":{},\"t\":{\"docs\":{},\"\\\"\":{\"docs\":{},\")\":{\"docs\":{},\".\":{\"docs\":{},\"f\":{\"docs\":{},\"i\":{\"docs\":{},\"e\":{\"docs\":{},\"l\":{\"docs\":{},\"d\":{\"docs\":{},\"(\":{\"docs\":{},\"\\\"\":{\"docs\":{},\"h\":{\"docs\":{},\"e\":{\"docs\":{},\"i\":{\"docs\":{},\"g\":{\"docs\":{},\"h\":{\"docs\":{},\"t\":{\"docs\":{},\"\\\"\":{\"docs\":{},\")\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"m\":{\"docs\":{},\"i\":{\"docs\":{},\"s\":{\"docs\":{},\"s\":{\"docs\":{},\"i\":{\"docs\":{},\"n\":{\"docs\":{},\"g\":{\"docs\":{},\"(\":{\"docs\":{},\"\\\"\":{\"docs\":{},\"a\":{\"docs\":{},\"g\":{\"docs\":{},\"g\":{\"docs\":{},\"\\\"\":{\"docs\":{},\")\":{\"docs\":{},\".\":{\"docs\":{},\"f\":{\"docs\":{},\"i\":{\"docs\":{},\"e\":{\"docs\":{},\"l\":{\"docs\":{},\"d\":{\"docs\":{},\"(\":{\"docs\":{},\"\\\"\":{\"docs\":{},\"g\":{\"docs\":{},\"e\":{\"docs\":{},\"n\":{\"docs\":{},\"d\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"\\\"\":{\"docs\":{},\")\":{\"docs\":{},\";\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"。\":{\"docs\":{},\"这\":{\"docs\":{},\"两\":{\"docs\":{},\"种\":{\"docs\":{},\"不\":{\"docs\":{},\"同\":{\"docs\":{},\"的\":{\"docs\":{},\"聚\":{\"docs\":{},\"合\":{\"docs\":{},\"操\":{\"docs\":{},\"作\":{\"docs\":{},\"只\":{\"docs\":{},\"有\":{\"docs\":{},\"在\":{\"docs\":{},\"桶\":{\"docs\":{},\"聚\":{\"docs\":{},\"合\":{\"docs\":{},\"的\":{\"docs\":{},\"子\":{\"docs\":{},\"聚\":{\"docs\":{},\"合\":{\"docs\":{},\"操\":{\"docs\":{},\"作\":{\"docs\":{},\"中\":{\"docs\":{},\"才\":{\"docs\":{},\"会\":{\"docs\":{},\"有\":{\"docs\":{},\"不\":{\"docs\":{},\"同\":{\"docs\":{},\"的\":{\"docs\":{},\"表\":{\"docs\":{},\"现\":{\"docs\":{},\"（\":{\"docs\":{},\"有\":{\"docs\":{},\"些\":{\"docs\":{},\"桶\":{\"docs\":{},\"聚\":{\"docs\":{},\"合\":{\"docs\":{},\"可\":{\"docs\":{},\"以\":{\"docs\":{},\"基\":{\"docs\":{},\"于\":{\"docs\":{},\"每\":{\"docs\":{},\"个\":{\"docs\":{},\"的\":{\"docs\":{},\"数\":{\"docs\":{},\"值\":{\"docs\":{},\"计\":{\"docs\":{},\"量\":{\"docs\":{},\"来\":{\"docs\":{},\"对\":{\"docs\":{},\"返\":{\"docs\":{},\"回\":{\"docs\":{},\"的\":{\"docs\":{},\"桶\":{\"docs\":{},\"进\":{\"docs\":{},\"行\":{\"docs\":{},\"排\":{\"docs\":{},\"序\":{\"docs\":{},\"）\":{\"docs\":{},\"。\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"，\":{\"docs\":{},\"以\":{\"docs\":{},\"此\":{\"docs\":{},\"来\":{\"docs\":{},\"聚\":{\"docs\":{},\"合\":{\"docs\":{},\"每\":{\"docs\":{},\"个\":{\"docs\":{},\"桶\":{\"docs\":{},\"中\":{\"docs\":{},\"的\":{\"docs\":{},\"最\":{\"docs\":{},\"高\":{\"docs\":{},\"匹\":{\"docs\":{},\"配\":{\"docs\":{},\"的\":{\"docs\":{},\"文\":{\"docs\":{},\"档\":{\"docs\":{},\"。\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}}}}}}}}}}}}}}}}}}}},\"其\":{\"docs\":{},\"他\":{\"docs\":{},\"产\":{\"docs\":{},\"生\":{\"docs\":{},\"多\":{\"docs\":{},\"个\":{\"docs\":{},\"计\":{\"docs\":{},\"量\":{\"docs\":{},\"数\":{\"docs\":{},\"值\":{\"docs\":{},\"（\":{\"docs\":{},\"例\":{\"docs\":{},\"如\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}}}}}}}}}}}}}}}}}}},\"o\":{\"docs\":{},\"r\":{\"docs\":{},\"b\":{\"docs\":{},\"u\":{\"docs\":{},\"i\":{\"docs\":{},\"l\":{\"docs\":{},\"d\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}}}}}}}}}}},\")\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00291970802919708}}},\".\":{\"docs\":{},\"b\":{\"docs\":{},\"o\":{\"docs\":{},\"t\":{\"docs\":{},\"t\":{\"docs\":{},\"o\":{\"docs\":{},\"m\":{\"docs\":{},\"r\":{\"docs\":{},\"i\":{\"docs\":{},\"g\":{\"docs\":{},\"h\":{\"docs\":{},\"t\":{\"docs\":{},\"(\":{\"docs\":{},\")\":{\"docs\":{},\";\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}}}}}}}}}}}}}}}},\"g\":{\"docs\":{},\"e\":{\"docs\":{},\"t\":{\"docs\":{},\"a\":{\"docs\":{},\"v\":{\"docs\":{},\"g\":{\"docs\":{},\"(\":{\"docs\":{},\")\":{\"docs\":{},\";\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00291970802919708}}}}}}},\"g\":{\"docs\":{},\"g\":{\"docs\":{},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"g\":{\"docs\":{},\"a\":{\"docs\":{},\"t\":{\"docs\":{},\"i\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{},\"s\":{\"docs\":{},\"(\":{\"docs\":{},\")\":{\"docs\":{},\".\":{\"docs\":{},\"g\":{\"docs\":{},\"e\":{\"docs\":{},\"t\":{\"docs\":{},\"(\":{\"docs\":{},\"\\\"\":{\"docs\":{},\"n\":{\"docs\":{},\"a\":{\"docs\":{},\"m\":{\"docs\":{},\"e\":{\"docs\":{},\"\\\"\":{\"docs\":{},\")\":{\"docs\":{},\";\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"b\":{\"docs\":{},\"u\":{\"docs\":{},\"c\":{\"docs\":{},\"k\":{\"docs\":{},\"e\":{\"docs\":{},\"t\":{\"docs\":{},\"s\":{\"docs\":{},\"(\":{\"docs\":{},\")\":{\"docs\":{},\")\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854},\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.00743801652892562}}}}}}}}}}}},\"c\":{\"docs\":{},\"o\":{\"docs\":{},\"u\":{\"docs\":{},\"n\":{\"docs\":{},\"t\":{\"docs\":{},\"(\":{\"docs\":{},\")\":{\"docs\":{},\";\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00291970802919708}}}}}}}}}},\"m\":{\"docs\":{},\"a\":{\"docs\":{},\"x\":{\"docs\":{},\"(\":{\"docs\":{},\")\":{\"docs\":{},\";\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00291970802919708}}}}}}},\"i\":{\"docs\":{},\"n\":{\"docs\":{},\"(\":{\"docs\":{},\")\":{\"docs\":{},\";\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00291970802919708}}}}}}}},\"s\":{\"docs\":{},\"t\":{\"docs\":{},\"d\":{\"docs\":{},\"d\":{\"docs\":{},\"e\":{\"docs\":{},\"v\":{\"docs\":{},\"i\":{\"docs\":{},\"a\":{\"docs\":{},\"t\":{\"docs\":{},\"i\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{},\"(\":{\"docs\":{},\")\":{\"docs\":{},\";\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}}}}}}}}}}}}}}}},\"u\":{\"docs\":{},\"m\":{\"docs\":{},\"(\":{\"docs\":{},\")\":{\"docs\":{},\";\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00291970802919708}}}}},\"o\":{\"docs\":{},\"f\":{\"docs\":{},\"s\":{\"docs\":{},\"q\":{\"docs\":{},\"u\":{\"docs\":{},\"a\":{\"docs\":{},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"s\":{\"docs\":{},\"(\":{\"docs\":{},\")\":{\"docs\":{},\";\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}}}}}}}}}}}}}}}}},\"v\":{\"docs\":{},\"a\":{\"docs\":{},\"l\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"docs\":{},\"(\":{\"docs\":{},\")\":{\"docs\":{},\";\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.008759124087591242}}}}}}}},\"r\":{\"docs\":{},\"i\":{\"docs\":{},\"a\":{\"docs\":{},\"n\":{\"docs\":{},\"c\":{\"docs\":{},\"e\":{\"docs\":{},\"(\":{\"docs\":{},\")\":{\"docs\":{},\";\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}}}}}}}}}}}}},\"d\":{\"docs\":{},\"o\":{\"docs\":{},\"c\":{\"docs\":{},\"c\":{\"docs\":{},\"o\":{\"docs\":{},\"u\":{\"docs\":{},\"n\":{\"docs\":{},\"t\":{\"docs\":{},\"(\":{\"docs\":{},\")\":{\"docs\":{},\";\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.004132231404958678}}}}}}}}}}}}}}}},\"t\":{\"docs\":{},\"o\":{\"docs\":{},\"p\":{\"docs\":{},\"l\":{\"docs\":{},\"e\":{\"docs\":{},\"f\":{\"docs\":{},\"t\":{\"docs\":{},\"(\":{\"docs\":{},\")\":{\"docs\":{},\";\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}}}}}}}}}}}}}},\"a\":{\"docs\":{},\"i\":{\"docs\":{},\"n\":{\"docs\":{},\"s\":{\"docs\":{},\"t\":{\"docs\":{\"query-dsl/specialized-queries.html\":{\"ref\":\"query-dsl/specialized-queries.html\",\"tf\":0.004761904761904762}}}}}}}},\"p\":{\"docs\":{},\"a\":{\"docs\":{},\"c\":{\"docs\":{},\"h\":{\"docs\":{},\"e\":{\"docs\":{},\"c\":{\"docs\":{},\"n\":{\"docs\":{},\"（\":{\"docs\":{},\"a\":{\"docs\":{},\"p\":{\"docs\":{},\"a\":{\"docs\":{},\"c\":{\"docs\":{},\"h\":{\"docs\":{},\"e\":{\"docs\":{},\"中\":{\"docs\":{},\"文\":{\"docs\":{},\"网\":{\"docs\":{\"./\":{\"ref\":\"./\",\"tf\":0.020833333333333332}}}}}}}}}}}}}}}}}},\"i\":{\"docs\":{\"./\":{\"ref\":\"./\",\"tf\":0.0625},\"document-apis.html\":{\"ref\":\"document-apis.html\",\"tf\":5},\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":5.006198347107438},\"document-apis/get-api.html\":{\"ref\":\"document-apis/get-api.html\",\"tf\":10.068965517241379},\"document-apis/delete-api.html\":{\"ref\":\"document-apis/delete-api.html\",\"tf\":5.052631578947368},\"document-apis/delete-by-query-api.html\":{\"ref\":\"document-apis/delete-by-query-api.html\",\"tf\":3.3518518518518516},\"document-apis/update-api.html\":{\"ref\":\"document-apis/update-api.html\",\"tf\":5.007407407407407},\"document-apis/multi-get-api.html\":{\"ref\":\"document-apis/multi-get-api.html\",\"tf\":5.021739130434782},\"document-apis/bulk-api.html\":{\"ref\":\"document-apis/bulk-api.html\",\"tf\":5.0144927536231885},\"search-api.html\":{\"ref\":\"search-api.html\",\"tf\":5.017241379310345},\"search-api/multisearch-api.html\":{\"ref\":\"search-api/multisearch-api.html\",\"tf\":5.0576923076923075},\"search-api/using-aggregations.html\":{\"ref\":\"search-api/using-aggregations.html\",\"tf\":0.029411764705882353},\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.017518248175182483},\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.013223140495867768},\"query-dsl.html\":{\"ref\":\"query-dsl.html\",\"tf\":0.043478260869565216},\"indexed-scripts-api.html\":{\"ref\":\"indexed-scripts-api.html\",\"tf\":3.333333333333333},\"java-api-administration.html\":{\"ref\":\"java-api-administration.html\",\"tf\":3.333333333333333}},\")\":{\"docs\":{\"./\":{\"ref\":\"./\",\"tf\":0.020833333333333332}}},\"之\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"m\":{\"docs\":{},\"q\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"i\":{\"docs\":{\"./\":{\"ref\":\"./\",\"tf\":0.020833333333333332}}}}}}}}}}}},\"操\":{\"docs\":{},\"作\":{\"docs\":{\"./\":{\"ref\":\"./\",\"tf\":0.020833333333333332}}}},\"包\":{\"docs\":{},\"已\":{\"docs\":{},\"经\":{\"docs\":{},\"上\":{\"docs\":{},\"传\":{\"docs\":{},\"到\":{\"docs\":{\"dependency.html\":{\"ref\":\"dependency.html\",\"tf\":0.07692307692307693}}}}}}}},\"可\":{\"docs\":{},\"以\":{\"docs\":{},\"通\":{\"docs\":{},\"过\":{\"docs\":{},\"i\":{\"docs\":{},\"d\":{\"docs\":{},\"查\":{\"docs\":{},\"看\":{\"docs\":{},\"文\":{\"docs\":{},\"档\":{\"docs\":{},\"：\":{\"docs\":{\"document-apis/get-api.html\":{\"ref\":\"document-apis/get-api.html\",\"tf\":0.034482758620689655}}}}}}}}}}},\"批\":{\"docs\":{},\"量\":{\"docs\":{},\"插\":{\"docs\":{},\"入\":{\"docs\":{},\"：\":{\"docs\":{\"document-apis/bulk-api.html\":{\"ref\":\"document-apis/bulk-api.html\",\"tf\":0.014492753623188406}}}}}}},\"允\":{\"docs\":{},\"许\":{\"docs\":{},\"我\":{\"docs\":{},\"们\":{\"docs\":{},\"检\":{\"docs\":{},\"索\":{\"docs\":{},\"大\":{\"docs\":{},\"量\":{\"docs\":{},\"数\":{\"docs\":{},\"据\":{\"docs\":{},\"（\":{\"docs\":{},\"甚\":{\"docs\":{},\"至\":{\"docs\":{},\"全\":{\"docs\":{},\"部\":{\"docs\":{},\"数\":{\"docs\":{},\"据\":{\"docs\":{},\"）\":{\"docs\":{},\"。\":{\"docs\":{},\"s\":{\"docs\":{},\"c\":{\"docs\":{},\"r\":{\"docs\":{},\"o\":{\"docs\":{},\"l\":{\"docs\":{\"search-api/using-scrolls-in-java.html\":{\"ref\":\"search-api/using-scrolls-in-java.html\",\"tf\":0.00546448087431694}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"默\":{\"docs\":{},\"认\":{\"docs\":{},\"提\":{\"docs\":{},\"供\":{\"docs\":{},\"q\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"y\":{\"docs\":{},\"_\":{\"docs\":{},\"a\":{\"docs\":{},\"n\":{\"docs\":{},\"d\":{\"docs\":{},\"_\":{\"docs\":{},\"f\":{\"docs\":{},\"e\":{\"docs\":{},\"t\":{\"docs\":{},\"c\":{\"docs\":{},\"h\":{\"docs\":{\"search-api.html\":{\"ref\":\"search-api.html\",\"tf\":0.017241379310344827}}}}}}}}}}}}}}}}}}}}},\"允\":{\"docs\":{},\"许\":{\"docs\":{},\"我\":{\"docs\":{},\"们\":{\"docs\":{},\"做\":{\"docs\":{},\"一\":{\"docs\":{},\"个\":{\"docs\":{},\"初\":{\"docs\":{},\"始\":{\"docs\":{},\"阶\":{\"docs\":{},\"段\":{\"docs\":{},\"搜\":{\"docs\":{},\"索\":{\"docs\":{},\"并\":{\"docs\":{},\"且\":{\"docs\":{},\"持\":{\"docs\":{},\"续\":{\"docs\":{},\"批\":{\"docs\":{},\"量\":{\"docs\":{},\"从\":{\"docs\":{},\"e\":{\"docs\":{},\"l\":{\"docs\":{},\"a\":{\"docs\":{},\"s\":{\"docs\":{},\"t\":{\"docs\":{},\"i\":{\"docs\":{},\"c\":{\"docs\":{},\"s\":{\"docs\":{},\"e\":{\"docs\":{},\"a\":{\"docs\":{},\"r\":{\"docs\":{},\"c\":{\"docs\":{},\"h\":{\"docs\":{},\"里\":{\"docs\":{},\"拉\":{\"docs\":{},\"取\":{\"docs\":{},\"结\":{\"docs\":{},\"果\":{\"docs\":{},\"直\":{\"docs\":{},\"到\":{\"docs\":{},\"没\":{\"docs\":{},\"有\":{\"docs\":{},\"结\":{\"docs\":{},\"果\":{\"docs\":{},\"剩\":{\"docs\":{},\"下\":{\"docs\":{},\"。\":{\"docs\":{},\"这\":{\"docs\":{},\"有\":{\"docs\":{},\"点\":{\"docs\":{},\"像\":{\"docs\":{},\"传\":{\"docs\":{},\"统\":{\"docs\":{},\"数\":{\"docs\":{},\"据\":{\"docs\":{},\"库\":{\"docs\":{},\"里\":{\"docs\":{},\"的\":{\"docs\":{},\"c\":{\"docs\":{},\"u\":{\"docs\":{},\"r\":{\"docs\":{},\"s\":{\"docs\":{},\"o\":{\"docs\":{},\"r\":{\"docs\":{},\"s\":{\"docs\":{},\"（\":{\"docs\":{},\"游\":{\"docs\":{},\"标\":{\"docs\":{},\"）\":{\"docs\":{},\"。\":{\"docs\":{\"search-api/using-scrolls-in-java.html\":{\"ref\":\"search-api/using-scrolls-in-java.html\",\"tf\":0.00546448087431694}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"的\":{\"docs\":{},\"创\":{\"docs\":{},\"建\":{\"docs\":{},\"并\":{\"docs\":{},\"不\":{\"docs\":{},\"是\":{\"docs\":{},\"为\":{\"docs\":{},\"了\":{\"docs\":{},\"实\":{\"docs\":{},\"时\":{\"docs\":{},\"的\":{\"docs\":{},\"用\":{\"docs\":{},\"户\":{\"docs\":{},\"响\":{\"docs\":{},\"应\":{\"docs\":{},\"，\":{\"docs\":{},\"而\":{\"docs\":{},\"是\":{\"docs\":{},\"为\":{\"docs\":{},\"了\":{\"docs\":{},\"处\":{\"docs\":{},\"理\":{\"docs\":{},\"大\":{\"docs\":{},\"量\":{\"docs\":{},\"的\":{\"docs\":{},\"数\":{\"docs\":{},\"据\":{\"docs\":{},\"（\":{\"docs\":{},\"s\":{\"docs\":{},\"c\":{\"docs\":{},\"r\":{\"docs\":{},\"o\":{\"docs\":{},\"l\":{\"docs\":{\"search-api/using-scrolls-in-java.html\":{\"ref\":\"search-api/using-scrolls-in-java.html\",\"tf\":0.00546448087431694}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"进\":{\"docs\":{},\"行\":{\"docs\":{},\"清\":{\"docs\":{},\"除\":{\"docs\":{},\"。\":{\"docs\":{\"search-api/using-scrolls-in-java.html\":{\"ref\":\"search-api/using-scrolls-in-java.html\",\"tf\":0.00546448087431694}}}}}}},\"来\":{\"docs\":{},\"使\":{\"docs\":{},\"用\":{\"docs\":{},\"聚\":{\"docs\":{},\"合\":{\"docs\":{},\"。\":{\"docs\":{\"aggregations.html\":{\"ref\":\"aggregations.html\",\"tf\":0.038461538461538464}}}}}}}}},\"p\":{\"docs\":{},\"l\":{\"docs\":{},\"i\":{\"docs\":{},\"c\":{\"docs\":{},\"a\":{\"docs\":{},\"t\":{\"docs\":{},\"i\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{},\"\\\"\":{\"docs\":{},\")\":{\"docs\":{},\".\":{\"docs\":{},\"b\":{\"docs\":{},\"u\":{\"docs\":{},\"i\":{\"docs\":{},\"l\":{\"docs\":{},\"d\":{\"docs\":{},\"(\":{\"docs\":{},\")\":{\"docs\":{},\";\":{\"docs\":{},\"/\":{\"docs\":{},\"/\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.002066115702479339}}}}}}}}}}}}}}}}}}}}}}},\"r\":{\"docs\":{},\"o\":{\"docs\":{},\"x\":{\"docs\":{},\"i\":{\"docs\":{},\"m\":{\"docs\":{},\"a\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\")\":{\"docs\":{},\"）\":{\"docs\":{},\"和\":{\"docs\":{},\"压\":{\"docs\":{},\"缩\":{\"docs\":{},\"（\":{\"docs\":{},\"c\":{\"docs\":{},\"o\":{\"docs\":{},\"m\":{\"docs\":{},\"p\":{\"docs\":{},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"s\":{\"docs\":{},\"s\":{\"docs\":{},\"i\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{},\"）\":{\"docs\":{},\"以\":{\"docs\":{},\"获\":{\"docs\":{},\"得\":{\"docs\":{},\"关\":{\"docs\":{},\"于\":{\"docs\":{},\"近\":{\"docs\":{},\"视\":{\"docs\":{},\"值\":{\"docs\":{},\"的\":{\"docs\":{},\"建\":{\"docs\":{},\"议\":{\"docs\":{},\"和\":{\"docs\":{},\"内\":{\"docs\":{},\"存\":{\"docs\":{},\"使\":{\"docs\":{},\"用\":{\"docs\":{},\"的\":{\"docs\":{},\"百\":{\"docs\":{},\"分\":{\"docs\":{},\"比\":{\"docs\":{},\"排\":{\"docs\":{},\"位\":{\"docs\":{},\"聚\":{\"docs\":{},\"合\":{\"docs\":{},\"。\":{\"docs\":{},\"百\":{\"docs\":{},\"分\":{\"docs\":{},\"比\":{\"docs\":{},\"排\":{\"docs\":{},\"位\":{\"docs\":{},\"展\":{\"docs\":{},\"示\":{\"docs\":{},\"那\":{\"docs\":{},\"些\":{\"docs\":{},\"在\":{\"docs\":{},\"某\":{\"docs\":{},\"一\":{\"docs\":{},\"值\":{\"docs\":{},\"之\":{\"docs\":{},\"下\":{\"docs\":{},\"的\":{\"docs\":{},\"观\":{\"docs\":{},\"测\":{\"docs\":{},\"值\":{\"docs\":{},\"的\":{\"docs\":{},\"百\":{\"docs\":{},\"分\":{\"docs\":{},\"比\":{\"docs\":{},\"。\":{\"docs\":{},\"例\":{\"docs\":{},\"如\":{\"docs\":{},\"，\":{\"docs\":{},\"假\":{\"docs\":{},\"如\":{\"docs\":{},\"某\":{\"docs\":{},\"一\":{\"docs\":{},\"直\":{\"docs\":{},\"大\":{\"docs\":{},\"于\":{\"docs\":{},\"等\":{\"docs\":{},\"于\":{\"docs\":{},\"被\":{\"docs\":{},\"观\":{\"docs\":{},\"测\":{\"docs\":{},\"值\":{\"docs\":{},\"的\":{\"9\":{\"5\":{\"docs\":{},\"%\":{\"docs\":{},\"，\":{\"docs\":{},\"则\":{\"docs\":{},\"称\":{\"docs\":{},\"其\":{\"docs\":{},\"为\":{\"docs\":{},\"第\":{\"9\":{\"5\":{\"docs\":{},\"百\":{\"docs\":{},\"分\":{\"docs\":{},\"位\":{\"docs\":{},\"数\":{\"docs\":{},\"。\":{\"docs\":{},\"假\":{\"docs\":{},\"设\":{\"docs\":{},\"你\":{\"docs\":{},\"的\":{\"docs\":{},\"数\":{\"docs\":{},\"据\":{\"docs\":{},\"由\":{\"docs\":{},\"网\":{\"docs\":{},\"页\":{\"docs\":{},\"加\":{\"docs\":{},\"载\":{\"docs\":{},\"时\":{\"docs\":{},\"间\":{\"docs\":{},\"组\":{\"docs\":{},\"成\":{\"docs\":{},\"。\":{\"docs\":{},\"你\":{\"docs\":{},\"可\":{\"docs\":{},\"能\":{\"docs\":{},\"有\":{\"docs\":{},\"一\":{\"docs\":{},\"个\":{\"docs\":{},\"服\":{\"docs\":{},\"务\":{\"docs\":{},\"协\":{\"docs\":{},\"议\":{\"docs\":{},\"，\":{\"9\":{\"5\":{\"docs\":{},\"%\":{\"docs\":{},\"页\":{\"docs\":{},\"面\":{\"docs\":{},\"需\":{\"docs\":{},\"要\":{\"docs\":{},\"在\":{\"1\":{\"5\":{\"docs\":{},\"m\":{\"docs\":{},\"s\":{\"docs\":{},\"加\":{\"docs\":{},\"载\":{\"docs\":{},\"完\":{\"docs\":{},\"全\":{\"docs\":{},\"，\":{\"9\":{\"9\":{\"docs\":{},\"%\":{\"docs\":{},\"页\":{\"docs\":{},\"面\":{\"docs\":{},\"在\":{\"3\":{\"0\":{\"docs\":{},\"m\":{\"docs\":{},\"s\":{\"docs\":{},\"加\":{\"docs\":{},\"载\":{\"docs\":{},\"完\":{\"docs\":{},\"全\":{\"docs\":{},\"。\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}}}}}}}}}},\"docs\":{}},\"docs\":{}}}}}},\"docs\":{}},\"docs\":{}}}}}}}}},\"docs\":{}},\"docs\":{}}}}}}}},\"docs\":{}},\"docs\":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"docs\":{}},\"docs\":{}}}}}}}}},\"docs\":{}},\"docs\":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"d\":{\"docs\":{},\"d\":{\"docs\":{\"document-apis/using-bulk-processor.html\":{\"ref\":\"document-apis/using-bulk-processor.html\",\"tf\":0.006024096385542169},\"aggregations.html\":{\"ref\":\"aggregations.html\",\"tf\":0.038461538461538464}},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"s\":{\"docs\":{},\"s\":{\"docs\":{\"client/transport-client.html\":{\"ref\":\"client/transport-client.html\",\"tf\":0.011111111111111112}}}}}}},\"m\":{\"docs\":{},\"i\":{\"docs\":{},\"n\":{\"docs\":{},\"i\":{\"docs\":{},\"s\":{\"docs\":{},\"t\":{\"docs\":{},\"r\":{\"docs\":{\"java-api-administration.html\":{\"ref\":\"java-api-administration.html\",\"tf\":3.333333333333333},\"java-api-administration/indices-administration.html\":{\"ref\":\"java-api-administration/indices-administration.html\",\"tf\":5},\"java-api-administration/cluster-administration.html\":{\"ref\":\"java-api-administration/cluster-administration.html\",\"tf\":5}}}}}}}}}},\"c\":{\"docs\":{},\"t\":{\"docs\":{},\"i\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{},\"l\":{\"docs\":{},\"i\":{\"docs\":{},\"s\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"n\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"(\":{\"docs\":{},\")\":{\"docs\":{\"document-apis/delete-by-query-api.html\":{\"ref\":\"document-apis/delete-by-query-api.html\",\"tf\":0.018518518518518517}}}}}}}}}}}}}}}}},\"f\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"b\":{\"docs\":{},\"u\":{\"docs\":{},\"l\":{\"docs\":{},\"k\":{\"docs\":{},\"(\":{\"docs\":{},\"l\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{},\"g\":{\"docs\":{\"document-apis/using-bulk-processor.html\":{\"ref\":\"document-apis/using-bulk-processor.html\",\"tf\":0.012048192771084338}}}}}}}}}}}}}}},\"n\":{\"docs\":{},\"y\":{\"docs\":{},\"m\":{\"docs\":{},\"o\":{\"docs\":{},\"r\":{\"docs\":{\"document-apis/using-bulk-processor.html\":{\"ref\":\"document-apis/using-bulk-processor.html\",\"tf\":0.006024096385542169}}}}}},\"a\":{\"docs\":{},\"l\":{\"docs\":{},\"y\":{\"docs\":{},\"z\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125}},\"e\":{\"docs\":{},\"d\":{\"docs\":{},\"）\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125}},\"。\":{\"docs\":{},\"正\":{\"docs\":{},\"则\":{\"docs\":{},\"表\":{\"docs\":{},\"达\":{\"docs\":{},\"式\":{\"docs\":{},\"查\":{\"docs\":{},\"询\":{\"docs\":{},\"的\":{\"docs\":{},\"性\":{\"docs\":{},\"能\":{\"docs\":{},\"取\":{\"docs\":{},\"决\":{\"docs\":{},\"于\":{\"docs\":{},\"所\":{\"docs\":{},\"选\":{\"docs\":{},\"的\":{\"docs\":{},\"正\":{\"docs\":{},\"则\":{\"docs\":{},\"表\":{\"docs\":{},\"达\":{\"docs\":{},\"式\":{\"docs\":{},\"。\":{\"docs\":{},\"如\":{\"docs\":{},\"果\":{\"docs\":{},\"我\":{\"docs\":{},\"们\":{\"docs\":{},\"的\":{\"docs\":{},\"正\":{\"docs\":{},\"则\":{\"docs\":{},\"表\":{\"docs\":{},\"达\":{\"docs\":{},\"式\":{\"docs\":{},\"匹\":{\"docs\":{},\"配\":{\"docs\":{},\"许\":{\"docs\":{},\"多\":{\"docs\":{},\"词\":{\"docs\":{},\"条\":{\"docs\":{},\"，\":{\"docs\":{},\"查\":{\"docs\":{},\"询\":{\"docs\":{},\"将\":{\"docs\":{},\"很\":{\"docs\":{},\"慢\":{\"docs\":{},\"。\":{\"docs\":{},\"一\":{\"docs\":{},\"般\":{\"docs\":{},\"规\":{\"docs\":{},\"则\":{\"docs\":{},\"是\":{\"docs\":{},\"，\":{\"docs\":{},\"正\":{\"docs\":{},\"则\":{\"docs\":{},\"表\":{\"docs\":{},\"达\":{\"docs\":{},\"式\":{\"docs\":{},\"匹\":{\"docs\":{},\"配\":{\"docs\":{},\"的\":{\"docs\":{},\"词\":{\"docs\":{},\"条\":{\"docs\":{},\"数\":{\"docs\":{},\"越\":{\"docs\":{},\"高\":{\"docs\":{},\"，\":{\"docs\":{},\"查\":{\"docs\":{},\"询\":{\"docs\":{},\"越\":{\"docs\":{},\"慢\":{\"docs\":{},\"。\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"o\":{\"docs\":{},\"t\":{\"docs\":{},\"h\":{\"docs\":{\"query-dsl/compound-queries.html\":{\"ref\":\"query-dsl/compound-queries.html\",\"tf\":0.005847953216374269}}}}}},\"m\":{\"docs\":{},\"o\":{\"docs\":{},\"u\":{\"docs\":{},\"n\":{\"docs\":{},\"t\":{\"docs\":{\"search-api/using-scrolls-in-java.html\":{\"ref\":\"search-api/using-scrolls-in-java.html\",\"tf\":0.00546448087431694}}}}}},\"a\":{\"docs\":{},\"z\":{\"docs\":{},\"i\":{\"docs\":{},\"n\":{\"docs\":{},\"g\":{\"docs\":{},\"!\":{\"docs\":{},\"\\\"\":{\"docs\":{},\")\":{\"docs\":{},\";\":{\"docs\":{\"query-dsl/specialized-queries.html\":{\"ref\":\"query-dsl/specialized-queries.html\",\"tf\":0.004761904761904762}}}}}}}}}}}},\"v\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"a\":{\"docs\":{},\"g\":{\"docs\":{\"aggregations/structuring-aggregations.html\":{\"ref\":\"aggregations/structuring-aggregations.html\",\"tf\":0.02702702702702703}}}}}},\"g\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00583941605839416}},\"a\":{\"docs\":{},\"g\":{\"docs\":{},\"g\":{\"docs\":{},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"g\":{\"docs\":{},\"a\":{\"docs\":{},\"t\":{\"docs\":{},\"i\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{},\"b\":{\"docs\":{},\"u\":{\"docs\":{},\"i\":{\"docs\":{},\"l\":{\"docs\":{},\"d\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}}}}}}}}}}}}}}}}}}},\"a\":{\"docs\":{},\"i\":{\"docs\":{},\"l\":{\"docs\":{\"query-dsl/specialized-queries.html\":{\"ref\":\"query-dsl/specialized-queries.html\",\"tf\":0.004761904761904762}}}}}},\"s\":{\"docs\":{},\"k\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}}}},\"l\":{\"docs\":{},\"l\":{\"docs\":{},\")\":{\"docs\":{\"query-dsl/compound-queries.html\":{\"ref\":\"query-dsl/compound-queries.html\",\"tf\":0.005847953216374269}}}}},\"r\":{\"docs\":{},\"r\":{\"docs\":{},\"a\":{\"docs\":{},\"y\":{\"docs\":{},\"l\":{\"docs\":{},\"i\":{\"docs\":{},\"s\":{\"docs\":{},\"t\":{\"docs\":{},\"\":{\"docs\":{},\"(\":{\"docs\":{},\")\":{\"docs\":{},\";\":{\"docs\":{\"query-dsl/geo-queries.html\":{\"ref\":\"query-dsl/geo-queries.html\",\"tf\":0.00980392156862745}}}}}}}}}}}}}}}},\"e\":{\"docs\":{},\"l\":{\"docs\":{},\"a\":{\"docs\":{},\"s\":{\"docs\":{},\"t\":{\"docs\":{\"./\":{\"ref\":\"./\",\"tf\":0.020833333333333332}},\"i\":{\"docs\":{},\"c\":{\"docs\":{},\"s\":{\"docs\":{},\"e\":{\"docs\":{},\"a\":{\"docs\":{},\"r\":{\"docs\":{},\"c\":{\"docs\":{},\"h\":{\"docs\":{\"./\":{\"ref\":\"./\",\"tf\":0.10416666666666667},\"dependency.html\":{\"ref\":\"dependency.html\",\"tf\":0.07692307692307693},\"client/xpack-transport-client.html\":{\"ref\":\"client/xpack-transport-client.html\",\"tf\":0.03278688524590164},\"search-api/using-scrolls-in-java.html\":{\"ref\":\"search-api/using-scrolls-in-java.html\",\"tf\":0.00546448087431694},\"query-dsl.html\":{\"ref\":\"query-dsl.html\",\"tf\":0.043478260869565216},\"query-dsl/joining-queries.html\":{\"ref\":\"query-dsl/joining-queries.html\",\"tf\":0.007194244604316547}},\"性\":{\"docs\":{},\"能\":{\"docs\":{},\"调\":{\"docs\":{},\"优\":{\"docs\":{\"./\":{\"ref\":\"./\",\"tf\":0.020833333333333332}}}}}},\"\\\"\":{\"docs\":{\"query-dsl/full-text-queries.html\":{\"ref\":\"query-dsl/full-text-queries.html\",\"tf\":0.011904761904761904}},\")\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.004132231404958678},\"document-apis/bulk-api.html\":{\"ref\":\"document-apis/bulk-api.html\",\"tf\":0.014492753623188406}},\";\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.006198347107438017},\"query-dsl/full-text-queries.html\":{\"ref\":\"query-dsl/full-text-queries.html\",\"tf\":0.023809523809523808}}}},\",\":{\"docs\":{\"query-dsl/full-text-queries.html\":{\"ref\":\"query-dsl/full-text-queries.html\",\"tf\":0.011904761904761904}}}},\"\\\\\":{\"docs\":{},\"\\\"\":{\"docs\":{},\"\\\"\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.002066115702479339}}}}},\"已\":{\"docs\":{},\"经\":{\"docs\":{},\"使\":{\"docs\":{},\"用\":{\"docs\":{},\"了\":{\"docs\":{},\"j\":{\"docs\":{},\"a\":{\"docs\":{},\"c\":{\"docs\":{},\"k\":{\"docs\":{},\"s\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{},\"，\":{\"docs\":{},\"可\":{\"docs\":{},\"以\":{\"docs\":{},\"直\":{\"docs\":{},\"接\":{\"docs\":{},\"使\":{\"docs\":{},\"用\":{\"docs\":{},\"它\":{\"docs\":{},\"把\":{\"docs\":{},\"j\":{\"docs\":{},\"a\":{\"docs\":{},\"v\":{\"docs\":{},\"a\":{\"docs\":{},\"b\":{\"docs\":{},\"e\":{\"docs\":{},\"a\":{\"docs\":{},\"n\":{\"docs\":{},\"转\":{\"docs\":{},\"为\":{\"docs\":{},\"j\":{\"docs\":{},\"s\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{},\".\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.002066115702479339}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"提\":{\"docs\":{},\"供\":{\"docs\":{},\"了\":{\"docs\":{},\"一\":{\"docs\":{},\"个\":{\"docs\":{},\"内\":{\"docs\":{},\"置\":{\"docs\":{},\"的\":{\"docs\":{},\"帮\":{\"docs\":{},\"助\":{\"docs\":{},\"类\":{\"docs\":{},\"x\":{\"docs\":{},\"c\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"n\":{\"docs\":{},\"t\":{\"docs\":{},\"b\":{\"docs\":{},\"u\":{\"docs\":{},\"i\":{\"docs\":{},\"l\":{\"docs\":{},\"d\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"来\":{\"docs\":{},\"产\":{\"docs\":{},\"生\":{\"docs\":{},\"j\":{\"docs\":{},\"s\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{},\"文\":{\"docs\":{},\"档\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.002066115702479339}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"完\":{\"docs\":{},\"整\":{\"docs\":{},\"的\":{\"docs\":{},\"j\":{\"docs\":{},\"a\":{\"docs\":{},\"v\":{\"docs\":{},\"a\":{\"docs\":{\"aggregations.html\":{\"ref\":\"aggregations.html\",\"tf\":0.038461538461538464}}}}}}}}}}},\"以\":{\"docs\":{},\"类\":{\"docs\":{},\"似\":{\"docs\":{},\"于\":{\"docs\":{},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"s\":{\"docs\":{},\"t\":{\"docs\":{\"query-dsl.html\":{\"ref\":\"query-dsl.html\",\"tf\":0.043478260869565216}}}}}}}}}},\"支\":{\"docs\":{},\"持\":{\"docs\":{},\"两\":{\"docs\":{},\"种\":{\"docs\":{},\"类\":{\"docs\":{},\"型\":{\"docs\":{},\"的\":{\"docs\":{},\"地\":{\"docs\":{},\"理\":{\"docs\":{},\"数\":{\"docs\":{},\"据\":{\"docs\":{},\"：\":{\"docs\":{},\"g\":{\"docs\":{},\"e\":{\"docs\":{},\"o\":{\"docs\":{},\"_\":{\"docs\":{},\"p\":{\"docs\":{},\"o\":{\"docs\":{},\"i\":{\"docs\":{},\"n\":{\"docs\":{},\"t\":{\"docs\":{},\"类\":{\"docs\":{},\"型\":{\"docs\":{},\"支\":{\"docs\":{},\"持\":{\"docs\":{},\"成\":{\"docs\":{},\"对\":{\"docs\":{},\"的\":{\"docs\":{},\"纬\":{\"docs\":{},\"度\":{\"docs\":{},\"/\":{\"docs\":{},\"经\":{\"docs\":{},\"度\":{\"docs\":{},\"，\":{\"docs\":{},\"g\":{\"docs\":{},\"e\":{\"docs\":{},\"o\":{\"docs\":{},\"_\":{\"docs\":{},\"s\":{\"docs\":{},\"h\":{\"docs\":{},\"a\":{\"docs\":{},\"p\":{\"docs\":{},\"e\":{\"docs\":{},\"类\":{\"docs\":{},\"型\":{\"docs\":{},\"支\":{\"docs\":{},\"持\":{\"docs\":{},\"点\":{\"docs\":{},\"、\":{\"docs\":{},\"线\":{\"docs\":{},\"、\":{\"docs\":{},\"圆\":{\"docs\":{},\"、\":{\"docs\":{},\"多\":{\"docs\":{},\"边\":{\"docs\":{},\"形\":{\"docs\":{},\"、\":{\"docs\":{},\"多\":{\"docs\":{},\"个\":{\"docs\":{},\"多\":{\"docs\":{},\"边\":{\"docs\":{},\"形\":{\"docs\":{},\"等\":{\"docs\":{},\"。\":{\"docs\":{\"query-dsl/geo-queries.html\":{\"ref\":\"query-dsl/geo-queries.html\",\"tf\":0.004901960784313725}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"s\":{\"docs\":{},\"p\":{\"docs\":{},\"o\":{\"docs\":{},\"r\":{\"docs\":{},\"t\":{\"docs\":{},\")\":{\"docs\":{},\")\":{\"docs\":{},\";\":{\"docs\":{\"client/transport-client.html\":{\"ref\":\"client/transport-client.html\",\"tf\":0.011111111111111112}}}}}}}}},\"s\":{\"docs\":{},\"e\":{\"docs\":{},\"t\":{\"docs\":{\"client/transport-client.html\":{\"ref\":\"client/transport-client.html\",\"tf\":0.011111111111111112}}}}},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"j\":{\"docs\":{},\"e\":{\"docs\":{},\"c\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"d\":{\"docs\":{},\"e\":{\"docs\":{},\"x\":{\"docs\":{},\"e\":{\"docs\":{},\"c\":{\"docs\":{},\"u\":{\"docs\":{},\"t\":{\"docs\":{},\"i\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{},\"e\":{\"docs\":{},\"x\":{\"docs\":{},\"c\":{\"docs\":{},\"e\":{\"docs\":{},\"p\":{\"docs\":{},\"t\":{\"docs\":{\"document-apis/using-bulk-processor.html\":{\"ref\":\"document-apis/using-bulk-processor.html\",\"tf\":0.006024096385542169}}}}}}}}}}}}}}}}}}}}}}}}}},\")\":{\"docs\":{\"client/xpack-transport-client.html\":{\"ref\":\"client/xpack-transport-client.html\",\"tf\":0.01639344262295082},\"document-apis/delete-by-query-api.html\":{\"ref\":\"document-apis/delete-by-query-api.html\",\"tf\":0.018518518518518517}}},\".\":{\"docs\":{},\"p\":{\"docs\":{},\"r\":{\"docs\":{},\"i\":{\"docs\":{},\"n\":{\"docs\":{},\"t\":{\"docs\":{},\"s\":{\"docs\":{},\"t\":{\"docs\":{},\"a\":{\"docs\":{},\"c\":{\"docs\":{},\"k\":{\"docs\":{},\"t\":{\"docs\":{},\"r\":{\"docs\":{},\"a\":{\"docs\":{},\"c\":{\"docs\":{},\"e\":{\"docs\":{},\"(\":{\"docs\":{},\")\":{\"docs\":{},\";\":{\"docs\":{\"client/xpack-transport-client.html\":{\"ref\":\"client/xpack-transport-client.html\",\"tf\":0.01639344262295082}}}}}}}}}}}}}}}}}}}}},\"x\":{\"docs\":{},\"c\":{\"docs\":{},\"e\":{\"docs\":{},\"p\":{\"docs\":{},\"t\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.004132231404958678},\"document-apis/delete-by-query-api.html\":{\"ref\":\"document-apis/delete-by-query-api.html\",\"tf\":0.018518518518518517}},\"i\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{},\"{\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.006198347107438017}}}}}}}}}},\"e\":{\"docs\":{},\"c\":{\"docs\":{},\"u\":{\"docs\":{},\"t\":{\"docs\":{\"query-dsl/specialized-queries.html\":{\"ref\":\"query-dsl/specialized-queries.html\",\"tf\":0.004761904761904762}},\"i\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{},\"i\":{\"docs\":{},\"d\":{\"docs\":{},\",\":{\"docs\":{\"document-apis/using-bulk-processor.html\":{\"ref\":\"document-apis/using-bulk-processor.html\",\"tf\":0.018072289156626505}}}}}}}}}}}},\"p\":{\"docs\":{},\"l\":{\"docs\":{},\"a\":{\"docs\":{},\"i\":{\"docs\":{},\"n\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}}}}}},\"o\":{\"docs\":{},\"n\":{\"docs\":{},\"e\":{\"docs\":{},\"n\":{\"docs\":{},\"t\":{\"docs\":{},\"i\":{\"docs\":{},\"a\":{\"docs\":{},\"l\":{\"docs\":{},\"d\":{\"docs\":{},\"e\":{\"docs\":{},\"c\":{\"docs\":{},\"a\":{\"docs\":{},\"y\":{\"docs\":{},\"f\":{\"docs\":{},\"u\":{\"docs\":{},\"n\":{\"docs\":{},\"c\":{\"docs\":{},\"t\":{\"docs\":{},\"i\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{},\"(\":{\"docs\":{},\"\\\"\":{\"docs\":{},\"a\":{\"docs\":{},\"g\":{\"docs\":{},\"e\":{\"docs\":{},\"\\\"\":{\"docs\":{},\",\":{\"docs\":{\"query-dsl/compound-queries.html\":{\"ref\":\"query-dsl/compound-queries.html\",\"tf\":0.005847953216374269}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"n\":{\"docs\":{},\"d\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}},\"e\":{\"docs\":{},\"d\":{\"docs\":{},\"s\":{\"docs\":{},\"t\":{\"docs\":{},\"a\":{\"docs\":{},\"t\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}},\"s\":{\"docs\":{},\"a\":{\"docs\":{},\"g\":{\"docs\":{},\"g\":{\"docs\":{},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"g\":{\"docs\":{},\"a\":{\"docs\":{},\"t\":{\"docs\":{},\"i\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{},\"b\":{\"docs\":{},\"u\":{\"docs\":{},\"i\":{\"docs\":{},\"l\":{\"docs\":{},\"d\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"i\":{\"docs\":{},\"s\":{\"docs\":{},\"t\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125}},\"s\":{\"docs\":{},\"q\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"y\":{\"docs\":{},\"(\":{\"docs\":{},\"\\\"\":{\"docs\":{},\"n\":{\"docs\":{},\"a\":{\"docs\":{},\"m\":{\"docs\":{},\"e\":{\"docs\":{},\"\\\"\":{\"docs\":{},\")\":{\"docs\":{},\";\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125}}}}}}}}}}},\"b\":{\"docs\":{},\"u\":{\"docs\":{},\"i\":{\"docs\":{},\"l\":{\"docs\":{},\"d\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.005390835579514825}}}}}}}}}}}}}}}}},\"a\":{\"docs\":{},\"c\":{\"docs\":{},\"h\":{\"docs\":{\"document-apis/bulk-api.html\":{\"ref\":\"document-apis/bulk-api.html\",\"tf\":0.014492753623188406},\"search-api/using-scrolls-in-java.html\":{\"ref\":\"search-api/using-scrolls-in-java.html\",\"tf\":0.00546448087431694},\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00583941605839416},\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.008264462809917356}}}},\"r\":{\"docs\":{},\"l\":{\"docs\":{},\"i\":{\"docs\":{\"search-api/terminate-after.html\":{\"ref\":\"search-api/terminate-after.html\",\"tf\":0.0625}}}}}},\"n\":{\"docs\":{},\"d\":{\"docs\":{\"search-api/using-scrolls-in-java.html\":{\"ref\":\"search-api/using-scrolls-in-java.html\",\"tf\":0.00546448087431694},\"query-dsl/span-queries.html\":{\"ref\":\"query-dsl/span-queries.html\",\"tf\":0.005555555555555556}},\"p\":{\"docs\":{},\"o\":{\"docs\":{},\"i\":{\"docs\":{},\"n\":{\"docs\":{},\"t\":{\"docs\":{\"search-api/search-template.html\":{\"ref\":\"search-api/search-template.html\",\"tf\":0.0055248618784530384}}}}}}}},\"t\":{\"docs\":{},\"r\":{\"docs\":{},\"i\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.008759124087591242},\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.01652892561983471}}},\"y\":{\"docs\":{},\".\":{\"docs\":{},\"g\":{\"docs\":{},\"e\":{\"docs\":{},\"t\":{\"docs\":{},\"a\":{\"docs\":{},\"g\":{\"docs\":{},\"g\":{\"docs\":{},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"g\":{\"docs\":{},\"a\":{\"docs\":{},\"t\":{\"docs\":{},\"i\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{},\"s\":{\"docs\":{},\"(\":{\"docs\":{},\")\":{\"docs\":{},\".\":{\"docs\":{},\"g\":{\"docs\":{},\"e\":{\"docs\":{},\"t\":{\"docs\":{},\"(\":{\"docs\":{},\"\\\"\":{\"docs\":{},\"t\":{\"docs\":{},\"o\":{\"docs\":{},\"p\":{\"docs\":{},\"\\\"\":{\"docs\":{},\")\":{\"docs\":{},\";\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"d\":{\"docs\":{},\"o\":{\"docs\":{},\"c\":{\"docs\":{},\"c\":{\"docs\":{},\"o\":{\"docs\":{},\"u\":{\"docs\":{},\"n\":{\"docs\":{},\"t\":{\"docs\":{},\"(\":{\"docs\":{},\")\":{\"docs\":{},\";\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854},\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.008264462809917356}}}}}}}}}}}}},\"k\":{\"docs\":{},\"e\":{\"docs\":{},\"y\":{\"docs\":{},\"(\":{\"docs\":{},\")\":{\"docs\":{},\";\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854},\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.004132231404958678}}}}},\"a\":{\"docs\":{},\"s\":{\"docs\":{},\"s\":{\"docs\":{},\"t\":{\"docs\":{},\"r\":{\"docs\":{},\"i\":{\"docs\":{},\"n\":{\"docs\":{},\"g\":{\"docs\":{},\"(\":{\"docs\":{},\")\":{\"docs\":{},\";\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.005785123966942148}}}}}}}}}}}}}}}},\"p\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"c\":{\"docs\":{},\"e\":{\"docs\":{},\"n\":{\"docs\":{},\"t\":{\"docs\":{},\"(\":{\"docs\":{},\")\":{\"docs\":{},\";\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00291970802919708}}}}}}}}}}}},\"v\":{\"docs\":{},\"a\":{\"docs\":{},\"l\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"docs\":{},\"(\":{\"docs\":{},\")\":{\"docs\":{},\";\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00291970802919708}}}}}}}}}},\"f\":{\"docs\":{},\"r\":{\"docs\":{},\"o\":{\"docs\":{},\"m\":{\"docs\":{},\"(\":{\"docs\":{},\")\":{\"docs\":{},\";\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0024793388429752068}}}}},\"a\":{\"docs\":{},\"s\":{\"docs\":{},\"s\":{\"docs\":{},\"t\":{\"docs\":{},\"r\":{\"docs\":{},\"i\":{\"docs\":{},\"n\":{\"docs\":{},\"g\":{\"docs\":{},\"(\":{\"docs\":{},\")\":{\"docs\":{},\";\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}}}}}}}}}}}}}},\"t\":{\"docs\":{},\"o\":{\"docs\":{},\"(\":{\"docs\":{},\")\":{\"docs\":{},\";\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0024793388429752068}}}}},\"a\":{\"docs\":{},\"s\":{\"docs\":{},\"s\":{\"docs\":{},\"t\":{\"docs\":{},\"r\":{\"docs\":{},\"i\":{\"docs\":{},\"n\":{\"docs\":{},\"g\":{\"docs\":{},\"(\":{\"docs\":{},\")\":{\"docs\":{},\";\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}}}}}}}}}}}}}}}}}}},\"g\":{\"docs\":{},\"i\":{\"docs\":{},\"n\":{\"docs\":{\"query-dsl/specialized-queries.html\":{\"ref\":\"query-dsl/specialized-queries.html\",\"tf\":0.004761904761904762}}}}}},\"d\":{\"docs\":{},\"i\":{\"docs\":{},\"t\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125}}}}},\"m\":{\"docs\":{},\"i\":{\"docs\":{},\"t\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125}}}}}},\"f\":{\"docs\":{},\"e\":{\"docs\":{},\"n\":{\"docs\":{},\"d\":{\"docs\":{},\"o\":{\"docs\":{\"./\":{\"ref\":\"./\",\"tf\":0.020833333333333332}}}}}},\"a\":{\"docs\":{},\"l\":{\"docs\":{},\"s\":{\"docs\":{\"client/xpack-transport-client.html\":{\"ref\":\"client/xpack-transport-client.html\",\"tf\":0.01639344262295082},\"document-apis/get-api.html\":{\"ref\":\"document-apis/get-api.html\",\"tf\":0.034482758620689655},\"document-apis/delete-api.html\":{\"ref\":\"document-apis/delete-api.html\",\"tf\":0.02631578947368421},\"query-dsl/joining-queries.html\":{\"ref\":\"query-dsl/joining-queries.html\",\"tf\":0.007194244604316547}},\"e\":{\"docs\":{},\")\":{\"docs\":{\"client/xpack-transport-client.html\":{\"ref\":\"client/xpack-transport-client.html\",\"tf\":0.01639344262295082}},\")\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}},\":\":{\"docs\":{},\"表\":{\"docs\":{},\"示\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.005390835579514825}}}}}}},\"l\":{\"docs\":{\"query-dsl/geo-queries.html\":{\"ref\":\"query-dsl/geo-queries.html\",\"tf\":0.004901960784313725}}}},\"i\":{\"docs\":{},\"l\":{\"docs\":{},\"u\":{\"docs\":{},\"r\":{\"docs\":{\"document-apis/bulk-api.html\":{\"ref\":\"document-apis/bulk-api.html\",\"tf\":0.014492753623188406}},\"e\":{\"docs\":{},\")\":{\"docs\":{\"document-apis/using-bulk-processor.html\":{\"ref\":\"document-apis/using-bulk-processor.html\",\"tf\":0.006024096385542169}}}}}}}},\"c\":{\"docs\":{},\"e\":{\"docs\":{},\"t\":{\"docs\":{\"search-api/using-aggregations.html\":{\"ref\":\"search-api/using-aggregations.html\",\"tf\":0.029411764705882353}}}},\"t\":{\"docs\":{},\"o\":{\"docs\":{},\"r\":{\"docs\":{\"query-dsl/compound-queries.html\":{\"ref\":\"query-dsl/compound-queries.html\",\"tf\":0.005847953216374269}},\":\":{\"docs\":{\"query-dsl/span-queries.html\":{\"ref\":\"query-dsl/span-queries.html\",\"tf\":0.005555555555555556}}}}}}}},\"i\":{\"docs\":{},\"r\":{\"docs\":{},\"s\":{\"docs\":{},\"t\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.002066115702479339},\"query-dsl/span-queries.html\":{\"ref\":\"query-dsl/span-queries.html\",\"tf\":0.005555555555555556}}}}},\"l\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{\"search-api.html\":{\"ref\":\"search-api.html\",\"tf\":0.017241379310344827},\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.003305785123966942},\"query-dsl/compound-queries.html\":{\"ref\":\"query-dsl/compound-queries.html\",\"tf\":0.011695906432748537},\"query-dsl/span-queries.html\":{\"ref\":\"query-dsl/span-queries.html\",\"tf\":0.005555555555555556}},\"s\":{\"docs\":{},\"a\":{\"docs\":{},\"g\":{\"docs\":{},\"g\":{\"docs\":{},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"g\":{\"docs\":{},\"a\":{\"docs\":{},\"t\":{\"docs\":{},\"o\":{\"docs\":{},\"r\":{\"docs\":{},\".\":{\"docs\":{},\"k\":{\"docs\":{},\"e\":{\"docs\":{},\"y\":{\"docs\":{},\"e\":{\"docs\":{},\"d\":{\"docs\":{},\"f\":{\"docs\":{},\"i\":{\"docs\":{},\"l\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"(\":{\"docs\":{},\"\\\"\":{\"docs\":{},\"m\":{\"docs\":{},\"e\":{\"docs\":{},\"n\":{\"docs\":{},\"\\\"\":{\"docs\":{},\",\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}}}},\"w\":{\"docs\":{},\"o\":{\"docs\":{},\"m\":{\"docs\":{},\"e\":{\"docs\":{},\"n\":{\"docs\":{},\"\\\"\":{\"docs\":{},\",\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"f\":{\"docs\":{},\"u\":{\"docs\":{},\"n\":{\"docs\":{},\"c\":{\"docs\":{},\"t\":{\"docs\":{},\"i\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{},\"b\":{\"docs\":{},\"u\":{\"docs\":{},\"i\":{\"docs\":{},\"l\":{\"docs\":{},\"d\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"[\":{\"docs\":{},\"]\":{\"docs\":{\"query-dsl/compound-queries.html\":{\"ref\":\"query-dsl/compound-queries.html\",\"tf\":0.005847953216374269}}}}}}}}}}}}}}}}}}}}}}},\"n\":{\"docs\":{},\"i\":{\"docs\":{},\"s\":{\"docs\":{},\"h\":{\"docs\":{\"search-api/terminate-after.html\":{\"ref\":\"search-api/terminate-after.html\",\"tf\":0.0625}}}}}},\"e\":{\"docs\":{},\"l\":{\"docs\":{},\"d\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.001652892561983471},\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125},\"query-dsl/geo-queries.html\":{\"ref\":\"query-dsl/geo-queries.html\",\"tf\":0.00980392156862745},\"query-dsl/specialized-queries.html\":{\"ref\":\"query-dsl/specialized-queries.html\",\"tf\":0.009523809523809525}},\"s\":{\"docs\":{},\",\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125}}},\"）\":{\"docs\":{},\"。\":{\"docs\":{},\"此\":{\"docs\":{},\"查\":{\"docs\":{},\"询\":{\"docs\":{},\"很\":{\"docs\":{},\"占\":{\"docs\":{},\"用\":{\"docs\":{},\"c\":{\"docs\":{},\"p\":{\"docs\":{},\"u\":{\"docs\":{},\"资\":{\"docs\":{},\"源\":{\"docs\":{},\"，\":{\"docs\":{},\"但\":{\"docs\":{},\"当\":{\"docs\":{},\"需\":{\"docs\":{},\"要\":{\"docs\":{},\"模\":{\"docs\":{},\"糊\":{\"docs\":{},\"匹\":{\"docs\":{},\"配\":{\"docs\":{},\"时\":{\"docs\":{},\"它\":{\"docs\":{},\"很\":{\"docs\":{},\"有\":{\"docs\":{},\"用\":{\"docs\":{},\"，\":{\"docs\":{},\"例\":{\"docs\":{},\"如\":{\"docs\":{},\"，\":{\"docs\":{},\"当\":{\"docs\":{},\"用\":{\"docs\":{},\"户\":{\"docs\":{},\"拼\":{\"docs\":{},\"写\":{\"docs\":{},\"错\":{\"docs\":{},\"误\":{\"docs\":{},\"时\":{\"docs\":{},\"。\":{\"docs\":{},\"另\":{\"docs\":{},\"外\":{\"docs\":{},\"我\":{\"docs\":{},\"们\":{\"docs\":{},\"可\":{\"docs\":{},\"以\":{\"docs\":{},\"在\":{\"docs\":{},\"搜\":{\"docs\":{},\"索\":{\"docs\":{},\"词\":{\"docs\":{},\"的\":{\"docs\":{},\"尾\":{\"docs\":{},\"部\":{\"docs\":{},\"加\":{\"docs\":{},\"上\":{\"docs\":{},\"字\":{\"docs\":{},\"符\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"l\":{\"docs\":{},\"u\":{\"docs\":{},\"s\":{\"docs\":{},\"h\":{\"docs\":{\"document-apis/using-bulk-processor.html\":{\"ref\":\"document-apis/using-bulk-processor.html\",\"tf\":0.006024096385542169}}}}}},\"o\":{\"docs\":{},\"u\":{\"docs\":{},\"n\":{\"docs\":{},\"d\":{\"docs\":{\"search-api/using-scrolls-in-java.html\":{\"ref\":\"search-api/using-scrolls-in-java.html\",\"tf\":0.00546448087431694}}}}},\"r\":{\"docs\":{},\"(\":{\"docs\":{},\"s\":{\"docs\":{},\"e\":{\"docs\":{},\"a\":{\"docs\":{},\"r\":{\"docs\":{},\"c\":{\"docs\":{},\"h\":{\"docs\":{},\"h\":{\"docs\":{},\"i\":{\"docs\":{},\"t\":{\"docs\":{\"query-dsl/specialized-queries.html\":{\"ref\":\"query-dsl/specialized-queries.html\",\"tf\":0.004761904761904762}}}}}}}}}}}}}},\"r\":{\"docs\":{},\"o\":{\"docs\":{},\"m\":{\"docs\":{},\",\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.001652892561983471}}},\"a\":{\"docs\":{},\"s\":{\"docs\":{},\"d\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}},\"a\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\",\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}}}},\"s\":{\"docs\":{},\"t\":{\"docs\":{},\"r\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}},\"i\":{\"docs\":{},\"n\":{\"docs\":{},\"g\":{\"docs\":{},\",\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}}}}}}}},\"(\":{\"docs\":{},\")\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.013477088948787063}}}}}}},\"u\":{\"docs\":{},\"l\":{\"docs\":{},\"l\":{\"docs\":{\"query-dsl/full-text-queries.html\":{\"ref\":\"query-dsl/full-text-queries.html\",\"tf\":3.345238095238095}}}},\"z\":{\"docs\":{},\"z\":{\"docs\":{},\"i\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.005390835579514825},\"query-dsl/span-queries.html\":{\"ref\":\"query-dsl/span-queries.html\",\"tf\":0.005555555555555556}}},\"y\":{\"docs\":{},\"q\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"y\":{\"docs\":{},\"(\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125}}}}}}}}}}},\"n\":{\"docs\":{},\"c\":{\"docs\":{},\"t\":{\"docs\":{},\"i\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{\"query-dsl/compound-queries.html\":{\"ref\":\"query-dsl/compound-queries.html\",\"tf\":0.005847953216374269}},\"_\":{\"docs\":{},\"s\":{\"docs\":{},\"c\":{\"docs\":{},\"o\":{\"docs\":{},\"r\":{\"docs\":{\"query-dsl/compound-queries.html\":{\"ref\":\"query-dsl/compound-queries.html\",\"tf\":0.005847953216374269},\"query-dsl/specialized-queries.html\":{\"ref\":\"query-dsl/specialized-queries.html\",\"tf\":0.004761904761904762}}}}}}},\"s\":{\"docs\":{},\"c\":{\"docs\":{},\"o\":{\"docs\":{},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"q\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"y\":{\"docs\":{},\"b\":{\"docs\":{},\"u\":{\"docs\":{},\"i\":{\"docs\":{},\"l\":{\"docs\":{},\"d\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\".\":{\"docs\":{},\"f\":{\"docs\":{},\"i\":{\"docs\":{},\"l\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"f\":{\"docs\":{},\"u\":{\"docs\":{},\"n\":{\"docs\":{},\"c\":{\"docs\":{},\"t\":{\"docs\":{},\"i\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{},\"b\":{\"docs\":{},\"u\":{\"docs\":{},\"i\":{\"docs\":{},\"l\":{\"docs\":{},\"d\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"(\":{\"docs\":{\"query-dsl/compound-queries.html\":{\"ref\":\"query-dsl/compound-queries.html\",\"tf\":0.011695906432748537}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"g\":{\"docs\":{},\"i\":{\"docs\":{},\"t\":{\"docs\":{},\"h\":{\"docs\":{},\"u\":{\"docs\":{},\"b\":{\"docs\":{},\"地\":{\"docs\":{},\"址\":{\"docs\":{},\"：\":{\"docs\":{},\"h\":{\"docs\":{},\"t\":{\"docs\":{},\"t\":{\"docs\":{},\"p\":{\"docs\":{},\"s\":{\"docs\":{},\":\":{\"docs\":{},\"/\":{\"docs\":{},\"/\":{\"docs\":{},\"g\":{\"docs\":{},\"i\":{\"docs\":{},\"t\":{\"docs\":{},\"h\":{\"docs\":{},\"u\":{\"docs\":{},\"b\":{\"docs\":{},\".\":{\"docs\":{},\"c\":{\"docs\":{},\"o\":{\"docs\":{},\"m\":{\"docs\":{},\"/\":{\"docs\":{},\"q\":{\"docs\":{},\"u\":{\"docs\":{},\"a\":{\"docs\":{},\"n\":{\"docs\":{},\"k\":{\"docs\":{},\"e\":{\"docs\":{},\"/\":{\"docs\":{},\"e\":{\"docs\":{},\"l\":{\"docs\":{},\"a\":{\"docs\":{},\"s\":{\"docs\":{},\"t\":{\"docs\":{},\"i\":{\"docs\":{},\"c\":{\"docs\":{},\"s\":{\"docs\":{},\"e\":{\"docs\":{},\"a\":{\"docs\":{},\"r\":{\"docs\":{},\"c\":{\"docs\":{},\"h\":{\"docs\":{\"./\":{\"ref\":\"./\",\"tf\":0.020833333333333332}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"e\":{\"docs\":{},\"n\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.006198347107438017},\"query-dsl/specialized-queries.html\":{\"ref\":\"query-dsl/specialized-queries.html\",\"tf\":0.004761904761904762}}}},\"d\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}},\"_\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"m\":{\"docs\":{},\"p\":{\"docs\":{},\"l\":{\"docs\":{},\"a\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\".\":{\"docs\":{},\"m\":{\"docs\":{},\"u\":{\"docs\":{},\"s\":{\"docs\":{},\"t\":{\"docs\":{},\"a\":{\"docs\":{},\"c\":{\"docs\":{},\"h\":{\"docs\":{\"search-api/search-template.html\":{\"ref\":\"search-api/search-template.html\",\"tf\":0.0055248618784530384}}}}}}}}}}}}}}}}}}},\"s\":{\"docs\":{},\".\":{\"docs\":{},\"g\":{\"docs\":{},\"e\":{\"docs\":{},\"t\":{\"docs\":{},\"b\":{\"docs\":{},\"u\":{\"docs\":{},\"c\":{\"docs\":{},\"k\":{\"docs\":{},\"e\":{\"docs\":{},\"t\":{\"docs\":{},\"s\":{\"docs\":{},\"(\":{\"docs\":{},\")\":{\"docs\":{},\")\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}}}}}}}}}}}}}}}}}},\"t\":{\"docs\":{},\":\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.002066115702479339}}},\"c\":{\"docs\":{},\"l\":{\"docs\":{},\"i\":{\"docs\":{},\"e\":{\"docs\":{},\"n\":{\"docs\":{},\"t\":{\"docs\":{},\"(\":{\"docs\":{},\")\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.002066115702479339}}}}}}}}}},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"s\":{\"docs\":{},\"p\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{},\"s\":{\"docs\":{\"document-apis/get-api.html\":{\"ref\":\"document-apis/get-api.html\",\"tf\":0.06896551724137931},\"document-apis/delete-api.html\":{\"ref\":\"document-apis/delete-api.html\",\"tf\":0.02631578947368421},\"document-apis/multi-get-api.html\":{\"ref\":\"document-apis/multi-get-api.html\",\"tf\":0.021739130434782608}}}}}}}}}},\"o\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854},\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.003305785123966942},\"query-dsl/geo-queries.html\":{\"ref\":\"query-dsl/geo-queries.html\",\"tf\":5.004901960784314}},\"b\":{\"docs\":{},\"o\":{\"docs\":{},\"u\":{\"docs\":{},\"n\":{\"docs\":{},\"d\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}},\"s\":{\"docs\":{},\"a\":{\"docs\":{},\"g\":{\"docs\":{},\"g\":{\"docs\":{},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"g\":{\"docs\":{},\"a\":{\"docs\":{},\"t\":{\"docs\":{},\"i\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{},\"b\":{\"docs\":{},\"u\":{\"docs\":{},\"i\":{\"docs\":{},\"l\":{\"docs\":{},\"d\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}}}}}}}}}}}}}}}}}},\"b\":{\"docs\":{},\"u\":{\"docs\":{},\"i\":{\"docs\":{},\"l\":{\"docs\":{},\"d\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}}}}}}}},\"i\":{\"docs\":{},\"n\":{\"docs\":{},\"g\":{\"docs\":{},\"b\":{\"docs\":{},\"o\":{\"docs\":{},\"x\":{\"docs\":{},\"q\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"y\":{\"docs\":{},\"(\":{\"docs\":{},\"\\\"\":{\"docs\":{},\"p\":{\"docs\":{},\"i\":{\"docs\":{},\"n\":{\"docs\":{},\".\":{\"docs\":{},\"l\":{\"docs\":{},\"o\":{\"docs\":{},\"c\":{\"docs\":{},\"a\":{\"docs\":{},\"t\":{\"docs\":{},\"i\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{},\"\\\"\":{\"docs\":{},\")\":{\"docs\":{\"query-dsl/geo-queries.html\":{\"ref\":\"query-dsl/geo-queries.html\",\"tf\":0.004901960784313725}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"p\":{\"docs\":{},\"o\":{\"docs\":{},\"i\":{\"docs\":{},\"n\":{\"docs\":{},\"t\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00291970802919708},\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}},\"(\":{\"2\":{\"0\":{\"docs\":{},\",\":{\"docs\":{\"query-dsl/geo-queries.html\":{\"ref\":\"query-dsl/geo-queries.html\",\"tf\":0.004901960784313725}}}},\"docs\":{}},\"3\":{\"0\":{\"docs\":{},\",\":{\"docs\":{\"query-dsl/geo-queries.html\":{\"ref\":\"query-dsl/geo-queries.html\",\"tf\":0.004901960784313725}}}},\"docs\":{}},\"4\":{\"0\":{\"docs\":{},\",\":{\"docs\":{\"query-dsl/geo-queries.html\":{\"ref\":\"query-dsl/geo-queries.html\",\"tf\":0.004901960784313725}}}},\"8\":{\"docs\":{},\".\":{\"8\":{\"4\":{\"2\":{\"3\":{\"7\":{\"1\":{\"7\":{\"1\":{\"1\":{\"1\":{\"8\":{\"3\":{\"1\":{\"4\":{\"docs\":{},\",\":{\"2\":{\"docs\":{},\".\":{\"3\":{\"3\":{\"3\":{\"2\":{\"0\":{\"0\":{\"2\":{\"7\":{\"6\":{\"9\":{\"2\":{\"0\":{\"0\":{\"4\":{\"docs\":{},\")\":{\"docs\":{},\")\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}}},\"docs\":{}}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}}},\"docs\":{}},\"docs\":{}}}}},\"l\":{\"docs\":{},\"y\":{\"docs\":{},\"g\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{},\"q\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"y\":{\"docs\":{},\"(\":{\"docs\":{},\"\\\"\":{\"docs\":{},\"p\":{\"docs\":{},\"i\":{\"docs\":{},\"n\":{\"docs\":{},\".\":{\"docs\":{},\"l\":{\"docs\":{},\"o\":{\"docs\":{},\"c\":{\"docs\":{},\"a\":{\"docs\":{},\"t\":{\"docs\":{},\"i\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{},\"\\\"\":{\"docs\":{},\",\":{\"docs\":{\"query-dsl/geo-queries.html\":{\"ref\":\"query-dsl/geo-queries.html\",\"tf\":0.004901960784313725}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"h\":{\"docs\":{},\"a\":{\"docs\":{},\"s\":{\"docs\":{},\"h\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}},\"g\":{\"docs\":{},\"r\":{\"docs\":{},\"i\":{\"docs\":{},\"d\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}}},\"网\":{\"docs\":{},\"格\":{\"docs\":{},\"聚\":{\"docs\":{},\"合\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}}}}}}},\"_\":{\"docs\":{},\"b\":{\"docs\":{},\"o\":{\"docs\":{},\"u\":{\"docs\":{},\"n\":{\"docs\":{},\"d\":{\"docs\":{},\"i\":{\"docs\":{},\"n\":{\"docs\":{},\"g\":{\"docs\":{},\"_\":{\"docs\":{},\"b\":{\"docs\":{},\"o\":{\"docs\":{},\"x\":{\"docs\":{\"query-dsl/geo-queries.html\":{\"ref\":\"query-dsl/geo-queries.html\",\"tf\":0.004901960784313725}}}}}}}}}}}}}},\"d\":{\"docs\":{},\"i\":{\"docs\":{},\"s\":{\"docs\":{},\"t\":{\"docs\":{\"query-dsl/geo-queries.html\":{\"ref\":\"query-dsl/geo-queries.html\",\"tf\":0.004901960784313725}}}}}},\"p\":{\"docs\":{},\"o\":{\"docs\":{},\"l\":{\"docs\":{},\"y\":{\"docs\":{},\"g\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{\"query-dsl/geo-queries.html\":{\"ref\":\"query-dsl/geo-queries.html\",\"tf\":0.004901960784313725}}}}}}}}},\"s\":{\"docs\":{},\"h\":{\"docs\":{},\"a\":{\"docs\":{},\"p\":{\"docs\":{\"query-dsl/geo-queries.html\":{\"ref\":\"query-dsl/geo-queries.html\",\"tf\":0.004901960784313725}},\"e\":{\"docs\":{},\"查\":{\"docs\":{},\"询\":{\"docs\":{\"query-dsl/geo-queries.html\":{\"ref\":\"query-dsl/geo-queries.html\",\"tf\":0.004901960784313725}}}}}}}}}},\"d\":{\"docs\":{},\"i\":{\"docs\":{},\"s\":{\"docs\":{},\"t\":{\"docs\":{},\"a\":{\"docs\":{},\"n\":{\"docs\":{},\"c\":{\"docs\":{},\"e\":{\"docs\":{},\"q\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"y\":{\"docs\":{},\"(\":{\"docs\":{},\"\\\"\":{\"docs\":{},\"p\":{\"docs\":{},\"i\":{\"docs\":{},\"n\":{\"docs\":{},\".\":{\"docs\":{},\"l\":{\"docs\":{},\"o\":{\"docs\":{},\"c\":{\"docs\":{},\"a\":{\"docs\":{},\"t\":{\"docs\":{},\"i\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{},\"\\\"\":{\"docs\":{},\")\":{\"docs\":{\"query-dsl/geo-queries.html\":{\"ref\":\"query-dsl/geo-queries.html\",\"tf\":0.004901960784313725}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"s\":{\"docs\":{},\"h\":{\"docs\":{},\"a\":{\"docs\":{},\"p\":{\"docs\":{},\"e\":{\"docs\":{},\"q\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"y\":{\"docs\":{},\"(\":{\"docs\":{\"query-dsl/geo-queries.html\":{\"ref\":\"query-dsl/geo-queries.html\",\"tf\":0.00980392156862745}}}}}}}}}}}}}}},\"u\":{\"docs\":{},\"i\":{\"docs\":{},\"d\":{\"docs\":{\"aggregations/structuring-aggregations.html\":{\"ref\":\"aggregations/structuring-aggregations.html\",\"tf\":0.02702702702702703}}}}},\"l\":{\"docs\":{},\"o\":{\"docs\":{},\"b\":{\"docs\":{},\"a\":{\"docs\":{},\"l\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.001652892561983471}}}}}}},\"r\":{\"docs\":{},\"i\":{\"docs\":{},\"d\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.001652892561983471}}}}},\"t\":{\"docs\":{},\"(\":{\"docs\":{},\")\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125}}}},\"e\":{\"docs\":{},\"(\":{\"docs\":{},\")\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125}}}}}}},\"i\":{\"docs\":{},\"n\":{\"docs\":{},\"t\":{\"docs\":{},\"r\":{\"docs\":{},\"o\":{\"docs\":{},\"d\":{\"docs\":{},\"u\":{\"docs\":{},\"c\":{\"docs\":{},\"t\":{\"docs\":{\"./\":{\"ref\":\"./\",\"tf\":10}}}}}}}},\"e\":{\"docs\":{},\"n\":{\"docs\":{},\"d\":{\"docs\":{\"search-api/using-scrolls-in-java.html\":{\"ref\":\"search-api/using-scrolls-in-java.html\",\"tf\":0.00546448087431694}}}},\"r\":{\"docs\":{},\"v\":{\"docs\":{},\"e\":{\"docs\":{},\"n\":{\"docs\":{\"query-dsl/span-queries.html\":{\"ref\":\"query-dsl/span-queries.html\",\"tf\":0.005555555555555556}}}}}}}},\"e\":{\"docs\":{},\"t\":{\"docs\":{},\"s\":{\"docs\":{},\"o\":{\"docs\":{},\"c\":{\"docs\":{},\"k\":{\"docs\":{},\"e\":{\"docs\":{},\"t\":{\"docs\":{},\"t\":{\"docs\":{},\"r\":{\"docs\":{},\"a\":{\"docs\":{},\"n\":{\"docs\":{},\"s\":{\"docs\":{},\"p\":{\"docs\":{},\"o\":{\"docs\":{},\"r\":{\"docs\":{},\"t\":{\"docs\":{},\"a\":{\"docs\":{},\"d\":{\"docs\":{},\"d\":{\"docs\":{},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"s\":{\"docs\":{},\"s\":{\"docs\":{},\"(\":{\"docs\":{},\"i\":{\"docs\":{},\"n\":{\"docs\":{},\"e\":{\"docs\":{},\"t\":{\"docs\":{},\"a\":{\"docs\":{},\"d\":{\"docs\":{},\"d\":{\"docs\":{},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"s\":{\"docs\":{},\"s\":{\"docs\":{},\".\":{\"docs\":{},\"g\":{\"docs\":{},\"e\":{\"docs\":{},\"t\":{\"docs\":{},\"b\":{\"docs\":{},\"y\":{\"docs\":{},\"n\":{\"docs\":{},\"a\":{\"docs\":{},\"m\":{\"docs\":{},\"e\":{\"docs\":{},\"(\":{\"docs\":{},\"\\\"\":{\"1\":{\"2\":{\"7\":{\"docs\":{},\".\":{\"0\":{\"docs\":{},\".\":{\"0\":{\"docs\":{},\".\":{\"1\":{\"docs\":{},\"\\\"\":{\"docs\":{},\")\":{\"docs\":{},\",\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.002066115702479339}}}}}},\"docs\":{}}},\"docs\":{}}},\"docs\":{}}},\"docs\":{}},\"docs\":{}},\"docs\":{},\"h\":{\"docs\":{},\"o\":{\"docs\":{},\"s\":{\"docs\":{},\"t\":{\"1\":{\"docs\":{},\"\\\"\":{\"docs\":{},\")\":{\"docs\":{},\",\":{\"docs\":{\"client/transport-client.html\":{\"ref\":\"client/transport-client.html\",\"tf\":0.011111111111111112}}}}}},\"2\":{\"docs\":{},\"\\\"\":{\"docs\":{},\")\":{\"docs\":{},\",\":{\"docs\":{\"client/transport-client.html\":{\"ref\":\"client/transport-client.html\",\"tf\":0.011111111111111112}}}}}},\"docs\":{}}}}},\"x\":{\"docs\":{},\"x\":{\"docs\":{},\"x\":{\"docs\":{},\".\":{\"docs\":{},\"x\":{\"docs\":{},\"x\":{\"docs\":{},\"x\":{\"docs\":{},\".\":{\"docs\":{},\"x\":{\"docs\":{},\"x\":{\"docs\":{},\"x\":{\"docs\":{},\".\":{\"docs\":{},\"x\":{\"docs\":{},\"x\":{\"docs\":{},\"x\":{\"docs\":{},\"\\\"\":{\"docs\":{},\")\":{\"docs\":{},\",\":{\"docs\":{\"client/xpack-transport-client.html\":{\"ref\":\"client/xpack-transport-client.html\",\"tf\":0.03278688524590164}}}}}}}}}}}}}}}}}}}}},\"i\":{\"docs\":{},\"p\":{\"docs\":{},\")\":{\"docs\":{},\",\":{\"docs\":{\"client/transport-client.html\":{\"ref\":\"client/transport-client.html\",\"tf\":0.011111111111111112}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"n\":{\"docs\":{},\"e\":{\"docs\":{},\"w\":{\"docs\":{\"query-dsl/joining-queries.html\":{\"ref\":\"query-dsl/joining-queries.html\",\"tf\":0.014388489208633094},\"query-dsl/specialized-queries.html\":{\"ref\":\"query-dsl/specialized-queries.html\",\"tf\":0.004761904761904762}}}}}}}}}}}}}}}}}}}}}},\"a\":{\"docs\":{},\"d\":{\"docs\":{},\"d\":{\"docs\":{},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"s\":{\"docs\":{},\"s\":{\"docs\":{},\"(\":{\"docs\":{},\"i\":{\"docs\":{},\"n\":{\"docs\":{},\"e\":{\"docs\":{},\"t\":{\"docs\":{},\"a\":{\"docs\":{},\"d\":{\"docs\":{},\"d\":{\"docs\":{},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"s\":{\"docs\":{},\"s\":{\"docs\":{},\"e\":{\"docs\":{},\"s\":{\"docs\":{},\".\":{\"docs\":{},\"f\":{\"docs\":{},\"o\":{\"docs\":{},\"r\":{\"docs\":{},\"s\":{\"docs\":{},\"t\":{\"docs\":{},\"r\":{\"docs\":{},\"i\":{\"docs\":{},\"n\":{\"docs\":{},\"g\":{\"docs\":{},\"(\":{\"docs\":{},\"\\\"\":{\"1\":{\"2\":{\"7\":{\"docs\":{},\".\":{\"0\":{\"docs\":{},\".\":{\"0\":{\"docs\":{},\".\":{\"1\":{\"docs\":{},\"\\\"\":{\"docs\":{},\")\":{\"docs\":{},\",\":{\"docs\":{\"query-dsl/joining-queries.html\":{\"ref\":\"query-dsl/joining-queries.html\",\"tf\":0.014388489208633094},\"query-dsl/specialized-queries.html\":{\"ref\":\"query-dsl/specialized-queries.html\",\"tf\":0.004761904761904762}}}}}},\"docs\":{}}},\"docs\":{}}},\"docs\":{}}},\"docs\":{}},\"docs\":{}},\"docs\":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"d\":{\"docs\":{},\"e\":{\"docs\":{},\"x\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":5.008264462809917},\"search-api/using-scrolls-in-java.html\":{\"ref\":\"search-api/using-scrolls-in-java.html\",\"tf\":0.00546448087431694},\"query-dsl/geo-queries.html\":{\"ref\":\"query-dsl/geo-queries.html\",\"tf\":0.029411764705882353},\"query-dsl/specialized-queries.html\":{\"ref\":\"query-dsl/specialized-queries.html\",\"tf\":0.004761904761904762},\"indexed-scripts-api.html\":{\"ref\":\"indexed-scripts-api.html\",\"tf\":3.333333333333333}},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"s\":{\"docs\":{},\"p\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{},\"s\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.01652892561983471}}}}}}},\"q\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"docs\":{},\"s\":{\"docs\":{},\"t\":{\"docs\":{\"document-apis/update-api.html\":{\"ref\":\"document-apis/update-api.html\",\"tf\":0.014814814814814815}},\"(\":{\"docs\":{},\"\\\"\":{\"docs\":{},\"i\":{\"docs\":{},\"n\":{\"docs\":{},\"d\":{\"docs\":{},\"e\":{\"docs\":{},\"x\":{\"docs\":{},\"\\\"\":{\"docs\":{},\",\":{\"docs\":{\"document-apis/update-api.html\":{\"ref\":\"document-apis/update-api.html\",\"tf\":0.007407407407407408}}}}}}}}},\"t\":{\"docs\":{},\"w\":{\"docs\":{},\"i\":{\"docs\":{},\"t\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"\\\"\":{\"docs\":{},\",\":{\"docs\":{\"document-apis/using-bulk-processor.html\":{\"ref\":\"document-apis/using-bulk-processor.html\",\"tf\":0.006024096385542169}}}}}}}}}}}}}}}}}}}},\"/\":{\"docs\":{},\"t\":{\"docs\":{},\"y\":{\"docs\":{},\"p\":{\"docs\":{},\"e\":{\"docs\":{},\"/\":{\"1\":{\"docs\":{\"document-apis/update-api.html\":{\"ref\":\"document-apis/update-api.html\",\"tf\":0.007407407407407408}}},\"docs\":{}}}}}},\"d\":{\"docs\":{},\"e\":{\"docs\":{},\"l\":{\"docs\":{},\"e\":{\"docs\":{},\"t\":{\"docs\":{\"document-apis/bulk-api.html\":{\"ref\":\"document-apis/bulk-api.html\",\"tf\":0.014492753623188406}}}}}}}}}},\"i\":{\"docs\":{},\"c\":{\"docs\":{\"document-apis/using-bulk-processor.html\":{\"ref\":\"document-apis/using-bulk-processor.html\",\"tf\":0.006024096385542169},\"query-dsl/compound-queries.html\":{\"ref\":\"query-dsl/compound-queries.html\",\"tf\":0.005847953216374269},\"java-api-administration/indices-administration.html\":{\"ref\":\"java-api-administration/indices-administration.html\",\"tf\":5}},\"e\":{\"docs\":{},\"s\":{\"docs\":{},\"q\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"y\":{\"docs\":{},\"(\":{\"docs\":{\"query-dsl/compound-queries.html\":{\"ref\":\"query-dsl/compound-queries.html\",\"tf\":0.011695906432748537}}}}}}}}}}},\"v\":{\"docs\":{},\"i\":{\"docs\":{},\"d\":{\"docs\":{},\"u\":{\"docs\":{\"search-api/multisearch-api.html\":{\"ref\":\"search-api/multisearch-api.html\",\"tf\":0.019230769230769232}}}}}}}},\"s\":{\"docs\":{},\"t\":{\"docs\":{},\"a\":{\"docs\":{},\"n\":{\"docs\":{},\"c\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.008264462809917356}}}}}}},\"i\":{\"docs\":{},\"t\":{\"docs\":{},\"i\":{\"docs\":{\"search-api/using-scrolls-in-java.html\":{\"ref\":\"search-api/using-scrolls-in-java.html\",\"tf\":0.00546448087431694}}}}},\"f\":{\"docs\":{},\"i\":{\"docs\":{},\"n\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0024793388429752068}},\"i\":{\"docs\":{},\"t\":{\"docs\":{},\"y\":{\"docs\":{},\"]\":{\"docs\":{},\",\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}}}}}}},\"c\":{\"docs\":{},\"l\":{\"docs\":{},\"u\":{\"docs\":{},\"d\":{\"docs\":{},\"e\":{\"docs\":{},\"l\":{\"docs\":{},\"o\":{\"docs\":{},\"w\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"(\":{\"docs\":{},\"f\":{\"docs\":{},\"a\":{\"docs\":{},\"l\":{\"docs\":{},\"s\":{\"docs\":{},\"e\":{\"docs\":{},\")\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125}}}}}}}},\"t\":{\"docs\":{},\"r\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"docs\":{},\")\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125}}}}}}}}}}}}},\"u\":{\"docs\":{},\"p\":{\"docs\":{},\"p\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"(\":{\"docs\":{},\"f\":{\"docs\":{},\"a\":{\"docs\":{},\"l\":{\"docs\":{},\"s\":{\"docs\":{},\"e\":{\"docs\":{},\")\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125}}}}}}}},\"t\":{\"docs\":{},\"r\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"docs\":{},\")\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125}}}}}}}}}}}}}}}}}}},\"d\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.002066115702479339},\"search-api/using-scrolls-in-java.html\":{\"ref\":\"search-api/using-scrolls-in-java.html\",\"tf\":0.00546448087431694},\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.010218978102189781},\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.005390835579514825},\"query-dsl/geo-queries.html\":{\"ref\":\"query-dsl/geo-queries.html\",\"tf\":0.004901960784313725}},\"s\":{\"docs\":{},\"q\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"y\":{\"docs\":{},\"(\":{\"docs\":{},\"\\\"\":{\"docs\":{},\"m\":{\"docs\":{},\"y\":{\"docs\":{},\"_\":{\"docs\":{},\"t\":{\"docs\":{},\"y\":{\"docs\":{},\"p\":{\"docs\":{},\"e\":{\"docs\":{},\"\\\"\":{\"docs\":{},\",\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125}}}}}}}}}}}},\")\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125}}}}}}}}}}},\"m\":{\"docs\":{},\"p\":{\"docs\":{},\"o\":{\"docs\":{},\"r\":{\"docs\":{},\"t\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.0371900826446281},\"document-apis/bulk-api.html\":{\"ref\":\"document-apis/bulk-api.html\",\"tf\":0.014492753623188406},\"document-apis/using-bulk-processor.html\":{\"ref\":\"document-apis/using-bulk-processor.html\",\"tf\":0.030120481927710843},\"search-api.html\":{\"ref\":\"search-api.html\",\"tf\":0.05172413793103448},\"search-api/using-scrolls-in-java.html\":{\"ref\":\"search-api/using-scrolls-in-java.html\",\"tf\":0.00546448087431694},\"aggregations.html\":{\"ref\":\"aggregations.html\",\"tf\":0.038461538461538464},\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.021897810218978103},\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.01487603305785124},\"query-dsl.html\":{\"ref\":\"query-dsl.html\",\"tf\":0.043478260869565216},\"query-dsl/compound-queries.html\":{\"ref\":\"query-dsl/compound-queries.html\",\"tf\":0.005847953216374269},\"query-dsl/geo-queries.html\":{\"ref\":\"query-dsl/geo-queries.html\",\"tf\":0.014705882352941176}}}}}},\"m\":{\"docs\":{},\"e\":{\"docs\":{},\"d\":{\"docs\":{},\"i\":{\"docs\":{\"query-dsl/specialized-queries.html\":{\"ref\":\"query-dsl/specialized-queries.html\",\"tf\":0.004761904761904762}}}}}}},\"o\":{\"docs\":{},\"e\":{\"docs\":{},\"x\":{\"docs\":{},\"c\":{\"docs\":{},\"e\":{\"docs\":{},\"p\":{\"docs\":{},\"t\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.004132231404958678}},\"i\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{},\"{\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.004132231404958678}}}}}}}}}}}}},\"t\":{\"docs\":{},\"'\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.002066115702479339}}},\"e\":{\"docs\":{},\"m\":{\"docs\":{\"document-apis/bulk-api.html\":{\"ref\":\"document-apis/bulk-api.html\",\"tf\":0.014492753623188406},\"search-api/multisearch-api.html\":{\"ref\":\"search-api/multisearch-api.html\",\"tf\":0.019230769230769232},\"query-dsl/specialized-queries.html\":{\"ref\":\"query-dsl/specialized-queries.html\",\"tf\":0.004761904761904762}},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"s\":{\"docs\":{},\"p\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{},\"s\":{\"docs\":{\"document-apis/multi-get-api.html\":{\"ref\":\"document-apis/multi-get-api.html\",\"tf\":0.021739130434782608}},\"e\":{\"docs\":{},\".\":{\"docs\":{},\"g\":{\"docs\":{},\"e\":{\"docs\":{},\"t\":{\"docs\":{},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"s\":{\"docs\":{},\"p\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{},\"s\":{\"docs\":{},\"e\":{\"docs\":{},\"(\":{\"docs\":{},\")\":{\"docs\":{},\";\":{\"docs\":{\"document-apis/multi-get-api.html\":{\"ref\":\"document-apis/multi-get-api.html\",\"tf\":0.021739130434782608}}}}}}}}}}}}}}}}}}}}}}}}},\".\":{\"docs\":{},\"g\":{\"docs\":{},\"e\":{\"docs\":{},\"t\":{\"docs\":{},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"s\":{\"docs\":{},\"p\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{},\"s\":{\"docs\":{},\"e\":{\"docs\":{},\"(\":{\"docs\":{},\")\":{\"docs\":{},\";\":{\"docs\":{\"search-api/multisearch-api.html\":{\"ref\":\"search-api/multisearch-api.html\",\"tf\":0.019230769230769232}}}}}}}}}}}}}}}}},\"[\":{\"docs\":{},\"]\":{\"docs\":{\"query-dsl/specialized-queries.html\":{\"ref\":\"query-dsl/specialized-queries.html\",\"tf\":0.004761904761904762}}}},\"s\":{\"docs\":{},\")\":{\"docs\":{\"query-dsl/specialized-queries.html\":{\"ref\":\"query-dsl/specialized-queries.html\",\"tf\":0.004761904761904762}}}}},\"r\":{\"docs\":{\"document-apis/bulk-api.html\":{\"ref\":\"document-apis/bulk-api.html\",\"tf\":0.014492753623188406}}}}},\"p\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.003305785123966942}},\"范\":{\"docs\":{},\"围\":{\"docs\":{},\"聚\":{\"docs\":{},\"合\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}}}},\"s\":{\"docs\":{},\".\":{\"docs\":{\"query-dsl/geo-queries.html\":{\"ref\":\"query-dsl/geo-queries.html\",\"tf\":0.00980392156862745}}}}},\"j\":{\"docs\":{},\"a\":{\"docs\":{},\"v\":{\"docs\":{},\"a\":{\"docs\":{\"./\":{\"ref\":\"./\",\"tf\":0.14583333333333334},\"dependency.html\":{\"ref\":\"dependency.html\",\"tf\":0.07692307692307693},\"search-api.html\":{\"ref\":\"search-api.html\",\"tf\":0.017241379310344827},\"search-api/using-scrolls-in-java.html\":{\"ref\":\"search-api/using-scrolls-in-java.html\",\"tf\":3.3387978142076498},\"search-api/using-aggregations.html\":{\"ref\":\"search-api/using-aggregations.html\",\"tf\":0.029411764705882353},\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.013223140495867768},\"java-api-administration.html\":{\"ref\":\"java-api-administration.html\",\"tf\":3.333333333333333}},\".\":{\"docs\":{},\"i\":{\"docs\":{},\"o\":{\"docs\":{},\".\":{\"docs\":{},\"i\":{\"docs\":{},\"o\":{\"docs\":{},\"e\":{\"docs\":{},\"x\":{\"docs\":{},\"c\":{\"docs\":{},\"e\":{\"docs\":{},\"p\":{\"docs\":{},\"t\":{\"docs\":{},\"i\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{},\";\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.002066115702479339}}}}}}}}}}}}}}}}},\"n\":{\"docs\":{},\"e\":{\"docs\":{},\"t\":{\"docs\":{},\".\":{\"docs\":{},\"i\":{\"docs\":{},\"n\":{\"docs\":{},\"e\":{\"docs\":{},\"t\":{\"docs\":{},\"a\":{\"docs\":{},\"d\":{\"docs\":{},\"d\":{\"docs\":{},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"s\":{\"docs\":{},\"s\":{\"docs\":{},\";\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.002066115702479339}}}}}}}}}}}}}},\"u\":{\"docs\":{},\"n\":{\"docs\":{},\"k\":{\"docs\":{},\"n\":{\"docs\":{},\"o\":{\"docs\":{},\"w\":{\"docs\":{},\"n\":{\"docs\":{},\"h\":{\"docs\":{},\"o\":{\"docs\":{},\"s\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"x\":{\"docs\":{},\"c\":{\"docs\":{},\"e\":{\"docs\":{},\"p\":{\"docs\":{},\"t\":{\"docs\":{},\"i\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{},\";\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.002066115702479339}}}}}}}}}}}}}}}}}}}}}}}}}}},\"u\":{\"docs\":{},\"t\":{\"docs\":{},\"i\":{\"docs\":{},\"l\":{\"docs\":{},\".\":{\"docs\":{},\"d\":{\"docs\":{},\"a\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\";\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.002066115702479339}}}}}}},\"h\":{\"docs\":{},\"a\":{\"docs\":{},\"s\":{\"docs\":{},\"h\":{\"docs\":{},\"m\":{\"docs\":{},\"a\":{\"docs\":{},\"p\":{\"docs\":{},\";\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.002066115702479339}}}}}}}}}},\"m\":{\"docs\":{},\"a\":{\"docs\":{},\"p\":{\"docs\":{},\";\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.002066115702479339}}}}}},\"c\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{},\"c\":{\"docs\":{},\"u\":{\"docs\":{},\"r\":{\"docs\":{},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"n\":{\"docs\":{},\"t\":{\"docs\":{},\".\":{\"docs\":{},\"t\":{\"docs\":{},\"h\":{\"docs\":{},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"a\":{\"docs\":{},\"d\":{\"docs\":{},\"p\":{\"docs\":{},\"o\":{\"docs\":{},\"o\":{\"docs\":{},\"l\":{\"docs\":{},\"e\":{\"docs\":{},\"x\":{\"docs\":{},\"e\":{\"docs\":{},\"c\":{\"docs\":{},\"u\":{\"docs\":{},\"t\":{\"docs\":{},\"o\":{\"docs\":{},\"r\":{\"docs\":{},\"$\":{\"docs\":{},\"w\":{\"docs\":{},\"o\":{\"docs\":{},\"r\":{\"docs\":{},\"k\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\".\":{\"docs\":{},\"r\":{\"docs\":{},\"u\":{\"docs\":{},\"n\":{\"docs\":{},\"(\":{\"docs\":{},\"t\":{\"docs\":{},\"h\":{\"docs\":{},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"a\":{\"docs\":{},\"d\":{\"docs\":{},\"p\":{\"docs\":{},\"o\":{\"docs\":{},\"o\":{\"docs\":{},\"l\":{\"docs\":{},\"e\":{\"docs\":{},\"x\":{\"docs\":{},\"e\":{\"docs\":{},\"c\":{\"docs\":{},\"u\":{\"docs\":{},\"t\":{\"docs\":{},\"o\":{\"docs\":{},\"r\":{\"docs\":{},\".\":{\"docs\":{},\"j\":{\"docs\":{},\"a\":{\"docs\":{},\"v\":{\"docs\":{},\"a\":{\"docs\":{},\":\":{\"6\":{\"1\":{\"7\":{\"docs\":{},\")\":{\"docs\":{\"search-api/using-scrolls-in-java.html\":{\"ref\":\"search-api/using-scrolls-in-java.html\",\"tf\":0.00546448087431694}}}},\"docs\":{}},\"docs\":{}},\"docs\":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\".\":{\"docs\":{},\"r\":{\"docs\":{},\"u\":{\"docs\":{},\"n\":{\"docs\":{},\"w\":{\"docs\":{},\"o\":{\"docs\":{},\"r\":{\"docs\":{},\"k\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"(\":{\"docs\":{},\"t\":{\"docs\":{},\"h\":{\"docs\":{},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"a\":{\"docs\":{},\"d\":{\"docs\":{},\"p\":{\"docs\":{},\"o\":{\"docs\":{},\"o\":{\"docs\":{},\"l\":{\"docs\":{},\"e\":{\"docs\":{},\"x\":{\"docs\":{},\"e\":{\"docs\":{},\"c\":{\"docs\":{},\"u\":{\"docs\":{},\"t\":{\"docs\":{},\"o\":{\"docs\":{},\"r\":{\"docs\":{},\".\":{\"docs\":{},\"j\":{\"docs\":{},\"a\":{\"docs\":{},\"v\":{\"docs\":{},\"a\":{\"docs\":{},\":\":{\"1\":{\"1\":{\"4\":{\"2\":{\"docs\":{},\")\":{\"docs\":{\"search-api/using-scrolls-in-java.html\":{\"ref\":\"search-api/using-scrolls-in-java.html\",\"tf\":0.00546448087431694}}}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"l\":{\"docs\":{},\"a\":{\"docs\":{},\"n\":{\"docs\":{},\"g\":{\"docs\":{},\".\":{\"docs\":{},\"t\":{\"docs\":{},\"h\":{\"docs\":{},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"a\":{\"docs\":{},\"d\":{\"docs\":{},\".\":{\"docs\":{},\"r\":{\"docs\":{},\"u\":{\"docs\":{},\"n\":{\"docs\":{},\"(\":{\"docs\":{},\"t\":{\"docs\":{},\"h\":{\"docs\":{},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"a\":{\"docs\":{},\"d\":{\"docs\":{},\".\":{\"docs\":{},\"j\":{\"docs\":{},\"a\":{\"docs\":{},\"v\":{\"docs\":{},\"a\":{\"docs\":{},\":\":{\"7\":{\"4\":{\"5\":{\"docs\":{},\")\":{\"docs\":{\"search-api/using-scrolls-in-java.html\":{\"ref\":\"search-api/using-scrolls-in-java.html\",\"tf\":0.00546448087431694}}}},\"docs\":{}},\"docs\":{}},\"docs\":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"s\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.030991735537190084},\"document-apis/multi-get-api.html\":{\"ref\":\"document-apis/multi-get-api.html\",\"tf\":0.021739130434782608},\"query-dsl.html\":{\"ref\":\"query-dsl.html\",\"tf\":0.043478260869565216},\"query-dsl/specialized-queries.html\":{\"ref\":\"query-dsl/specialized-queries.html\",\"tf\":0.004761904761904762}},\".\":{\"docs\":{},\"p\":{\"docs\":{},\"u\":{\"docs\":{},\"t\":{\"docs\":{},\"(\":{\"docs\":{},\"\\\"\":{\"docs\":{},\"m\":{\"docs\":{},\"e\":{\"docs\":{},\"s\":{\"docs\":{},\"s\":{\"docs\":{},\"a\":{\"docs\":{},\"g\":{\"docs\":{},\"e\":{\"docs\":{},\"\\\"\":{\"docs\":{},\",\":{\"docs\":{},\"\\\"\":{\"docs\":{},\"t\":{\"docs\":{},\"r\":{\"docs\":{},\"i\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.006198347107438017}}}}}}}}}}}}}}},\"p\":{\"docs\":{},\"o\":{\"docs\":{},\"s\":{\"docs\":{},\"t\":{\"docs\":{},\"d\":{\"docs\":{},\"a\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"\\\"\":{\"docs\":{},\",\":{\"docs\":{},\"\\\"\":{\"2\":{\"0\":{\"1\":{\"3\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.004132231404958678}}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"n\":{\"docs\":{},\"e\":{\"docs\":{},\"w\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.002066115702479339}}}}}}}}}}}}}}},\"u\":{\"docs\":{},\"s\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"\\\"\":{\"docs\":{},\",\":{\"docs\":{},\"\\\"\":{\"docs\":{},\"k\":{\"docs\":{},\"i\":{\"docs\":{},\"m\":{\"docs\":{},\"c\":{\"docs\":{},\"h\":{\"docs\":{},\"y\":{\"docs\":{},\"\\\"\":{\"docs\":{},\")\":{\"docs\":{},\";\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.006198347107438017}}}}}}}}}}}}}}}}}}}}}}}}}}},\"o\":{\"docs\":{},\"i\":{\"docs\":{},\"n\":{\"docs\":{\"query-dsl/joining-queries.html\":{\"ref\":\"query-dsl/joining-queries.html\",\"tf\":5.0215827338129495}},\"q\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"y\":{\"docs\":{},\"b\":{\"docs\":{},\"u\":{\"docs\":{},\"i\":{\"docs\":{},\"l\":{\"docs\":{},\"d\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"s\":{\"docs\":{},\".\":{\"docs\":{},\"h\":{\"docs\":{},\"a\":{\"docs\":{},\"s\":{\"docs\":{},\"c\":{\"docs\":{},\"h\":{\"docs\":{},\"i\":{\"docs\":{},\"l\":{\"docs\":{},\"d\":{\"docs\":{},\"q\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"y\":{\"docs\":{},\"(\":{\"docs\":{\"query-dsl/joining-queries.html\":{\"ref\":\"query-dsl/joining-queries.html\",\"tf\":0.007194244604316547}}}}}}}}}}}}},\"p\":{\"docs\":{},\"a\":{\"docs\":{},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"n\":{\"docs\":{},\"t\":{\"docs\":{},\"q\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"y\":{\"docs\":{},\"(\":{\"docs\":{\"query-dsl/joining-queries.html\":{\"ref\":\"query-dsl/joining-queries.html\",\"tf\":0.007194244604316547}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"。\":{\"docs\":{\"query-dsl/joining-queries.html\":{\"ref\":\"query-dsl/joining-queries.html\",\"tf\":0.007194244604316547}}}}}},\"t\":{\"docs\":{\"query-dsl/geo-queries.html\":{\"ref\":\"query-dsl/geo-queries.html\",\"tf\":0.014705882352941176}}}},\"p\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"c\":{\"docs\":{},\"e\":{\"docs\":{},\"n\":{\"docs\":{},\"t\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.020437956204379562}},\"i\":{\"docs\":{},\"l\":{\"docs\":{\"./\":{\"ref\":\"./\",\"tf\":0.020833333333333332},\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.004379562043795621}},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"a\":{\"docs\":{},\"n\":{\"docs\":{},\"k\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}}}}}},\"s\":{\"docs\":{},\"a\":{\"docs\":{},\"g\":{\"docs\":{},\"g\":{\"docs\":{},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"g\":{\"docs\":{},\"a\":{\"docs\":{},\"t\":{\"docs\":{},\"i\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{},\"b\":{\"docs\":{},\"u\":{\"docs\":{},\"i\":{\"docs\":{},\"l\":{\"docs\":{},\"d\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.004379562043795621}}}}}}}}}}}}}}}}}}}}}},\",\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00291970802919708}}}}}},\"o\":{\"docs\":{},\"l\":{\"docs\":{\"query-dsl/specialized-queries.html\":{\"ref\":\"query-dsl/specialized-queries.html\",\"tf\":0.03333333333333333}},\"a\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\",\":{\"docs\":{\"query-dsl/specialized-queries.html\":{\"ref\":\"query-dsl/specialized-queries.html\",\"tf\":0.004761904761904762}}},\"q\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"i\":{\"docs\":{\"query-dsl/specialized-queries.html\":{\"ref\":\"query-dsl/specialized-queries.html\",\"tf\":0.004761904761904762}}},\"y\":{\"docs\":{},\"b\":{\"docs\":{},\"u\":{\"docs\":{},\"i\":{\"docs\":{},\"l\":{\"docs\":{},\"d\":{\"docs\":{\"query-dsl/specialized-queries.html\":{\"ref\":\"query-dsl/specialized-queries.html\",\"tf\":0.004761904761904762}},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"(\":{\"docs\":{},\"\\\"\":{\"docs\":{},\"q\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"y\":{\"docs\":{},\"\\\"\":{\"docs\":{},\",\":{\"docs\":{\"query-dsl/specialized-queries.html\":{\"ref\":\"query-dsl/specialized-queries.html\",\"tf\":0.004761904761904762}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"r\":{\"docs\":{},\"e\":{\"docs\":{\"query-dsl/geo-queries.html\":{\"ref\":\"query-dsl/geo-queries.html\",\"tf\":0.024509803921568627}},\"b\":{\"docs\":{},\"u\":{\"docs\":{},\"i\":{\"docs\":{},\"l\":{\"docs\":{},\"t\":{\"docs\":{},\"t\":{\"docs\":{},\"r\":{\"docs\":{},\"a\":{\"docs\":{},\"n\":{\"docs\":{},\"s\":{\"docs\":{},\"p\":{\"docs\":{},\"o\":{\"docs\":{},\"r\":{\"docs\":{},\"t\":{\"docs\":{},\"c\":{\"docs\":{},\"l\":{\"docs\":{},\"i\":{\"docs\":{},\"e\":{\"docs\":{},\"n\":{\"docs\":{},\"t\":{\"docs\":{},\"(\":{\"docs\":{},\"e\":{\"docs\":{},\"s\":{\"docs\":{},\"s\":{\"docs\":{},\"e\":{\"docs\":{},\"t\":{\"docs\":{},\"t\":{\"docs\":{},\"i\":{\"docs\":{},\"n\":{\"docs\":{},\"g\":{\"docs\":{},\"s\":{\"docs\":{},\")\":{\"docs\":{},\";\":{\"docs\":{},\"/\":{\"docs\":{},\"/\":{\"docs\":{},\"初\":{\"docs\":{},\"始\":{\"docs\":{},\"化\":{\"docs\":{},\"c\":{\"docs\":{},\"l\":{\"docs\":{},\"i\":{\"docs\":{},\"e\":{\"docs\":{},\"n\":{\"docs\":{},\"t\":{\"docs\":{},\"较\":{\"docs\":{},\"老\":{\"docs\":{},\"版\":{\"docs\":{},\"本\":{\"docs\":{},\"发\":{\"docs\":{},\"生\":{\"docs\":{},\"了\":{\"docs\":{},\"变\":{\"docs\":{},\"化\":{\"docs\":{},\"，\":{\"docs\":{},\"此\":{\"docs\":{},\"方\":{\"docs\":{},\"法\":{\"docs\":{},\"有\":{\"docs\":{},\"几\":{\"docs\":{},\"个\":{\"docs\":{},\"重\":{\"docs\":{},\"载\":{\"docs\":{},\"方\":{\"docs\":{},\"法\":{\"docs\":{},\"，\":{\"docs\":{},\"初\":{\"docs\":{},\"始\":{\"docs\":{},\"化\":{\"docs\":{},\"插\":{\"docs\":{},\"件\":{\"docs\":{},\"等\":{\"docs\":{},\"。\":{\"docs\":{\"client/transport-client.html\":{\"ref\":\"client/transport-client.html\",\"tf\":0.011111111111111112}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"s\":{\"docs\":{},\"e\":{\"docs\":{},\"t\":{\"docs\":{},\"t\":{\"docs\":{},\"i\":{\"docs\":{},\"n\":{\"docs\":{},\"g\":{\"docs\":{},\"s\":{\"docs\":{},\")\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.002066115702479339}},\";\":{\"docs\":{\"client/transport-client.html\":{\"ref\":\"client/transport-client.html\",\"tf\":0.022222222222222223},\"query-dsl/joining-queries.html\":{\"ref\":\"query-dsl/joining-queries.html\",\"tf\":0.014388489208633094},\"query-dsl/specialized-queries.html\":{\"ref\":\"query-dsl/specialized-queries.html\",\"tf\":0.004761904761904762}}}},\".\":{\"docs\":{},\"e\":{\"docs\":{},\"m\":{\"docs\":{},\"p\":{\"docs\":{},\"t\":{\"docs\":{},\"y\":{\"docs\":{},\")\":{\"docs\":{\"client/transport-client.html\":{\"ref\":\"client/transport-client.html\",\"tf\":0.011111111111111112}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"x\":{\"docs\":{},\"p\":{\"docs\":{},\"a\":{\"docs\":{},\"c\":{\"docs\":{},\"k\":{\"docs\":{},\"t\":{\"docs\":{},\"r\":{\"docs\":{},\"a\":{\"docs\":{},\"n\":{\"docs\":{},\"s\":{\"docs\":{},\"p\":{\"docs\":{},\"o\":{\"docs\":{},\"r\":{\"docs\":{},\"t\":{\"docs\":{},\"c\":{\"docs\":{},\"l\":{\"docs\":{},\"i\":{\"docs\":{},\"e\":{\"docs\":{},\"n\":{\"docs\":{},\"t\":{\"docs\":{},\"(\":{\"docs\":{},\"s\":{\"docs\":{},\"e\":{\"docs\":{},\"t\":{\"docs\":{},\"t\":{\"docs\":{},\"i\":{\"docs\":{},\"n\":{\"docs\":{},\"g\":{\"docs\":{},\"s\":{\"docs\":{},\")\":{\"docs\":{\"client/xpack-transport-client.html\":{\"ref\":\"client/xpack-transport-client.html\",\"tf\":0.01639344262295082}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"p\":{\"docs\":{},\"a\":{\"docs\":{},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"u\":{\"docs\":{},\"p\":{\"docs\":{},\"d\":{\"docs\":{},\"a\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"(\":{\"docs\":{},\")\":{\"docs\":{\"document-apis/update-api.html\":{\"ref\":\"document-apis/update-api.html\",\"tf\":0.014814814814814815}}}}}}}}}}}}}},\"f\":{\"docs\":{},\"i\":{\"docs\":{},\"x\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125}},\"q\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"y\":{\"docs\":{},\"(\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125}},\"\\\"\":{\"docs\":{},\"u\":{\"docs\":{},\"s\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"\\\"\":{\"docs\":{},\",\":{\"docs\":{\"query-dsl/span-queries.html\":{\"ref\":\"query-dsl/span-queries.html\",\"tf\":0.005555555555555556}}}}}}}}}},\"b\":{\"docs\":{},\"u\":{\"docs\":{},\"i\":{\"docs\":{},\"l\":{\"docs\":{},\"d\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\",\":{\"docs\":{\"query-dsl/span-queries.html\":{\"ref\":\"query-dsl/span-queries.html\",\"tf\":0.005555555555555556}}}}}}}}}}}}}}},\",\":{\"docs\":{\"query-dsl/span-queries.html\":{\"ref\":\"query-dsl/span-queries.html\",\"tf\":0.005555555555555556}}}}}}},\"i\":{\"docs\":{},\"v\":{\"docs\":{},\"a\":{\"docs\":{},\"t\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.002066115702479339}}}}}},\"o\":{\"docs\":{},\"c\":{\"docs\":{},\"e\":{\"docs\":{},\"s\":{\"docs\":{},\"s\":{\"docs\":{\"document-apis/bulk-api.html\":{\"ref\":\"document-apis/bulk-api.html\",\"tf\":0.014492753623188406},\"search-api/using-scrolls-in-java.html\":{\"ref\":\"search-api/using-scrolls-in-java.html\",\"tf\":0.00546448087431694}},\"o\":{\"docs\":{},\"r\":{\"docs\":{\"document-apis/using-bulk-processor.html\":{\"ref\":\"document-apis/using-bulk-processor.html\",\"tf\":3.3514056224899593}}}}}}}}}},\"a\":{\"docs\":{},\"c\":{\"docs\":{},\"k\":{\"docs\":{\"client/xpack-transport-client.html\":{\"ref\":\"client/xpack-transport-client.html\",\"tf\":0.03278688524590164}}}},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"n\":{\"docs\":{},\"t\":{\"docs\":{\"query-dsl/joining-queries.html\":{\"ref\":\"query-dsl/joining-queries.html\",\"tf\":0.014388489208633094}}}}},\"a\":{\"docs\":{},\"m\":{\"docs\":{},\"s\":{\"docs\":{},\".\":{\"docs\":{},\"p\":{\"docs\":{},\"a\":{\"docs\":{},\"r\":{\"docs\":{},\"a\":{\"docs\":{},\"m\":{\"1\":{\"docs\":{\"query-dsl/specialized-queries.html\":{\"ref\":\"query-dsl/specialized-queries.html\",\"tf\":0.004761904761904762}}},\"docs\":{}}}}}}}}}},\"t\":{\"docs\":{\"query-dsl/span-queries.html\":{\"ref\":\"query-dsl/span-queries.html\",\"tf\":0.022222222222222223}}}},\"t\":{\"docs\":{},\"h\":{\"docs\":{\"query-dsl/geo-queries.html\":{\"ref\":\"query-dsl/geo-queries.html\",\"tf\":0.004901960784313725}}}}},\"u\":{\"docs\":{},\"b\":{\"docs\":{},\"l\":{\"docs\":{},\"i\":{\"docs\":{},\"c\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.02066115702479339},\"document-apis/delete-by-query-api.html\":{\"ref\":\"document-apis/delete-by-query-api.html\",\"tf\":0.037037037037037035},\"document-apis/using-bulk-processor.html\":{\"ref\":\"document-apis/using-bulk-processor.html\",\"tf\":0.018072289156626505},\"search-api/using-scrolls-in-java.html\":{\"ref\":\"search-api/using-scrolls-in-java.html\",\"tf\":0.01092896174863388}}}}}}},\"o\":{\"docs\":{},\"s\":{\"docs\":{},\"t\":{\"docs\":{},\"\\\"\":{\"docs\":{},\")\":{\"docs\":{\"document-apis/bulk-api.html\":{\"ref\":\"document-apis/bulk-api.html\",\"tf\":0.014492753623188406}}}}},\"i\":{\"docs\":{},\"t\":{\"docs\":{\"query-dsl/compound-queries.html\":{\"ref\":\"query-dsl/compound-queries.html\",\"tf\":0.005847953216374269},\"query-dsl/span-queries.html\":{\"ref\":\"query-dsl/span-queries.html\",\"tf\":0.011111111111111112}}}}},\"i\":{\"docs\":{},\"n\":{\"docs\":{},\"t\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0049586776859504135},\"query-dsl/geo-queries.html\":{\"ref\":\"query-dsl/geo-queries.html\",\"tf\":0.0392156862745098}},\"类\":{\"docs\":{},\"型\":{\"docs\":{},\"字\":{\"docs\":{},\"段\":{\"docs\":{},\"）\":{\"docs\":{},\"，\":{\"docs\":{},\"计\":{\"docs\":{},\"算\":{\"docs\":{},\"出\":{\"docs\":{},\"该\":{\"docs\":{},\"字\":{\"docs\":{},\"段\":{\"docs\":{},\"所\":{\"docs\":{},\"有\":{\"docs\":{},\"地\":{\"docs\":{},\"理\":{\"docs\":{},\"坐\":{\"docs\":{},\"标\":{\"docs\":{},\"点\":{\"docs\":{},\"的\":{\"docs\":{},\"边\":{\"docs\":{},\"界\":{\"docs\":{},\"（\":{\"docs\":{},\"左\":{\"docs\":{},\"上\":{\"docs\":{},\"角\":{\"docs\":{},\"/\":{\"docs\":{},\"右\":{\"docs\":{},\"下\":{\"docs\":{},\"角\":{\"docs\":{},\"坐\":{\"docs\":{},\"标\":{\"docs\":{},\"点\":{\"docs\":{},\"）\":{\"docs\":{},\"。\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"s\":{\"docs\":{},\")\":{\"docs\":{},\";\":{\"docs\":{\"query-dsl/geo-queries.html\":{\"ref\":\"query-dsl/geo-queries.html\",\"tf\":0.004901960784313725}}}},\".\":{\"docs\":{},\"a\":{\"docs\":{},\"d\":{\"docs\":{},\"d\":{\"docs\":{},\"(\":{\"docs\":{},\"n\":{\"docs\":{},\"e\":{\"docs\":{},\"w\":{\"docs\":{\"query-dsl/geo-queries.html\":{\"ref\":\"query-dsl/geo-queries.html\",\"tf\":0.0392156862745098}}}}}}}}}}}}}},\"l\":{\"docs\":{},\"y\":{\"docs\":{},\"g\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{\"query-dsl/geo-queries.html\":{\"ref\":\"query-dsl/geo-queries.html\",\"tf\":0.00980392156862745}}}}}}}}},\"r\":{\"docs\":{},\"a\":{\"docs\":{},\"n\":{\"docs\":{},\"k\":{\"docs\":{\"./\":{\"ref\":\"./\",\"tf\":0.020833333333333332},\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}}},\"g\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.009917355371900827},\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125}},\"e\":{\"docs\":{},\"q\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"y\":{\"docs\":{},\"(\":{\"docs\":{},\"\\\"\":{\"docs\":{},\"p\":{\"docs\":{},\"r\":{\"docs\":{},\"i\":{\"docs\":{},\"c\":{\"docs\":{},\"e\":{\"docs\":{},\"\\\"\":{\"docs\":{},\")\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125}}}}}}}}}}},\"b\":{\"docs\":{},\"u\":{\"docs\":{},\"i\":{\"docs\":{},\"l\":{\"docs\":{},\"d\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.008086253369272238}},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\".\":{\"docs\":{},\"f\":{\"docs\":{},\"r\":{\"docs\":{},\"o\":{\"docs\":{},\"m\":{\"docs\":{},\"(\":{\"1\":{\"9\":{\"docs\":{},\")\":{\"docs\":{},\";\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125}}}}},\"docs\":{}},\"docs\":{}}}}}},\"i\":{\"docs\":{},\"n\":{\"docs\":{},\"c\":{\"docs\":{},\"l\":{\"docs\":{},\"u\":{\"docs\":{},\"d\":{\"docs\":{},\"e\":{\"docs\":{},\"l\":{\"docs\":{},\"o\":{\"docs\":{},\"w\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"(\":{\"docs\":{},\"t\":{\"docs\":{},\"r\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"docs\":{},\")\":{\"docs\":{},\";\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125}}}}}}}}}}}}}},\"u\":{\"docs\":{},\"p\":{\"docs\":{},\"p\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"(\":{\"docs\":{},\"t\":{\"docs\":{},\"r\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"docs\":{},\")\":{\"docs\":{},\";\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125}}}}}}}}}}}}}}}}}}}}},\"t\":{\"docs\":{},\"o\":{\"docs\":{},\"(\":{\"2\":{\"1\":{\"docs\":{},\")\":{\"docs\":{},\";\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125}}}}},\"docs\":{}},\"docs\":{}}}}},\",\":{\"docs\":{\"query-dsl/span-queries.html\":{\"ref\":\"query-dsl/span-queries.html\",\"tf\":0.005555555555555556}}}}}}}}}}}}}}},\",\":{\"docs\":{\"query-dsl/span-queries.html\":{\"ref\":\"query-dsl/span-queries.html\",\"tf\":0.005555555555555556}}}}},\"d\":{\"docs\":{},\"o\":{\"docs\":{},\"m\":{\"docs\":{},\"f\":{\"docs\":{},\"u\":{\"docs\":{},\"n\":{\"docs\":{},\"c\":{\"docs\":{},\"t\":{\"docs\":{},\"i\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{},\"(\":{\"docs\":{},\"\\\"\":{\"docs\":{},\"a\":{\"docs\":{},\"b\":{\"docs\":{},\"c\":{\"docs\":{},\"d\":{\"docs\":{},\"e\":{\"docs\":{},\"f\":{\"docs\":{},\"\\\"\":{\"docs\":{},\")\":{\"docs\":{},\")\":{\"docs\":{},\",\":{\"docs\":{\"query-dsl/compound-queries.html\":{\"ref\":\"query-dsl/compound-queries.html\",\"tf\":0.005847953216374269}}}}}}}}}}}}}}}}}}}}}}}}}}},\"e\":{\"docs\":{},\"p\":{\"docs\":{},\"o\":{\"docs\":{},\"s\":{\"docs\":{},\"i\":{\"docs\":{},\"t\":{\"docs\":{},\"o\":{\"docs\":{},\"r\":{\"docs\":{},\"i\":{\"docs\":{\"dependency.html\":{\"ref\":\"dependency.html\",\"tf\":0.07692307692307693}}}}}}}}}},\"l\":{\"docs\":{},\"e\":{\"docs\":{},\"a\":{\"docs\":{},\"s\":{\"docs\":{\"client/xpack-transport-client.html\":{\"ref\":\"client/xpack-transport-client.html\",\"tf\":0.01639344262295082}}}}}},\"s\":{\"docs\":{},\"p\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{},\"s\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.01652892561983471},\"document-apis/get-api.html\":{\"ref\":\"document-apis/get-api.html\",\"tf\":0.06896551724137931},\"document-apis/delete-api.html\":{\"ref\":\"document-apis/delete-api.html\",\"tf\":0.07894736842105263},\"document-apis/delete-by-query-api.html\":{\"ref\":\"document-apis/delete-by-query-api.html\",\"tf\":0.018518518518518517},\"document-apis/multi-get-api.html\":{\"ref\":\"document-apis/multi-get-api.html\",\"tf\":0.021739130434782608},\"document-apis/bulk-api.html\":{\"ref\":\"document-apis/bulk-api.html\",\"tf\":0.014492753623188406},\"search-api.html\":{\"ref\":\"search-api.html\",\"tf\":0.034482758620689655},\"search-api/using-scrolls-in-java.html\":{\"ref\":\"search-api/using-scrolls-in-java.html\",\"tf\":0.01092896174863388},\"search-api/multisearch-api.html\":{\"ref\":\"search-api/multisearch-api.html\",\"tf\":0.038461538461538464},\"query-dsl/specialized-queries.html\":{\"ref\":\"query-dsl/specialized-queries.html\",\"tf\":0.004761904761904762}},\"e\":{\"docs\":{},\".\":{\"docs\":{},\"g\":{\"docs\":{},\"e\":{\"docs\":{},\"t\":{\"docs\":{},\"i\":{\"docs\":{},\"d\":{\"docs\":{},\"(\":{\"docs\":{},\")\":{\"docs\":{},\";\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.002066115702479339}}}}}},\"n\":{\"docs\":{},\"d\":{\"docs\":{},\"e\":{\"docs\":{},\"x\":{\"docs\":{},\"(\":{\"docs\":{},\")\":{\"docs\":{},\";\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.002066115702479339}}}}}}}}}},\"t\":{\"docs\":{},\"y\":{\"docs\":{},\"p\":{\"docs\":{},\"e\":{\"docs\":{},\"(\":{\"docs\":{},\")\":{\"docs\":{},\";\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.002066115702479339}}}}}}}}},\"v\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"s\":{\"docs\":{},\"i\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{},\"(\":{\"docs\":{},\")\":{\"docs\":{},\";\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.002066115702479339}}}}}}}}}}}},\"d\":{\"docs\":{},\"e\":{\"docs\":{},\"l\":{\"docs\":{},\"e\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"d\":{\"docs\":{},\"(\":{\"docs\":{},\")\":{\"docs\":{},\";\":{\"docs\":{\"document-apis/delete-by-query-api.html\":{\"ref\":\"document-apis/delete-by-query-api.html\",\"tf\":0.037037037037037035}}}}}}}}}}}},\"s\":{\"docs\":{},\"o\":{\"docs\":{},\"u\":{\"docs\":{},\"r\":{\"docs\":{},\"c\":{\"docs\":{},\"e\":{\"docs\":{},\"a\":{\"docs\":{},\"s\":{\"docs\":{},\"s\":{\"docs\":{},\"t\":{\"docs\":{},\"r\":{\"docs\":{},\"i\":{\"docs\":{},\"n\":{\"docs\":{},\"g\":{\"docs\":{},\"(\":{\"docs\":{},\")\":{\"docs\":{},\";\":{\"docs\":{\"document-apis/multi-get-api.html\":{\"ref\":\"document-apis/multi-get-api.html\",\"tf\":0.021739130434782608}}}}}}}}}}}}}}}}}}},\"h\":{\"docs\":{},\"i\":{\"docs\":{},\"t\":{\"docs\":{},\"s\":{\"docs\":{},\"(\":{\"docs\":{},\")\":{\"docs\":{},\".\":{\"docs\":{},\"g\":{\"docs\":{},\"e\":{\"docs\":{},\"t\":{\"docs\":{},\"t\":{\"docs\":{},\"o\":{\"docs\":{},\"t\":{\"docs\":{},\"a\":{\"docs\":{},\"l\":{\"docs\":{},\"h\":{\"docs\":{},\"i\":{\"docs\":{},\"t\":{\"docs\":{},\"s\":{\"docs\":{},\"(\":{\"docs\":{},\")\":{\"docs\":{},\";\":{\"docs\":{\"search-api/multisearch-api.html\":{\"ref\":\"search-api/multisearch-api.html\",\"tf\":0.019230769230769232}}}}}}}}}}}}}}}}}},\")\":{\"docs\":{\"query-dsl/specialized-queries.html\":{\"ref\":\"query-dsl/specialized-queries.html\",\"tf\":0.004761904761904762}}}}}}}}}}}},\"s\":{\"docs\":{},\"t\":{\"docs\":{},\"a\":{\"docs\":{},\"t\":{\"docs\":{},\"u\":{\"docs\":{},\"s\":{\"docs\":{},\"(\":{\"docs\":{},\")\":{\"docs\":{},\";\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.002066115702479339}}}}}}}}}}},\"i\":{\"docs\":{},\"s\":{\"docs\":{},\"s\":{\"docs\":{},\"u\":{\"docs\":{},\"c\":{\"docs\":{},\"c\":{\"docs\":{},\"e\":{\"docs\":{},\"e\":{\"docs\":{},\"d\":{\"docs\":{},\"e\":{\"docs\":{},\"d\":{\"docs\":{},\"(\":{\"docs\":{},\")\":{\"docs\":{},\";\":{\"docs\":{\"search-api/using-scrolls-in-java.html\":{\"ref\":\"search-api/using-scrolls-in-java.html\",\"tf\":0.01092896174863388}}}}}}}}}}}}}}}}},\")\":{\"docs\":{\"document-apis/delete-by-query-api.html\":{\"ref\":\"document-apis/delete-by-query-api.html\",\"tf\":0.018518518518518517},\"document-apis/using-bulk-processor.html\":{\"ref\":\"document-apis/using-bulk-processor.html\",\"tf\":0.006024096385542169}}}}}}}},\"t\":{\"docs\":{\"document-apis/get-api.html\":{\"ref\":\"document-apis/get-api.html\",\"tf\":0.034482758620689655},\"search-api.html\":{\"ref\":\"search-api.html\",\"tf\":0.017241379310344827}},\"s\":{\"docs\":{},\"t\":{\"docs\":{},\"a\":{\"docs\":{},\"t\":{\"docs\":{},\"u\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.002066115702479339}}}}}}}},\"u\":{\"docs\":{},\"l\":{\"docs\":{},\"t\":{\"docs\":{\"search-api/using-scrolls-in-java.html\":{\"ref\":\"search-api/using-scrolls-in-java.html\",\"tf\":0.00546448087431694},\"search-api/using-aggregations.html\":{\"ref\":\"search-api/using-aggregations.html\",\"tf\":0.029411764705882353},\"query-dsl/specialized-queries.html\":{\"ref\":\"query-dsl/specialized-queries.html\",\"tf\":0.004761904761904762}}}}},\"e\":{\"docs\":{},\"l\":{\"docs\":{},\"l\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"t\":{\"docs\":{},\"o\":{\"docs\":{},\"p\":{\"docs\":{},\"r\":{\"docs\":{},\"o\":{\"docs\":{},\"d\":{\"docs\":{},\"u\":{\"docs\":{},\"c\":{\"docs\":{},\"t\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}},\".\":{\"docs\":{},\"g\":{\"docs\":{},\"e\":{\"docs\":{},\"t\":{\"docs\":{},\"d\":{\"docs\":{},\"o\":{\"docs\":{},\"c\":{\"docs\":{},\"c\":{\"docs\":{},\"o\":{\"docs\":{},\"u\":{\"docs\":{},\"n\":{\"docs\":{},\"t\":{\"docs\":{},\"(\":{\"docs\":{},\")\":{\"docs\":{},\";\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"u\":{\"docs\":{},\"s\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.006198347107438017}}}},\"q\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"docs\":{},\"s\":{\"docs\":{},\"t\":{\"docs\":{\"document-apis/bulk-api.html\":{\"ref\":\"document-apis/bulk-api.html\",\"tf\":0.014492753623188406},\"document-apis/using-bulk-processor.html\":{\"ref\":\"document-apis/using-bulk-processor.html\",\"tf\":0.018072289156626505},\"search-api/using-scrolls-in-java.html\":{\"ref\":\"search-api/using-scrolls-in-java.html\",\"tf\":0.01092896174863388}},\"s\":{\"docs\":{},\"#\":{\"docs\":{\"document-apis/bulk-api.html\":{\"ref\":\"document-apis/bulk-api.html\",\"tf\":0.014492753623188406}}},\",\":{\"docs\":{\"search-api/using-scrolls-in-java.html\":{\"ref\":\"search-api/using-scrolls-in-java.html\",\"tf\":0.00546448087431694}}}},\")\":{\"docs\":{\"document-apis/using-bulk-processor.html\":{\"ref\":\"document-apis/using-bulk-processor.html\",\"tf\":0.006024096385542169}}},\",\":{\"docs\":{\"document-apis/using-bulk-processor.html\":{\"ref\":\"document-apis/using-bulk-processor.html\",\"tf\":0.012048192771084338}}}}}},\"i\":{\"docs\":{},\"r\":{\"docs\":{\"query-dsl/span-queries.html\":{\"ref\":\"query-dsl/span-queries.html\",\"tf\":0.005555555555555556}}}}}},\"f\":{\"docs\":{},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"s\":{\"docs\":{},\"h\":{\"docs\":{\"document-apis/using-bulk-processor.html\":{\"ref\":\"document-apis/using-bulk-processor.html\",\"tf\":0.006024096385542169}}}}}},\"l\":{\"docs\":{},\"e\":{\"docs\":{},\"c\":{\"docs\":{},\"t\":{\"docs\":{\"search-api/using-scrolls-in-java.html\":{\"ref\":\"search-api/using-scrolls-in-java.html\",\"tf\":0.00546448087431694}}}}}}},\"m\":{\"docs\":{},\"a\":{\"docs\":{},\"i\":{\"docs\":{},\"n\":{\"docs\":{\"document-apis/using-bulk-processor.html\":{\"ref\":\"document-apis/using-bulk-processor.html\",\"tf\":0.006024096385542169}}}}}},\"a\":{\"docs\":{},\"l\":{\"docs\":{\"search-api/using-scrolls-in-java.html\":{\"ref\":\"search-api/using-scrolls-in-java.html\",\"tf\":0.00546448087431694}}}},\"t\":{\"docs\":{},\"u\":{\"docs\":{},\"r\":{\"docs\":{},\"n\":{\"docs\":{\"search-api/using-scrolls-in-java.html\":{\"ref\":\"search-api/using-scrolls-in-java.html\",\"tf\":0.0273224043715847},\"query-dsl/span-queries.html\":{\"ref\":\"query-dsl/span-queries.html\",\"tf\":0.005555555555555556}}}}}},\"v\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"s\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}},\"e\":{\"docs\":{},\"_\":{\"docs\":{},\"n\":{\"docs\":{},\"e\":{\"docs\":{},\"s\":{\"docs\":{},\"t\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}}}},\"n\":{\"docs\":{},\"e\":{\"docs\":{},\"s\":{\"docs\":{},\"t\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}}}}}}}},\"g\":{\"docs\":{},\"e\":{\"docs\":{},\"x\":{\"docs\":{},\"p\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125},\"query-dsl/span-queries.html\":{\"ref\":\"query-dsl/span-queries.html\",\"tf\":0.005555555555555556}},\"q\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"y\":{\"docs\":{},\"(\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125}}},\"b\":{\"docs\":{},\"u\":{\"docs\":{},\"i\":{\"docs\":{},\"l\":{\"docs\":{},\"d\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.005390835579514825},\"query-dsl/span-queries.html\":{\"ref\":\"query-dsl/span-queries.html\",\"tf\":0.005555555555555556}}}}}}}}}}}}}}},\"i\":{\"docs\":{},\"s\":{\"docs\":{},\"t\":{\"docs\":{\"query-dsl/specialized-queries.html\":{\"ref\":\"query-dsl/specialized-queries.html\",\"tf\":0.014285714285714285}}}}}}},\"i\":{\"docs\":{},\"g\":{\"docs\":{},\"h\":{\"docs\":{},\"t\":{\"docs\":{\"query-dsl/geo-queries.html\":{\"ref\":\"query-dsl/geo-queries.html\",\"tf\":0.004901960784313725}}}}}},\"o\":{\"docs\":{},\"o\":{\"docs\":{},\"t\":{\"docs\":{\"query-dsl/specialized-queries.html\":{\"ref\":\"query-dsl/specialized-queries.html\",\"tf\":0.004761904761904762}}}}}},\"下\":{\"docs\":{},\"载\":{\"docs\":{},\"地\":{\"docs\":{},\"址\":{\"docs\":{},\"：\":{\"docs\":{},\"h\":{\"docs\":{},\"t\":{\"docs\":{},\"t\":{\"docs\":{},\"p\":{\"docs\":{},\"s\":{\"docs\":{},\":\":{\"docs\":{},\"/\":{\"docs\":{},\"/\":{\"docs\":{},\"w\":{\"docs\":{},\"w\":{\"docs\":{},\"w\":{\"docs\":{},\".\":{\"docs\":{},\"g\":{\"docs\":{},\"i\":{\"docs\":{},\"t\":{\"docs\":{},\"b\":{\"docs\":{},\"o\":{\"docs\":{},\"o\":{\"docs\":{},\"k\":{\"docs\":{},\".\":{\"docs\":{},\"c\":{\"docs\":{},\"o\":{\"docs\":{},\"m\":{\"docs\":{},\"/\":{\"docs\":{},\"b\":{\"docs\":{},\"o\":{\"docs\":{},\"o\":{\"docs\":{},\"k\":{\"docs\":{},\"/\":{\"docs\":{},\"q\":{\"docs\":{},\"u\":{\"docs\":{},\"a\":{\"docs\":{},\"n\":{\"docs\":{},\"k\":{\"docs\":{},\"e\":{\"docs\":{},\"/\":{\"docs\":{},\"e\":{\"docs\":{},\"l\":{\"docs\":{},\"a\":{\"docs\":{},\"s\":{\"docs\":{},\"t\":{\"docs\":{},\"i\":{\"docs\":{},\"c\":{\"docs\":{},\"s\":{\"docs\":{},\"e\":{\"docs\":{},\"a\":{\"docs\":{},\"r\":{\"docs\":{},\"c\":{\"docs\":{},\"h\":{\"docs\":{\"./\":{\"ref\":\"./\",\"tf\":0.020833333333333332}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"面\":{\"docs\":{},\"的\":{\"docs\":{},\"例\":{\"docs\":{},\"子\":{\"docs\":{},\"是\":{\"docs\":{},\"o\":{\"docs\":{},\"p\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"a\":{\"docs\":{},\"t\":{\"docs\":{},\"i\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{},\"t\":{\"docs\":{},\"h\":{\"docs\":{},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"a\":{\"docs\":{},\"d\":{\"docs\":{\"document-apis/get-api.html\":{\"ref\":\"document-apis/get-api.html\",\"tf\":0.034482758620689655},\"document-apis/delete-api.html\":{\"ref\":\"document-apis/delete-api.html\",\"tf\":0.02631578947368421}}}}}}}}}}}}}}}}}}}},\"代\":{\"docs\":{},\"码\":{\"docs\":{},\"演\":{\"docs\":{},\"示\":{\"docs\":{},\"了\":{\"docs\":{},\"如\":{\"docs\":{},\"何\":{\"docs\":{},\"在\":{\"docs\":{},\"搜\":{\"docs\":{},\"索\":{\"docs\":{},\"中\":{\"docs\":{},\"添\":{\"docs\":{},\"加\":{\"docs\":{},\"两\":{\"docs\":{},\"个\":{\"docs\":{},\"聚\":{\"docs\":{},\"合\":{\"docs\":{},\"：\":{\"docs\":{\"search-api/using-aggregations.html\":{\"ref\":\"search-api/using-aggregations.html\",\"tf\":0.029411764705882353}}}}}}}}}}}}}}}}}}}}},\"是\":{\"docs\":{},\"如\":{\"docs\":{},\"何\":{\"docs\":{},\"创\":{\"docs\":{},\"建\":{\"docs\":{},\"聚\":{\"docs\":{},\"合\":{\"docs\":{},\"请\":{\"docs\":{},\"求\":{\"docs\":{},\"的\":{\"docs\":{},\"是\":{\"docs\":{},\"示\":{\"docs\":{},\"例\":{\"docs\":{},\"：\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.017518248175182483},\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.013223140495867768}}}}}}}}}}}}},\"用\":{\"docs\":{},\"j\":{\"docs\":{},\"a\":{\"docs\":{},\"v\":{\"docs\":{},\"a\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.017518248175182483}}}}}}},\"使\":{\"docs\":{},\"用\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.013223140495867768}}}}}}},\"几\":{\"docs\":{},\"个\":{\"docs\":{},\"文\":{\"docs\":{},\"档\":{\"docs\":{},\"不\":{\"docs\":{},\"会\":{\"docs\":{},\"得\":{\"docs\":{},\"到\":{\"docs\":{},\"上\":{\"docs\":{},\"面\":{\"docs\":{},\"代\":{\"docs\":{},\"码\":{\"docs\":{},\"的\":{\"docs\":{},\"匹\":{\"docs\":{},\"配\":{\"docs\":{},\"：\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125}}}}}}}}}}}}}}}}}}}},\"之\":{\"docs\":{\"./\":{\"ref\":\"./\",\"tf\":0.020833333333333332}}},\"全\":{\"docs\":{},\"科\":{\"docs\":{\"./\":{\"ref\":\"./\",\"tf\":0.020833333333333332}}},\"局\":{\"docs\":{},\"聚\":{\"docs\":{},\"合\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}},\"器\":{\"docs\":{},\"只\":{\"docs\":{},\"能\":{\"docs\":{},\"作\":{\"docs\":{},\"为\":{\"docs\":{},\"顶\":{\"docs\":{},\"层\":{\"docs\":{},\"聚\":{\"docs\":{},\"合\":{\"docs\":{},\"器\":{\"docs\":{},\"放\":{\"docs\":{},\"置\":{\"docs\":{},\"，\":{\"docs\":{},\"因\":{\"docs\":{},\"为\":{\"docs\":{},\"将\":{\"docs\":{},\"全\":{\"docs\":{},\"局\":{\"docs\":{},\"聚\":{\"docs\":{},\"合\":{\"docs\":{},\"器\":{\"docs\":{},\"嵌\":{\"docs\":{},\"入\":{\"docs\":{},\"到\":{\"docs\":{},\"另\":{\"docs\":{},\"一\":{\"docs\":{},\"个\":{\"docs\":{},\"分\":{\"docs\":{},\"组\":{\"docs\":{},\"聚\":{\"docs\":{},\"合\":{\"docs\":{},\"器\":{\"docs\":{},\"中\":{\"docs\":{},\"是\":{\"docs\":{},\"没\":{\"docs\":{},\"有\":{\"docs\":{},\"意\":{\"docs\":{},\"义\":{\"docs\":{},\"的\":{\"docs\":{},\"。\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"文\":{\"docs\":{},\"搜\":{\"docs\":{},\"索\":{\"docs\":{\"query-dsl/full-text-queries.html\":{\"ref\":\"query-dsl/full-text-queries.html\",\"tf\":0.011904761904761904}}}}}},\"参\":{\"docs\":{},\"考\":{\"docs\":{\"./\":{\"ref\":\"./\",\"tf\":0.020833333333333332},\"query-dsl/joining-queries.html\":{\"ref\":\"query-dsl/joining-queries.html\",\"tf\":0.007194244604316547}},\"：\":{\"docs\":{\"search-api/search-template.html\":{\"ref\":\"search-api/search-template.html\",\"tf\":0.0055248618784530384}}}},\"数\":{\"docs\":{},\"，\":{\"docs\":{},\"告\":{\"docs\":{},\"诉\":{\"docs\":{\"search-api/using-scrolls-in-java.html\":{\"ref\":\"search-api/using-scrolls-in-java.html\",\"tf\":0.00546448087431694}}}}}}},\"官\":{\"docs\":{},\"方\":{\"docs\":{},\"文\":{\"docs\":{},\"档\":{\"docs\":{\"./\":{\"ref\":\"./\",\"tf\":0.020833333333333332},\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}}}}}},\"手\":{\"docs\":{},\"册\":{\"docs\":{\"./\":{\"ref\":\"./\",\"tf\":0.020833333333333332}}},\"动\":{\"docs\":{},\"方\":{\"docs\":{},\"式\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.002066115702479339}},\"，\":{\"docs\":{},\"使\":{\"docs\":{},\"用\":{\"docs\":{},\"原\":{\"docs\":{},\"生\":{\"docs\":{},\"的\":{\"docs\":{},\"b\":{\"docs\":{},\"y\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"[\":{\"docs\":{},\"]\":{\"docs\":{},\"或\":{\"docs\":{},\"者\":{\"docs\":{},\"s\":{\"docs\":{},\"t\":{\"docs\":{},\"r\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.002066115702479339}}}}}}}}}}}}}}}}}}}}},\"生\":{\"docs\":{},\"成\":{\"docs\":{},\"j\":{\"docs\":{},\"s\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.004132231404958678}}}}}}}}}},\"更\":{\"docs\":{},\"多\":{\"docs\":{},\"请\":{\"docs\":{},\"关\":{\"docs\":{},\"注\":{\"docs\":{},\"我\":{\"docs\":{},\"的\":{\"docs\":{},\"微\":{\"docs\":{},\"信\":{\"docs\":{},\"公\":{\"docs\":{},\"众\":{\"docs\":{},\"号\":{\"docs\":{},\"：\":{\"docs\":{\"./\":{\"ref\":\"./\",\"tf\":0.020833333333333332}}}}}}}}}}}},\"浏\":{\"docs\":{},\"览\":{\"docs\":{\"client/xpack-transport-client.html\":{\"ref\":\"client/xpack-transport-client.html\",\"tf\":0.01639344262295082}},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"s\":{\"docs\":{},\"t\":{\"docs\":{\"document-apis/multi-get-api.html\":{\"ref\":\"document-apis/multi-get-api.html\",\"tf\":0.021739130434782608}}}}}}}},\"查\":{\"docs\":{},\"看\":{\"docs\":{\"document-apis/get-api.html\":{\"ref\":\"document-apis/get-api.html\",\"tf\":0.034482758620689655},\"document-apis/delete-api.html\":{\"ref\":\"document-apis/delete-api.html\",\"tf\":0.02631578947368421}}}},\"移\":{\"docs\":{},\"步\":{\"docs\":{\"search-api.html\":{\"ref\":\"search-api.html\",\"tf\":0.017241379310344827}}}}}},\"新\":{\"docs\":{},\"插\":{\"docs\":{},\"入\":{\"docs\":{},\",\":{\"docs\":{},\"如\":{\"docs\":{},\"果\":{\"docs\":{},\"存\":{\"docs\":{},\"在\":{\"docs\":{},\"文\":{\"docs\":{},\"档\":{\"docs\":{},\"就\":{\"docs\":{},\"更\":{\"docs\":{},\"新\":{\"docs\":{},\"，\":{\"docs\":{},\"如\":{\"docs\":{},\"果\":{\"docs\":{},\"不\":{\"docs\":{},\"存\":{\"docs\":{},\"在\":{\"docs\":{},\"就\":{\"docs\":{},\"插\":{\"docs\":{},\"入\":{\"docs\":{\"document-apis/update-api.html\":{\"ref\":\"document-apis/update-api.html\",\"tf\":0.007407407407407408}}}}}}}}}}}}}}}}}}}}}}},\"索\":{\"docs\":{},\"引\":{\"docs\":{\"document-apis/update-api.html\":{\"ref\":\"document-apis/update-api.html\",\"tf\":0.007407407407407408}}}}}},\"本\":{\"docs\":{},\"书\":{\"docs\":{},\"由\":{\"docs\":{\"./\":{\"ref\":\"./\",\"tf\":0.020833333333333332}}}}},\"滚\":{\"docs\":{},\"动\":{\"docs\":{},\"搜\":{\"docs\":{},\"索\":{\"docs\":{},\"(\":{\"docs\":{},\"s\":{\"docs\":{},\"c\":{\"docs\":{},\"r\":{\"docs\":{},\"o\":{\"docs\":{},\"l\":{\"docs\":{},\"l\":{\"docs\":{\"./\":{\"ref\":\"./\",\"tf\":0.020833333333333332}}}}}}}}}}}}},\"类\":{\"docs\":{},\"目\":{\"docs\":{\"./\":{\"ref\":\"./\",\"tf\":0.020833333333333332}}},\"型\":{\"docs\":{},\"使\":{\"docs\":{},\"用\":{\"docs\":{\"query-dsl/geo-queries.html\":{\"ref\":\"query-dsl/geo-queries.html\",\"tf\":0.004901960784313725}}}}}},\"编\":{\"docs\":{},\"辑\":{\"docs\":{},\"整\":{\"docs\":{},\"理\":{\"docs\":{},\"辛\":{\"docs\":{},\"苦\":{\"docs\":{},\"，\":{\"docs\":{},\"还\":{\"docs\":{},\"望\":{\"docs\":{},\"大\":{\"docs\":{},\"神\":{\"docs\":{},\"们\":{\"docs\":{},\"点\":{\"docs\":{},\"一\":{\"docs\":{},\"下\":{\"docs\":{},\"s\":{\"docs\":{},\"t\":{\"docs\":{},\"a\":{\"docs\":{},\"r\":{\"docs\":{\"./\":{\"ref\":\"./\",\"tf\":0.020833333333333332}}}}}}}}}}}}}}}}}}},\"：\":{\"docs\":{},\"h\":{\"docs\":{},\"t\":{\"docs\":{},\"t\":{\"docs\":{},\"p\":{\"docs\":{},\":\":{\"docs\":{},\"/\":{\"docs\":{},\"/\":{\"docs\":{},\"q\":{\"docs\":{},\"u\":{\"docs\":{},\"a\":{\"docs\":{},\"n\":{\"docs\":{},\"k\":{\"docs\":{},\"e\":{\"docs\":{},\".\":{\"docs\":{},\"n\":{\"docs\":{},\"a\":{\"docs\":{},\"m\":{\"docs\":{\"./\":{\"ref\":\"./\",\"tf\":0.020833333333333332}}}}}}}}}}}}}}}}}}}}}},\"翻\":{\"docs\":{},\"译\":{\"docs\":{},\"，\":{\"docs\":{},\"并\":{\"docs\":{},\"且\":{\"docs\":{},\"整\":{\"docs\":{},\"理\":{\"docs\":{},\"成\":{\"docs\":{},\"电\":{\"docs\":{},\"子\":{\"docs\":{},\"书\":{\"docs\":{},\"，\":{\"docs\":{},\"支\":{\"docs\":{},\"持\":{\"docs\":{},\"p\":{\"docs\":{},\"d\":{\"docs\":{},\"f\":{\"docs\":{},\",\":{\"docs\":{},\"e\":{\"docs\":{},\"p\":{\"docs\":{},\"u\":{\"docs\":{},\"b\":{\"docs\":{},\",\":{\"docs\":{},\"m\":{\"docs\":{},\"o\":{\"docs\":{},\"b\":{\"docs\":{},\"i\":{\"docs\":{},\"格\":{\"docs\":{},\"式\":{\"docs\":{},\"，\":{\"docs\":{},\"方\":{\"docs\":{},\"便\":{\"docs\":{},\"大\":{\"docs\":{},\"家\":{\"docs\":{},\"下\":{\"docs\":{},\"载\":{\"docs\":{},\"阅\":{\"docs\":{},\"读\":{\"docs\":{},\"。\":{\"docs\":{\"./\":{\"ref\":\"./\",\"tf\":0.020833333333333332}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"详\":{\"docs\":{},\"解\":{\"2\":{\"docs\":{},\"（\":{\"docs\":{},\"m\":{\"docs\":{},\"e\":{\"docs\":{},\"t\":{\"docs\":{},\"r\":{\"docs\":{},\"i\":{\"docs\":{},\"c\":{\"docs\":{\"./\":{\"ref\":\"./\",\"tf\":0.020833333333333332}}}}}}}}}},\"3\":{\"docs\":{},\"（\":{\"docs\":{},\"b\":{\"docs\":{},\"u\":{\"docs\":{},\"c\":{\"docs\":{},\"k\":{\"docs\":{},\"e\":{\"docs\":{},\"t\":{\"docs\":{\"./\":{\"ref\":\"./\",\"tf\":0.020833333333333332}}}}}}}}}},\"docs\":{}},\"细\":{\"docs\":{},\"文\":{\"docs\":{},\"档\":{\"docs\":{},\"请\":{\"docs\":{},\"看\":{\"docs\":{\"search-api/using-aggregations.html\":{\"ref\":\"search-api/using-aggregations.html\",\"tf\":0.029411764705882353}}}}}}}},\"阅\":{\"docs\":{},\"读\":{\"docs\":{},\"地\":{\"docs\":{},\"址\":{\"docs\":{},\"：\":{\"docs\":{},\"h\":{\"docs\":{},\"t\":{\"docs\":{},\"t\":{\"docs\":{},\"p\":{\"docs\":{},\"s\":{\"docs\":{},\":\":{\"docs\":{},\"/\":{\"docs\":{},\"/\":{\"docs\":{},\"e\":{\"docs\":{},\"s\":{\"docs\":{},\".\":{\"docs\":{},\"q\":{\"docs\":{},\"u\":{\"docs\":{},\"a\":{\"docs\":{},\"n\":{\"docs\":{},\"k\":{\"docs\":{},\"e\":{\"docs\":{},\".\":{\"docs\":{},\"n\":{\"docs\":{},\"a\":{\"docs\":{},\"m\":{\"docs\":{\"./\":{\"ref\":\"./\",\"tf\":0.020833333333333332}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"，\":{\"docs\":{\"query-dsl/span-queries.html\":{\"ref\":\"query-dsl/span-queries.html\",\"tf\":0.005555555555555556}},\"抚\":{\"docs\":{},\"平\":{\"docs\":{},\"我\":{\"docs\":{},\"虚\":{\"docs\":{},\"荣\":{\"docs\":{},\"的\":{\"docs\":{},\"心\":{\"docs\":{\"./\":{\"ref\":\"./\",\"tf\":0.020833333333333332}}}}}}}}},\"忽\":{\"docs\":{},\"略\":{\"docs\":{},\"连\":{\"docs\":{},\"接\":{\"docs\":{},\"节\":{\"docs\":{},\"点\":{\"docs\":{},\"集\":{\"docs\":{},\"群\":{\"docs\":{},\"名\":{\"docs\":{},\"验\":{\"docs\":{},\"证\":{\"docs\":{\"client/transport-client.html\":{\"ref\":\"client/transport-client.html\",\"tf\":0.011111111111111112}}}}}}}}}}}}},\"因\":{\"docs\":{},\"为\":{\"docs\":{},\"这\":{\"docs\":{},\"个\":{\"docs\":{},\"库\":{\"docs\":{},\"没\":{\"docs\":{},\"有\":{\"docs\":{},\"上\":{\"docs\":{},\"传\":{\"docs\":{},\"到\":{\"docs\":{},\"m\":{\"docs\":{},\"a\":{\"docs\":{},\"v\":{\"docs\":{},\"e\":{\"docs\":{},\"n\":{\"docs\":{},\"中\":{\"docs\":{},\"央\":{\"docs\":{},\"仓\":{\"docs\":{},\"库\":{\"docs\":{\"client/xpack-transport-client.html\":{\"ref\":\"client/xpack-transport-client.html\",\"tf\":0.01639344262295082}}}}}}}}}}}}}}}}}}}}},\"就\":{\"docs\":{},\"增\":{\"docs\":{},\"加\":{\"docs\":{\"document-apis/update-api.html\":{\"ref\":\"document-apis/update-api.html\",\"tf\":0.007407407407407408}}}}},\"例\":{\"docs\":{},\"如\":{\"docs\":{},\"你\":{\"docs\":{},\"可\":{\"docs\":{},\"以\":{\"docs\":{},\"通\":{\"docs\":{},\"过\":{\"docs\":{},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"q\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"docs\":{},\"s\":{\"docs\":{},\"t\":{\"docs\":{},\".\":{\"docs\":{},\"h\":{\"docs\":{},\"a\":{\"docs\":{},\"s\":{\"docs\":{},\"f\":{\"docs\":{},\"a\":{\"docs\":{},\"i\":{\"docs\":{},\"l\":{\"docs\":{},\"u\":{\"docs\":{},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"s\":{\"docs\":{},\"(\":{\"docs\":{},\")\":{\"docs\":{},\"方\":{\"docs\":{},\"法\":{\"docs\":{},\"知\":{\"docs\":{},\"道\":{\"docs\":{},\"是\":{\"docs\":{},\"否\":{\"docs\":{},\"执\":{\"docs\":{},\"行\":{\"docs\":{},\"失\":{\"docs\":{},\"败\":{\"docs\":{\"document-apis/using-bulk-processor.html\":{\"ref\":\"document-apis/using-bulk-processor.html\",\"tf\":0.006024096385542169}}}}}}}}}}}}}}}}}}}}}}}}},\"n\":{\"docs\":{},\"u\":{\"docs\":{},\"m\":{\"docs\":{},\"b\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"o\":{\"docs\":{},\"f\":{\"docs\":{},\"a\":{\"docs\":{},\"c\":{\"docs\":{},\"t\":{\"docs\":{},\"i\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{},\"s\":{\"docs\":{},\"(\":{\"docs\":{},\")\":{\"docs\":{},\"方\":{\"docs\":{},\"法\":{\"docs\":{},\"知\":{\"docs\":{},\"道\":{\"docs\":{},\"n\":{\"docs\":{},\"u\":{\"docs\":{},\"m\":{\"docs\":{},\"b\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"o\":{\"docs\":{},\"f\":{\"docs\":{},\"a\":{\"docs\":{},\"c\":{\"docs\":{},\"t\":{\"docs\":{\"document-apis/using-bulk-processor.html\":{\"ref\":\"document-apis/using-bulk-processor.html\",\"tf\":0.006024096385542169}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"异\":{\"docs\":{},\"步\":{\"docs\":{},\"执\":{\"docs\":{},\"行\":{\"docs\":{\"document-apis/using-bulk-processor.html\":{\"ref\":\"document-apis/using-bulk-processor.html\",\"tf\":0.006024096385542169}}}}}},\"但\":{\"docs\":{},\"是\":{\"docs\":{},\"这\":{\"docs\":{},\"种\":{\"docs\":{},\"模\":{\"docs\":{},\"式\":{\"docs\":{},\"应\":{\"docs\":{},\"该\":{\"docs\":{},\"由\":{\"docs\":{},\"系\":{\"docs\":{},\"统\":{\"docs\":{},\"选\":{\"docs\":{},\"择\":{\"docs\":{},\"，\":{\"docs\":{},\"用\":{\"docs\":{},\"户\":{\"docs\":{},\"不\":{\"docs\":{},\"要\":{\"docs\":{},\"手\":{\"docs\":{},\"动\":{\"docs\":{},\"指\":{\"docs\":{},\"定\":{\"docs\":{\"search-api.html\":{\"ref\":\"search-api.html\",\"tf\":0.017241379310344827}}}}}}}}}}}}}}}}}}}}}}},\"与\":{\"docs\":{},\"其\":{\"docs\":{},\"他\":{\"docs\":{},\"s\":{\"docs\":{},\"p\":{\"docs\":{},\"a\":{\"docs\":{},\"n\":{\"docs\":{},\"查\":{\"docs\":{},\"询\":{\"docs\":{},\"一\":{\"docs\":{},\"起\":{\"docs\":{},\"使\":{\"docs\":{},\"用\":{\"docs\":{},\"。\":{\"docs\":{\"query-dsl/span-queries.html\":{\"ref\":\"query-dsl/span-queries.html\",\"tf\":0.005555555555555556}}}}}}}}}}}}}}}}},\"它\":{\"docs\":{},\"允\":{\"docs\":{},\"许\":{\"docs\":{},\"你\":{\"docs\":{},\"在\":{\"docs\":{},\"另\":{\"docs\":{},\"一\":{\"docs\":{},\"个\":{\"docs\":{},\"文\":{\"docs\":{},\"档\":{\"docs\":{},\"的\":{\"docs\":{},\"值\":{\"docs\":{},\"中\":{\"docs\":{},\"创\":{\"docs\":{},\"建\":{\"docs\":{},\"一\":{\"docs\":{},\"个\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"m\":{\"docs\":{\"query-dsl/joining-queries.html\":{\"ref\":\"query-dsl/joining-queries.html\",\"tf\":0.007194244604316547}}}}}}}}}}}}}}}}}}}}}}},\"这\":{\"docs\":{},\"两\":{\"docs\":{},\"者\":{\"docs\":{},\"都\":{\"docs\":{},\"是\":{\"docs\":{},\"可\":{\"docs\":{},\"选\":{\"docs\":{},\"的\":{\"docs\":{},\"依\":{\"docs\":{},\"赖\":{\"docs\":{},\"项\":{\"docs\":{},\"。\":{\"docs\":{\"query-dsl/geo-queries.html\":{\"ref\":\"query-dsl/geo-queries.html\",\"tf\":0.004901960784313725}}}}}}}}}}}}}}},\"c\":{\"docs\":{},\"e\":{\"docs\":{},\"n\":{\"docs\":{},\"t\":{\"docs\":{},\"r\":{\"docs\":{},\"a\":{\"docs\":{},\"l\":{\"docs\":{\"dependency.html\":{\"ref\":\"dependency.html\",\"tf\":0.07692307692307693}}}}},\"e\":{\"docs\":{},\"r\":{\"docs\":{\"query-dsl/geo-queries.html\":{\"ref\":\"query-dsl/geo-queries.html\",\"tf\":0.004901960784313725}}}}}}},\"l\":{\"docs\":{},\"i\":{\"docs\":{},\"e\":{\"docs\":{},\"n\":{\"docs\":{},\"t\":{\"docs\":{\"client.html\":{\"ref\":\"client.html\",\"tf\":10},\"client/transport-client.html\":{\"ref\":\"client/transport-client.html\",\"tf\":5.055555555555555},\"client/xpack-transport-client.html\":{\"ref\":\"client/xpack-transport-client.html\",\"tf\":3.3497267759562837},\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.002066115702479339},\"search-api/using-scrolls-in-java.html\":{\"ref\":\"search-api/using-scrolls-in-java.html\",\"tf\":0.01092896174863388},\"search-api/multisearch-api.html\":{\"ref\":\"search-api/multisearch-api.html\",\"tf\":0.038461538461538464},\"query-dsl/joining-queries.html\":{\"ref\":\"query-dsl/joining-queries.html\",\"tf\":0.02877697841726619},\"query-dsl/specialized-queries.html\":{\"ref\":\"query-dsl/specialized-queries.html\",\"tf\":0.004761904761904762}},\".\":{\"docs\":{},\".\":{\"docs\":{},\".\":{\"docs\":{\"client/transport-client.html\":{\"ref\":\"client/transport-client.html\",\"tf\":0.011111111111111112}}}},\"a\":{\"docs\":{},\"d\":{\"docs\":{},\"d\":{\"docs\":{},\"t\":{\"docs\":{},\"r\":{\"docs\":{},\"a\":{\"docs\":{},\"n\":{\"docs\":{},\"s\":{\"docs\":{},\"p\":{\"docs\":{},\"o\":{\"docs\":{},\"r\":{\"docs\":{},\"t\":{\"docs\":{},\"a\":{\"docs\":{},\"d\":{\"docs\":{},\"d\":{\"docs\":{},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"s\":{\"docs\":{},\"s\":{\"docs\":{},\"(\":{\"docs\":{},\"n\":{\"docs\":{},\"e\":{\"docs\":{},\"w\":{\"docs\":{\"client/transport-client.html\":{\"ref\":\"client/transport-client.html\",\"tf\":0.011111111111111112},\"query-dsl/joining-queries.html\":{\"ref\":\"query-dsl/joining-queries.html\",\"tf\":0.014388489208633094},\"query-dsl/specialized-queries.html\":{\"ref\":\"query-dsl/specialized-queries.html\",\"tf\":0.004761904761904762}}}}}}}}}}}}}}}}}}}}}}},\"m\":{\"docs\":{},\"i\":{\"docs\":{},\"n\":{\"docs\":{},\"(\":{\"docs\":{},\")\":{\"docs\":{},\".\":{\"docs\":{},\"i\":{\"docs\":{},\"n\":{\"docs\":{},\"d\":{\"docs\":{},\"i\":{\"docs\":{},\"c\":{\"docs\":{},\"e\":{\"docs\":{},\"s\":{\"docs\":{},\"(\":{\"docs\":{},\")\":{\"docs\":{},\".\":{\"docs\":{},\"p\":{\"docs\":{},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"p\":{\"docs\":{},\"a\":{\"docs\":{},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"f\":{\"docs\":{},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"s\":{\"docs\":{},\"h\":{\"docs\":{},\"(\":{\"docs\":{},\")\":{\"docs\":{},\".\":{\"docs\":{},\"g\":{\"docs\":{},\"e\":{\"docs\":{},\"t\":{\"docs\":{},\"(\":{\"docs\":{},\")\":{\"docs\":{},\";\":{\"docs\":{\"document-apis/using-bulk-processor.html\":{\"ref\":\"document-apis/using-bulk-processor.html\",\"tf\":0.006024096385542169}}}}}}}}}}}}}}}}}},\"c\":{\"docs\":{},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"a\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"(\":{\"docs\":{},\"\\\"\":{\"docs\":{},\"m\":{\"docs\":{},\"y\":{\"docs\":{},\"i\":{\"docs\":{},\"n\":{\"docs\":{},\"d\":{\"docs\":{},\"e\":{\"docs\":{},\"x\":{\"docs\":{},\"n\":{\"docs\":{},\"a\":{\"docs\":{},\"m\":{\"docs\":{},\"e\":{\"docs\":{},\"\\\"\":{\"docs\":{},\")\":{\"docs\":{\"query-dsl/specialized-queries.html\":{\"ref\":\"query-dsl/specialized-queries.html\",\"tf\":0.004761904761904762}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"c\":{\"docs\":{},\"l\":{\"docs\":{},\"u\":{\"docs\":{},\"s\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"(\":{\"docs\":{},\")\":{\"docs\":{},\".\":{\"docs\":{},\"p\":{\"docs\":{},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"p\":{\"docs\":{},\"a\":{\"docs\":{},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"p\":{\"docs\":{},\"u\":{\"docs\":{},\"t\":{\"docs\":{},\"s\":{\"docs\":{},\"t\":{\"docs\":{},\"o\":{\"docs\":{},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"d\":{\"docs\":{},\"s\":{\"docs\":{},\"c\":{\"docs\":{},\"r\":{\"docs\":{},\"i\":{\"docs\":{},\"p\":{\"docs\":{},\"t\":{\"docs\":{},\"(\":{\"docs\":{},\")\":{\"docs\":{\"search-api/search-template.html\":{\"ref\":\"search-api/search-template.html\",\"tf\":0.0055248618784530384}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"c\":{\"docs\":{},\"l\":{\"docs\":{},\"o\":{\"docs\":{},\"s\":{\"docs\":{},\"e\":{\"docs\":{},\"(\":{\"docs\":{},\")\":{\"docs\":{},\";\":{\"docs\":{\"client/transport-client.html\":{\"ref\":\"client/transport-client.html\",\"tf\":0.011111111111111112}}}}}}}}}},\"t\":{\"docs\":{},\"r\":{\"docs\":{},\"a\":{\"docs\":{},\"n\":{\"docs\":{},\"s\":{\"docs\":{},\"p\":{\"docs\":{},\"o\":{\"docs\":{},\"r\":{\"docs\":{},\"t\":{\"docs\":{},\".\":{\"docs\":{},\"i\":{\"docs\":{},\"g\":{\"docs\":{},\"n\":{\"docs\":{},\"o\":{\"docs\":{},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"_\":{\"docs\":{},\"c\":{\"docs\":{},\"l\":{\"docs\":{},\"u\":{\"docs\":{},\"s\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"_\":{\"docs\":{},\"n\":{\"docs\":{},\"a\":{\"docs\":{},\"m\":{\"docs\":{\"client/transport-client.html\":{\"ref\":\"client/transport-client.html\",\"tf\":0.011111111111111112}}}}}}}}}}}}}}}}}}}},\"n\":{\"docs\":{},\"o\":{\"docs\":{},\"d\":{\"docs\":{},\"e\":{\"docs\":{},\"s\":{\"docs\":{},\"_\":{\"docs\":{},\"s\":{\"docs\":{},\"a\":{\"docs\":{},\"m\":{\"docs\":{},\"p\":{\"docs\":{},\"l\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"_\":{\"docs\":{},\"i\":{\"docs\":{},\"n\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"v\":{\"docs\":{\"client/transport-client.html\":{\"ref\":\"client/transport-client.html\",\"tf\":0.011111111111111112}}}}}}}}}}}}}}}}}}}}}},\"p\":{\"docs\":{},\"i\":{\"docs\":{},\"n\":{\"docs\":{},\"g\":{\"docs\":{},\"_\":{\"docs\":{},\"t\":{\"docs\":{},\"i\":{\"docs\":{},\"m\":{\"docs\":{},\"e\":{\"docs\":{},\"o\":{\"docs\":{},\"u\":{\"docs\":{},\"t\":{\"docs\":{\"client/transport-client.html\":{\"ref\":\"client/transport-client.html\",\"tf\":0.011111111111111112}}}}}}}}}}}}}}}}}}}}}}}},\"p\":{\"docs\":{},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"p\":{\"docs\":{},\"a\":{\"docs\":{},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"i\":{\"docs\":{},\"n\":{\"docs\":{},\"d\":{\"docs\":{},\"e\":{\"docs\":{},\"x\":{\"docs\":{},\"(\":{\"docs\":{},\"\\\"\":{\"docs\":{},\"f\":{\"docs\":{},\"e\":{\"docs\":{},\"n\":{\"docs\":{},\"d\":{\"docs\":{},\"o\":{\"docs\":{},\"\\\"\":{\"docs\":{},\",\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.01652892561983471}}}}}}}}},\"m\":{\"docs\":{},\"y\":{\"docs\":{},\"i\":{\"docs\":{},\"n\":{\"docs\":{},\"d\":{\"docs\":{},\"e\":{\"docs\":{},\"x\":{\"docs\":{},\"n\":{\"docs\":{},\"a\":{\"docs\":{},\"m\":{\"docs\":{},\"e\":{\"docs\":{},\"\\\"\":{\"docs\":{},\",\":{\"docs\":{\"query-dsl/specialized-queries.html\":{\"ref\":\"query-dsl/specialized-queries.html\",\"tf\":0.004761904761904762}}}}}}}}}}}}}}}}}}}}}},\"g\":{\"docs\":{},\"e\":{\"docs\":{},\"t\":{\"docs\":{},\"(\":{\"docs\":{},\"\\\"\":{\"docs\":{},\"t\":{\"docs\":{},\"w\":{\"docs\":{},\"i\":{\"docs\":{},\"t\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"\\\"\":{\"docs\":{},\",\":{\"docs\":{\"document-apis/get-api.html\":{\"ref\":\"document-apis/get-api.html\",\"tf\":0.06896551724137931},\"document-apis/delete-api.html\":{\"ref\":\"document-apis/delete-api.html\",\"tf\":0.02631578947368421}}}}}}}}}}}}}}}},\"d\":{\"docs\":{},\"e\":{\"docs\":{},\"l\":{\"docs\":{},\"e\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"(\":{\"docs\":{},\"\\\"\":{\"docs\":{},\"t\":{\"docs\":{},\"w\":{\"docs\":{},\"i\":{\"docs\":{},\"t\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"\\\"\":{\"docs\":{},\",\":{\"docs\":{\"document-apis/delete-api.html\":{\"ref\":\"document-apis/delete-api.html\",\"tf\":0.05263157894736842}}}}}}}}}}}}}}}}}}},\"u\":{\"docs\":{},\"p\":{\"docs\":{},\"d\":{\"docs\":{},\"a\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"(\":{\"docs\":{},\"\\\"\":{\"docs\":{},\"t\":{\"docs\":{},\"t\":{\"docs\":{},\"l\":{\"docs\":{},\"\\\"\":{\"docs\":{},\",\":{\"docs\":{\"document-apis/update-api.html\":{\"ref\":\"document-apis/update-api.html\",\"tf\":0.014814814814814815}}}}}}}}}}}}}}},\"m\":{\"docs\":{},\"u\":{\"docs\":{},\"l\":{\"docs\":{},\"t\":{\"docs\":{},\"i\":{\"docs\":{},\"g\":{\"docs\":{},\"e\":{\"docs\":{},\"t\":{\"docs\":{},\"(\":{\"docs\":{},\")\":{\"docs\":{\"document-apis/multi-get-api.html\":{\"ref\":\"document-apis/multi-get-api.html\",\"tf\":0.021739130434782608}}}}}}},\"s\":{\"docs\":{},\"e\":{\"docs\":{},\"a\":{\"docs\":{},\"r\":{\"docs\":{},\"c\":{\"docs\":{},\"h\":{\"docs\":{},\"(\":{\"docs\":{},\")\":{\"docs\":{\"search-api/multisearch-api.html\":{\"ref\":\"search-api/multisearch-api.html\",\"tf\":0.019230769230769232}}}}}}}}}}}}}}},\"b\":{\"docs\":{},\"u\":{\"docs\":{},\"l\":{\"docs\":{},\"k\":{\"docs\":{},\"(\":{\"docs\":{},\")\":{\"docs\":{},\";\":{\"docs\":{\"document-apis/bulk-api.html\":{\"ref\":\"document-apis/bulk-api.html\",\"tf\":0.014492753623188406}}}}}}}}},\"s\":{\"docs\":{},\"e\":{\"docs\":{},\"a\":{\"docs\":{},\"r\":{\"docs\":{},\"c\":{\"docs\":{},\"h\":{\"docs\":{},\"(\":{\"docs\":{},\")\":{\"docs\":{\"search-api/using-aggregations.html\":{\"ref\":\"search-api/using-aggregations.html\",\"tf\":0.029411764705882353},\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}},\".\":{\"docs\":{},\"g\":{\"docs\":{},\"e\":{\"docs\":{},\"t\":{\"docs\":{},\"(\":{\"docs\":{},\")\":{\"docs\":{},\";\":{\"docs\":{\"document-apis/using-bulk-processor.html\":{\"ref\":\"document-apis/using-bulk-processor.html\",\"tf\":0.006024096385542169},\"search-api.html\":{\"ref\":\"search-api.html\",\"tf\":0.017241379310344827}}}}}}}}}},\"\\\"\":{\"docs\":{},\"i\":{\"docs\":{},\"n\":{\"docs\":{},\"d\":{\"docs\":{},\"e\":{\"docs\":{},\"x\":{\"1\":{\"docs\":{},\"\\\"\":{\"docs\":{},\",\":{\"docs\":{\"search-api.html\":{\"ref\":\"search-api.html\",\"tf\":0.017241379310344827}}}}},\"docs\":{}}}}}}},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"s\":{\"docs\":{},\"t\":{\"docs\":{},\")\":{\"docs\":{\"search-api/using-scrolls-in-java.html\":{\"ref\":\"search-api/using-scrolls-in-java.html\",\"tf\":0.00546448087431694}}}}}}},\"i\":{\"docs\":{},\"n\":{\"docs\":{},\"d\":{\"docs\":{},\"e\":{\"docs\":{},\"x\":{\"docs\":{},\")\":{\"docs\":{\"search-api/terminate-after.html\":{\"ref\":\"search-api/terminate-after.html\",\"tf\":0.0625}},\";\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.01078167115902965}}}}}}}}}},\"s\":{\"docs\":{},\"c\":{\"docs\":{},\"r\":{\"docs\":{},\"o\":{\"docs\":{},\"l\":{\"docs\":{},\"l\":{\"docs\":{},\"(\":{\"docs\":{},\"s\":{\"docs\":{},\"c\":{\"docs\":{},\"r\":{\"docs\":{},\"o\":{\"docs\":{},\"l\":{\"docs\":{},\"l\":{\"docs\":{},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"s\":{\"docs\":{},\"p\":{\"docs\":{},\".\":{\"docs\":{},\"g\":{\"docs\":{},\"e\":{\"docs\":{},\"t\":{\"docs\":{},\"s\":{\"docs\":{},\"c\":{\"docs\":{},\"r\":{\"docs\":{},\"o\":{\"docs\":{},\"l\":{\"docs\":{},\"l\":{\"docs\":{},\"i\":{\"docs\":{},\"d\":{\"docs\":{},\"(\":{\"docs\":{},\")\":{\"docs\":{},\")\":{\"docs\":{},\".\":{\"docs\":{},\"s\":{\"docs\":{},\"e\":{\"docs\":{},\"t\":{\"docs\":{},\"s\":{\"docs\":{},\"c\":{\"docs\":{},\"r\":{\"docs\":{},\"o\":{\"docs\":{},\"l\":{\"docs\":{},\"l\":{\"docs\":{},\"(\":{\"docs\":{},\"n\":{\"docs\":{},\"e\":{\"docs\":{},\"w\":{\"docs\":{\"search-api/using-scrolls-in-java.html\":{\"ref\":\"search-api/using-scrolls-in-java.html\",\"tf\":0.00546448087431694}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"c\":{\"docs\":{},\"l\":{\"docs\":{},\"e\":{\"docs\":{},\"a\":{\"docs\":{},\"r\":{\"docs\":{},\"s\":{\"docs\":{},\"c\":{\"docs\":{},\"r\":{\"docs\":{},\"o\":{\"docs\":{},\"l\":{\"docs\":{},\"l\":{\"docs\":{},\"(\":{\"docs\":{},\")\":{\"docs\":{},\";\":{\"docs\":{\"search-api/using-scrolls-in-java.html\":{\"ref\":\"search-api/using-scrolls-in-java.html\",\"tf\":0.01092896174863388}}}}}}}}}}}}}}}}}}}}}}},\"u\":{\"docs\":{},\"p\":{\"docs\":{},\"d\":{\"docs\":{},\"a\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"(\":{\"docs\":{},\"u\":{\"docs\":{},\"p\":{\"docs\":{},\"d\":{\"docs\":{},\"a\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"q\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"docs\":{},\"s\":{\"docs\":{},\"t\":{\"docs\":{},\")\":{\"docs\":{},\".\":{\"docs\":{},\"g\":{\"docs\":{},\"e\":{\"docs\":{},\"t\":{\"docs\":{},\"(\":{\"docs\":{},\")\":{\"docs\":{},\";\":{\"docs\":{\"document-apis/update-api.html\":{\"ref\":\"document-apis/update-api.html\",\"tf\":0.02962962962962963}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"，\":{\"docs\":{},\"有\":{\"docs\":{},\"两\":{\"docs\":{},\"种\":{\"docs\":{},\"形\":{\"docs\":{},\"式\":{\"docs\":{},\"，\":{\"docs\":{},\"一\":{\"docs\":{},\"个\":{\"docs\":{},\"是\":{\"docs\":{},\"t\":{\"docs\":{},\"r\":{\"docs\":{},\"a\":{\"docs\":{},\"n\":{\"docs\":{},\"s\":{\"docs\":{},\"p\":{\"docs\":{},\"o\":{\"docs\":{},\"r\":{\"docs\":{},\"t\":{\"docs\":{},\"c\":{\"docs\":{},\"l\":{\"docs\":{},\"i\":{\"docs\":{},\"e\":{\"docs\":{},\"n\":{\"docs\":{},\"t\":{\"docs\":{},\"，\":{\"docs\":{},\"一\":{\"docs\":{},\"个\":{\"docs\":{},\"是\":{\"docs\":{},\"n\":{\"docs\":{},\"o\":{\"docs\":{},\"d\":{\"docs\":{},\"e\":{\"docs\":{},\"c\":{\"docs\":{},\"l\":{\"docs\":{},\"i\":{\"docs\":{},\"e\":{\"docs\":{},\"n\":{\"docs\":{},\"t\":{\"docs\":{},\"。\":{\"docs\":{},\"两\":{\"docs\":{},\"个\":{\"docs\":{},\"的\":{\"docs\":{},\"区\":{\"docs\":{},\"别\":{\"docs\":{},\"为\":{\"docs\":{},\"：\":{\"docs\":{\"client/transport-client.html\":{\"ref\":\"client/transport-client.html\",\"tf\":0.011111111111111112}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"这\":{\"docs\":{},\"个\":{\"docs\":{},\"点\":{\"docs\":{},\"很\":{\"docs\":{},\"重\":{\"docs\":{},\"要\":{\"docs\":{},\"：\":{\"docs\":{\"query-dsl/joining-queries.html\":{\"ref\":\"query-dsl/joining-queries.html\",\"tf\":0.014388489208633094}}}}}}}}}},\";\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.002066115702479339}}},\"#\":{\"docs\":{},\"p\":{\"docs\":{},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"p\":{\"docs\":{},\"a\":{\"docs\":{},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\",\":{\"docs\":{\"document-apis/bulk-api.html\":{\"ref\":\"document-apis/bulk-api.html\",\"tf\":0.014492753623188406}}}}}}}}}}},\",\":{\"docs\":{\"document-apis/using-bulk-processor.html\":{\"ref\":\"document-apis/using-bulk-processor.html\",\"tf\":0.006024096385542169},\"search-api/using-scrolls-in-java.html\":{\"ref\":\"search-api/using-scrolls-in-java.html\",\"tf\":0.01092896174863388}}},\"(\":{\"docs\":{},\")\":{\"docs\":{},\".\":{\"docs\":{},\"p\":{\"docs\":{},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"p\":{\"docs\":{},\"a\":{\"docs\":{},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"s\":{\"docs\":{},\"e\":{\"docs\":{},\"a\":{\"docs\":{},\"r\":{\"docs\":{},\"c\":{\"docs\":{},\"h\":{\"docs\":{},\"(\":{\"docs\":{},\"\\\"\":{\"docs\":{},\"m\":{\"docs\":{},\"y\":{\"docs\":{},\"i\":{\"docs\":{},\"n\":{\"docs\":{},\"d\":{\"docs\":{},\"e\":{\"docs\":{},\"x\":{\"docs\":{},\"n\":{\"docs\":{},\"a\":{\"docs\":{},\"m\":{\"docs\":{},\"e\":{\"docs\":{},\"\\\"\":{\"docs\":{},\")\":{\"docs\":{\"query-dsl/specialized-queries.html\":{\"ref\":\"query-dsl/specialized-queries.html\",\"tf\":0.004761904761904762}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"u\":{\"docs\":{},\"s\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{\"search-api.html\":{\"ref\":\"search-api.html\",\"tf\":0.017241379310344827},\"search-api/search-template.html\":{\"ref\":\"search-api/search-template.html\",\"tf\":0.016574585635359115},\"java-api-administration/cluster-administration.html\":{\"ref\":\"java-api-administration/cluster-administration.html\",\"tf\":5}},\"n\":{\"docs\":{},\"a\":{\"docs\":{},\"m\":{\"docs\":{},\"e\":{\"docs\":{},\")\":{\"docs\":{\"client/transport-client.html\":{\"ref\":\"client/transport-client.html\",\"tf\":0.011111111111111112}}}}}}}}}}}},\"a\":{\"docs\":{},\"s\":{\"docs\":{},\"s\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.002066115702479339}},\"p\":{\"docs\":{},\"a\":{\"docs\":{},\"t\":{\"docs\":{},\"h\":{\"docs\":{\"query-dsl/geo-queries.html\":{\"ref\":\"query-dsl/geo-queries.html\",\"tf\":0.004901960784313725}}}}}}}}},\"o\":{\"docs\":{},\"s\":{\"docs\":{},\"e\":{\"docs\":{\"document-apis/using-bulk-processor.html\":{\"ref\":\"document-apis/using-bulk-processor.html\",\"tf\":0.012048192771084338}}}}},\"e\":{\"docs\":{},\"a\":{\"docs\":{},\"r\":{\"docs\":{},\"s\":{\"docs\":{},\"c\":{\"docs\":{},\"r\":{\"docs\":{},\"o\":{\"docs\":{},\"l\":{\"docs\":{},\"l\":{\"docs\":{},\"(\":{\"docs\":{},\"c\":{\"docs\":{},\"l\":{\"docs\":{},\"i\":{\"docs\":{\"search-api/using-scrolls-in-java.html\":{\"ref\":\"search-api/using-scrolls-in-java.html\",\"tf\":0.01092896174863388}}}}}},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"q\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"docs\":{},\"s\":{\"docs\":{},\"t\":{\"docs\":{},\"b\":{\"docs\":{},\"u\":{\"docs\":{},\"i\":{\"docs\":{},\"l\":{\"docs\":{},\"d\":{\"docs\":{\"search-api/using-scrolls-in-java.html\":{\"ref\":\"search-api/using-scrolls-in-java.html\",\"tf\":0.02185792349726776}},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\".\":{\"docs\":{},\"a\":{\"docs\":{},\"d\":{\"docs\":{},\"d\":{\"docs\":{},\"s\":{\"docs\":{},\"c\":{\"docs\":{},\"r\":{\"docs\":{},\"o\":{\"docs\":{},\"l\":{\"docs\":{},\"l\":{\"docs\":{},\"i\":{\"docs\":{},\"d\":{\"docs\":{},\"(\":{\"docs\":{},\"s\":{\"docs\":{},\"c\":{\"docs\":{},\"r\":{\"docs\":{},\"o\":{\"docs\":{},\"l\":{\"docs\":{},\"l\":{\"docs\":{},\"i\":{\"docs\":{},\"d\":{\"docs\":{},\")\":{\"docs\":{},\";\":{\"docs\":{\"search-api/using-scrolls-in-java.html\":{\"ref\":\"search-api/using-scrolls-in-java.html\",\"tf\":0.00546448087431694}}}}}}}}}}}}}}}}}}}}}}}},\"g\":{\"docs\":{},\"e\":{\"docs\":{},\"t\":{\"docs\":{},\"(\":{\"docs\":{},\")\":{\"docs\":{},\";\":{\"docs\":{\"search-api/using-scrolls-in-java.html\":{\"ref\":\"search-api/using-scrolls-in-java.html\",\"tf\":0.01092896174863388}}}}}}}},\"s\":{\"docs\":{},\"e\":{\"docs\":{},\"t\":{\"docs\":{},\"s\":{\"docs\":{},\"c\":{\"docs\":{},\"r\":{\"docs\":{},\"o\":{\"docs\":{},\"l\":{\"docs\":{},\"l\":{\"docs\":{},\"i\":{\"docs\":{},\"d\":{\"docs\":{},\"s\":{\"docs\":{},\"(\":{\"docs\":{},\"s\":{\"docs\":{},\"c\":{\"docs\":{},\"r\":{\"docs\":{},\"o\":{\"docs\":{},\"l\":{\"docs\":{},\"l\":{\"docs\":{},\"i\":{\"docs\":{},\"d\":{\"docs\":{},\"l\":{\"docs\":{},\"i\":{\"docs\":{},\"s\":{\"docs\":{},\"t\":{\"docs\":{},\")\":{\"docs\":{},\";\":{\"docs\":{\"search-api/using-scrolls-in-java.html\":{\"ref\":\"search-api/using-scrolls-in-java.html\",\"tf\":0.00546448087431694}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"s\":{\"docs\":{},\"p\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{},\"s\":{\"docs\":{\"search-api/using-scrolls-in-java.html\":{\"ref\":\"search-api/using-scrolls-in-java.html\",\"tf\":0.01092896174863388}}}}}}}}}}}}}}}}}}},\"a\":{\"docs\":{},\"t\":{\"docs\":{},\"c\":{\"docs\":{},\"h\":{\"docs\":{\"client/xpack-transport-client.html\":{\"ref\":\"client/xpack-transport-client.html\",\"tf\":0.01639344262295082}}}}},\"u\":{\"docs\":{},\"s\":{\"docs\":{\"search-api/using-scrolls-in-java.html\":{\"ref\":\"search-api/using-scrolls-in-java.html\",\"tf\":0.00546448087431694}}}},\"r\":{\"docs\":{},\"d\":{\"docs\":{},\"i\":{\"docs\":{},\"n\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00291970802919708}},\"a\":{\"docs\":{},\"l\":{\"docs\":{},\"i\":{\"docs\":{},\"t\":{\"docs\":{},\"y\":{\"docs\":{},\"a\":{\"docs\":{},\"g\":{\"docs\":{},\"g\":{\"docs\":{},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"g\":{\"docs\":{},\"a\":{\"docs\":{},\"t\":{\"docs\":{},\"i\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{},\"b\":{\"docs\":{},\"u\":{\"docs\":{},\"i\":{\"docs\":{},\"l\":{\"docs\":{},\"d\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"o\":{\"docs\":{},\"m\":{\"docs\":{},\".\":{\"docs\":{},\"f\":{\"docs\":{},\"a\":{\"docs\":{},\"s\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"x\":{\"docs\":{},\"m\":{\"docs\":{},\"l\":{\"docs\":{},\".\":{\"docs\":{},\"j\":{\"docs\":{},\"a\":{\"docs\":{},\"c\":{\"docs\":{},\"k\":{\"docs\":{},\"s\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{},\".\":{\"docs\":{},\"c\":{\"docs\":{},\"o\":{\"docs\":{},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\".\":{\"docs\":{},\"j\":{\"docs\":{},\"s\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{},\"p\":{\"docs\":{},\"r\":{\"docs\":{},\"o\":{\"docs\":{},\"c\":{\"docs\":{},\"e\":{\"docs\":{},\"s\":{\"docs\":{},\"s\":{\"docs\":{},\"i\":{\"docs\":{},\"n\":{\"docs\":{},\"g\":{\"docs\":{},\"e\":{\"docs\":{},\"x\":{\"docs\":{},\"c\":{\"docs\":{},\"e\":{\"docs\":{},\"p\":{\"docs\":{},\"t\":{\"docs\":{},\"i\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{},\";\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.002066115702479339}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"d\":{\"docs\":{},\"a\":{\"docs\":{},\"t\":{\"docs\":{},\"a\":{\"docs\":{},\"b\":{\"docs\":{},\"i\":{\"docs\":{},\"n\":{\"docs\":{},\"d\":{\"docs\":{},\".\":{\"docs\":{},\"*\":{\"docs\":{},\";\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.002066115702479339}}}},\"o\":{\"docs\":{},\"b\":{\"docs\":{},\"j\":{\"docs\":{},\"e\":{\"docs\":{},\"c\":{\"docs\":{},\"t\":{\"docs\":{},\"m\":{\"docs\":{},\"a\":{\"docs\":{},\"p\":{\"docs\":{},\"p\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\";\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.002066115702479339}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"v\":{\"docs\":{},\"i\":{\"docs\":{},\"v\":{\"docs\":{},\"i\":{\"docs\":{},\"d\":{\"docs\":{},\"s\":{\"docs\":{},\"o\":{\"docs\":{},\"l\":{\"docs\":{},\"u\":{\"docs\":{},\"t\":{\"docs\":{\"query-dsl/geo-queries.html\":{\"ref\":\"query-dsl/geo-queries.html\",\"tf\":0.004901960784313725}}}}}}}}}}}}},\"m\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"m\":{\"docs\":{},\"s\":{\"docs\":{},\"q\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"y\":{\"docs\":{},\"(\":{\"docs\":{},\"\\\"\":{\"docs\":{},\"n\":{\"docs\":{},\"a\":{\"docs\":{},\"m\":{\"docs\":{},\"e\":{\"docs\":{},\"\\\"\":{\"docs\":{},\",\":{\"docs\":{\"query-dsl/full-text-queries.html\":{\"ref\":\"query-dsl/full-text-queries.html\",\"tf\":0.011904761904761904}}}}}}}}}}}}}}}}}}}}}}},\"p\":{\"docs\":{},\"o\":{\"docs\":{},\"u\":{\"docs\":{},\"n\":{\"docs\":{},\"d\":{\"docs\":{\"query-dsl/compound-queries.html\":{\"ref\":\"query-dsl/compound-queries.html\",\"tf\":5.005847953216374}}}}}}}},\"n\":{\"docs\":{},\"c\":{\"docs\":{},\"u\":{\"docs\":{},\"r\":{\"docs\":{},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"n\":{\"docs\":{},\"t\":{\"docs\":{},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"q\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"docs\":{},\"s\":{\"docs\":{},\"t\":{\"docs\":{\"document-apis/using-bulk-processor.html\":{\"ref\":\"document-apis/using-bulk-processor.html\",\"tf\":0.006024096385542169}}}}}}}}}}}}}}}},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"x\":{\"docs\":{},\"t\":{\"docs\":{\"search-api/using-scrolls-in-java.html\":{\"ref\":\"search-api/using-scrolls-in-java.html\",\"tf\":0.00546448087431694}},\")\":{\"docs\":{},\"会\":{\"docs\":{},\"自\":{\"docs\":{},\"动\":{\"docs\":{},\"被\":{\"docs\":{},\"清\":{\"docs\":{},\"除\":{\"docs\":{},\"，\":{\"docs\":{},\"但\":{\"docs\":{},\"是\":{\"docs\":{},\"一\":{\"docs\":{},\"值\":{\"docs\":{},\"保\":{\"docs\":{},\"持\":{\"docs\":{},\"滚\":{\"docs\":{},\"动\":{\"docs\":{},\"代\":{\"docs\":{},\"价\":{\"docs\":{},\"也\":{\"docs\":{},\"是\":{\"docs\":{},\"很\":{\"docs\":{},\"大\":{\"docs\":{},\"的\":{\"docs\":{},\"，\":{\"docs\":{},\"所\":{\"docs\":{},\"以\":{\"docs\":{},\"当\":{\"docs\":{},\"我\":{\"docs\":{},\"们\":{\"docs\":{},\"不\":{\"docs\":{},\"在\":{\"docs\":{},\"使\":{\"docs\":{},\"用\":{\"docs\":{},\"滚\":{\"docs\":{},\"动\":{\"docs\":{},\"时\":{\"docs\":{},\"要\":{\"docs\":{},\"尽\":{\"docs\":{},\"快\":{\"docs\":{},\"使\":{\"docs\":{},\"用\":{\"docs\":{},\"c\":{\"docs\":{},\"l\":{\"docs\":{},\"e\":{\"docs\":{},\"a\":{\"docs\":{},\"r\":{\"docs\":{\"search-api/using-scrolls-in-java.html\":{\"ref\":\"search-api/using-scrolls-in-java.html\",\"tf\":0.00546448087431694}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"a\":{\"docs\":{},\"i\":{\"docs\":{},\"n\":{\"docs\":{\"query-dsl/geo-queries.html\":{\"ref\":\"query-dsl/geo-queries.html\",\"tf\":0.00980392156862745},\"query-dsl/span-queries.html\":{\"ref\":\"query-dsl/span-queries.html\",\"tf\":0.005555555555555556}}}}}},\"f\":{\"docs\":{},\"i\":{\"docs\":{},\"g\":{\"docs\":{},\"/\":{\"docs\":{},\"s\":{\"docs\":{},\"c\":{\"docs\":{},\"r\":{\"docs\":{},\"i\":{\"docs\":{},\"p\":{\"docs\":{},\"t\":{\"docs\":{},\"s\":{\"docs\":{},\"/\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"m\":{\"docs\":{},\"p\":{\"docs\":{},\"l\":{\"docs\":{},\"a\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"_\":{\"docs\":{},\"g\":{\"docs\":{},\"e\":{\"docs\":{},\"n\":{\"docs\":{},\"d\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\".\":{\"docs\":{},\"m\":{\"docs\":{},\"u\":{\"docs\":{},\"s\":{\"docs\":{},\"t\":{\"docs\":{},\"a\":{\"docs\":{},\"c\":{\"docs\":{},\"h\":{\"docs\":{\"search-api/search-template.html\":{\"ref\":\"search-api/search-template.html\",\"tf\":0.0055248618784530384}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"s\":{\"docs\":{},\"t\":{\"docs\":{},\"a\":{\"docs\":{},\"n\":{\"docs\":{},\"t\":{\"docs\":{},\"_\":{\"docs\":{},\"s\":{\"docs\":{},\"c\":{\"docs\":{},\"o\":{\"docs\":{},\"r\":{\"docs\":{\"query-dsl/compound-queries.html\":{\"ref\":\"query-dsl/compound-queries.html\",\"tf\":0.005847953216374269}}}}}}},\"s\":{\"docs\":{},\"c\":{\"docs\":{},\"o\":{\"docs\":{},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"q\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"y\":{\"docs\":{},\"(\":{\"docs\":{\"query-dsl/compound-queries.html\":{\"ref\":\"query-dsl/compound-queries.html\",\"tf\":0.005847953216374269}}}}}}}}}}}}}}}}}}},\"u\":{\"docs\":{},\"n\":{\"docs\":{},\"t\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00583941605839416},\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.013223140495867768}}}}},\"o\":{\"docs\":{},\"r\":{\"docs\":{},\"d\":{\"docs\":{},\"i\":{\"docs\":{},\"n\":{\"docs\":{},\"a\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"(\":{\"0\":{\"docs\":{},\",\":{\"docs\":{\"query-dsl/geo-queries.html\":{\"ref\":\"query-dsl/geo-queries.html\",\"tf\":0.014705882352941176}}}},\"1\":{\"0\":{\"docs\":{},\",\":{\"docs\":{\"query-dsl/geo-queries.html\":{\"ref\":\"query-dsl/geo-queries.html\",\"tf\":0.00980392156862745}}}},\"docs\":{}},\"docs\":{}}}}}}}}}},\"l\":{\"docs\":{},\"l\":{\"docs\":{},\"e\":{\"docs\":{},\"c\":{\"docs\":{},\"t\":{\"docs\":{},\"i\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{},\"s\":{\"docs\":{},\".\":{\"docs\":{},\"s\":{\"docs\":{},\"i\":{\"docs\":{},\"n\":{\"docs\":{},\"g\":{\"docs\":{},\"l\":{\"docs\":{},\"e\":{\"docs\":{},\"t\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{},\"m\":{\"docs\":{},\"a\":{\"docs\":{},\"p\":{\"docs\":{},\"(\":{\"docs\":{},\"\\\"\":{\"docs\":{},\"p\":{\"docs\":{},\"a\":{\"docs\":{},\"r\":{\"docs\":{},\"a\":{\"docs\":{},\"m\":{\"1\":{\"docs\":{},\"\\\"\":{\"docs\":{},\",\":{\"docs\":{\"query-dsl/specialized-queries.html\":{\"ref\":\"query-dsl/specialized-queries.html\",\"tf\":0.004761904761904762}}}}},\"docs\":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"a\":{\"docs\":{},\"t\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.006198347107438017},\"query-dsl/specialized-queries.html\":{\"ref\":\"query-dsl/specialized-queries.html\",\"tf\":0.004761904761904762}},\"e\":{\"docs\":{},\"i\":{\"docs\":{},\"n\":{\"docs\":{},\"d\":{\"docs\":{},\"e\":{\"docs\":{},\"x\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.002066115702479339}}}}}}},\"j\":{\"docs\":{},\"a\":{\"docs\":{},\"c\":{\"docs\":{},\"k\":{\"docs\":{},\"s\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{},\"(\":{\"docs\":{},\")\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.004132231404958678}}}}}}}}}},\"s\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{},\"(\":{\"docs\":{},\")\":{\"docs\":{},\"{\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.004132231404958678}}}}}}}}},\"l\":{\"docs\":{},\"i\":{\"docs\":{},\"s\":{\"docs\":{},\"t\":{\"docs\":{},\"(\":{\"docs\":{},\")\":{\"docs\":{},\"{\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.004132231404958678}}}}}}}}},\"x\":{\"docs\":{},\"c\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"n\":{\"docs\":{},\"t\":{\"docs\":{},\"b\":{\"docs\":{},\"u\":{\"docs\":{},\"i\":{\"docs\":{},\"l\":{\"docs\":{},\"d\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"(\":{\"docs\":{},\")\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.004132231404958678}}}}}}}}}}}}}}}}}}}}}}}},\"s\":{\"docs\":{},\"d\":{\"docs\":{},\"n\":{\"docs\":{},\".\":{\"docs\":{},\"s\":{\"docs\":{},\"e\":{\"docs\":{},\"t\":{\"docs\":{},\"a\":{\"docs\":{},\"u\":{\"docs\":{},\"t\":{\"docs\":{},\"h\":{\"docs\":{},\"o\":{\"docs\":{},\"r\":{\"docs\":{},\"(\":{\"docs\":{},\"\\\"\":{\"docs\":{},\"f\":{\"docs\":{},\"e\":{\"docs\":{},\"n\":{\"docs\":{},\"d\":{\"docs\":{},\"o\":{\"docs\":{},\"\\\"\":{\"docs\":{},\")\":{\"docs\":{},\";\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.004132231404958678}}}}}}}}}}}}}}}}}},\"c\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"n\":{\"docs\":{},\"t\":{\"docs\":{},\"(\":{\"docs\":{},\"\\\"\":{\"docs\":{},\"这\":{\"docs\":{},\"是\":{\"docs\":{},\"j\":{\"docs\":{},\"a\":{\"docs\":{},\"v\":{\"docs\":{},\"a\":{\"docs\":{},\"书\":{\"docs\":{},\"籍\":{\"docs\":{},\"\\\"\":{\"docs\":{},\")\":{\"docs\":{},\";\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.004132231404958678}}}}}}}}}}}}}}}}}}}}}},\"d\":{\"docs\":{},\"a\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"(\":{\"docs\":{},\"n\":{\"docs\":{},\"e\":{\"docs\":{},\"w\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.004132231404958678}}}}}}}}}},\"t\":{\"docs\":{},\"a\":{\"docs\":{},\"g\":{\"docs\":{},\"(\":{\"docs\":{},\"\\\"\":{\"docs\":{},\"c\":{\"docs\":{},\"\\\"\":{\"docs\":{},\")\":{\"docs\":{},\";\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.004132231404958678}}}}}}}}}},\"i\":{\"docs\":{},\"t\":{\"docs\":{},\"i\":{\"docs\":{},\"l\":{\"docs\":{},\"e\":{\"docs\":{},\"(\":{\"docs\":{},\"\\\"\":{\"docs\":{},\"编\":{\"docs\":{},\"程\":{\"docs\":{},\"\\\"\":{\"docs\":{},\")\":{\"docs\":{},\";\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.004132231404958678}}}}}}}}}}}}}}},\"v\":{\"docs\":{},\"i\":{\"docs\":{},\"e\":{\"docs\":{},\"w\":{\"docs\":{},\"(\":{\"docs\":{},\"\\\"\":{\"1\":{\"0\":{\"0\":{\"docs\":{},\"\\\"\":{\"docs\":{},\")\":{\"docs\":{},\";\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.004132231404958678}}}}}},\"docs\":{}},\"docs\":{}},\"docs\":{}}}}}}}}}}},\"=\":{\"docs\":{},\"n\":{\"docs\":{},\"e\":{\"docs\":{},\"w\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.004132231404958678}}}}}},\"b\":{\"docs\":{},\"l\":{\"docs\":{},\"o\":{\"docs\":{},\"g\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.004132231404958678}},\"(\":{\"docs\":{},\")\":{\"docs\":{},\";\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.004132231404958678}}}}}}}}}}}},\"u\":{\"docs\":{},\"r\":{\"docs\":{},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"n\":{\"docs\":{},\"t\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.002066115702479339}}}}}}}},\"h\":{\"docs\":{},\"i\":{\"docs\":{},\"l\":{\"docs\":{},\"d\":{\"docs\":{\"query-dsl/joining-queries.html\":{\"ref\":\"query-dsl/joining-queries.html\",\"tf\":0.014388489208633094}},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"n\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.001652892561983471}}}}}}}},\"e\":{\"docs\":{},\"c\":{\"docs\":{},\"k\":{\"docs\":{\"query-dsl/specialized-queries.html\":{\"ref\":\"query-dsl/specialized-queries.html\",\"tf\":0.004761904761904762}}}}}}},\"d\":{\"docs\":{},\"e\":{\"docs\":{},\"p\":{\"docs\":{},\"e\":{\"docs\":{},\"n\":{\"docs\":{},\"d\":{\"docs\":{\"dependency.html\":{\"ref\":\"dependency.html\",\"tf\":10}}}}}},\"l\":{\"docs\":{},\"e\":{\"docs\":{},\"t\":{\"docs\":{\"document-apis/delete-api.html\":{\"ref\":\"document-apis/delete-api.html\",\"tf\":5.052631578947368},\"document-apis/delete-by-query-api.html\":{\"ref\":\"document-apis/delete-by-query-api.html\",\"tf\":3.3888888888888884}},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"s\":{\"docs\":{},\"p\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{},\"s\":{\"docs\":{\"document-apis/delete-api.html\":{\"ref\":\"document-apis/delete-api.html\",\"tf\":0.05263157894736842}}}}}}},\"q\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"docs\":{},\"s\":{\"docs\":{},\"t\":{\"docs\":{},\"(\":{\"docs\":{},\"\\\"\":{\"docs\":{},\"t\":{\"docs\":{},\"w\":{\"docs\":{},\"i\":{\"docs\":{},\"t\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"\\\"\":{\"docs\":{},\",\":{\"docs\":{\"document-apis/using-bulk-processor.html\":{\"ref\":\"document-apis/using-bulk-processor.html\",\"tf\":0.006024096385542169}}}}}}}}}}}}}}}}}}}},\"b\":{\"docs\":{},\"y\":{\"docs\":{},\"q\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"y\":{\"docs\":{},\"a\":{\"docs\":{},\"c\":{\"docs\":{},\"t\":{\"docs\":{},\"i\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{},\".\":{\"docs\":{},\"i\":{\"docs\":{},\"n\":{\"docs\":{},\"s\":{\"docs\":{},\"t\":{\"docs\":{},\"a\":{\"docs\":{},\"n\":{\"docs\":{},\"c\":{\"docs\":{},\"e\":{\"docs\":{},\".\":{\"docs\":{},\"n\":{\"docs\":{},\"e\":{\"docs\":{},\"w\":{\"docs\":{},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"q\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"docs\":{},\"s\":{\"docs\":{},\"t\":{\"docs\":{},\"b\":{\"docs\":{},\"u\":{\"docs\":{},\"i\":{\"docs\":{},\"l\":{\"docs\":{},\"d\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"(\":{\"docs\":{},\"c\":{\"docs\":{},\"l\":{\"docs\":{},\"i\":{\"docs\":{},\"e\":{\"docs\":{},\"n\":{\"docs\":{},\"t\":{\"docs\":{},\")\":{\"docs\":{\"document-apis/delete-by-query-api.html\":{\"ref\":\"document-apis/delete-by-query-api.html\",\"tf\":0.037037037037037035}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"f\":{\"docs\":{},\"a\":{\"docs\":{},\"u\":{\"docs\":{},\"l\":{\"docs\":{},\"t\":{\"docs\":{\"search-api.html\":{\"ref\":\"search-api.html\",\"tf\":0.017241379310344827},\"query-dsl/geo-queries.html\":{\"ref\":\"query-dsl/geo-queries.html\",\"tf\":0.00980392156862745}}}}}}}},\"a\":{\"docs\":{},\"y\":{\"docs\":{},\"u\":{\"docs\":{\"client/xpack-transport-client.html\":{\"ref\":\"client/xpack-transport-client.html\",\"tf\":0.01639344262295082}}}},\"t\":{\"docs\":{},\"e\":{\"docs\":{\"aggregations/structuring-aggregations.html\":{\"ref\":\"aggregations/structuring-aggregations.html\",\"tf\":0.02702702702702703},\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.013223140495867768},\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125}},\"(\":{\"docs\":{},\")\":{\"docs\":{},\")\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.004132231404958678},\"document-apis/bulk-api.html\":{\"ref\":\"document-apis/bulk-api.html\",\"tf\":0.028985507246376812}},\";\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.002066115702479339}}}},\".\":{\"docs\":{},\"t\":{\"docs\":{},\"o\":{\"docs\":{},\"s\":{\"docs\":{},\"t\":{\"docs\":{},\"r\":{\"docs\":{},\"i\":{\"docs\":{},\"n\":{\"docs\":{},\"g\":{\"docs\":{},\"(\":{\"docs\":{},\")\":{\"docs\":{},\")\":{\"docs\":{},\";\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.004132231404958678}}}}}}}}}}}}}}}}},\"t\":{\"docs\":{},\"i\":{\"docs\":{},\"m\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0024793388429752068}}}}}},\"a\":{\"docs\":{},\"）\":{\"docs\":{},\"。\":{\"docs\":{},\"从\":{\"docs\":{\"search-api/using-scrolls-in-java.html\":{\"ref\":\"search-api/using-scrolls-in-java.html\",\"tf\":0.00546448087431694}}}}}}},\"l\":{\"docs\":{},\"t\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{},\"\\\"\":{\"docs\":{},\",\":{\"docs\":{\"document-apis/update-api.html\":{\"ref\":\"document-apis/update-api.html\",\"tf\":0.007407407407407408}}}}}}}}},\"o\":{\"docs\":{},\"c\":{\"docs\":{\"document-apis/using-bulk-processor.html\":{\"ref\":\"document-apis/using-bulk-processor.html\",\"tf\":0.006024096385542169},\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854},\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.013223140495867768}},\"u\":{\"docs\":{},\"m\":{\"docs\":{},\"e\":{\"docs\":{},\"n\":{\"docs\":{},\"t\":{\"docs\":{\"document-apis.html\":{\"ref\":\"document-apis.html\",\"tf\":5},\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.002066115702479339},\"document-apis/update-api.html\":{\"ref\":\"document-apis/update-api.html\",\"tf\":0.007407407407407408},\"search-api/using-scrolls-in-java.html\":{\"ref\":\"search-api/using-scrolls-in-java.html\",\"tf\":0.00546448087431694},\"query-dsl/geo-queries.html\":{\"ref\":\"query-dsl/geo-queries.html\",\"tf\":0.00980392156862745},\"query-dsl/specialized-queries.html\":{\"ref\":\"query-dsl/specialized-queries.html\",\"tf\":0.004761904761904762}},\",\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.002066115702479339}}},\"s\":{\"docs\":{},\")\":{\"docs\":{\"query-dsl/compound-queries.html\":{\"ref\":\"query-dsl/compound-queries.html\",\"tf\":0.005847953216374269}}}}}}}}},\"_\":{\"docs\":{},\"c\":{\"docs\":{},\"o\":{\"docs\":{},\"u\":{\"docs\":{},\"n\":{\"docs\":{},\"t\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.004379562043795621},\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.02727272727272727}}}}}}}},\"c\":{\"docs\":{},\"o\":{\"docs\":{},\"u\":{\"docs\":{},\"n\":{\"docs\":{},\"t\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854},\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.006611570247933884}},\")\":{\"docs\":{},\";\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854},\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.006611570247933884}}}}}}}}},\"[\":{\"docs\":{},\"'\":{\"docs\":{},\"n\":{\"docs\":{},\"u\":{\"docs\":{},\"m\":{\"1\":{\"docs\":{},\"'\":{\"docs\":{},\"]\":{\"docs\":{},\".\":{\"docs\":{},\"v\":{\"docs\":{},\"a\":{\"docs\":{},\"l\":{\"docs\":{},\"u\":{\"docs\":{\"query-dsl/specialized-queries.html\":{\"ref\":\"query-dsl/specialized-queries.html\",\"tf\":0.004761904761904762}}}}}}}}}},\"docs\":{}}}}}},\"b\":{\"docs\":{},\"u\":{\"docs\":{},\"i\":{\"docs\":{},\"l\":{\"docs\":{},\"d\":{\"docs\":{\"query-dsl/specialized-queries.html\":{\"ref\":\"query-dsl/specialized-queries.html\",\"tf\":0.004761904761904762}},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\".\":{\"docs\":{},\"b\":{\"docs\":{},\"y\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"s\":{\"docs\":{},\"(\":{\"docs\":{},\")\":{\"docs\":{},\")\":{\"docs\":{},\";\":{\"docs\":{\"query-dsl/specialized-queries.html\":{\"ref\":\"query-dsl/specialized-queries.html\",\"tf\":0.004761904761904762}}}}}}}}}}},\"e\":{\"docs\":{},\"n\":{\"docs\":{},\"d\":{\"docs\":{},\"o\":{\"docs\":{},\"b\":{\"docs\":{},\"j\":{\"docs\":{},\"e\":{\"docs\":{},\"c\":{\"docs\":{},\"t\":{\"docs\":{},\"(\":{\"docs\":{},\")\":{\"docs\":{},\";\":{\"docs\":{\"query-dsl/specialized-queries.html\":{\"ref\":\"query-dsl/specialized-queries.html\",\"tf\":0.004761904761904762}}}}}}}}}}}}}},\"f\":{\"docs\":{},\"i\":{\"docs\":{},\"e\":{\"docs\":{},\"l\":{\"docs\":{},\"d\":{\"docs\":{},\"(\":{\"docs\":{},\"\\\"\":{\"docs\":{},\"c\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"n\":{\"docs\":{},\"t\":{\"docs\":{},\"\\\"\":{\"docs\":{},\",\":{\"docs\":{\"query-dsl/specialized-queries.html\":{\"ref\":\"query-dsl/specialized-queries.html\",\"tf\":0.004761904761904762}}}}}}}}}}}}}}}}}}}}}}}}}}},\"n\":{\"docs\":{},\"'\":{\"docs\":{},\"t\":{\"docs\":{\"document-apis/using-bulk-processor.html\":{\"ref\":\"document-apis/using-bulk-processor.html\",\"tf\":0.006024096385542169}}}}},\"u\":{\"docs\":{},\"b\":{\"docs\":{},\"l\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.027737226277372264}}}}}},\"i\":{\"docs\":{},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"c\":{\"docs\":{},\"t\":{\"docs\":{},\"l\":{\"docs\":{},\"i\":{\"docs\":{\"document-apis/bulk-api.html\":{\"ref\":\"document-apis/bulk-api.html\",\"tf\":0.014492753623188406}}}}}}}},\"s\":{\"docs\":{},\"t\":{\"docs\":{},\"a\":{\"docs\":{},\"n\":{\"docs\":{},\"c\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.001652892561983471},\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125},\"query-dsl/geo-queries.html\":{\"ref\":\"query-dsl/geo-queries.html\",\"tf\":0.004901960784313725}},\"e\":{\"docs\":{},\"u\":{\"docs\":{},\"n\":{\"docs\":{},\"i\":{\"docs\":{},\"t\":{\"docs\":{},\".\":{\"docs\":{},\"k\":{\"docs\":{},\"i\":{\"docs\":{},\"l\":{\"docs\":{},\"o\":{\"docs\":{},\"m\":{\"docs\":{},\"e\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"s\":{\"docs\":{},\")\":{\"docs\":{},\";\":{\"docs\":{\"query-dsl/geo-queries.html\":{\"ref\":\"query-dsl/geo-queries.html\",\"tf\":0.004901960784313725}}}}}}}}}}}}}}}}}}}}}}}},\"_\":{\"docs\":{},\"m\":{\"docs\":{},\"a\":{\"docs\":{},\"x\":{\"docs\":{\"query-dsl/compound-queries.html\":{\"ref\":\"query-dsl/compound-queries.html\",\"tf\":0.005847953216374269}}}}}},\"m\":{\"docs\":{},\"a\":{\"docs\":{},\"x\":{\"docs\":{},\"q\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"y\":{\"docs\":{},\"(\":{\"docs\":{},\")\":{\"docs\":{\"query-dsl/compound-queries.html\":{\"ref\":\"query-dsl/compound-queries.html\",\"tf\":0.005847953216374269}}}}}}}}}}}}}},\"f\":{\"docs\":{},\"s\":{\"docs\":{},\"_\":{\"docs\":{},\"q\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"y\":{\"docs\":{},\"_\":{\"docs\":{},\"a\":{\"docs\":{},\"n\":{\"docs\":{},\"d\":{\"docs\":{},\"_\":{\"docs\":{},\"f\":{\"docs\":{},\"e\":{\"docs\":{},\"t\":{\"docs\":{},\"c\":{\"docs\":{},\"h\":{\"docs\":{\"search-api.html\":{\"ref\":\"search-api.html\",\"tf\":0.017241379310344827}}}}}}}}}}}}}}}}}}}},\"s\":{\"docs\":{},\"l\":{\"docs\":{\"query-dsl.html\":{\"ref\":\"query-dsl.html\",\"tf\":5.130434782608695}},\":\":{\"docs\":{\"query-dsl/specialized-queries.html\":{\"ref\":\"query-dsl/specialized-queries.html\",\"tf\":0.004761904761904762}}}}}},\"m\":{\"docs\":{},\"a\":{\"docs\":{},\"v\":{\"docs\":{},\"e\":{\"docs\":{},\"n\":{\"docs\":{\"dependency.html\":{\"ref\":\"dependency.html\",\"tf\":0.15384615384615385}}}}},\"p\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.006198347107438017},\"search-api/search-template.html\":{\"ref\":\"search-api/search-template.html\",\"tf\":0.011049723756906077},\"query-dsl/specialized-queries.html\":{\"ref\":\"query-dsl/specialized-queries.html\",\"tf\":0.004761904761904762}},\"p\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.012396694214876033}},\".\":{\"docs\":{},\"w\":{\"docs\":{},\"r\":{\"docs\":{},\"i\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"v\":{\"docs\":{},\"a\":{\"docs\":{},\"l\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"docs\":{},\"a\":{\"docs\":{},\"s\":{\"docs\":{},\"b\":{\"docs\":{},\"y\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"s\":{\"docs\":{},\"(\":{\"docs\":{},\"c\":{\"docs\":{},\"s\":{\"docs\":{},\"d\":{\"docs\":{},\"n\":{\"docs\":{},\")\":{\"docs\":{},\";\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.004132231404958678}}}}}}}},\"y\":{\"docs\":{},\"o\":{\"docs\":{},\"u\":{\"docs\":{},\"r\":{\"docs\":{},\"b\":{\"docs\":{},\"e\":{\"docs\":{},\"a\":{\"docs\":{},\"n\":{\"docs\":{},\"i\":{\"docs\":{},\"n\":{\"docs\":{},\"s\":{\"docs\":{},\"t\":{\"docs\":{},\"a\":{\"docs\":{},\"n\":{\"docs\":{},\"c\":{\"docs\":{},\"e\":{\"docs\":{},\")\":{\"docs\":{},\";\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.002066115702479339}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"方\":{\"docs\":{},\"式\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.002066115702479339}}}},\"是\":{\"docs\":{},\"k\":{\"docs\":{},\"e\":{\"docs\":{},\"y\":{\"docs\":{},\":\":{\"docs\":{},\"v\":{\"docs\":{},\"a\":{\"docs\":{},\"l\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"docs\":{},\"数\":{\"docs\":{},\"据\":{\"docs\":{},\"类\":{\"docs\":{},\"型\":{\"docs\":{},\"，\":{\"docs\":{},\"可\":{\"docs\":{},\"以\":{\"docs\":{},\"代\":{\"docs\":{},\"表\":{\"docs\":{},\"j\":{\"docs\":{},\"s\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{},\"结\":{\"docs\":{},\"构\":{\"docs\":{},\".\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.002066115702479339}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"t\":{\"docs\":{},\"c\":{\"docs\":{},\"h\":{\"docs\":{\"query-dsl/match-all-query.html\":{\"ref\":\"query-dsl/match-all-query.html\",\"tf\":5.2},\"query-dsl/full-text-queries.html\":{\"ref\":\"query-dsl/full-text-queries.html\",\"tf\":0.023809523809523808},\"query-dsl/compound-queries.html\":{\"ref\":\"query-dsl/compound-queries.html\",\"tf\":0.005847953216374269},\"query-dsl/span-queries.html\":{\"ref\":\"query-dsl/span-queries.html\",\"tf\":0.016666666666666666}},\"a\":{\"docs\":{},\"l\":{\"docs\":{\"search-api.html\":{\"ref\":\"search-api.html\",\"tf\":0.017241379310344827}},\"l\":{\"docs\":{},\"q\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"y\":{\"docs\":{},\"(\":{\"docs\":{},\")\":{\"docs\":{},\";\":{\"docs\":{\"query-dsl/match-all-query.html\":{\"ref\":\"query-dsl/match-all-query.html\",\"tf\":0.1}}}}}}}}}}}}},\"q\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"y\":{\"docs\":{},\"(\":{\"docs\":{\"query-dsl/full-text-queries.html\":{\"ref\":\"query-dsl/full-text-queries.html\",\"tf\":0.011904761904761904}},\"\\\"\":{\"docs\":{},\"n\":{\"docs\":{},\"a\":{\"docs\":{},\"m\":{\"docs\":{},\"e\":{\"docs\":{},\"\\\"\":{\"docs\":{},\",\":{\"docs\":{\"query-dsl/compound-queries.html\":{\"ref\":\"query-dsl/compound-queries.html\",\"tf\":0.005847953216374269}}}}}}}}}}}}}}}}},\"h\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}},\"d\":{\"docs\":{},\"e\":{\"docs\":{},\",\":{\"docs\":{\"search-api/using-scrolls-in-java.html\":{\"ref\":\"search-api/using-scrolls-in-java.html\",\"tf\":0.00546448087431694}}}}},\"r\":{\"docs\":{},\"k\":{\"docs\":{\"search-api/using-scrolls-in-java.html\":{\"ref\":\"search-api/using-scrolls-in-java.html\",\"tf\":0.00546448087431694}}},\"g\":{\"docs\":{},\"i\":{\"docs\":{},\"n\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125}}}}}},\"x\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.004379562043795621},\"query-dsl/compound-queries.html\":{\"ref\":\"query-dsl/compound-queries.html\",\"tf\":0.005847953216374269}},\"a\":{\"docs\":{},\"g\":{\"docs\":{},\"g\":{\"docs\":{},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"g\":{\"docs\":{},\"a\":{\"docs\":{},\"t\":{\"docs\":{},\"i\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{},\"b\":{\"docs\":{},\"u\":{\"docs\":{},\"i\":{\"docs\":{},\"l\":{\"docs\":{},\"d\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}}}}}}}}}}}}}}}}}},\"i\":{\"docs\":{},\"m\":{\"docs\":{},\"u\":{\"docs\":{},\"m\":{\"docs\":{\"query-dsl/span-queries.html\":{\"ref\":\"query-dsl/span-queries.html\",\"tf\":0.005555555555555556}}}}}}},\"i\":{\"docs\":{},\"n\":{\"docs\":{\"query-dsl/compound-queries.html\":{\"ref\":\"query-dsl/compound-queries.html\",\"tf\":0.005847953216374269}}}}},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"g\":{\"docs\":{\"document-apis/update-api.html\":{\"ref\":\"document-apis/update-api.html\",\"tf\":0.007407407407407408}}}},\"t\":{\"docs\":{},\"h\":{\"docs\":{},\"o\":{\"docs\":{},\"d\":{\"docs\":{\"document-apis/using-bulk-processor.html\":{\"ref\":\"document-apis/using-bulk-processor.html\",\"tf\":0.006024096385542169}}}}},\"r\":{\"docs\":{},\"i\":{\"docs\":{},\"c\":{\"docs\":{\"aggregations/structuring-aggregations.html\":{\"ref\":\"aggregations/structuring-aggregations.html\",\"tf\":0.02702702702702703},\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":5.005839416058394},\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}}},\"n\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}},\"c\":{\"docs\":{},\"h\":{\"docs\":{},\"a\":{\"docs\":{},\"n\":{\"docs\":{\"query-dsl/joining-queries.html\":{\"ref\":\"query-dsl/joining-queries.html\",\"tf\":0.007194244604316547}}}}}}},\"u\":{\"docs\":{},\"l\":{\"docs\":{},\"t\":{\"docs\":{},\"i\":{\"docs\":{\"document-apis/multi-get-api.html\":{\"ref\":\"document-apis/multi-get-api.html\",\"tf\":5.043478260869565},\"search-api/multisearch-api.html\":{\"ref\":\"search-api/multisearch-api.html\",\"tf\":0.019230769230769232},\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854},\"query-dsl/full-text-queries.html\":{\"ref\":\"query-dsl/full-text-queries.html\",\"tf\":0.011904761904761904},\"query-dsl/span-queries.html\":{\"ref\":\"query-dsl/span-queries.html\",\"tf\":0.005555555555555556}},\"g\":{\"docs\":{},\"e\":{\"docs\":{},\"t\":{\"docs\":{},\"i\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"m\":{\"docs\":{},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"s\":{\"docs\":{},\"p\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{},\"s\":{\"docs\":{\"document-apis/multi-get-api.html\":{\"ref\":\"document-apis/multi-get-api.html\",\"tf\":0.021739130434782608}},\"e\":{\"docs\":{},\"s\":{\"docs\":{},\")\":{\"docs\":{\"document-apis/multi-get-api.html\":{\"ref\":\"document-apis/multi-get-api.html\",\"tf\":0.021739130434782608}}}}}}}}}}}}}}}},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"s\":{\"docs\":{},\"p\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{},\"s\":{\"docs\":{\"document-apis/multi-get-api.html\":{\"ref\":\"document-apis/multi-get-api.html\",\"tf\":0.021739130434782608}}}}}}}}}}}},\"s\":{\"docs\":{},\"e\":{\"docs\":{},\"a\":{\"docs\":{},\"r\":{\"docs\":{},\"c\":{\"docs\":{},\"h\":{\"docs\":{\"search-api/multisearch-api.html\":{\"ref\":\"search-api/multisearch-api.html\",\"tf\":5.019230769230769}},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"s\":{\"docs\":{},\"p\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{},\"s\":{\"docs\":{\"search-api/multisearch-api.html\":{\"ref\":\"search-api/multisearch-api.html\",\"tf\":0.019230769230769232}},\"e\":{\"docs\":{},\"#\":{\"docs\":{},\"g\":{\"docs\":{},\"e\":{\"docs\":{},\"t\":{\"docs\":{},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"s\":{\"docs\":{},\"p\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{},\"s\":{\"docs\":{},\"e\":{\"docs\":{},\"s\":{\"docs\":{},\"(\":{\"docs\":{},\")\":{\"docs\":{\"search-api/multisearch-api.html\":{\"ref\":\"search-api/multisearch-api.html\",\"tf\":0.019230769230769232}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"m\":{\"docs\":{},\"a\":{\"docs\":{},\"t\":{\"docs\":{},\"c\":{\"docs\":{},\"h\":{\"docs\":{},\"q\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"y\":{\"docs\":{},\"(\":{\"docs\":{\"query-dsl/full-text-queries.html\":{\"ref\":\"query-dsl/full-text-queries.html\",\"tf\":0.011904761904761904}}}}}}}}}}}}}}}},\"s\":{\"docs\":{},\"t\":{\"docs\":{},\"a\":{\"docs\":{},\"c\":{\"docs\":{},\"h\":{\"docs\":{\"search-api/search-template.html\":{\"ref\":\"search-api/search-template.html\",\"tf\":0.0055248618784530384}}}}},\"_\":{\"docs\":{},\"n\":{\"docs\":{},\"o\":{\"docs\":{},\"t\":{\"docs\":{\"query-dsl/compound-queries.html\":{\"ref\":\"query-dsl/compound-queries.html\",\"tf\":0.005847953216374269}},\",\":{\"docs\":{\"query-dsl/compound-queries.html\":{\"ref\":\"query-dsl/compound-queries.html\",\"tf\":0.005847953216374269}}}}}}}}}},\"i\":{\"docs\":{},\"n\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.0072992700729927005}},\"a\":{\"docs\":{},\"g\":{\"docs\":{},\"g\":{\"docs\":{},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"g\":{\"docs\":{},\"a\":{\"docs\":{},\"t\":{\"docs\":{},\"i\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{},\"b\":{\"docs\":{},\"u\":{\"docs\":{},\"i\":{\"docs\":{},\"l\":{\"docs\":{},\"d\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}}}}}}}}}}}}}}}}}}},\"s\":{\"docs\":{},\"s\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.001652892561983471}}}}},\"o\":{\"docs\":{},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"_\":{\"docs\":{},\"l\":{\"docs\":{},\"i\":{\"docs\":{},\"k\":{\"docs\":{},\"e\":{\"docs\":{},\"_\":{\"docs\":{},\"t\":{\"docs\":{},\"h\":{\"docs\":{},\"i\":{\"docs\":{\"query-dsl/specialized-queries.html\":{\"ref\":\"query-dsl/specialized-queries.html\",\"tf\":0.004761904761904762}}}}}}}}}}},\"l\":{\"docs\":{},\"i\":{\"docs\":{},\"k\":{\"docs\":{},\"e\":{\"docs\":{},\"t\":{\"docs\":{},\"h\":{\"docs\":{},\"i\":{\"docs\":{},\"s\":{\"docs\":{},\"q\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"y\":{\"docs\":{},\"(\":{\"docs\":{},\"f\":{\"docs\":{},\"i\":{\"docs\":{},\"e\":{\"docs\":{},\"l\":{\"docs\":{},\"d\":{\"docs\":{},\"s\":{\"docs\":{},\",\":{\"docs\":{\"query-dsl/specialized-queries.html\":{\"ref\":\"query-dsl/specialized-queries.html\",\"tf\":0.004761904761904762}}}}}}}}}}}}}}}}}}}}}}}}}},\"y\":{\"docs\":{},\"d\":{\"docs\":{},\"e\":{\"docs\":{},\"s\":{\"docs\":{},\"i\":{\"docs\":{},\"g\":{\"docs\":{},\"n\":{\"docs\":{},\"a\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"d\":{\"docs\":{},\"q\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"y\":{\"docs\":{},\"n\":{\"docs\":{},\"a\":{\"docs\":{},\"m\":{\"docs\":{\"query-dsl/specialized-queries.html\":{\"ref\":\"query-dsl/specialized-queries.html\",\"tf\":0.004761904761904762}}}}}}}}}}}}}}}}}}}}}},\"o\":{\"docs\":{},\"r\":{\"docs\":{},\"g\":{\"docs\":{},\".\":{\"docs\":{},\"e\":{\"docs\":{},\"l\":{\"docs\":{},\"a\":{\"docs\":{},\"s\":{\"docs\":{},\"t\":{\"docs\":{},\"i\":{\"docs\":{},\"c\":{\"docs\":{},\"s\":{\"docs\":{},\"e\":{\"docs\":{},\"a\":{\"docs\":{},\"r\":{\"docs\":{},\"c\":{\"docs\":{},\"h\":{\"docs\":{},\".\":{\"docs\":{},\"c\":{\"docs\":{},\"l\":{\"docs\":{},\"i\":{\"docs\":{\"dependency.html\":{\"ref\":\"dependency.html\",\"tf\":0.07692307692307693},\"client/xpack-transport-client.html\":{\"ref\":\"client/xpack-transport-client.html\",\"tf\":0.01639344262295082}},\"e\":{\"docs\":{},\"n\":{\"docs\":{},\"t\":{\"docs\":{},\".\":{\"docs\":{},\"t\":{\"docs\":{},\"r\":{\"docs\":{},\"a\":{\"docs\":{},\"n\":{\"docs\":{},\"s\":{\"docs\":{},\"p\":{\"docs\":{},\"o\":{\"docs\":{},\"r\":{\"docs\":{},\"t\":{\"docs\":{},\".\":{\"docs\":{},\"t\":{\"docs\":{},\"r\":{\"docs\":{},\"a\":{\"docs\":{},\"n\":{\"docs\":{},\"s\":{\"docs\":{},\"p\":{\"docs\":{},\"o\":{\"docs\":{},\"r\":{\"docs\":{},\"t\":{\"docs\":{},\"c\":{\"docs\":{},\"l\":{\"docs\":{},\"i\":{\"docs\":{},\"e\":{\"docs\":{},\"n\":{\"docs\":{},\"t\":{\"docs\":{},\";\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.002066115702479339}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"o\":{\"docs\":{},\"m\":{\"docs\":{},\"m\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{},\".\":{\"docs\":{},\"s\":{\"docs\":{},\"e\":{\"docs\":{},\"t\":{\"docs\":{},\"t\":{\"docs\":{},\"i\":{\"docs\":{},\"n\":{\"docs\":{},\"g\":{\"docs\":{},\"s\":{\"docs\":{},\".\":{\"docs\":{},\"s\":{\"docs\":{},\"e\":{\"docs\":{},\"t\":{\"docs\":{},\"t\":{\"docs\":{},\"i\":{\"docs\":{},\"n\":{\"docs\":{},\"g\":{\"docs\":{},\"s\":{\"docs\":{},\";\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.002066115702479339}}}}}}}}}}}}}}}}}}}},\"t\":{\"docs\":{},\"r\":{\"docs\":{},\"a\":{\"docs\":{},\"n\":{\"docs\":{},\"s\":{\"docs\":{},\"p\":{\"docs\":{},\"o\":{\"docs\":{},\"r\":{\"docs\":{},\"t\":{\"docs\":{},\".\":{\"docs\":{},\"i\":{\"docs\":{},\"n\":{\"docs\":{},\"e\":{\"docs\":{},\"t\":{\"docs\":{},\"s\":{\"docs\":{},\"o\":{\"docs\":{},\"c\":{\"docs\":{},\"k\":{\"docs\":{},\"e\":{\"docs\":{},\"t\":{\"docs\":{},\"t\":{\"docs\":{},\"r\":{\"docs\":{},\"a\":{\"docs\":{},\"n\":{\"docs\":{},\"s\":{\"docs\":{},\"p\":{\"docs\":{},\"o\":{\"docs\":{},\"r\":{\"docs\":{},\"t\":{\"docs\":{},\"a\":{\"docs\":{},\"d\":{\"docs\":{},\"d\":{\"docs\":{},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"s\":{\"docs\":{},\"s\":{\"docs\":{},\";\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.002066115702479339}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"x\":{\"docs\":{},\"c\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"n\":{\"docs\":{},\"t\":{\"docs\":{},\".\":{\"docs\":{},\"x\":{\"docs\":{},\"c\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"n\":{\"docs\":{},\"t\":{\"docs\":{},\"b\":{\"docs\":{},\"u\":{\"docs\":{},\"i\":{\"docs\":{},\"l\":{\"docs\":{},\"d\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\";\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.002066115702479339}}}}}}}}}},\"f\":{\"docs\":{},\"a\":{\"docs\":{},\"c\":{\"docs\":{},\"t\":{\"docs\":{},\"o\":{\"docs\":{},\"r\":{\"docs\":{},\"y\":{\"docs\":{},\";\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.002066115702479339}}},\".\":{\"docs\":{},\"*\":{\"docs\":{},\";\":{\"docs\":{\"document-apis/bulk-api.html\":{\"ref\":\"document-apis/bulk-api.html\",\"tf\":0.014492753623188406}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"u\":{\"docs\":{},\"n\":{\"docs\":{},\"i\":{\"docs\":{},\"t\":{\"docs\":{},\".\":{\"docs\":{},\"b\":{\"docs\":{},\"y\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"s\":{\"docs\":{},\"i\":{\"docs\":{},\"z\":{\"docs\":{},\"e\":{\"docs\":{},\"u\":{\"docs\":{},\"n\":{\"docs\":{},\"i\":{\"docs\":{},\"t\":{\"docs\":{},\";\":{\"docs\":{\"document-apis/using-bulk-processor.html\":{\"ref\":\"document-apis/using-bulk-processor.html\",\"tf\":0.006024096385542169}}}}}}},\"v\":{\"docs\":{},\"a\":{\"docs\":{},\"l\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"docs\":{},\";\":{\"docs\":{\"document-apis/using-bulk-processor.html\":{\"ref\":\"document-apis/using-bulk-processor.html\",\"tf\":0.006024096385542169}}}}}}}}}}}}}}}},\"t\":{\"docs\":{},\"i\":{\"docs\":{},\"m\":{\"docs\":{},\"e\":{\"docs\":{},\"v\":{\"docs\":{},\"a\":{\"docs\":{},\"l\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"docs\":{},\";\":{\"docs\":{\"document-apis/using-bulk-processor.html\":{\"ref\":\"document-apis/using-bulk-processor.html\",\"tf\":0.006024096385542169}}}}}}}}}}}}}}}},\"t\":{\"docs\":{},\"i\":{\"docs\":{},\"l\":{\"docs\":{},\".\":{\"docs\":{},\"c\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{},\"c\":{\"docs\":{},\"u\":{\"docs\":{},\"r\":{\"docs\":{},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"n\":{\"docs\":{},\"t\":{\"docs\":{},\".\":{\"docs\":{},\"a\":{\"docs\":{},\"b\":{\"docs\":{},\"s\":{\"docs\":{},\"t\":{\"docs\":{},\"r\":{\"docs\":{},\"a\":{\"docs\":{},\"c\":{\"docs\":{},\"t\":{\"docs\":{},\"r\":{\"docs\":{},\"u\":{\"docs\":{},\"n\":{\"docs\":{},\"n\":{\"docs\":{},\"a\":{\"docs\":{},\"b\":{\"docs\":{},\"l\":{\"docs\":{},\"e\":{\"docs\":{},\".\":{\"docs\":{},\"r\":{\"docs\":{},\"u\":{\"docs\":{},\"n\":{\"docs\":{},\"(\":{\"docs\":{},\"a\":{\"docs\":{},\"b\":{\"docs\":{},\"s\":{\"docs\":{},\"t\":{\"docs\":{},\"r\":{\"docs\":{},\"a\":{\"docs\":{},\"c\":{\"docs\":{},\"t\":{\"docs\":{},\"r\":{\"docs\":{},\"u\":{\"docs\":{},\"n\":{\"docs\":{},\"n\":{\"docs\":{},\"a\":{\"docs\":{},\"b\":{\"docs\":{},\"l\":{\"docs\":{},\"e\":{\"docs\":{},\".\":{\"docs\":{},\"j\":{\"docs\":{},\"a\":{\"docs\":{},\"v\":{\"docs\":{},\"a\":{\"docs\":{},\":\":{\"3\":{\"7\":{\"docs\":{},\")\":{\"docs\":{\"search-api/using-scrolls-in-java.html\":{\"ref\":\"search-api/using-scrolls-in-java.html\",\"tf\":0.00546448087431694}}}},\"docs\":{}},\"docs\":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"g\":{\"docs\":{},\"e\":{\"docs\":{},\"o\":{\"docs\":{},\".\":{\"docs\":{},\"b\":{\"docs\":{},\"u\":{\"docs\":{},\"i\":{\"docs\":{},\"l\":{\"docs\":{},\"d\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"s\":{\"docs\":{},\".\":{\"docs\":{},\"s\":{\"docs\":{},\"h\":{\"docs\":{},\"a\":{\"docs\":{},\"p\":{\"docs\":{},\"e\":{\"docs\":{},\"b\":{\"docs\":{},\"u\":{\"docs\":{},\"i\":{\"docs\":{},\"l\":{\"docs\":{},\"d\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\";\":{\"docs\":{\"query-dsl/geo-queries.html\":{\"ref\":\"query-dsl/geo-queries.html\",\"tf\":0.004901960784313725}}}}}}}}}}}}}}}}}}}}}}}},\"s\":{\"docs\":{},\"h\":{\"docs\":{},\"a\":{\"docs\":{},\"p\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"l\":{\"docs\":{},\"a\":{\"docs\":{},\"t\":{\"docs\":{},\"i\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{},\";\":{\"docs\":{\"query-dsl/geo-queries.html\":{\"ref\":\"query-dsl/geo-queries.html\",\"tf\":0.004901960784313725}}}}}}}}}}}}}}}}}}}}}}}}}}},\"a\":{\"docs\":{},\"c\":{\"docs\":{},\"t\":{\"docs\":{},\"i\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{},\".\":{\"docs\":{},\"i\":{\"docs\":{},\"n\":{\"docs\":{},\"d\":{\"docs\":{},\"e\":{\"docs\":{},\"x\":{\"docs\":{},\".\":{\"docs\":{},\"i\":{\"docs\":{},\"n\":{\"docs\":{},\"d\":{\"docs\":{},\"e\":{\"docs\":{},\"x\":{\"docs\":{},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"s\":{\"docs\":{},\"p\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{},\"s\":{\"docs\":{},\"e\":{\"docs\":{},\";\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.002066115702479339}}}}}}}}}}}}}}}}}}}}}},\"b\":{\"docs\":{},\"u\":{\"docs\":{},\"l\":{\"docs\":{},\"k\":{\"docs\":{},\".\":{\"docs\":{},\"b\":{\"docs\":{},\"a\":{\"docs\":{},\"c\":{\"docs\":{},\"k\":{\"docs\":{},\"o\":{\"docs\":{},\"f\":{\"docs\":{},\"f\":{\"docs\":{},\"p\":{\"docs\":{},\"o\":{\"docs\":{},\"l\":{\"docs\":{},\"i\":{\"docs\":{},\"c\":{\"docs\":{},\"y\":{\"docs\":{},\";\":{\"docs\":{\"document-apis/using-bulk-processor.html\":{\"ref\":\"document-apis/using-bulk-processor.html\",\"tf\":0.006024096385542169}}}}}}}}}}}}}}},\"u\":{\"docs\":{},\"l\":{\"docs\":{},\"k\":{\"docs\":{},\"p\":{\"docs\":{},\"r\":{\"docs\":{},\"o\":{\"docs\":{},\"c\":{\"docs\":{},\"e\":{\"docs\":{},\"s\":{\"docs\":{},\"s\":{\"docs\":{},\"o\":{\"docs\":{},\"r\":{\"docs\":{},\";\":{\"docs\":{\"document-apis/using-bulk-processor.html\":{\"ref\":\"document-apis/using-bulk-processor.html\",\"tf\":0.006024096385542169}}}}}}}}}}}}}}}}}}}}},\"s\":{\"docs\":{},\"e\":{\"docs\":{},\"a\":{\"docs\":{},\"r\":{\"docs\":{},\"c\":{\"docs\":{},\"h\":{\"docs\":{},\".\":{\"docs\":{},\"s\":{\"docs\":{},\"e\":{\"docs\":{},\"a\":{\"docs\":{},\"r\":{\"docs\":{},\"c\":{\"docs\":{},\"h\":{\"docs\":{},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"s\":{\"docs\":{},\"p\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{},\"s\":{\"docs\":{},\"e\":{\"docs\":{},\";\":{\"docs\":{\"search-api.html\":{\"ref\":\"search-api.html\",\"tf\":0.017241379310344827}}}}}}}}}}},\"t\":{\"docs\":{},\"y\":{\"docs\":{},\"p\":{\"docs\":{},\"e\":{\"docs\":{},\";\":{\"docs\":{\"search-api.html\":{\"ref\":\"search-api.html\",\"tf\":0.017241379310344827}}}}}}}}}}}}}}}}}}}}}}}}}}},\"t\":{\"docs\":{},\"r\":{\"docs\":{},\"a\":{\"docs\":{},\"n\":{\"docs\":{},\"s\":{\"docs\":{},\"p\":{\"docs\":{},\"o\":{\"docs\":{},\"r\":{\"docs\":{},\"t\":{\"docs\":{},\".\":{\"docs\":{},\"c\":{\"docs\":{},\"l\":{\"docs\":{},\"i\":{\"docs\":{},\"e\":{\"docs\":{},\"n\":{\"docs\":{},\"t\":{\"docs\":{},\".\":{\"docs\":{},\"p\":{\"docs\":{},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"b\":{\"docs\":{},\"u\":{\"docs\":{},\"i\":{\"docs\":{},\"l\":{\"docs\":{},\"t\":{\"docs\":{},\"t\":{\"docs\":{},\"r\":{\"docs\":{},\"a\":{\"docs\":{},\"n\":{\"docs\":{},\"s\":{\"docs\":{},\"p\":{\"docs\":{},\"o\":{\"docs\":{},\"r\":{\"docs\":{},\"t\":{\"docs\":{},\"c\":{\"docs\":{},\"l\":{\"docs\":{},\"i\":{\"docs\":{},\"e\":{\"docs\":{},\"n\":{\"docs\":{},\"t\":{\"docs\":{},\";\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.002066115702479339}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"q\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"docs\":{},\"s\":{\"docs\":{},\"t\":{\"docs\":{},\"h\":{\"docs\":{},\"a\":{\"docs\":{},\"n\":{\"docs\":{},\"d\":{\"docs\":{},\"l\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"g\":{\"docs\":{},\"i\":{\"docs\":{},\"s\":{\"docs\":{},\"t\":{\"docs\":{},\"r\":{\"docs\":{},\"y\":{\"docs\":{},\".\":{\"docs\":{},\"p\":{\"docs\":{},\"r\":{\"docs\":{},\"o\":{\"docs\":{},\"c\":{\"docs\":{},\"e\":{\"docs\":{},\"s\":{\"docs\":{},\"s\":{\"docs\":{},\"m\":{\"docs\":{},\"e\":{\"docs\":{},\"s\":{\"docs\":{},\"s\":{\"docs\":{},\"a\":{\"docs\":{},\"g\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"c\":{\"docs\":{},\"e\":{\"docs\":{},\"i\":{\"docs\":{},\"v\":{\"docs\":{},\"e\":{\"docs\":{},\"d\":{\"docs\":{},\"(\":{\"docs\":{},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"q\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"docs\":{},\"s\":{\"docs\":{},\"t\":{\"docs\":{},\"h\":{\"docs\":{},\"a\":{\"docs\":{},\"n\":{\"docs\":{},\"d\":{\"docs\":{},\"l\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"g\":{\"docs\":{},\"i\":{\"docs\":{},\"s\":{\"docs\":{},\"t\":{\"docs\":{},\"r\":{\"docs\":{},\"y\":{\"docs\":{},\".\":{\"docs\":{},\"j\":{\"docs\":{},\"a\":{\"docs\":{},\"v\":{\"docs\":{},\"a\":{\"docs\":{},\":\":{\"7\":{\"5\":{\"docs\":{},\")\":{\"docs\":{\"search-api/using-scrolls-in-java.html\":{\"ref\":\"search-api/using-scrolls-in-java.html\",\"tf\":0.00546448087431694}}}},\"docs\":{}},\"docs\":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"t\":{\"docs\":{},\"r\":{\"docs\":{},\"a\":{\"docs\":{},\"n\":{\"docs\":{},\"s\":{\"docs\":{},\"p\":{\"docs\":{},\"o\":{\"docs\":{},\"r\":{\"docs\":{},\"t\":{\"docs\":{},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"q\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"docs\":{},\"s\":{\"docs\":{},\"t\":{\"docs\":{},\"h\":{\"docs\":{},\"a\":{\"docs\":{},\"n\":{\"docs\":{},\"d\":{\"docs\":{},\"l\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\".\":{\"docs\":{},\"m\":{\"docs\":{},\"e\":{\"docs\":{},\"s\":{\"docs\":{},\"s\":{\"docs\":{},\"a\":{\"docs\":{},\"g\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"c\":{\"docs\":{},\"e\":{\"docs\":{},\"i\":{\"docs\":{},\"v\":{\"docs\":{},\"e\":{\"docs\":{},\"d\":{\"docs\":{},\"(\":{\"docs\":{},\"t\":{\"docs\":{},\"r\":{\"docs\":{},\"a\":{\"docs\":{},\"n\":{\"docs\":{},\"s\":{\"docs\":{},\"p\":{\"docs\":{},\"o\":{\"docs\":{},\"r\":{\"docs\":{},\"t\":{\"docs\":{},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"q\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"docs\":{},\"s\":{\"docs\":{},\"t\":{\"docs\":{},\"h\":{\"docs\":{},\"a\":{\"docs\":{},\"n\":{\"docs\":{},\"d\":{\"docs\":{},\"l\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\".\":{\"docs\":{},\"j\":{\"docs\":{},\"a\":{\"docs\":{},\"v\":{\"docs\":{},\"a\":{\"docs\":{},\":\":{\"3\":{\"3\":{\"docs\":{},\")\":{\"docs\":{\"search-api/using-scrolls-in-java.html\":{\"ref\":\"search-api/using-scrolls-in-java.html\",\"tf\":0.00546448087431694}}}},\"docs\":{}},\"docs\":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"s\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"v\":{\"docs\":{},\"i\":{\"docs\":{},\"c\":{\"docs\":{},\"e\":{\"docs\":{},\"$\":{\"4\":{\"docs\":{},\".\":{\"docs\":{},\"d\":{\"docs\":{},\"o\":{\"docs\":{},\"r\":{\"docs\":{},\"u\":{\"docs\":{},\"n\":{\"docs\":{},\"(\":{\"docs\":{},\"t\":{\"docs\":{},\"r\":{\"docs\":{},\"a\":{\"docs\":{},\"n\":{\"docs\":{},\"s\":{\"docs\":{},\"p\":{\"docs\":{},\"o\":{\"docs\":{},\"r\":{\"docs\":{},\"t\":{\"docs\":{},\"s\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"v\":{\"docs\":{},\"i\":{\"docs\":{},\"c\":{\"docs\":{},\"e\":{\"docs\":{},\".\":{\"docs\":{},\"j\":{\"docs\":{},\"a\":{\"docs\":{},\"v\":{\"docs\":{},\"a\":{\"docs\":{},\":\":{\"3\":{\"7\":{\"6\":{\"docs\":{},\")\":{\"docs\":{\"search-api/using-scrolls-in-java.html\":{\"ref\":\"search-api/using-scrolls-in-java.html\",\"tf\":0.00546448087431694}}}},\"docs\":{}},\"docs\":{}},\"docs\":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"docs\":{}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"i\":{\"docs\":{},\"n\":{\"docs\":{},\"d\":{\"docs\":{},\"e\":{\"docs\":{},\"x\":{\"docs\":{},\".\":{\"docs\":{},\"q\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"y\":{\"docs\":{},\".\":{\"docs\":{},\"q\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"y\":{\"docs\":{},\"b\":{\"docs\":{},\"u\":{\"docs\":{},\"i\":{\"docs\":{},\"l\":{\"docs\":{},\"d\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"s\":{\"docs\":{},\".\":{\"docs\":{},\"*\":{\"docs\":{},\";\":{\"docs\":{\"search-api.html\":{\"ref\":\"search-api.html\",\"tf\":0.017241379310344827},\"search-api/using-scrolls-in-java.html\":{\"ref\":\"search-api/using-scrolls-in-java.html\",\"tf\":0.00546448087431694},\"query-dsl.html\":{\"ref\":\"query-dsl.html\",\"tf\":0.043478260869565216}}}}}}}}}}}}}}}}}},\"f\":{\"docs\":{},\"u\":{\"docs\":{},\"n\":{\"docs\":{},\"c\":{\"docs\":{},\"t\":{\"docs\":{},\"i\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{},\"s\":{\"docs\":{},\"c\":{\"docs\":{},\"o\":{\"docs\":{},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\".\":{\"docs\":{},\"s\":{\"docs\":{},\"c\":{\"docs\":{},\"o\":{\"docs\":{},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"f\":{\"docs\":{},\"u\":{\"docs\":{},\"n\":{\"docs\":{},\"c\":{\"docs\":{},\"t\":{\"docs\":{},\"i\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{},\"b\":{\"docs\":{},\"u\":{\"docs\":{},\"i\":{\"docs\":{},\"l\":{\"docs\":{},\"d\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"s\":{\"docs\":{},\".\":{\"docs\":{},\"*\":{\"docs\":{},\";\":{\"docs\":{\"query-dsl/compound-queries.html\":{\"ref\":\"query-dsl/compound-queries.html\",\"tf\":0.005847953216374269}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"s\":{\"docs\":{},\"e\":{\"docs\":{},\"a\":{\"docs\":{},\"r\":{\"docs\":{},\"c\":{\"docs\":{},\"h\":{\"docs\":{},\".\":{\"docs\":{},\"a\":{\"docs\":{},\"c\":{\"docs\":{},\"t\":{\"docs\":{},\"i\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{},\".\":{\"docs\":{},\"s\":{\"docs\":{},\"e\":{\"docs\":{},\"a\":{\"docs\":{},\"r\":{\"docs\":{},\"c\":{\"docs\":{},\"h\":{\"docs\":{},\"s\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"v\":{\"docs\":{},\"i\":{\"docs\":{},\"c\":{\"docs\":{},\"e\":{\"docs\":{},\"t\":{\"docs\":{},\"r\":{\"docs\":{},\"a\":{\"docs\":{},\"n\":{\"docs\":{},\"s\":{\"docs\":{},\"p\":{\"docs\":{},\"o\":{\"docs\":{},\"r\":{\"docs\":{},\"t\":{\"docs\":{},\"a\":{\"docs\":{},\"c\":{\"docs\":{},\"t\":{\"docs\":{},\"i\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{},\"$\":{\"docs\":{},\"s\":{\"docs\":{},\"e\":{\"docs\":{},\"a\":{\"docs\":{},\"r\":{\"docs\":{},\"c\":{\"docs\":{},\"h\":{\"docs\":{},\"q\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"y\":{\"docs\":{},\"s\":{\"docs\":{},\"c\":{\"docs\":{},\"r\":{\"docs\":{},\"o\":{\"docs\":{},\"l\":{\"docs\":{},\"l\":{\"docs\":{},\"t\":{\"docs\":{},\"r\":{\"docs\":{},\"a\":{\"docs\":{},\"n\":{\"docs\":{},\"s\":{\"docs\":{},\"p\":{\"docs\":{},\"o\":{\"docs\":{},\"r\":{\"docs\":{},\"t\":{\"docs\":{},\"h\":{\"docs\":{},\"a\":{\"docs\":{},\"n\":{\"docs\":{},\"d\":{\"docs\":{},\"l\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\".\":{\"docs\":{},\"m\":{\"docs\":{},\"e\":{\"docs\":{},\"s\":{\"docs\":{},\"s\":{\"docs\":{},\"a\":{\"docs\":{},\"g\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"c\":{\"docs\":{},\"e\":{\"docs\":{},\"i\":{\"docs\":{},\"v\":{\"docs\":{},\"e\":{\"docs\":{},\"d\":{\"docs\":{},\"(\":{\"docs\":{},\"s\":{\"docs\":{},\"e\":{\"docs\":{},\"a\":{\"docs\":{},\"r\":{\"docs\":{},\"c\":{\"docs\":{},\"h\":{\"docs\":{},\"s\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"v\":{\"docs\":{},\"i\":{\"docs\":{},\"c\":{\"docs\":{},\"e\":{\"docs\":{},\"t\":{\"docs\":{},\"r\":{\"docs\":{},\"a\":{\"docs\":{},\"n\":{\"docs\":{},\"s\":{\"docs\":{},\"p\":{\"docs\":{},\"o\":{\"docs\":{},\"r\":{\"docs\":{},\"t\":{\"docs\":{},\"a\":{\"docs\":{},\"c\":{\"docs\":{},\"t\":{\"docs\":{},\"i\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{},\".\":{\"docs\":{},\"j\":{\"docs\":{},\"a\":{\"docs\":{},\"v\":{\"docs\":{},\"a\":{\"docs\":{},\":\":{\"3\":{\"8\":{\"1\":{\"docs\":{},\")\":{\"docs\":{\"search-api/using-scrolls-in-java.html\":{\"ref\":\"search-api/using-scrolls-in-java.html\",\"tf\":0.00546448087431694}}}},\"4\":{\"docs\":{},\")\":{\"docs\":{\"search-api/using-scrolls-in-java.html\":{\"ref\":\"search-api/using-scrolls-in-java.html\",\"tf\":0.00546448087431694}}}},\"docs\":{}},\"docs\":{}},\"docs\":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"g\":{\"docs\":{},\"g\":{\"docs\":{},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"g\":{\"docs\":{},\"a\":{\"docs\":{},\"t\":{\"docs\":{},\"i\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{},\"s\":{\"docs\":{},\".\":{\"docs\":{},\"a\":{\"docs\":{},\"g\":{\"docs\":{},\"g\":{\"docs\":{},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"g\":{\"docs\":{},\"a\":{\"docs\":{},\"t\":{\"docs\":{},\"i\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{},\"b\":{\"docs\":{},\"u\":{\"docs\":{},\"i\":{\"docs\":{},\"l\":{\"docs\":{},\"d\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"s\":{\"docs\":{},\";\":{\"docs\":{\"aggregations.html\":{\"ref\":\"aggregations.html\",\"tf\":0.038461538461538464}}}}}}}}}}}}}}}}}}}}}},\"b\":{\"docs\":{},\"u\":{\"docs\":{},\"c\":{\"docs\":{},\"k\":{\"docs\":{},\"e\":{\"docs\":{},\"t\":{\"docs\":{},\".\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"m\":{\"docs\":{},\"s\":{\"docs\":{},\".\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"m\":{\"docs\":{},\"s\":{\"docs\":{},\";\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854},\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.001652892561983471}}}}}}}}}}}}}},\"f\":{\"docs\":{},\"i\":{\"docs\":{},\"l\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\".\":{\"docs\":{},\"f\":{\"docs\":{},\"i\":{\"docs\":{},\"l\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\";\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}}}}}}},\"s\":{\"docs\":{},\".\":{\"docs\":{},\"f\":{\"docs\":{},\"i\":{\"docs\":{},\"l\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"s\":{\"docs\":{},\";\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}}}}}}}}}}}}}}},\"g\":{\"docs\":{},\"e\":{\"docs\":{},\"o\":{\"docs\":{},\"g\":{\"docs\":{},\"r\":{\"docs\":{},\"i\":{\"docs\":{},\"d\":{\"docs\":{},\".\":{\"docs\":{},\"g\":{\"docs\":{},\"e\":{\"docs\":{},\"o\":{\"docs\":{},\"h\":{\"docs\":{},\"a\":{\"docs\":{},\"s\":{\"docs\":{},\"h\":{\"docs\":{},\"g\":{\"docs\":{},\"r\":{\"docs\":{},\"i\":{\"docs\":{},\"d\":{\"docs\":{},\";\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}}}}}}}}}}}}}}}}}},\"l\":{\"docs\":{},\"o\":{\"docs\":{},\"b\":{\"docs\":{},\"a\":{\"docs\":{},\"l\":{\"docs\":{},\".\":{\"docs\":{},\"g\":{\"docs\":{},\"l\":{\"docs\":{},\"o\":{\"docs\":{},\"b\":{\"docs\":{},\"a\":{\"docs\":{},\"l\":{\"docs\":{},\";\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}}}}}}}}}}}}},\"h\":{\"docs\":{},\"i\":{\"docs\":{},\"s\":{\"docs\":{},\"t\":{\"docs\":{},\"o\":{\"docs\":{},\"g\":{\"docs\":{},\"r\":{\"docs\":{},\"a\":{\"docs\":{},\"m\":{\"docs\":{},\".\":{\"docs\":{},\"h\":{\"docs\":{},\"i\":{\"docs\":{},\"s\":{\"docs\":{},\"t\":{\"docs\":{},\"o\":{\"docs\":{},\"g\":{\"docs\":{},\"r\":{\"docs\":{},\"a\":{\"docs\":{},\"m\":{\"docs\":{},\";\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.001652892561983471}}}}}}}}}}}}}}}}}}}}}},\"m\":{\"docs\":{},\"i\":{\"docs\":{},\"s\":{\"docs\":{},\"s\":{\"docs\":{},\"i\":{\"docs\":{},\"n\":{\"docs\":{},\"g\":{\"docs\":{},\".\":{\"docs\":{},\"m\":{\"docs\":{},\"i\":{\"docs\":{},\"s\":{\"docs\":{},\"s\":{\"docs\":{},\"i\":{\"docs\":{},\"n\":{\"docs\":{},\"g\":{\"docs\":{},\";\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}}}}}}}}}}}}}}},\"n\":{\"docs\":{},\"e\":{\"docs\":{},\"s\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"d\":{\"docs\":{},\".\":{\"docs\":{},\"n\":{\"docs\":{},\"e\":{\"docs\":{},\"s\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"d\":{\"docs\":{},\";\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.001652892561983471}}}}}}}}},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"v\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"s\":{\"docs\":{},\"e\":{\"docs\":{},\"n\":{\"docs\":{},\"e\":{\"docs\":{},\"s\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"d\":{\"docs\":{},\";\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}}}}}}}}}}}}}}}}}}}},\"r\":{\"docs\":{},\"a\":{\"docs\":{},\"n\":{\"docs\":{},\"g\":{\"docs\":{},\"e\":{\"docs\":{},\".\":{\"docs\":{},\"r\":{\"docs\":{},\"a\":{\"docs\":{},\"n\":{\"docs\":{},\"g\":{\"docs\":{},\"e\":{\"docs\":{},\";\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.003305785123966942}}}}}}}}}}}}}},\"s\":{\"docs\":{},\"i\":{\"docs\":{},\"g\":{\"docs\":{},\"n\":{\"docs\":{},\"i\":{\"docs\":{},\"f\":{\"docs\":{},\"i\":{\"docs\":{},\"c\":{\"docs\":{},\"a\":{\"docs\":{},\"n\":{\"docs\":{},\"t\":{\"docs\":{},\".\":{\"docs\":{},\"s\":{\"docs\":{},\"i\":{\"docs\":{},\"g\":{\"docs\":{},\"n\":{\"docs\":{},\"i\":{\"docs\":{},\"f\":{\"docs\":{},\"i\":{\"docs\":{},\"c\":{\"docs\":{},\"a\":{\"docs\":{},\"n\":{\"docs\":{},\"t\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"m\":{\"docs\":{},\"s\":{\"docs\":{},\";\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"m\":{\"docs\":{},\"e\":{\"docs\":{},\"t\":{\"docs\":{},\"r\":{\"docs\":{},\"i\":{\"docs\":{},\"c\":{\"docs\":{},\"s\":{\"docs\":{},\".\":{\"docs\":{},\"a\":{\"docs\":{},\"v\":{\"docs\":{},\"g\":{\"docs\":{},\".\":{\"docs\":{},\"a\":{\"docs\":{},\"v\":{\"docs\":{},\"g\":{\"docs\":{},\";\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}}}}}}}}}},\"c\":{\"docs\":{},\"a\":{\"docs\":{},\"r\":{\"docs\":{},\"d\":{\"docs\":{},\"i\":{\"docs\":{},\"n\":{\"docs\":{},\"a\":{\"docs\":{},\"l\":{\"docs\":{},\"i\":{\"docs\":{},\"t\":{\"docs\":{},\"y\":{\"docs\":{},\".\":{\"docs\":{},\"c\":{\"docs\":{},\"a\":{\"docs\":{},\"r\":{\"docs\":{},\"d\":{\"docs\":{},\"i\":{\"docs\":{},\"n\":{\"docs\":{},\"a\":{\"docs\":{},\"l\":{\"docs\":{},\"i\":{\"docs\":{},\"t\":{\"docs\":{},\"y\":{\"docs\":{},\";\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}}}}}}}}}}}}}}}}}}}}}}}}}},\"g\":{\"docs\":{},\"e\":{\"docs\":{},\"o\":{\"docs\":{},\"b\":{\"docs\":{},\"o\":{\"docs\":{},\"u\":{\"docs\":{},\"n\":{\"docs\":{},\"d\":{\"docs\":{},\"s\":{\"docs\":{},\".\":{\"docs\":{},\"g\":{\"docs\":{},\"e\":{\"docs\":{},\"o\":{\"docs\":{},\"b\":{\"docs\":{},\"o\":{\"docs\":{},\"u\":{\"docs\":{},\"n\":{\"docs\":{},\"d\":{\"docs\":{},\"s\":{\"docs\":{},\";\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}}}}}}}}}}}}}}}}}}}}}},\"m\":{\"docs\":{},\"a\":{\"docs\":{},\"x\":{\"docs\":{},\".\":{\"docs\":{},\"m\":{\"docs\":{},\"a\":{\"docs\":{},\"x\":{\"docs\":{},\";\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}}}}}}}}},\"i\":{\"docs\":{},\"n\":{\"docs\":{},\".\":{\"docs\":{},\"m\":{\"docs\":{},\"i\":{\"docs\":{},\"n\":{\"docs\":{},\";\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}}}}}}}}}},\"p\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"c\":{\"docs\":{},\"e\":{\"docs\":{},\"n\":{\"docs\":{},\"t\":{\"docs\":{},\"i\":{\"docs\":{},\"l\":{\"docs\":{},\"e\":{\"docs\":{},\"s\":{\"docs\":{},\".\":{\"docs\":{},\"p\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"c\":{\"docs\":{},\"e\":{\"docs\":{},\"n\":{\"docs\":{},\"t\":{\"docs\":{},\"i\":{\"docs\":{},\"l\":{\"docs\":{},\"e\":{\"docs\":{},\";\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00291970802919708}}},\"r\":{\"docs\":{},\"a\":{\"docs\":{},\"n\":{\"docs\":{},\"k\":{\"docs\":{},\"s\":{\"docs\":{},\";\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}}}}}}}},\"s\":{\"docs\":{},\";\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}}}}}}}}}}}}}}}}}}}}}}}}}},\"s\":{\"docs\":{},\"t\":{\"docs\":{},\"a\":{\"docs\":{},\"t\":{\"docs\":{},\"s\":{\"docs\":{},\".\":{\"docs\":{},\"e\":{\"docs\":{},\"x\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"n\":{\"docs\":{},\"d\":{\"docs\":{},\"e\":{\"docs\":{},\"d\":{\"docs\":{},\".\":{\"docs\":{},\"e\":{\"docs\":{},\"x\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"n\":{\"docs\":{},\"d\":{\"docs\":{},\"e\":{\"docs\":{},\"d\":{\"docs\":{},\"s\":{\"docs\":{},\"t\":{\"docs\":{},\"a\":{\"docs\":{},\"t\":{\"docs\":{},\"s\":{\"docs\":{},\";\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}}}}}}}}}}}}}}}}}}}}}}}}},\"s\":{\"docs\":{},\"t\":{\"docs\":{},\"a\":{\"docs\":{},\"t\":{\"docs\":{},\"s\":{\"docs\":{},\";\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}}}}}}}}}}}}},\"u\":{\"docs\":{},\"m\":{\"docs\":{},\".\":{\"docs\":{},\"s\":{\"docs\":{},\"u\":{\"docs\":{},\"m\":{\"docs\":{},\";\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}}}}}}}}}},\"t\":{\"docs\":{},\"o\":{\"docs\":{},\"p\":{\"docs\":{},\"h\":{\"docs\":{},\"i\":{\"docs\":{},\"t\":{\"docs\":{},\"s\":{\"docs\":{},\".\":{\"docs\":{},\"t\":{\"docs\":{},\"o\":{\"docs\":{},\"p\":{\"docs\":{},\"h\":{\"docs\":{},\"i\":{\"docs\":{},\"t\":{\"docs\":{},\"s\":{\"docs\":{},\";\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}}}}}}}}}}}}}}}}}},\"v\":{\"docs\":{},\"a\":{\"docs\":{},\"l\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"docs\":{},\"c\":{\"docs\":{},\"o\":{\"docs\":{},\"u\":{\"docs\":{},\"n\":{\"docs\":{},\"t\":{\"docs\":{},\".\":{\"docs\":{},\"v\":{\"docs\":{},\"a\":{\"docs\":{},\"l\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"docs\":{},\"c\":{\"docs\":{},\"o\":{\"docs\":{},\"u\":{\"docs\":{},\"n\":{\"docs\":{},\"t\":{\"docs\":{},\";\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"s\":{\"docs\":{},\"e\":{\"docs\":{},\"a\":{\"docs\":{},\"r\":{\"docs\":{},\"c\":{\"docs\":{},\"h\":{\"docs\":{},\"s\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"v\":{\"docs\":{},\"i\":{\"docs\":{},\"c\":{\"docs\":{},\"e\":{\"docs\":{},\".\":{\"docs\":{},\"e\":{\"docs\":{},\"x\":{\"docs\":{},\"e\":{\"docs\":{},\"c\":{\"docs\":{},\"u\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"q\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"y\":{\"docs\":{},\"p\":{\"docs\":{},\"h\":{\"docs\":{},\"a\":{\"docs\":{},\"s\":{\"docs\":{},\"e\":{\"docs\":{},\"(\":{\"docs\":{},\"s\":{\"docs\":{},\"e\":{\"docs\":{},\"a\":{\"docs\":{},\"r\":{\"docs\":{},\"c\":{\"docs\":{},\"h\":{\"docs\":{},\"s\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"v\":{\"docs\":{},\"i\":{\"docs\":{},\"c\":{\"docs\":{},\"e\":{\"docs\":{},\".\":{\"docs\":{},\"j\":{\"docs\":{},\"a\":{\"docs\":{},\"v\":{\"docs\":{},\"a\":{\"docs\":{},\":\":{\"4\":{\"0\":{\"3\":{\"docs\":{},\")\":{\"docs\":{\"search-api/using-scrolls-in-java.html\":{\"ref\":\"search-api/using-scrolls-in-java.html\",\"tf\":0.00546448087431694}}}},\"docs\":{}},\"docs\":{}},\"docs\":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"f\":{\"docs\":{},\"i\":{\"docs\":{},\"n\":{\"docs\":{},\"d\":{\"docs\":{},\"c\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"x\":{\"docs\":{},\"t\":{\"docs\":{},\"(\":{\"docs\":{},\"s\":{\"docs\":{},\"e\":{\"docs\":{},\"a\":{\"docs\":{},\"r\":{\"docs\":{},\"c\":{\"docs\":{},\"h\":{\"docs\":{},\"s\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"v\":{\"docs\":{},\"i\":{\"docs\":{},\"c\":{\"docs\":{},\"e\":{\"docs\":{},\".\":{\"docs\":{},\"j\":{\"docs\":{},\"a\":{\"docs\":{},\"v\":{\"docs\":{},\"a\":{\"docs\":{},\":\":{\"6\":{\"1\":{\"3\":{\"docs\":{},\")\":{\"docs\":{\"search-api/using-scrolls-in-java.html\":{\"ref\":\"search-api/using-scrolls-in-java.html\",\"tf\":0.00546448087431694}}}},\"docs\":{}},\"docs\":{}},\"docs\":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"j\":{\"docs\":{},\"o\":{\"docs\":{},\"i\":{\"docs\":{},\"n\":{\"docs\":{},\".\":{\"docs\":{},\"a\":{\"docs\":{},\"g\":{\"docs\":{},\"g\":{\"docs\":{},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"g\":{\"docs\":{},\"a\":{\"docs\":{},\"t\":{\"docs\":{},\"i\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{},\"s\":{\"docs\":{},\".\":{\"docs\":{},\"c\":{\"docs\":{},\"h\":{\"docs\":{},\"i\":{\"docs\":{},\"l\":{\"docs\":{},\"d\":{\"docs\":{},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"n\":{\"docs\":{},\";\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"j\":{\"docs\":{},\"u\":{\"docs\":{},\"n\":{\"docs\":{},\"i\":{\"docs\":{},\"t\":{\"docs\":{},\".\":{\"docs\":{},\"b\":{\"docs\":{},\"e\":{\"docs\":{},\"f\":{\"docs\":{},\"o\":{\"docs\":{},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\";\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.002066115702479339}}}}}}}}},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"s\":{\"docs\":{},\"t\":{\"docs\":{},\";\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.002066115702479339}}}}}}}}}}}}},\"l\":{\"docs\":{},\"o\":{\"docs\":{},\"c\":{\"docs\":{},\"a\":{\"docs\":{},\"t\":{\"docs\":{},\"i\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"c\":{\"docs\":{},\"h\":{\"docs\":{},\".\":{\"docs\":{},\"s\":{\"docs\":{},\"p\":{\"docs\":{},\"a\":{\"docs\":{},\"t\":{\"docs\":{},\"i\":{\"docs\":{},\"a\":{\"docs\":{},\"l\":{\"4\":{\"docs\":{},\"j\":{\"docs\":{\"query-dsl/geo-queries.html\":{\"ref\":\"query-dsl/geo-queries.html\",\"tf\":0.004901960784313725}}}},\"docs\":{}}}}}}}}}}}}}}}}}}}}}}},\"d\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355},\"query-dsl/span-queries.html\":{\"ref\":\"query-dsl/span-queries.html\",\"tf\":0.005555555555555556}}}}},\"i\":{\"docs\":{},\"g\":{\"docs\":{},\"i\":{\"docs\":{},\"n\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125}}}}}}},\"b\":{\"docs\":{},\"j\":{\"docs\":{},\"e\":{\"docs\":{},\"c\":{\"docs\":{},\"t\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.017518248175182483},\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.013223140495867768},\"query-dsl/specialized-queries.html\":{\"ref\":\"query-dsl/specialized-queries.html\",\"tf\":0.004761904761904762}},\"m\":{\"docs\":{},\"a\":{\"docs\":{},\"p\":{\"docs\":{},\"p\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.006198347107438017}},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"(\":{\"docs\":{},\")\":{\"docs\":{},\";\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.006198347107438017}}}}}}}}}}}}}}}},\"n\":{\"docs\":{\"query-dsl/compound-queries.html\":{\"ref\":\"query-dsl/compound-queries.html\",\"tf\":0.005847953216374269}},\"c\":{\"docs\":{},\"e\":{\"docs\":{},\",\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.006198347107438017}}}}},\"f\":{\"docs\":{},\"a\":{\"docs\":{},\"i\":{\"docs\":{},\"l\":{\"docs\":{},\"u\":{\"docs\":{},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"(\":{\"docs\":{},\"e\":{\"docs\":{},\"x\":{\"docs\":{},\"c\":{\"docs\":{},\"e\":{\"docs\":{},\"p\":{\"docs\":{},\"t\":{\"docs\":{\"document-apis/delete-by-query-api.html\":{\"ref\":\"document-apis/delete-by-query-api.html\",\"tf\":0.018518518518518517}}}}}}}}}}}}}}}},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"s\":{\"docs\":{},\"p\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{},\"s\":{\"docs\":{},\"e\":{\"docs\":{},\"(\":{\"docs\":{},\"b\":{\"docs\":{},\"u\":{\"docs\":{},\"l\":{\"docs\":{},\"k\":{\"docs\":{},\"b\":{\"docs\":{},\"y\":{\"docs\":{},\"s\":{\"docs\":{},\"c\":{\"docs\":{},\"r\":{\"docs\":{},\"o\":{\"docs\":{},\"l\":{\"docs\":{},\"l\":{\"docs\":{},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"s\":{\"docs\":{},\"p\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{},\"s\":{\"docs\":{\"document-apis/delete-by-query-api.html\":{\"ref\":\"document-apis/delete-by-query-api.html\",\"tf\":0.018518518518518517}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"e\":{\"docs\":{},\"\\\"\":{\"docs\":{},\"}\":{\"docs\":{},\";\":{\"docs\":{\"query-dsl/specialized-queries.html\":{\"ref\":\"query-dsl/specialized-queries.html\",\"tf\":0.004761904761904762}}}}}}},\"u\":{\"docs\":{},\"t\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.008264462809917356},\"document-apis/bulk-api.html\":{\"ref\":\"document-apis/bulk-api.html\",\"tf\":0.014492753623188406}}}},\"p\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"a\":{\"docs\":{},\"t\":{\"docs\":{},\"i\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{},\"t\":{\"docs\":{},\"h\":{\"docs\":{},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"a\":{\"docs\":{},\"d\":{\"docs\":{\"document-apis/get-api.html\":{\"ref\":\"document-apis/get-api.html\",\"tf\":0.034482758620689655},\"document-apis/delete-api.html\":{\"ref\":\"document-apis/delete-api.html\",\"tf\":0.02631578947368421}}}}}}}}}}}}}}},\"t\":{\"docs\":{},\"i\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{\"search-api.html\":{\"ref\":\"search-api.html\",\"tf\":0.017241379310344827}}}}}}},\"v\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{\"query-dsl/specialized-queries.html\":{\"ref\":\"query-dsl/specialized-queries.html\",\"tf\":0.004761904761904762}},\"l\":{\"docs\":{},\"a\":{\"docs\":{},\"p\":{\"docs\":{\"query-dsl/span-queries.html\":{\"ref\":\"query-dsl/span-queries.html\",\"tf\":0.005555555555555556}}}}}}}}},\"t\":{\"docs\":{},\"r\":{\"docs\":{},\"a\":{\"docs\":{},\"n\":{\"docs\":{},\"s\":{\"docs\":{},\"p\":{\"docs\":{},\"o\":{\"docs\":{},\"r\":{\"docs\":{},\"t\":{\"docs\":{\"dependency.html\":{\"ref\":\"dependency.html\",\"tf\":0.07692307692307693},\"client/transport-client.html\":{\"ref\":\"client/transport-client.html\",\"tf\":5.022222222222222},\"client/xpack-transport-client.html\":{\"ref\":\"client/xpack-transport-client.html\",\"tf\":3.3497267759562837}},\"c\":{\"docs\":{},\"l\":{\"docs\":{},\"i\":{\"docs\":{\"client/transport-client.html\":{\"ref\":\"client/transport-client.html\",\"tf\":0.03333333333333333},\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.002066115702479339},\"query-dsl/joining-queries.html\":{\"ref\":\"query-dsl/joining-queries.html\",\"tf\":0.014388489208633094},\"query-dsl/specialized-queries.html\":{\"ref\":\"query-dsl/specialized-queries.html\",\"tf\":0.004761904761904762}},\"e\":{\"docs\":{},\"n\":{\"docs\":{},\"t\":{\"docs\":{},\"作\":{\"docs\":{},\"为\":{\"docs\":{},\"一\":{\"docs\":{},\"个\":{\"docs\":{},\"外\":{\"docs\":{},\"部\":{\"docs\":{},\"访\":{\"docs\":{},\"问\":{\"docs\":{},\"者\":{\"docs\":{},\"，\":{\"docs\":{},\"通\":{\"docs\":{},\"过\":{\"docs\":{},\"h\":{\"docs\":{},\"t\":{\"docs\":{},\"t\":{\"docs\":{},\"p\":{\"docs\":{},\"去\":{\"docs\":{},\"请\":{\"docs\":{},\"求\":{\"docs\":{},\"e\":{\"docs\":{},\"s\":{\"docs\":{},\"的\":{\"docs\":{},\"集\":{\"docs\":{},\"群\":{\"docs\":{},\"，\":{\"docs\":{},\"对\":{\"docs\":{},\"于\":{\"docs\":{},\"集\":{\"docs\":{},\"群\":{\"docs\":{},\"而\":{\"docs\":{},\"言\":{\"docs\":{},\"，\":{\"docs\":{},\"它\":{\"docs\":{},\"是\":{\"docs\":{},\"一\":{\"docs\":{},\"个\":{\"docs\":{},\"外\":{\"docs\":{},\"部\":{\"docs\":{},\"因\":{\"docs\":{},\"素\":{\"docs\":{},\"。\":{\"docs\":{\"client/transport-client.html\":{\"ref\":\"client/transport-client.html\",\"tf\":0.011111111111111112}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"u\":{\"docs\":{},\"e\":{\"docs\":{\"client/transport-client.html\":{\"ref\":\"client/transport-client.html\",\"tf\":0.022222222222222223},\"client/xpack-transport-client.html\":{\"ref\":\"client/xpack-transport-client.html\",\"tf\":0.01639344262295082},\"document-apis/get-api.html\":{\"ref\":\"document-apis/get-api.html\",\"tf\":0.034482758620689655},\"document-apis/delete-api.html\":{\"ref\":\"document-apis/delete-api.html\",\"tf\":0.02631578947368421}},\")\":{\"docs\":{\"client/transport-client.html\":{\"ref\":\"client/transport-client.html\",\"tf\":0.011111111111111112}},\".\":{\"docs\":{},\"b\":{\"docs\":{},\"u\":{\"docs\":{},\"i\":{\"docs\":{},\"l\":{\"docs\":{},\"d\":{\"docs\":{},\"(\":{\"docs\":{},\")\":{\"docs\":{},\";\":{\"docs\":{\"client/transport-client.html\":{\"ref\":\"client/transport-client.html\",\"tf\":0.011111111111111112},\"client/xpack-transport-client.html\":{\"ref\":\"client/xpack-transport-client.html\",\"tf\":0.01639344262295082}}}}}}}}}}}},\":\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125}}}}},\"i\":{\"docs\":{\"client/xpack-transport-client.html\":{\"ref\":\"client/xpack-transport-client.html\",\"tf\":0.01639344262295082}}}},\"h\":{\"docs\":{},\"r\":{\"docs\":{},\"o\":{\"docs\":{},\"w\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.010330578512396695}},\"a\":{\"docs\":{},\"b\":{\"docs\":{},\"l\":{\"docs\":{\"document-apis/using-bulk-processor.html\":{\"ref\":\"document-apis/using-bulk-processor.html\",\"tf\":0.012048192771084338}}}}}},\"u\":{\"docs\":{},\"g\":{\"docs\":{},\"h\":{\"docs\":{\"document-apis/bulk-api.html\":{\"ref\":\"document-apis/bulk-api.html\",\"tf\":0.014492753623188406}}}}}},\"e\":{\"docs\":{},\"s\":{\"docs\":{},\"h\":{\"docs\":{},\"o\":{\"docs\":{},\"l\":{\"docs\":{},\"d\":{\"docs\":{\"query-dsl/specialized-queries.html\":{\"ref\":\"query-dsl/specialized-queries.html\",\"tf\":0.004761904761904762}}}}}}}}},\"o\":{\"docs\":{},\"u\":{\"docs\":{},\"g\":{\"docs\":{},\"h\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125}}}}},\"s\":{\"docs\":{},\"e\":{\"docs\":{\"query-dsl/span-queries.html\":{\"ref\":\"query-dsl/span-queries.html\",\"tf\":0.005555555555555556}}}}}},\"i\":{\"docs\":{},\"m\":{\"docs\":{},\"e\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.002066115702479339},\"search-api/using-scrolls-in-java.html\":{\"ref\":\"search-api/using-scrolls-in-java.html\",\"tf\":0.01092896174863388}},\"u\":{\"docs\":{},\"n\":{\"docs\":{},\"i\":{\"docs\":{},\"t\":{\"docs\":{},\".\":{\"docs\":{},\"m\":{\"docs\":{},\"i\":{\"docs\":{},\"n\":{\"docs\":{},\"u\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"s\":{\"docs\":{},\")\":{\"docs\":{},\";\":{\"docs\":{\"document-apis/using-bulk-processor.html\":{\"ref\":\"document-apis/using-bulk-processor.html\",\"tf\":0.006024096385542169}}}}}}}}}}}}}}}},\")\":{\"docs\":{},\"。\":{\"docs\":{},\"后\":{\"docs\":{},\"续\":{\"docs\":{},\"的\":{\"docs\":{},\"对\":{\"docs\":{},\"文\":{\"docs\":{},\"档\":{\"docs\":{},\"的\":{\"docs\":{},\"改\":{\"docs\":{},\"动\":{\"docs\":{},\"（\":{\"docs\":{},\"索\":{\"docs\":{},\"引\":{\"docs\":{},\"、\":{\"docs\":{},\"更\":{\"docs\":{},\"新\":{\"docs\":{},\"或\":{\"docs\":{},\"者\":{\"docs\":{},\"删\":{\"docs\":{},\"除\":{\"docs\":{},\"）\":{\"docs\":{},\"都\":{\"docs\":{},\"只\":{\"docs\":{},\"会\":{\"docs\":{},\"影\":{\"docs\":{},\"响\":{\"docs\":{},\"后\":{\"docs\":{},\"面\":{\"docs\":{},\"的\":{\"docs\":{},\"搜\":{\"docs\":{},\"索\":{\"docs\":{},\"请\":{\"docs\":{},\"求\":{\"docs\":{},\"。\":{\"docs\":{\"search-api/using-scrolls-in-java.html\":{\"ref\":\"search-api/using-scrolls-in-java.html\",\"tf\":0.00546448087431694}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"v\":{\"docs\":{},\"a\":{\"docs\":{},\"l\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"docs\":{},\"(\":{\"6\":{\"0\":{\"0\":{\"0\":{\"0\":{\"docs\":{},\")\":{\"docs\":{},\")\":{\"docs\":{\"search-api/using-scrolls-in-java.html\":{\"ref\":\"search-api/using-scrolls-in-java.html\",\"tf\":0.00546448087431694}},\".\":{\"docs\":{},\"e\":{\"docs\":{},\"x\":{\"docs\":{},\"e\":{\"docs\":{},\"c\":{\"docs\":{},\"u\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"(\":{\"docs\":{},\")\":{\"docs\":{},\".\":{\"docs\":{},\"a\":{\"docs\":{},\"c\":{\"docs\":{},\"t\":{\"docs\":{},\"i\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{},\"g\":{\"docs\":{},\"e\":{\"docs\":{},\"t\":{\"docs\":{},\"(\":{\"docs\":{},\")\":{\"docs\":{},\";\":{\"docs\":{\"search-api/using-scrolls-in-java.html\":{\"ref\":\"search-api/using-scrolls-in-java.html\",\"tf\":0.00546448087431694}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}}}}}}}}}},\"y\":{\"docs\":{},\"p\":{\"docs\":{},\"e\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.002066115702479339},\"search-api.html\":{\"ref\":\"search-api.html\",\"tf\":0.034482758620689655},\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.005390835579514825},\"query-dsl/geo-queries.html\":{\"ref\":\"query-dsl/geo-queries.html\",\"tf\":0.004901960784313725}},\"，\":{\"docs\":{},\"可\":{\"docs\":{},\"以\":{\"docs\":{},\"使\":{\"docs\":{},\"用\":{\"docs\":{\"search-api.html\":{\"ref\":\"search-api.html\",\"tf\":0.017241379310344827}}}}}}},\"q\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"y\":{\"docs\":{},\"(\":{\"docs\":{},\"\\\"\":{\"docs\":{},\"m\":{\"docs\":{},\"y\":{\"docs\":{},\"_\":{\"docs\":{},\"t\":{\"docs\":{},\"y\":{\"docs\":{},\"p\":{\"docs\":{},\"e\":{\"docs\":{},\"\\\"\":{\"docs\":{},\")\":{\"docs\":{},\";\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125}}}}}}}}}}}}}}}}}}}}}},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"m\":{\"docs\":{\"search-api/using-aggregations.html\":{\"ref\":\"search-api/using-aggregations.html\",\"tf\":0.029411764705882353},\"aggregations/structuring-aggregations.html\":{\"ref\":\"aggregations/structuring-aggregations.html\",\"tf\":0.02702702702702703},\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854},\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.005785123966942148},\"query-dsl/full-text-queries.html\":{\"ref\":\"query-dsl/full-text-queries.html\",\"tf\":0.011904761904761904},\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":3.3414195867026053},\"query-dsl/joining-queries.html\":{\"ref\":\"query-dsl/joining-queries.html\",\"tf\":0.007194244604316547},\"query-dsl/specialized-queries.html\":{\"ref\":\"query-dsl/specialized-queries.html\",\"tf\":0.004761904761904762},\"query-dsl/span-queries.html\":{\"ref\":\"query-dsl/span-queries.html\",\"tf\":0.03888888888888889}},\"q\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"y\":{\"docs\":{},\"(\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125}},\"\\\"\":{\"docs\":{},\"m\":{\"docs\":{},\"u\":{\"docs\":{},\"l\":{\"docs\":{},\"t\":{\"docs\":{},\"i\":{\"docs\":{},\"\\\"\":{\"docs\":{},\",\":{\"docs\":{\"search-api/using-scrolls-in-java.html\":{\"ref\":\"search-api/using-scrolls-in-java.html\",\"tf\":0.00546448087431694}}}}}}}}},\"n\":{\"docs\":{},\"a\":{\"docs\":{},\"m\":{\"docs\":{},\"e\":{\"docs\":{},\"\\\"\":{\"docs\":{},\",\":{\"docs\":{},\"\\\"\":{\"docs\":{},\"d\":{\"docs\":{},\"a\":{\"docs\":{},\"d\":{\"docs\":{},\"o\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{},\"e\":{\"docs\":{},\"t\":{\"docs\":{},\"\\\"\":{\"docs\":{},\")\":{\"docs\":{},\")\":{\"docs\":{\"query-dsl/compound-queries.html\":{\"ref\":\"query-dsl/compound-queries.html\",\"tf\":0.005847953216374269}}}}}}}}}}}}},\"k\":{\"docs\":{},\"i\":{\"docs\":{},\"m\":{\"docs\":{},\"c\":{\"docs\":{},\"h\":{\"docs\":{},\"y\":{\"docs\":{},\"\\\"\":{\"docs\":{},\")\":{\"docs\":{\"query-dsl/compound-queries.html\":{\"ref\":\"query-dsl/compound-queries.html\",\"tf\":0.005847953216374269}},\",\":{\"docs\":{\"query-dsl/compound-queries.html\":{\"ref\":\"query-dsl/compound-queries.html\",\"tf\":0.005847953216374269}}}}}}}}}}}}}}}}}},\"t\":{\"docs\":{},\"a\":{\"docs\":{},\"g\":{\"docs\":{},\"\\\"\":{\"docs\":{},\",\":{\"docs\":{\"query-dsl/compound-queries.html\":{\"ref\":\"query-dsl/compound-queries.html\",\"tf\":0.011695906432748537}},\"\\\"\":{\"docs\":{},\"s\":{\"docs\":{},\"o\":{\"docs\":{},\"m\":{\"docs\":{},\"e\":{\"docs\":{},\"t\":{\"docs\":{},\"h\":{\"docs\":{},\"i\":{\"docs\":{},\"n\":{\"docs\":{},\"g\":{\"docs\":{},\"\\\"\":{\"docs\":{},\")\":{\"docs\":{},\",\":{\"docs\":{\"query-dsl/joining-queries.html\":{\"ref\":\"query-dsl/joining-queries.html\",\"tf\":0.014388489208633094}}}}}}}}}}}}}}}}}}}},\"c\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"n\":{\"docs\":{},\"t\":{\"docs\":{},\"\\\"\":{\"docs\":{},\",\":{\"docs\":{\"query-dsl/specialized-queries.html\":{\"ref\":\"query-dsl/specialized-queries.html\",\"tf\":0.004761904761904762}}}}}}}}}}}}}}}}}},\"i\":{\"docs\":{},\"n\":{\"docs\":{\"search-api/terminate-after.html\":{\"ref\":\"search-api/terminate-after.html\",\"tf\":10.0625}}}},\"s\":{\"docs\":{},\"q\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"y\":{\"docs\":{},\"(\":{\"docs\":{},\"\\\"\":{\"docs\":{},\"t\":{\"docs\":{},\"a\":{\"docs\":{},\"g\":{\"docs\":{},\"s\":{\"docs\":{},\"\\\"\":{\"docs\":{},\",\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125}}}}}}}}}}}}}}}}}},\"m\":{\"docs\":{},\"p\":{\"docs\":{},\"l\":{\"docs\":{},\"a\":{\"docs\":{},\"t\":{\"docs\":{\"search-api/search-template.html\":{\"ref\":\"search-api/search-template.html\",\"tf\":5.0220994475138125}},\"e\":{\"docs\":{},\"_\":{\"docs\":{},\"p\":{\"docs\":{},\"a\":{\"docs\":{},\"r\":{\"docs\":{},\"a\":{\"docs\":{},\"m\":{\"docs\":{\"search-api/search-template.html\":{\"ref\":\"search-api/search-template.html\",\"tf\":0.0055248618784530384}},\"s\":{\"docs\":{},\".\":{\"docs\":{},\"p\":{\"docs\":{},\"u\":{\"docs\":{},\"t\":{\"docs\":{},\"(\":{\"docs\":{},\"\\\"\":{\"docs\":{},\"p\":{\"docs\":{},\"a\":{\"docs\":{},\"r\":{\"docs\":{},\"a\":{\"docs\":{},\"m\":{\"docs\":{},\"_\":{\"docs\":{},\"g\":{\"docs\":{},\"e\":{\"docs\":{},\"n\":{\"docs\":{},\"d\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"\\\"\":{\"docs\":{},\",\":{\"docs\":{\"search-api/search-template.html\":{\"ref\":\"search-api/search-template.html\",\"tf\":0.0055248618784530384}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"s\":{\"docs\":{},\":\":{\"docs\":{\"search-api/search-template.html\":{\"ref\":\"search-api/search-template.html\",\"tf\":0.0055248618784530384}}},\"。\":{\"docs\":{\"search-api/search-template.html\":{\"ref\":\"search-api/search-template.html\",\"tf\":0.0055248618784530384}}},\"：\":{\"docs\":{\"search-api/search-template.html\":{\"ref\":\"search-api/search-template.html\",\"tf\":0.0055248618784530384}}}}}}}}}},\"x\":{\"docs\":{},\"t\":{\"docs\":{\"query-dsl/full-text-queries.html\":{\"ref\":\"query-dsl/full-text-queries.html\",\"tf\":3.3571428571428568},\"query-dsl/specialized-queries.html\":{\"ref\":\"query-dsl/specialized-queries.html\",\"tf\":0.004761904761904762}},\"s\":{\"docs\":{},\",\":{\"docs\":{\"query-dsl/specialized-queries.html\":{\"ref\":\"query-dsl/specialized-queries.html\",\"tf\":0.004761904761904762}}}}}}},\"o\":{\"docs\":{},\"p\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854},\"query-dsl/geo-queries.html\":{\"ref\":\"query-dsl/geo-queries.html\",\"tf\":0.004901960784313725}},\"_\":{\"docs\":{},\"h\":{\"docs\":{},\"i\":{\"docs\":{},\"t\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}}}}}},\"h\":{\"docs\":{},\"i\":{\"docs\":{},\"t\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00291970802919708}},\"s\":{\"docs\":{},\".\":{\"docs\":{},\"g\":{\"docs\":{},\"e\":{\"docs\":{},\"t\":{\"docs\":{},\"h\":{\"docs\":{},\"i\":{\"docs\":{},\"t\":{\"docs\":{},\"s\":{\"docs\":{},\"(\":{\"docs\":{},\")\":{\"docs\":{},\".\":{\"docs\":{},\"g\":{\"docs\":{},\"e\":{\"docs\":{},\"t\":{\"docs\":{},\"h\":{\"docs\":{},\"i\":{\"docs\":{},\"t\":{\"docs\":{},\"s\":{\"docs\":{},\"(\":{\"docs\":{},\")\":{\"docs\":{},\")\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}}}}}}}}}}}}}}}}}}}}}}}}}}},\"l\":{\"docs\":{},\"e\":{\"docs\":{},\"f\":{\"docs\":{},\"t\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.004379562043795621}},\")\":{\"docs\":{},\";\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}}}}}}}}},\",\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.001652892561983471}}},\"a\":{\"docs\":{},\"s\":{\"docs\":{},\"d\":{\"docs\":{},\"a\":{\"docs\":{},\"t\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}},\"e\":{\"docs\":{},\",\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}}}},\"s\":{\"docs\":{},\"t\":{\"docs\":{},\"r\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}},\"i\":{\"docs\":{},\"n\":{\"docs\":{},\"g\":{\"docs\":{},\",\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}}}}}}}},\"(\":{\"docs\":{},\")\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.013477088948787063}}}},\"k\":{\"docs\":{},\"e\":{\"docs\":{},\"n\":{\"docs\":{},\"s\":{\"docs\":{},\",\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125}}}}}}}}},\"在\":{\"5\":{\"docs\":{},\".\":{\"0\":{\"docs\":{},\".\":{\"0\":{\"docs\":{},\"中\":{\"docs\":{},\"已\":{\"docs\":{},\"弃\":{\"docs\":{},\"用\":{\"docs\":{},\"。\":{\"docs\":{},\"用\":{\"docs\":{},\"搜\":{\"docs\":{},\"索\":{\"docs\":{\"query-dsl/compound-queries.html\":{\"ref\":\"query-dsl/compound-queries.html\",\"tf\":0.005847953216374269}}}}}}}}}}},\"docs\":{}}},\"docs\":{}}},\"docs\":{\"query-dsl/compound-queries.html\":{\"ref\":\"query-dsl/compound-queries.html\",\"tf\":0.005847953216374269}},\"p\":{\"docs\":{},\"o\":{\"docs\":{},\"m\":{\"docs\":{},\".\":{\"docs\":{},\"x\":{\"docs\":{},\"m\":{\"docs\":{},\"l\":{\"docs\":{},\"文\":{\"docs\":{},\"件\":{\"docs\":{},\"中\":{\"docs\":{},\"增\":{\"docs\":{},\"加\":{\"docs\":{},\"：\":{\"docs\":{\"dependency.html\":{\"ref\":\"dependency.html\",\"tf\":0.07692307692307693}}}}}}}}}}}}}}},\"测\":{\"docs\":{},\"试\":{\"docs\":{},\"用\":{\"docs\":{},\"使\":{\"docs\":{},\"用\":{\"docs\":{},\"b\":{\"docs\":{},\"u\":{\"docs\":{},\"l\":{\"docs\":{},\"k\":{\"docs\":{\"document-apis/using-bulk-processor.html\":{\"ref\":\"document-apis/using-bulk-processor.html\",\"tf\":0.006024096385542169}}}}}}}}}}},\"g\":{\"docs\":{},\"e\":{\"docs\":{},\"o\":{\"docs\":{},\"_\":{\"docs\":{},\"p\":{\"docs\":{},\"o\":{\"docs\":{},\"i\":{\"docs\":{},\"n\":{\"docs\":{},\"t\":{\"docs\":{},\"字\":{\"docs\":{},\"段\":{\"docs\":{},\"上\":{\"docs\":{},\"工\":{\"docs\":{},\"作\":{\"docs\":{},\"的\":{\"docs\":{},\"多\":{\"docs\":{},\"b\":{\"docs\":{},\"u\":{\"docs\":{},\"c\":{\"docs\":{},\"k\":{\"docs\":{},\"e\":{\"docs\":{},\"t\":{\"docs\":{},\"聚\":{\"docs\":{},\"合\":{\"docs\":{},\"和\":{\"docs\":{},\"概\":{\"docs\":{},\"念\":{\"docs\":{},\"上\":{\"docs\":{},\"的\":{\"docs\":{},\"工\":{\"docs\":{},\"作\":{\"docs\":{},\"非\":{\"docs\":{},\"常\":{\"docs\":{},\"类\":{\"docs\":{},\"似\":{\"docs\":{},\"于\":{\"docs\":{},\"r\":{\"docs\":{},\"a\":{\"docs\":{},\"n\":{\"docs\":{},\"g\":{\"docs\":{},\"e\":{\"docs\":{},\"(\":{\"docs\":{},\"范\":{\"docs\":{},\"围\":{\"docs\":{},\")\":{\"docs\":{},\"聚\":{\"docs\":{},\"合\":{\"docs\":{},\".\":{\"docs\":{},\"用\":{\"docs\":{},\"户\":{\"docs\":{},\"可\":{\"docs\":{},\"以\":{\"docs\":{},\"定\":{\"docs\":{},\"义\":{\"docs\":{},\"原\":{\"docs\":{},\"点\":{\"docs\":{},\"的\":{\"docs\":{},\"点\":{\"docs\":{},\"和\":{\"docs\":{},\"距\":{\"docs\":{},\"离\":{\"docs\":{},\"范\":{\"docs\":{},\"围\":{\"docs\":{},\"的\":{\"docs\":{},\"集\":{\"docs\":{},\"合\":{\"docs\":{},\"。\":{\"docs\":{},\"聚\":{\"docs\":{},\"合\":{\"docs\":{},\"计\":{\"docs\":{},\"算\":{\"docs\":{},\"每\":{\"docs\":{},\"个\":{\"docs\":{},\"文\":{\"docs\":{},\"档\":{\"docs\":{},\"值\":{\"docs\":{},\"与\":{\"docs\":{},\"原\":{\"docs\":{},\"点\":{\"docs\":{},\"的\":{\"docs\":{},\"距\":{\"docs\":{},\"离\":{\"docs\":{},\"，\":{\"docs\":{},\"并\":{\"docs\":{},\"根\":{\"docs\":{},\"据\":{\"docs\":{},\"范\":{\"docs\":{},\"围\":{\"docs\":{},\"确\":{\"docs\":{},\"定\":{\"docs\":{},\"其\":{\"docs\":{},\"所\":{\"docs\":{},\"属\":{\"docs\":{},\"的\":{\"docs\":{},\"b\":{\"docs\":{},\"u\":{\"docs\":{},\"c\":{\"docs\":{},\"k\":{\"docs\":{},\"e\":{\"docs\":{},\"t\":{\"docs\":{},\"(\":{\"docs\":{},\"桶\":{\"docs\":{},\")\":{\"docs\":{},\"（\":{\"docs\":{},\"如\":{\"docs\":{},\"果\":{\"docs\":{},\"文\":{\"docs\":{},\"档\":{\"docs\":{},\"和\":{\"docs\":{},\"原\":{\"docs\":{},\"点\":{\"docs\":{},\"之\":{\"docs\":{},\"间\":{\"docs\":{},\"的\":{\"docs\":{},\"距\":{\"docs\":{},\"离\":{\"docs\":{},\"落\":{\"docs\":{},\"在\":{\"docs\":{},\"b\":{\"docs\":{},\"u\":{\"docs\":{},\"c\":{\"docs\":{},\"k\":{\"docs\":{},\"e\":{\"docs\":{},\"t\":{\"docs\":{},\"(\":{\"docs\":{},\"桶\":{\"docs\":{},\")\":{\"docs\":{},\"的\":{\"docs\":{},\"距\":{\"docs\":{},\"离\":{\"docs\":{},\"范\":{\"docs\":{},\"围\":{\"docs\":{},\"内\":{\"docs\":{},\"，\":{\"docs\":{},\"则\":{\"docs\":{},\"文\":{\"docs\":{},\"档\":{\"docs\":{},\"属\":{\"docs\":{},\"于\":{\"docs\":{},\"b\":{\"docs\":{},\"u\":{\"docs\":{},\"c\":{\"docs\":{},\"k\":{\"docs\":{},\"e\":{\"docs\":{},\"t\":{\"docs\":{},\"(\":{\"docs\":{},\"桶\":{\"docs\":{},\")\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"和\":{\"docs\":{},\"组\":{\"docs\":{},\"上\":{\"docs\":{},\"工\":{\"docs\":{},\"作\":{\"docs\":{},\"的\":{\"docs\":{},\"多\":{\"docs\":{},\"b\":{\"docs\":{},\"u\":{\"docs\":{},\"c\":{\"docs\":{},\"k\":{\"docs\":{},\"e\":{\"docs\":{},\"t\":{\"docs\":{},\"聚\":{\"docs\":{},\"合\":{\"docs\":{},\"将\":{\"docs\":{},\"指\":{\"docs\":{},\"向\":{\"docs\":{},\"网\":{\"docs\":{},\"格\":{\"docs\":{},\"中\":{\"docs\":{},\"表\":{\"docs\":{},\"示\":{\"docs\":{},\"单\":{\"docs\":{},\"元\":{\"docs\":{},\"格\":{\"docs\":{},\"的\":{\"docs\":{},\"b\":{\"docs\":{},\"u\":{\"docs\":{},\"c\":{\"docs\":{},\"k\":{\"docs\":{},\"e\":{\"docs\":{},\"t\":{\"docs\":{},\"。\":{\"docs\":{},\"生\":{\"docs\":{},\"成\":{\"docs\":{},\"的\":{\"docs\":{},\"网\":{\"docs\":{},\"格\":{\"docs\":{},\"可\":{\"docs\":{},\"以\":{\"docs\":{},\"是\":{\"docs\":{},\"稀\":{\"docs\":{},\"疏\":{\"docs\":{},\"的\":{\"docs\":{},\"，\":{\"docs\":{},\"并\":{\"docs\":{},\"且\":{\"docs\":{},\"只\":{\"docs\":{},\"包\":{\"docs\":{},\"含\":{\"docs\":{},\"具\":{\"docs\":{},\"有\":{\"docs\":{},\"匹\":{\"docs\":{},\"配\":{\"docs\":{},\"数\":{\"docs\":{},\"据\":{\"docs\":{},\"的\":{\"docs\":{},\"单\":{\"docs\":{},\"元\":{\"docs\":{},\"格\":{\"docs\":{},\"。\":{\"docs\":{},\"每\":{\"docs\":{},\"个\":{\"docs\":{},\"单\":{\"docs\":{},\"元\":{\"docs\":{},\"格\":{\"docs\":{},\"使\":{\"docs\":{},\"用\":{\"docs\":{},\"具\":{\"docs\":{},\"有\":{\"docs\":{},\"用\":{\"docs\":{},\"户\":{\"docs\":{},\"可\":{\"docs\":{},\"定\":{\"docs\":{},\"义\":{\"docs\":{},\"精\":{\"docs\":{},\"度\":{\"docs\":{},\"的\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"像\":{\"docs\":{\"query-dsl/joining-queries.html\":{\"ref\":\"query-dsl/joining-queries.html\",\"tf\":0.007194244604316547}}},\"这\":{\"docs\":{},\"组\":{\"docs\":{},\"的\":{\"docs\":{},\"查\":{\"docs\":{},\"询\":{\"docs\":{},\"中\":{\"docs\":{},\"：\":{\"docs\":{\"query-dsl/geo-queries.html\":{\"ref\":\"query-dsl/geo-queries.html\",\"tf\":0.004901960784313725}}}}}}}}},\"上\":{\"docs\":{},\"面\":{\"docs\":{},\"的\":{\"docs\":{},\"i\":{\"docs\":{},\"n\":{\"docs\":{},\"d\":{\"docs\":{},\"e\":{\"docs\":{},\"x\":{\"docs\":{},\"中\":{\"docs\":{},\"q\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"y\":{\"docs\":{},\"名\":{\"docs\":{},\"为\":{\"docs\":{\"query-dsl/specialized-queries.html\":{\"ref\":\"query-dsl/specialized-queries.html\",\"tf\":0.004761904761904762}}}}}}}}}}}}}}}}}},\"可\":{\"docs\":{},\"以\":{\"docs\":{},\"使\":{\"docs\":{},\"用\":{\"docs\":{},\"p\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"c\":{\"docs\":{},\"o\":{\"docs\":{},\"l\":{\"docs\":{},\"a\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"查\":{\"docs\":{},\"询\":{\"docs\":{},\"之\":{\"docs\":{},\"前\":{\"docs\":{},\"，\":{\"docs\":{},\"应\":{\"docs\":{},\"该\":{\"docs\":{},\"添\":{\"docs\":{},\"加\":{\"docs\":{},\"p\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"c\":{\"docs\":{},\"o\":{\"docs\":{},\"l\":{\"docs\":{},\"a\":{\"docs\":{},\"t\":{\"docs\":{},\"o\":{\"docs\":{},\"r\":{\"docs\":{},\"映\":{\"docs\":{},\"射\":{\"docs\":{},\"，\":{\"docs\":{},\"并\":{\"docs\":{},\"且\":{\"docs\":{},\"应\":{\"docs\":{},\"该\":{\"docs\":{},\"对\":{\"docs\":{},\"包\":{\"docs\":{},\"含\":{\"docs\":{},\"p\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"c\":{\"docs\":{},\"o\":{\"docs\":{},\"l\":{\"docs\":{},\"a\":{\"docs\":{},\"t\":{\"docs\":{},\"o\":{\"docs\":{},\"r\":{\"docs\":{},\"查\":{\"docs\":{},\"询\":{\"docs\":{},\"的\":{\"docs\":{},\"文\":{\"docs\":{},\"档\":{\"docs\":{},\"建\":{\"docs\":{},\"立\":{\"docs\":{},\"索\":{\"docs\":{},\"引\":{\"docs\":{},\"：\":{\"docs\":{\"query-dsl/specialized-queries.html\":{\"ref\":\"query-dsl/specialized-queries.html\",\"tf\":0.004761904761904762}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"安\":{\"docs\":{},\"装\":{\"docs\":{\"dependency.html\":{\"ref\":\"dependency.html\",\"tf\":0.07692307692307693}}}},\"版\":{\"docs\":{},\"本\":{\"docs\":{},\"号\":{\"docs\":{},\"选\":{\"docs\":{},\"择\":{\"docs\":{},\"自\":{\"docs\":{},\"己\":{\"docs\":{},\"合\":{\"docs\":{},\"适\":{\"docs\":{},\"的\":{\"docs\":{},\"。\":{\"docs\":{\"dependency.html\":{\"ref\":\"dependency.html\",\"tf\":0.07692307692307693}}}}}}}}}}}}},\"\\\"\":{\"1\":{\"0\":{\"0\":{\"docs\":{},\"\\\"\":{\"docs\":{},\")\":{\"docs\":{},\";\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.005390835579514825}}}}}},\"docs\":{}},\"9\":{\"2\":{\"docs\":{},\".\":{\"1\":{\"6\":{\"8\":{\"docs\":{},\".\":{\"2\":{\"docs\":{},\".\":{\"0\":{\"docs\":{},\"\\\"\":{\"docs\":{},\")\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}},\"docs\":{}}},\"docs\":{}}},\"docs\":{}},\"docs\":{}},\"docs\":{}}},\"6\":{\"0\":{\"docs\":{},\"\\\"\":{\"docs\":{},\")\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}},\"docs\":{}},\"docs\":{}},\"docs\":{},\"\\\"\":{\"docs\":{},\")\":{\"docs\":{\"document-apis/get-api.html\":{\"ref\":\"document-apis/get-api.html\",\"tf\":0.034482758620689655},\"document-apis/delete-api.html\":{\"ref\":\"document-apis/delete-api.html\",\"tf\":0.05263157894736842},\"document-apis/update-api.html\":{\"ref\":\"document-apis/update-api.html\",\"tf\":0.044444444444444446},\"document-apis/multi-get-api.html\":{\"ref\":\"document-apis/multi-get-api.html\",\"tf\":0.021739130434782608},\"document-apis/bulk-api.html\":{\"ref\":\"document-apis/bulk-api.html\",\"tf\":0.014492753623188406}},\".\":{\"docs\":{},\"g\":{\"docs\":{},\"e\":{\"docs\":{},\"t\":{\"docs\":{},\"(\":{\"docs\":{},\")\":{\"docs\":{},\";\":{\"docs\":{\"document-apis/get-api.html\":{\"ref\":\"document-apis/get-api.html\",\"tf\":0.034482758620689655},\"document-apis/delete-api.html\":{\"ref\":\"document-apis/delete-api.html\",\"tf\":0.02631578947368421}}}}}}}},\"s\":{\"docs\":{},\"o\":{\"docs\":{},\"u\":{\"docs\":{},\"r\":{\"docs\":{},\"c\":{\"docs\":{},\"e\":{\"docs\":{},\"(\":{\"docs\":{},\"/\":{\"docs\":{},\"*\":{\"docs\":{\"document-apis/using-bulk-processor.html\":{\"ref\":\"document-apis/using-bulk-processor.html\",\"tf\":0.006024096385542169}}}}}}}}}}}}}}},\"2\":{\"docs\":{},\"\\\"\":{\"docs\":{},\",\":{\"docs\":{\"document-apis/multi-get-api.html\":{\"ref\":\"document-apis/multi-get-api.html\",\"tf\":0.021739130434782608}}},\")\":{\"docs\":{\"document-apis/bulk-api.html\":{\"ref\":\"document-apis/bulk-api.html\",\"tf\":0.014492753623188406}},\")\":{\"docs\":{},\";\":{\"docs\":{\"document-apis/using-bulk-processor.html\":{\"ref\":\"document-apis/using-bulk-processor.html\",\"tf\":0.006024096385542169}}}}}}},\"3\":{\"docs\":{},\"\\\"\":{\"docs\":{},\",\":{\"docs\":{\"document-apis/multi-get-api.html\":{\"ref\":\"document-apis/multi-get-api.html\",\"tf\":0.021739130434782608}}}}},\"4\":{\"docs\":{},\"\\\"\":{\"docs\":{},\")\":{\"docs\":{\"document-apis/multi-get-api.html\":{\"ref\":\"document-apis/multi-get-api.html\",\"tf\":0.021739130434782608}}},\",\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.005390835579514825}}}}},\"docs\":{\"search-api/search-template.html\":{\"ref\":\"search-api/search-template.html\",\"tf\":0.055248618784530384},\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.005390835579514825}},\"m\":{\"docs\":{},\"y\":{\"docs\":{},\"c\":{\"docs\":{},\"l\":{\"docs\":{},\"u\":{\"docs\":{},\"s\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"n\":{\"docs\":{},\"a\":{\"docs\":{},\"m\":{\"docs\":{},\"e\":{\"docs\":{},\"\\\"\":{\"docs\":{},\")\":{\"docs\":{},\".\":{\"docs\":{},\"b\":{\"docs\":{},\"u\":{\"docs\":{},\"i\":{\"docs\":{},\"l\":{\"docs\":{},\"d\":{\"docs\":{},\"(\":{\"docs\":{},\")\":{\"docs\":{},\";\":{\"docs\":{\"client/transport-client.html\":{\"ref\":\"client/transport-client.html\",\"tf\":0.011111111111111112}}}}}}}}}}}}}}}}}}}}}}}},\"d\":{\"docs\":{},\"e\":{\"docs\":{},\"s\":{\"docs\":{},\"i\":{\"docs\":{},\"g\":{\"docs\":{},\"n\":{\"docs\":{},\"a\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"d\":{\"docs\":{},\"q\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"y\":{\"docs\":{},\"n\":{\"docs\":{},\"a\":{\"docs\":{},\"m\":{\"docs\":{},\"e\":{\"docs\":{},\"\\\"\":{\"docs\":{},\")\":{\"docs\":{\"query-dsl/specialized-queries.html\":{\"ref\":\"query-dsl/specialized-queries.html\",\"tf\":0.004761904761904762}}}}}}}}}}}}}}}}}}}}}}},\"s\":{\"docs\":{},\"c\":{\"docs\":{},\"r\":{\"docs\":{},\"i\":{\"docs\":{},\"p\":{\"docs\":{},\"t\":{\"docs\":{},\"\\\"\":{\"docs\":{},\",\":{\"docs\":{\"query-dsl/specialized-queries.html\":{\"ref\":\"query-dsl/specialized-queries.html\",\"tf\":0.004761904761904762}}}}}}}}}}},\"i\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.002066115702479339}}},\"a\":{\"docs\":{},\"l\":{\"docs\":{},\"e\":{\"docs\":{},\"\\\"\":{\"docs\":{\"document-apis/update-api.html\":{\"ref\":\"document-apis/update-api.html\",\"tf\":0.014814814814814815}},\")\":{\"docs\":{\"document-apis/update-api.html\":{\"ref\":\"document-apis/update-api.html\",\"tf\":0.037037037037037035}},\")\":{\"docs\":{\"document-apis/delete-by-query-api.html\":{\"ref\":\"document-apis/delete-by-query-api.html\",\"tf\":0.037037037037037035},\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}},\",\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}},\";\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}},\";\":{\"docs\":{\"search-api/search-template.html\":{\"ref\":\"search-api/search-template.html\",\"tf\":0.0055248618784530384}}}}}}},\"t\":{\"docs\":{},\"c\":{\"docs\":{},\"h\":{\"docs\":{},\"\\\"\":{\"docs\":{\"search-api/search-template.html\":{\"ref\":\"search-api/search-template.html\",\"tf\":0.0055248618784530384}}}}}}},\"e\":{\"docs\":{},\"s\":{\"docs\":{},\"s\":{\"docs\":{},\"a\":{\"docs\":{},\"g\":{\"docs\":{},\"e\":{\"docs\":{},\"\\\"\":{\"docs\":{\"query-dsl/full-text-queries.html\":{\"ref\":\"query-dsl/full-text-queries.html\",\"tf\":0.011904761904761904}}}}}}}}}},\"x\":{\"docs\":{},\"x\":{\"docs\":{},\"x\":{\"docs\":{},\"\\\"\":{\"docs\":{},\")\":{\"docs\":{\"client/xpack-transport-client.html\":{\"ref\":\"client/xpack-transport-client.html\",\"tf\":0.01639344262295082}}}},\":\":{\"docs\":{},\"x\":{\"docs\":{},\"x\":{\"docs\":{},\"x\":{\"docs\":{},\"\\\"\":{\"docs\":{},\")\":{\"docs\":{\"client/xpack-transport-client.html\":{\"ref\":\"client/xpack-transport-client.html\",\"tf\":0.01639344262295082}}}}}}}}}}},\"\\\\\":{\"docs\":{},\"\\\"\":{\"docs\":{},\"m\":{\"docs\":{},\"e\":{\"docs\":{},\"s\":{\"docs\":{},\"s\":{\"docs\":{},\"a\":{\"docs\":{},\"g\":{\"docs\":{},\"e\":{\"docs\":{},\"\\\\\":{\"docs\":{},\"\\\"\":{\"docs\":{},\":\":{\"docs\":{},\"\\\\\":{\"docs\":{},\"\\\"\":{\"docs\":{},\"h\":{\"docs\":{},\"e\":{\"docs\":{},\"l\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.004132231404958678}}}}},\"t\":{\"docs\":{},\"r\":{\"docs\":{},\"i\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.002066115702479339}}}}}}}}}}}}}}}}},\"p\":{\"docs\":{},\"o\":{\"docs\":{},\"s\":{\"docs\":{},\"t\":{\"docs\":{},\"d\":{\"docs\":{},\"a\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"\\\\\":{\"docs\":{},\"\\\"\":{\"docs\":{},\":\":{\"docs\":{},\"\\\\\":{\"docs\":{},\"\\\"\":{\"2\":{\"0\":{\"1\":{\"3\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.006198347107438017}}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}}}}}}}}}}}}}},\"u\":{\"docs\":{},\"s\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"\\\\\":{\"docs\":{},\"\\\"\":{\"docs\":{},\":\":{\"docs\":{},\"\\\\\":{\"docs\":{},\"\\\"\":{\"docs\":{},\"f\":{\"docs\":{},\"e\":{\"docs\":{},\"n\":{\"docs\":{},\"d\":{\"docs\":{},\"o\":{\"docs\":{},\"\\\\\":{\"docs\":{},\"\\\"\":{\"docs\":{},\",\":{\"docs\":{},\"\\\"\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.004132231404958678}}}}}}}}}}},\"k\":{\"docs\":{},\"i\":{\"docs\":{},\"m\":{\"docs\":{},\"c\":{\"docs\":{},\"h\":{\"docs\":{},\"y\":{\"docs\":{},\"\\\\\":{\"docs\":{},\"\\\"\":{\"docs\":{},\",\":{\"docs\":{},\"\\\"\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.002066115702479339}}}}}}}}}}}}}}}}}}}}}}},\"c\":{\"docs\":{},\"c\":{\"docs\":{},\"s\":{\"docs\":{},\"e\":{\"docs\":{},\"\\\"\":{\"docs\":{},\")\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.004132231404958678}}}}}}},\"o\":{\"docs\":{},\"u\":{\"docs\":{},\"n\":{\"docs\":{},\"t\":{\"docs\":{},\"r\":{\"docs\":{},\"i\":{\"docs\":{},\"e\":{\"docs\":{},\"s\":{\"docs\":{},\"\\\"\":{\"docs\":{},\")\":{\"docs\":{\"query-dsl/geo-queries.html\":{\"ref\":\"query-dsl/geo-queries.html\",\"tf\":0.004901960784313725}}}}}}}}}}},\"n\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"n\":{\"docs\":{},\"t\":{\"docs\":{},\"\\\"\":{\"docs\":{},\",\":{\"docs\":{\"query-dsl/specialized-queries.html\":{\"ref\":\"query-dsl/specialized-queries.html\",\"tf\":0.004761904761904762}}}}}}}}}}},\"f\":{\"docs\":{},\"e\":{\"docs\":{},\"n\":{\"docs\":{},\"d\":{\"docs\":{},\"o\":{\"docs\":{},\"d\":{\"docs\":{},\"a\":{\"docs\":{},\"t\":{\"docs\":{},\"a\":{\"docs\":{},\"\\\"\":{\"docs\":{},\")\":{\"docs\":{},\".\":{\"docs\":{},\"s\":{\"docs\":{},\"e\":{\"docs\":{},\"t\":{\"docs\":{},\"s\":{\"docs\":{},\"o\":{\"docs\":{},\"u\":{\"docs\":{},\"r\":{\"docs\":{},\"c\":{\"docs\":{},\"e\":{\"docs\":{},\"(\":{\"docs\":{},\"b\":{\"docs\":{},\"u\":{\"docs\":{},\"i\":{\"docs\":{},\"l\":{\"docs\":{},\"d\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\")\":{\"docs\":{},\".\":{\"docs\":{},\"g\":{\"docs\":{},\"e\":{\"docs\":{},\"t\":{\"docs\":{},\"(\":{\"docs\":{},\")\":{\"docs\":{},\";\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.004132231404958678}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"e\":{\"docs\":{},\"\\\"\":{\"docs\":{},\")\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.012396694214876033}}}}}}}}}}},\"m\":{\"docs\":{},\"a\":{\"docs\":{},\"l\":{\"docs\":{},\"e\":{\"docs\":{},\"\\\"\":{\"docs\":{},\")\":{\"docs\":{},\")\":{\"docs\":{},\")\":{\"docs\":{},\";\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}}}}}}}}},\"o\":{\"docs\":{},\"o\":{\"docs\":{},\"\\\"\":{\"docs\":{},\")\":{\"docs\":{\"document-apis/multi-get-api.html\":{\"ref\":\"document-apis/multi-get-api.html\",\"tf\":0.021739130434782608}},\")\":{\"docs\":{},\";\":{\"docs\":{\"query-dsl/span-queries.html\":{\"ref\":\"query-dsl/span-queries.html\",\"tf\":0.005555555555555556}}}}}}}}},\"t\":{\"docs\":{},\"h\":{\"docs\":{},\"i\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.004132231404958678},\"query-dsl/specialized-queries.html\":{\"ref\":\"query-dsl/specialized-queries.html\",\"tf\":0.004761904761904762}}}},\"w\":{\"docs\":{},\"e\":{\"docs\":{},\"e\":{\"docs\":{},\"t\":{\"docs\":{},\"\\\"\":{\"docs\":{},\",\":{\"docs\":{\"document-apis/get-api.html\":{\"ref\":\"document-apis/get-api.html\",\"tf\":0.06896551724137931},\"document-apis/delete-api.html\":{\"ref\":\"document-apis/delete-api.html\",\"tf\":0.07894736842105263},\"document-apis/multi-get-api.html\":{\"ref\":\"document-apis/multi-get-api.html\",\"tf\":0.043478260869565216},\"document-apis/bulk-api.html\":{\"ref\":\"document-apis/bulk-api.html\",\"tf\":0.028985507246376812},\"document-apis/using-bulk-processor.html\":{\"ref\":\"document-apis/using-bulk-processor.html\",\"tf\":0.012048192771084338}}}}}}}},\"y\":{\"docs\":{},\"p\":{\"docs\":{},\"e\":{\"2\":{\"docs\":{},\"\\\"\":{\"docs\":{},\")\":{\"docs\":{\"search-api.html\":{\"ref\":\"search-api.html\",\"tf\":0.017241379310344827},\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125}}}}},\"docs\":{},\"\\\"\":{\"docs\":{},\",\":{\"docs\":{\"document-apis/update-api.html\":{\"ref\":\"document-apis/update-api.html\",\"tf\":0.022222222222222223},\"document-apis/multi-get-api.html\":{\"ref\":\"document-apis/multi-get-api.html\",\"tf\":0.021739130434782608}}}},\"=\":{\"docs\":{},\"p\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"c\":{\"docs\":{},\"o\":{\"docs\":{},\"l\":{\"docs\":{},\"a\":{\"docs\":{},\"t\":{\"docs\":{},\"o\":{\"docs\":{},\"r\":{\"docs\":{},\"\\\"\":{\"docs\":{},\")\":{\"docs\":{\"query-dsl/specialized-queries.html\":{\"ref\":\"query-dsl/specialized-queries.html\",\"tf\":0.004761904761904762}}}}}}}}}}}}}},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"x\":{\"docs\":{},\"t\":{\"docs\":{},\"\\\"\":{\"docs\":{},\")\":{\"docs\":{\"query-dsl/specialized-queries.html\":{\"ref\":\"query-dsl/specialized-queries.html\",\"tf\":0.004761904761904762}}}}}}}}}}}},\"r\":{\"docs\":{},\"i\":{\"docs\":{\"document-apis/bulk-api.html\":{\"ref\":\"document-apis/bulk-api.html\",\"tf\":0.014492753623188406}}}},\"e\":{\"docs\":{},\"s\":{\"docs\":{},\"t\":{\"1\":{\"docs\":{},\"\\\"\":{\"docs\":{},\")\":{\"docs\":{},\")\":{\"docs\":{\"query-dsl/compound-queries.html\":{\"ref\":\"query-dsl/compound-queries.html\",\"tf\":0.005847953216374269}}}}}},\"2\":{\"docs\":{},\"\\\"\":{\"docs\":{},\")\":{\"docs\":{},\")\":{\"docs\":{\"query-dsl/compound-queries.html\":{\"ref\":\"query-dsl/compound-queries.html\",\"tf\":0.005847953216374269}}}}}},\"3\":{\"docs\":{},\"\\\"\":{\"docs\":{},\")\":{\"docs\":{},\")\":{\"docs\":{\"query-dsl/compound-queries.html\":{\"ref\":\"query-dsl/compound-queries.html\",\"tf\":0.005847953216374269}}}}}},\"4\":{\"docs\":{},\"\\\"\":{\"docs\":{},\")\":{\"docs\":{},\")\":{\"docs\":{\"query-dsl/compound-queries.html\":{\"ref\":\"query-dsl/compound-queries.html\",\"tf\":0.005847953216374269}}}}}},\"5\":{\"docs\":{},\"/\":{\"docs\":{},\"/\":{\"docs\":{\"query-dsl/compound-queries.html\":{\"ref\":\"query-dsl/compound-queries.html\",\"tf\":0.005847953216374269}}}}},\"docs\":{},\"\\\"\":{\"docs\":{},\")\":{\"docs\":{},\")\":{\"docs\":{\"search-api.html\":{\"ref\":\"search-api.html\",\"tf\":0.017241379310344827}}},\";\":{\"docs\":{\"search-api/using-scrolls-in-java.html\":{\"ref\":\"search-api/using-scrolls-in-java.html\",\"tf\":0.00546448087431694}}}}}}}}},\"{\":{\"docs\":{},\"\\\"\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.006198347107438017}}},\"\\\\\":{\"docs\":{},\"n\":{\"docs\":{},\"\\\"\":{\"docs\":{\"search-api/search-template.html\":{\"ref\":\"search-api/search-template.html\",\"tf\":0.0055248618784530384}}}}}},\"}\":{\"docs\":{},\"\\\"\":{\"docs\":{},\";\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.006198347107438017}}},\")\":{\"docs\":{\"search-api/search-template.html\":{\"ref\":\"search-api/search-template.html\",\"tf\":0.0055248618784530384}},\")\":{\"docs\":{},\".\":{\"docs\":{},\"g\":{\"docs\":{},\"e\":{\"docs\":{},\"t\":{\"docs\":{},\"(\":{\"docs\":{},\")\":{\"docs\":{},\";\":{\"docs\":{\"search-api/search-template.html\":{\"ref\":\"search-api/search-template.html\",\"tf\":0.0055248618784530384}}}}}}}}}}}}},\"d\":{\"docs\":{},\"o\":{\"docs\":{},\"c\":{\"docs\":{},\"\\\"\":{\"docs\":{},\",\":{\"docs\":{\"document-apis/update-api.html\":{\"ref\":\"document-apis/update-api.html\",\"tf\":0.022222222222222223}}}},\"s\":{\"docs\":{},\"\\\"\":{\"docs\":{},\",\":{\"docs\":{\"query-dsl/specialized-queries.html\":{\"ref\":\"query-dsl/specialized-queries.html\",\"tf\":0.004761904761904762}}}}}}},\"e\":{\"docs\":{},\"u\":{\"docs\":{},\"\\\"\":{\"docs\":{},\",\":{\"docs\":{\"query-dsl/geo-queries.html\":{\"ref\":\"query-dsl/geo-queries.html\",\"tf\":0.004901960784313725}}}}}}},\"g\":{\"docs\":{},\"e\":{\"docs\":{},\"n\":{\"docs\":{},\"d\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"\\\"\":{\"docs\":{\"search-api/search-template.html\":{\"ref\":\"search-api/search-template.html\",\"tf\":0.0055248618784530384}},\":\":{\"docs\":{\"document-apis/update-api.html\":{\"ref\":\"document-apis/update-api.html\",\"tf\":0.014814814814814815}}}}}}}}}},\"j\":{\"docs\":{},\"o\":{\"docs\":{},\"e\":{\"docs\":{\"document-apis/update-api.html\":{\"ref\":\"document-apis/update-api.html\",\"tf\":0.022222222222222223}}}}},\"n\":{\"docs\":{},\"a\":{\"docs\":{},\"m\":{\"docs\":{},\"e\":{\"docs\":{},\"\\\"\":{\"docs\":{\"document-apis/update-api.html\":{\"ref\":\"document-apis/update-api.html\",\"tf\":0.014814814814814815}},\",\":{\"docs\":{\"query-dsl/full-text-queries.html\":{\"ref\":\"query-dsl/full-text-queries.html\",\"tf\":0.011904761904761904},\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.005390835579514825}}},\":\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0215633423180593}}}},\".\":{\"docs\":{},\"f\":{\"docs\":{},\"i\":{\"docs\":{},\"r\":{\"docs\":{},\"s\":{\"docs\":{},\"t\":{\"docs\":{},\"\\\"\":{\"docs\":{},\",\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125}}}}}}}}},\"l\":{\"docs\":{},\"a\":{\"docs\":{},\"s\":{\"docs\":{},\"t\":{\"docs\":{},\"\\\"\":{\"docs\":{},\"}\":{\"docs\":{},\";\":{\"docs\":{\"query-dsl/specialized-queries.html\":{\"ref\":\"query-dsl/specialized-queries.html\",\"tf\":0.004761904761904762}}}}}}}}}}}}}},\"a\":{\"docs\":{},\"n\":{\"docs\":{},\"o\":{\"docs\":{},\"t\":{\"docs\":{},\"h\":{\"docs\":{\"document-apis/bulk-api.html\":{\"ref\":\"document-apis/bulk-api.html\",\"tf\":0.014492753623188406}}}}}},\"m\":{\"docs\":{},\"a\":{\"docs\":{},\"z\":{\"docs\":{},\"i\":{\"docs\":{},\"n\":{\"docs\":{},\"g\":{\"docs\":{},\"\\\"\":{\"docs\":{},\")\":{\"docs\":{},\";\":{\"docs\":{\"query-dsl/specialized-queries.html\":{\"ref\":\"query-dsl/specialized-queries.html\",\"tf\":0.004761904761904762}}}}}}}}}}}},\"k\":{\"docs\":{},\"i\":{\"docs\":{},\"m\":{\"docs\":{},\"c\":{\"docs\":{},\"h\":{\"docs\":{},\"y\":{\"docs\":{},\"\\\"\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125},\"query-dsl/span-queries.html\":{\"ref\":\"query-dsl/span-queries.html\",\"tf\":0.005555555555555556}},\")\":{\"docs\":{\"document-apis/bulk-api.html\":{\"ref\":\"document-apis/bulk-api.html\",\"tf\":0.028985507246376812}},\")\":{\"docs\":{\"query-dsl/compound-queries.html\":{\"ref\":\"query-dsl/compound-queries.html\",\"tf\":0.005847953216374269}},\".\":{\"docs\":{},\"s\":{\"docs\":{},\"e\":{\"docs\":{},\"t\":{\"docs\":{},\"s\":{\"docs\":{},\"i\":{\"docs\":{},\"z\":{\"docs\":{},\"e\":{\"docs\":{},\"(\":{\"1\":{\"docs\":{},\")\":{\"docs\":{},\";\":{\"docs\":{\"search-api/multisearch-api.html\":{\"ref\":\"search-api/multisearch-api.html\",\"tf\":0.019230769230769232}}}}},\"docs\":{}}}}}}}}}}},\";\":{\"docs\":{\"query-dsl/full-text-queries.html\":{\"ref\":\"query-dsl/full-text-queries.html\",\"tf\":0.011904761904761904}}},\",\":{\"docs\":{\"query-dsl/compound-queries.html\":{\"ref\":\"query-dsl/compound-queries.html\",\"tf\":0.005847953216374269},\"query-dsl/span-queries.html\":{\"ref\":\"query-dsl/span-queries.html\",\"tf\":0.005555555555555556}}}}}},\"i\":{\"docs\":{\"query-dsl/full-text-queries.html\":{\"ref\":\"query-dsl/full-text-queries.html\",\"tf\":0.023809523809523808}}}}},\"z\":{\"docs\":{},\"h\":{\"docs\":{},\"y\":{\"docs\":{},\"\\\"\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125}}}}}}},\"\\\"\":{\"docs\":{},\")\":{\"docs\":{\"query-dsl/span-queries.html\":{\"ref\":\"query-dsl/span-queries.html\",\"tf\":0.005555555555555556}}}}},\"?\":{\"docs\":{},\"m\":{\"docs\":{},\"c\":{\"docs\":{},\"*\":{\"docs\":{},\"\\\"\":{\"docs\":{},\")\":{\"docs\":{},\";\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125}}}}}}}}},\"o\":{\"docs\":{},\"w\":{\"docs\":{},\"\\\"\":{\"docs\":{},\")\":{\"docs\":{},\")\":{\"docs\":{},\";\":{\"docs\":{\"query-dsl/compound-queries.html\":{\"ref\":\"query-dsl/compound-queries.html\",\"tf\":0.005847953216374269}}}}}}}}},\"i\":{\"docs\":{},\"n\":{\"docs\":{},\"d\":{\"docs\":{},\"e\":{\"docs\":{},\"x\":{\"1\":{\"docs\":{},\"\\\"\":{\"docs\":{},\",\":{\"docs\":{\"query-dsl/compound-queries.html\":{\"ref\":\"query-dsl/compound-queries.html\",\"tf\":0.011695906432748537}}}}},\"2\":{\"docs\":{},\"\\\"\":{\"docs\":{\"query-dsl/compound-queries.html\":{\"ref\":\"query-dsl/compound-queries.html\",\"tf\":0.011695906432748537}},\")\":{\"docs\":{\"search-api.html\":{\"ref\":\"search-api.html\",\"tf\":0.017241379310344827}}}}},\"docs\":{}}}}}},\"\\\"\":{\"docs\":{\"search-api/search-template.html\":{\"ref\":\"search-api/search-template.html\",\"tf\":0.0055248618784530384},\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125}}},\"q\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"y\":{\"docs\":{},\"\\\"\":{\"docs\":{\"search-api/search-template.html\":{\"ref\":\"search-api/search-template.html\",\"tf\":0.0055248618784530384}},\",\":{\"docs\":{\"query-dsl/specialized-queries.html\":{\"ref\":\"query-dsl/specialized-queries.html\",\"tf\":0.009523809523809525}}}}}}}}},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"s\":{\"docs\":{},\"e\":{\"docs\":{},\"l\":{\"docs\":{},\"l\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"\\\"\":{\"docs\":{},\")\":{\"docs\":{},\";\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}},\"s\":{\"docs\":{},\"\\\"\":{\"docs\":{},\")\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}},\";\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}}}}}}}}}}},\"u\":{\"docs\":{},\"s\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"\\\"\":{\"docs\":{},\",\":{\"docs\":{\"query-dsl/full-text-queries.html\":{\"ref\":\"query-dsl/full-text-queries.html\",\"tf\":0.011904761904761904},\"query-dsl/span-queries.html\":{\"ref\":\"query-dsl/span-queries.html\",\"tf\":0.005555555555555556}}},\":\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125}}}}}}}},\"(\":{\"docs\":{},\"西\":{\"docs\":{},\"班\":{\"docs\":{},\"|\":{\"docs\":{},\"葡\":{\"docs\":{},\"萄\":{\"docs\":{},\")\":{\"docs\":{},\"牙\":{\"docs\":{},\"\\\"\":{\"docs\":{},\")\":{\"docs\":{},\";\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125}}}}}}}}}}}}},\"b\":{\"docs\":{},\"a\":{\"docs\":{},\"r\":{\"docs\":{},\"\\\"\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125}},\")\":{\"docs\":{},\",\":{\"docs\":{\"query-dsl/span-queries.html\":{\"ref\":\"query-dsl/span-queries.html\",\"tf\":0.005555555555555556}}}}}},\"z\":{\"docs\":{},\"\\\"\":{\"docs\":{},\")\":{\"docs\":{},\")\":{\"docs\":{\"query-dsl/span-queries.html\":{\"ref\":\"query-dsl/span-queries.html\",\"tf\":0.005555555555555556}}}}}}},\"l\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"docs\":{},\"\\\"\":{\"docs\":{},\",\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125}}},\")\":{\"docs\":{},\")\":{\"docs\":{\"query-dsl/joining-queries.html\":{\"ref\":\"query-dsl/joining-queries.html\",\"tf\":0.007194244604316547}}}}}}},\"o\":{\"docs\":{},\"g\":{\"docs\":{},\"\\\"\":{\"docs\":{},\",\":{\"docs\":{\"query-dsl/joining-queries.html\":{\"ref\":\"query-dsl/joining-queries.html\",\"tf\":0.007194244604316547}}}},\"_\":{\"docs\":{},\"t\":{\"docs\":{},\"a\":{\"docs\":{},\"g\":{\"docs\":{},\"\\\"\":{\"docs\":{},\",\":{\"docs\":{\"query-dsl/joining-queries.html\":{\"ref\":\"query-dsl/joining-queries.html\",\"tf\":0.007194244604316547}}}}}}}}}}},\"r\":{\"docs\":{},\"a\":{\"docs\":{},\"n\":{\"docs\":{},\"d\":{\"docs\":{},\"\\\"\":{\"docs\":{},\",\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125}}}}}}}}},\"h\":{\"docs\":{},\"e\":{\"docs\":{},\"i\":{\"docs\":{},\"n\":{\"docs\":{},\"e\":{\"docs\":{},\"\\\"\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125}}}}}}}},\"p\":{\"docs\":{},\"i\":{\"docs\":{},\"l\":{\"docs\":{},\"l\":{\"docs\":{},\"\\\"\":{\"docs\":{},\")\":{\"docs\":{},\";\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125}}}}}}},\"n\":{\"docs\":{},\".\":{\"docs\":{},\"l\":{\"docs\":{},\"o\":{\"docs\":{},\"c\":{\"docs\":{},\"a\":{\"docs\":{},\"t\":{\"docs\":{},\"i\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{},\"\\\"\":{\"docs\":{},\",\":{\"docs\":{\"query-dsl/geo-queries.html\":{\"ref\":\"query-dsl/geo-queries.html\",\"tf\":0.00980392156862745}}}}}}}}}}}}}}},\"a\":{\"docs\":{},\"i\":{\"docs\":{},\"n\":{\"docs\":{},\"l\":{\"docs\":{},\"e\":{\"docs\":{},\"s\":{\"docs\":{},\"s\":{\"docs\":{},\"\\\"\":{\"docs\":{},\",\":{\"docs\":{\"query-dsl/specialized-queries.html\":{\"ref\":\"query-dsl/specialized-queries.html\",\"tf\":0.004761904761904762}}}}}}}}}}}},\"s\":{\"docs\":{},\".\":{\"docs\":{},\"*\":{\"docs\":{},\"y\":{\"docs\":{},\"\\\"\":{\"docs\":{},\")\":{\"docs\":{},\";\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125}}}}}}}}},\"y\":{\"docs\":{},\"o\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{},\"a\":{\"docs\":{},\"\\\"\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125}}}}}}}},\"西\":{\"docs\":{},\"*\":{\"docs\":{},\"牙\":{\"docs\":{},\"\\\"\":{\"docs\":{},\")\":{\"docs\":{},\";\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125}}}}}}}},\"e\":{\"docs\":{},\"l\":{\"docs\":{},\"a\":{\"docs\":{},\"s\":{\"docs\":{},\"t\":{\"docs\":{},\"i\":{\"docs\":{},\"c\":{\"docs\":{},\"s\":{\"docs\":{},\"e\":{\"docs\":{},\"a\":{\"docs\":{},\"r\":{\"docs\":{},\"c\":{\"docs\":{},\"h\":{\"docs\":{},\"\\\"\":{\"docs\":{},\")\":{\"docs\":{},\")\":{\"docs\":{\"query-dsl/compound-queries.html\":{\"ref\":\"query-dsl/compound-queries.html\",\"tf\":0.005847953216374269}}},\".\":{\"docs\":{},\"b\":{\"docs\":{},\"u\":{\"docs\":{},\"i\":{\"docs\":{},\"l\":{\"docs\":{},\"d\":{\"docs\":{},\"(\":{\"docs\":{},\")\":{\"docs\":{},\";\":{\"docs\":{\"query-dsl/joining-queries.html\":{\"ref\":\"query-dsl/joining-queries.html\",\"tf\":0.014388489208633094},\"query-dsl/specialized-queries.html\":{\"ref\":\"query-dsl/specialized-queries.html\",\"tf\":0.004761904761904762}}}}}}}}}}}}}}}}}}}}}}}}}},\"w\":{\"docs\":{},\"o\":{\"docs\":{},\"w\":{\"docs\":{},\"\\\"\":{\"docs\":{},\")\":{\"docs\":{},\",\":{\"docs\":{\"query-dsl/compound-queries.html\":{\"ref\":\"query-dsl/compound-queries.html\",\"tf\":0.011695906432748537}}}}}}}},\"o\":{\"docs\":{},\"b\":{\"docs\":{},\"j\":{\"1\":{\"docs\":{},\"\\\"\":{\"docs\":{},\",\":{\"docs\":{\"query-dsl/joining-queries.html\":{\"ref\":\"query-dsl/joining-queries.html\",\"tf\":0.007194244604316547}}}}},\"docs\":{}}}}},\".\":{\"docs\":{},\"a\":{\"docs\":{},\"d\":{\"docs\":{},\"d\":{\"docs\":{},\"t\":{\"docs\":{},\"r\":{\"docs\":{},\"a\":{\"docs\":{},\"n\":{\"docs\":{},\"s\":{\"docs\":{},\"p\":{\"docs\":{},\"o\":{\"docs\":{},\"r\":{\"docs\":{},\"t\":{\"docs\":{},\"a\":{\"docs\":{},\"d\":{\"docs\":{},\"d\":{\"docs\":{},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"s\":{\"docs\":{},\"s\":{\"docs\":{},\"(\":{\"docs\":{},\"n\":{\"docs\":{},\"e\":{\"docs\":{},\"w\":{\"docs\":{\"client/transport-client.html\":{\"ref\":\"client/transport-client.html\",\"tf\":0.022222222222222223},\"client/xpack-transport-client.html\":{\"ref\":\"client/xpack-transport-client.html\",\"tf\":0.03278688524590164},\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.002066115702479339}}}}}}}}}}}}}}}}}}}}}},\"(\":{\"docs\":{},\"\\\"\":{\"docs\":{},\"a\":{\"docs\":{},\"n\":{\"docs\":{},\"o\":{\"docs\":{},\"t\":{\"docs\":{},\"h\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"\\\"\":{\"docs\":{},\",\":{\"docs\":{\"document-apis/multi-get-api.html\":{\"ref\":\"document-apis/multi-get-api.html\",\"tf\":0.021739130434782608}}}}}}}}}}},\"t\":{\"docs\":{},\"w\":{\"docs\":{},\"i\":{\"docs\":{},\"t\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"\\\"\":{\"docs\":{},\",\":{\"docs\":{\"document-apis/multi-get-api.html\":{\"ref\":\"document-apis/multi-get-api.html\",\"tf\":0.043478260869565216}}}}}}}}}}}},\"s\":{\"docs\":{},\"r\":{\"docs\":{},\"b\":{\"1\":{\"docs\":{},\")\":{\"docs\":{\"search-api/multisearch-api.html\":{\"ref\":\"search-api/multisearch-api.html\",\"tf\":0.019230769230769232}}}},\"2\":{\"docs\":{},\")\":{\"docs\":{\"search-api/multisearch-api.html\":{\"ref\":\"search-api/multisearch-api.html\",\"tf\":0.019230769230769232}}}},\"docs\":{}}}},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"m\":{\"docs\":{},\"q\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"y\":{\"docs\":{},\"(\":{\"docs\":{},\"\\\"\":{\"docs\":{},\"n\":{\"docs\":{},\"a\":{\"docs\":{},\"m\":{\"docs\":{},\"e\":{\"docs\":{},\"\\\"\":{\"docs\":{},\",\":{\"docs\":{\"query-dsl/compound-queries.html\":{\"ref\":\"query-dsl/compound-queries.html\",\"tf\":0.011695906432748537}}}}}}}}}}}}}}}}}}}},\"s\":{\"docs\":{},\"o\":{\"docs\":{},\"r\":{\"docs\":{},\"t\":{\"docs\":{},\"(\":{\"docs\":{},\"f\":{\"docs\":{},\"i\":{\"docs\":{},\"e\":{\"docs\":{},\"l\":{\"docs\":{},\"d\":{\"docs\":{},\"s\":{\"docs\":{},\"o\":{\"docs\":{},\"r\":{\"docs\":{},\"t\":{\"docs\":{},\"b\":{\"docs\":{},\"u\":{\"docs\":{},\"i\":{\"docs\":{},\"l\":{\"docs\":{},\"d\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\".\":{\"docs\":{},\"d\":{\"docs\":{},\"o\":{\"docs\":{},\"c\":{\"docs\":{},\"_\":{\"docs\":{},\"f\":{\"docs\":{},\"i\":{\"docs\":{},\"e\":{\"docs\":{},\"l\":{\"docs\":{},\"d\":{\"docs\":{},\"_\":{\"docs\":{},\"n\":{\"docs\":{},\"a\":{\"docs\":{},\"m\":{\"docs\":{},\"e\":{\"docs\":{},\",\":{\"docs\":{\"search-api/using-scrolls-in-java.html\":{\"ref\":\"search-api/using-scrolls-in-java.html\",\"tf\":0.00546448087431694}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"a\":{\"docs\":{},\"g\":{\"docs\":{},\"g\":{\"docs\":{},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"g\":{\"docs\":{},\"a\":{\"docs\":{},\"t\":{\"docs\":{},\"i\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{},\"(\":{\"docs\":{\"search-api/using-aggregations.html\":{\"ref\":\"search-api/using-aggregations.html\",\"tf\":0.058823529411764705},\"aggregations.html\":{\"ref\":\"aggregations.html\",\"tf\":0.038461538461538464},\"aggregations/structuring-aggregations.html\":{\"ref\":\"aggregations/structuring-aggregations.html\",\"tf\":0.02702702702702703}},\"a\":{\"docs\":{},\"g\":{\"docs\":{},\"g\":{\"docs\":{},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"g\":{\"docs\":{},\"a\":{\"docs\":{},\"t\":{\"docs\":{},\"i\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{},\")\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}}}}}}}}}}}}}}}}}}}}}}},\"r\":{\"docs\":{},\"a\":{\"docs\":{},\"n\":{\"docs\":{},\"g\":{\"docs\":{},\"e\":{\"docs\":{},\"(\":{\"1\":{\"0\":{\"docs\":{},\".\":{\"0\":{\"docs\":{},\",\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}},\"docs\":{}}},\"docs\":{},\".\":{\"0\":{\"docs\":{},\"f\":{\"docs\":{},\",\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}},\"docs\":{}}},\"3\":{\"docs\":{},\".\":{\"0\":{\"docs\":{},\",\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}},\"docs\":{}}},\"docs\":{},\"\\\"\":{\"1\":{\"9\":{\"2\":{\"docs\":{},\".\":{\"1\":{\"6\":{\"8\":{\"docs\":{},\".\":{\"1\":{\"docs\":{},\".\":{\"0\":{\"docs\":{},\"\\\"\":{\"docs\":{},\",\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}},\"docs\":{}}},\"docs\":{}}},\"docs\":{}},\"docs\":{}},\"docs\":{}}},\"5\":{\"0\":{\"docs\":{},\"\\\"\":{\"docs\":{},\",\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}}}}}}}},\"u\":{\"docs\":{},\"n\":{\"docs\":{},\"b\":{\"docs\":{},\"o\":{\"docs\":{},\"u\":{\"docs\":{},\"n\":{\"docs\":{},\"d\":{\"docs\":{},\"e\":{\"docs\":{},\"d\":{\"docs\":{},\"f\":{\"docs\":{},\"r\":{\"docs\":{},\"o\":{\"docs\":{},\"m\":{\"docs\":{},\"(\":{\"1\":{\"docs\":{},\".\":{\"5\":{\"docs\":{},\"f\":{\"docs\":{},\")\":{\"docs\":{},\";\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}}},\"docs\":{}}},\"docs\":{},\"\\\"\":{\"1\":{\"9\":{\"2\":{\"docs\":{},\".\":{\"1\":{\"6\":{\"8\":{\"docs\":{},\".\":{\"2\":{\"docs\":{},\".\":{\"0\":{\"docs\":{},\"\\\"\":{\"docs\":{},\")\":{\"docs\":{},\";\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}}},\"docs\":{}}},\"docs\":{}}},\"docs\":{}},\"docs\":{}},\"docs\":{}}},\"6\":{\"0\":{\"docs\":{},\"\\\"\":{\"docs\":{},\")\":{\"docs\":{},\";\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}}}}}}},\"t\":{\"docs\":{},\"o\":{\"docs\":{},\"(\":{\"1\":{\"docs\":{},\".\":{\"0\":{\"docs\":{},\"f\":{\"docs\":{},\")\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}},\"docs\":{}}},\"3\":{\"docs\":{},\".\":{\"0\":{\"docs\":{},\")\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}},\"docs\":{}}},\"docs\":{},\"\\\"\":{\"1\":{\"9\":{\"2\":{\"docs\":{},\".\":{\"1\":{\"6\":{\"8\":{\"docs\":{},\".\":{\"1\":{\"docs\":{},\".\":{\"0\":{\"docs\":{},\"\\\"\":{\"docs\":{},\")\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}},\"docs\":{}}},\"docs\":{}}},\"docs\":{}},\"docs\":{}},\"docs\":{}}},\"5\":{\"0\":{\"docs\":{},\"\\\"\":{\"docs\":{},\")\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}}}}}}}}}}}}}},\"i\":{\"docs\":{},\"d\":{\"docs\":{},\"s\":{\"docs\":{},\"(\":{\"docs\":{},\"\\\"\":{\"1\":{\"docs\":{},\"\\\"\":{\"docs\":{},\",\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.005390835579514825}}}}},\"docs\":{}}}}}},\"m\":{\"docs\":{},\"a\":{\"docs\":{},\"p\":{\"docs\":{},\"p\":{\"docs\":{},\"i\":{\"docs\":{},\"n\":{\"docs\":{},\"g\":{\"docs\":{},\"(\":{\"docs\":{},\"\\\"\":{\"docs\":{},\"d\":{\"docs\":{},\"o\":{\"docs\":{},\"c\":{\"docs\":{},\"s\":{\"docs\":{},\"\\\"\":{\"docs\":{},\",\":{\"docs\":{\"query-dsl/specialized-queries.html\":{\"ref\":\"query-dsl/specialized-queries.html\",\"tf\":0.004761904761904762}}}}}}}},\"q\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"y\":{\"docs\":{},\"\\\"\":{\"docs\":{},\",\":{\"docs\":{\"query-dsl/specialized-queries.html\":{\"ref\":\"query-dsl/specialized-queries.html\",\"tf\":0.004761904761904762}}}}}}}}}}}}}}}}}},\"c\":{\"docs\":{},\"l\":{\"docs\":{},\"a\":{\"docs\":{},\"u\":{\"docs\":{},\"s\":{\"docs\":{},\"e\":{\"docs\":{},\"(\":{\"docs\":{},\"s\":{\"docs\":{},\"p\":{\"docs\":{},\"a\":{\"docs\":{},\"n\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"m\":{\"docs\":{},\"q\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"y\":{\"docs\":{},\"(\":{\"docs\":{},\"\\\"\":{\"docs\":{},\"f\":{\"docs\":{},\"i\":{\"docs\":{},\"e\":{\"docs\":{},\"l\":{\"docs\":{},\"d\":{\"1\":{\"docs\":{},\"\\\"\":{\"docs\":{},\",\":{\"docs\":{\"query-dsl/span-queries.html\":{\"ref\":\"query-dsl/span-queries.html\",\"tf\":0.005555555555555556}},\"\\\"\":{\"docs\":{},\"b\":{\"docs\":{},\"a\":{\"docs\":{},\"z\":{\"docs\":{},\"\\\"\":{\"docs\":{},\")\":{\"docs\":{},\")\":{\"docs\":{\"query-dsl/span-queries.html\":{\"ref\":\"query-dsl/span-queries.html\",\"tf\":0.005555555555555556}}}}}}}}}}}},\"docs\":{},\"\\\"\":{\"docs\":{},\",\":{\"docs\":{},\"\\\"\":{\"docs\":{},\"v\":{\"docs\":{},\"a\":{\"docs\":{},\"l\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"2\":{\"docs\":{},\"\\\"\":{\"docs\":{},\")\":{\"docs\":{},\")\":{\"docs\":{\"query-dsl/span-queries.html\":{\"ref\":\"query-dsl/span-queries.html\",\"tf\":0.011111111111111112}}}}}},\"3\":{\"docs\":{},\"\\\"\":{\"docs\":{},\")\":{\"docs\":{},\")\":{\"docs\":{\"query-dsl/span-queries.html\":{\"ref\":\"query-dsl/span-queries.html\",\"tf\":0.005555555555555556}},\";\":{\"docs\":{\"query-dsl/span-queries.html\":{\"ref\":\"query-dsl/span-queries.html\",\"tf\":0.005555555555555556}}}}}}},\"docs\":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"v\":{\"docs\":{},\"g\":{\"docs\":{},\"(\":{\"docs\":{},\"\\\"\":{\"docs\":{},\"a\":{\"docs\":{},\"g\":{\"docs\":{},\"g\":{\"docs\":{},\"\\\"\":{\"docs\":{},\")\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}}}}}}}}}}}},\"b\":{\"docs\":{},\"u\":{\"docs\":{},\"i\":{\"docs\":{},\"l\":{\"docs\":{},\"d\":{\"docs\":{},\"(\":{\"docs\":{},\")\":{\"docs\":{},\";\":{\"docs\":{\"client/transport-client.html\":{\"ref\":\"client/transport-client.html\",\"tf\":0.011111111111111112},\"document-apis/using-bulk-processor.html\":{\"ref\":\"document-apis/using-bulk-processor.html\",\"tf\":0.012048192771084338}}}}}}}}},\"o\":{\"docs\":{},\"o\":{\"docs\":{},\"s\":{\"docs\":{},\"t\":{\"docs\":{},\"(\":{\"1\":{\"docs\":{},\".\":{\"2\":{\"docs\":{},\"f\":{\"docs\":{},\")\":{\"docs\":{\"query-dsl/compound-queries.html\":{\"ref\":\"query-dsl/compound-queries.html\",\"tf\":0.005847953216374269}}}}},\"docs\":{}}},\"2\":{\"docs\":{},\".\":{\"0\":{\"docs\":{},\"f\":{\"docs\":{},\")\":{\"docs\":{},\";\":{\"docs\":{\"query-dsl/compound-queries.html\":{\"ref\":\"query-dsl/compound-queries.html\",\"tf\":0.005847953216374269}}}}}},\"docs\":{}}},\"docs\":{}}}}}}},\"p\":{\"docs\":{},\"u\":{\"docs\":{},\"t\":{\"docs\":{},\"(\":{\"docs\":{},\"\\\"\":{\"docs\":{},\"c\":{\"docs\":{},\"l\":{\"docs\":{},\"i\":{\"docs\":{},\"e\":{\"docs\":{},\"n\":{\"docs\":{},\"t\":{\"docs\":{},\".\":{\"docs\":{},\"t\":{\"docs\":{},\"r\":{\"docs\":{},\"a\":{\"docs\":{},\"n\":{\"docs\":{},\"s\":{\"docs\":{},\"p\":{\"docs\":{},\"o\":{\"docs\":{},\"r\":{\"docs\":{},\"t\":{\"docs\":{},\".\":{\"docs\":{},\"s\":{\"docs\":{},\"n\":{\"docs\":{},\"i\":{\"docs\":{},\"f\":{\"docs\":{},\"f\":{\"docs\":{},\"\\\"\":{\"docs\":{},\",\":{\"docs\":{\"client/transport-client.html\":{\"ref\":\"client/transport-client.html\",\"tf\":0.022222222222222223},\"client/xpack-transport-client.html\":{\"ref\":\"client/xpack-transport-client.html\",\"tf\":0.01639344262295082}}}}}}}}}}}}}}}}}}}}}}}},\"u\":{\"docs\":{},\"s\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\".\":{\"docs\":{},\"n\":{\"docs\":{},\"a\":{\"docs\":{},\"m\":{\"docs\":{},\"e\":{\"docs\":{},\"\\\"\":{\"docs\":{},\",\":{\"docs\":{\"client/transport-client.html\":{\"ref\":\"client/transport-client.html\",\"tf\":0.022222222222222223}}}}}}}}}}}}}}}},\"x\":{\"docs\":{},\"p\":{\"docs\":{},\"a\":{\"docs\":{},\"c\":{\"docs\":{},\"k\":{\"docs\":{},\".\":{\"docs\":{},\"s\":{\"docs\":{},\"e\":{\"docs\":{},\"c\":{\"docs\":{},\"u\":{\"docs\":{},\"r\":{\"docs\":{},\"i\":{\"docs\":{},\"t\":{\"docs\":{},\"y\":{\"docs\":{},\".\":{\"docs\":{},\"t\":{\"docs\":{},\"r\":{\"docs\":{},\"a\":{\"docs\":{},\"n\":{\"docs\":{},\"s\":{\"docs\":{},\"p\":{\"docs\":{},\"o\":{\"docs\":{},\"r\":{\"docs\":{},\"t\":{\"docs\":{},\".\":{\"docs\":{},\"s\":{\"docs\":{},\"s\":{\"docs\":{},\"l\":{\"docs\":{},\".\":{\"docs\":{},\"e\":{\"docs\":{},\"n\":{\"docs\":{},\"a\":{\"docs\":{},\"b\":{\"docs\":{},\"l\":{\"docs\":{},\"e\":{\"docs\":{},\"d\":{\"docs\":{},\"\\\"\":{\"docs\":{},\",\":{\"docs\":{\"client/xpack-transport-client.html\":{\"ref\":\"client/xpack-transport-client.html\",\"tf\":0.01639344262295082}}}}}}}}}}}}}}}}}}}}}}}}},\"u\":{\"docs\":{},\"s\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"\\\"\":{\"docs\":{},\",\":{\"docs\":{\"client/xpack-transport-client.html\":{\"ref\":\"client/xpack-transport-client.html\",\"tf\":0.01639344262295082}}}}}}}}}}}}}}}}}}}}}}}}}}},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"p\":{\"docs\":{},\"a\":{\"docs\":{},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"s\":{\"docs\":{},\"e\":{\"docs\":{},\"a\":{\"docs\":{},\"r\":{\"docs\":{},\"c\":{\"docs\":{},\"h\":{\"docs\":{},\"(\":{\"docs\":{},\")\":{\"docs\":{},\".\":{\"docs\":{},\"s\":{\"docs\":{},\"e\":{\"docs\":{},\"t\":{\"docs\":{},\"q\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"y\":{\"docs\":{},\"(\":{\"docs\":{},\"q\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"y\":{\"docs\":{},\"b\":{\"docs\":{},\"u\":{\"docs\":{},\"i\":{\"docs\":{},\"l\":{\"docs\":{},\"d\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"s\":{\"docs\":{},\".\":{\"docs\":{},\"m\":{\"docs\":{},\"a\":{\"docs\":{},\"t\":{\"docs\":{},\"c\":{\"docs\":{},\"h\":{\"docs\":{},\"q\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"y\":{\"docs\":{},\"(\":{\"docs\":{},\"\\\"\":{\"docs\":{},\"n\":{\"docs\":{},\"a\":{\"docs\":{},\"m\":{\"docs\":{},\"e\":{\"docs\":{},\"\\\"\":{\"docs\":{},\",\":{\"docs\":{\"search-api/multisearch-api.html\":{\"ref\":\"search-api/multisearch-api.html\",\"tf\":0.019230769230769232}}}}}}}}}}}}}}}}}}}},\"q\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"y\":{\"docs\":{},\"s\":{\"docs\":{},\"t\":{\"docs\":{},\"r\":{\"docs\":{},\"i\":{\"docs\":{},\"n\":{\"docs\":{},\"g\":{\"docs\":{},\"q\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"y\":{\"docs\":{},\"(\":{\"docs\":{},\"\\\"\":{\"docs\":{},\"e\":{\"docs\":{},\"l\":{\"docs\":{},\"a\":{\"docs\":{},\"s\":{\"docs\":{},\"t\":{\"docs\":{},\"i\":{\"docs\":{},\"c\":{\"docs\":{},\"s\":{\"docs\":{},\"e\":{\"docs\":{},\"a\":{\"docs\":{},\"r\":{\"docs\":{},\"c\":{\"docs\":{},\"h\":{\"docs\":{},\"\\\"\":{\"docs\":{},\")\":{\"docs\":{},\")\":{\"docs\":{},\".\":{\"docs\":{},\"s\":{\"docs\":{},\"e\":{\"docs\":{},\"t\":{\"docs\":{},\"s\":{\"docs\":{},\"i\":{\"docs\":{},\"z\":{\"docs\":{},\"e\":{\"docs\":{},\"(\":{\"1\":{\"docs\":{},\")\":{\"docs\":{},\";\":{\"docs\":{\"search-api/multisearch-api.html\":{\"ref\":\"search-api/multisearch-api.html\",\"tf\":0.019230769230769232}}}}},\"docs\":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"c\":{\"docs\":{},\"i\":{\"docs\":{},\"s\":{\"docs\":{},\"i\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{},\"(\":{\"4\":{\"docs\":{},\")\":{\"docs\":{},\";\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}},\"docs\":{}}}}}}}}}},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"c\":{\"docs\":{},\"e\":{\"docs\":{},\"n\":{\"docs\":{},\"t\":{\"docs\":{},\"i\":{\"docs\":{},\"l\":{\"docs\":{},\"e\":{\"docs\":{},\"s\":{\"docs\":{},\"(\":{\"1\":{\"docs\":{},\".\":{\"0\":{\"docs\":{},\",\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}}}},\"docs\":{}}},\"docs\":{},\"\\\"\":{\"docs\":{},\"a\":{\"docs\":{},\"g\":{\"docs\":{},\"g\":{\"docs\":{},\"\\\"\":{\"docs\":{},\")\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.004379562043795621}}}}}}}}}}}}}}}}}}},\"o\":{\"docs\":{},\"i\":{\"docs\":{},\"n\":{\"docs\":{},\"t\":{\"docs\":{},\"(\":{\"4\":{\"0\":{\"docs\":{},\",\":{\"docs\":{\"query-dsl/geo-queries.html\":{\"ref\":\"query-dsl/geo-queries.html\",\"tf\":0.004901960784313725}}}},\"docs\":{}},\"docs\":{}}}}}}},\".\":{\"docs\":{},\".\":{\"docs\":{\"client/xpack-transport-client.html\":{\"ref\":\"client/xpack-transport-client.html\",\"tf\":0.06557377049180328},\"document-apis/using-bulk-processor.html\":{\"ref\":\"document-apis/using-bulk-processor.html\",\"tf\":0.018072289156626505},\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.001652892561983471}}}},\"e\":{\"docs\":{},\"n\":{\"docs\":{},\"d\":{\"docs\":{},\"o\":{\"docs\":{},\"b\":{\"docs\":{},\"j\":{\"docs\":{},\"e\":{\"docs\":{},\"c\":{\"docs\":{},\"t\":{\"docs\":{},\"(\":{\"docs\":{},\")\":{\"docs\":{\"document-apis/bulk-api.html\":{\"ref\":\"document-apis/bulk-api.html\",\"tf\":0.028985507246376812}},\";\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.004132231404958678}}},\")\":{\"docs\":{\"document-apis/update-api.html\":{\"ref\":\"document-apis/update-api.html\",\"tf\":0.014814814814814815},\"query-dsl/specialized-queries.html\":{\"ref\":\"query-dsl/specialized-queries.html\",\"tf\":0.004761904761904762}},\";\":{\"docs\":{\"document-apis/update-api.html\":{\"ref\":\"document-apis/update-api.html\",\"tf\":0.022222222222222223}}}}}}}}}}}}}},\"x\":{\"docs\":{},\"e\":{\"docs\":{},\"c\":{\"docs\":{},\"u\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"(\":{\"docs\":{},\"n\":{\"docs\":{},\"e\":{\"docs\":{},\"w\":{\"docs\":{\"document-apis/delete-by-query-api.html\":{\"ref\":\"document-apis/delete-by-query-api.html\",\"tf\":0.018518518518518517}}}}},\")\":{\"docs\":{},\".\":{\"docs\":{},\"a\":{\"docs\":{},\"c\":{\"docs\":{},\"t\":{\"docs\":{},\"i\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{},\"g\":{\"docs\":{},\"e\":{\"docs\":{},\"t\":{\"docs\":{},\"(\":{\"docs\":{},\")\":{\"docs\":{},\";\":{\"docs\":{\"aggregations.html\":{\"ref\":\"aggregations.html\",\"tf\":0.038461538461538464},\"aggregations/structuring-aggregations.html\":{\"ref\":\"aggregations/structuring-aggregations.html\",\"tf\":0.02702702702702703}}}}}}}}}}}}}}}}}}}}}},\"p\":{\"docs\":{},\"l\":{\"docs\":{},\"a\":{\"docs\":{},\"i\":{\"docs\":{},\"n\":{\"docs\":{},\"(\":{\"docs\":{},\"t\":{\"docs\":{},\"r\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"docs\":{},\")\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}}}}}}}}}}}}},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"n\":{\"docs\":{},\"d\":{\"docs\":{},\"e\":{\"docs\":{},\"d\":{\"docs\":{},\"s\":{\"docs\":{},\"t\":{\"docs\":{},\"a\":{\"docs\":{},\"t\":{\"docs\":{},\"s\":{\"docs\":{},\"(\":{\"docs\":{},\"\\\"\":{\"docs\":{},\"a\":{\"docs\":{},\"g\":{\"docs\":{},\"g\":{\"docs\":{},\"\\\"\":{\"docs\":{},\")\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}}}}}}}}}}}}}}}}}}}}}},\"f\":{\"docs\":{},\"i\":{\"docs\":{},\"e\":{\"docs\":{},\"l\":{\"docs\":{},\"d\":{\"docs\":{},\"(\":{\"docs\":{},\"\\\"\":{\"docs\":{},\"m\":{\"docs\":{},\"e\":{\"docs\":{},\"s\":{\"docs\":{},\"s\":{\"docs\":{},\"a\":{\"docs\":{},\"g\":{\"docs\":{},\"e\":{\"docs\":{},\"\\\"\":{\"docs\":{},\",\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.004132231404958678},\"document-apis/bulk-api.html\":{\"ref\":\"document-apis/bulk-api.html\",\"tf\":0.028985507246376812}}}}}}}}}}},\"p\":{\"docs\":{},\"o\":{\"docs\":{},\"s\":{\"docs\":{},\"t\":{\"docs\":{},\"d\":{\"docs\":{},\"a\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"\\\"\":{\"docs\":{},\",\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.004132231404958678},\"document-apis/bulk-api.html\":{\"ref\":\"document-apis/bulk-api.html\",\"tf\":0.028985507246376812}}}}}}}}}}}},\"u\":{\"docs\":{},\"s\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"\\\"\":{\"docs\":{},\",\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.004132231404958678},\"document-apis/bulk-api.html\":{\"ref\":\"document-apis/bulk-api.html\",\"tf\":0.028985507246376812}}}}}}}},\"g\":{\"docs\":{},\"e\":{\"docs\":{},\"n\":{\"docs\":{},\"d\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"\\\"\":{\"docs\":{},\",\":{\"docs\":{\"document-apis/update-api.html\":{\"ref\":\"document-apis/update-api.html\",\"tf\":0.037037037037037035}}},\")\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0024793388429752068}},\";\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}}}}}}}},\"n\":{\"docs\":{},\"a\":{\"docs\":{},\"m\":{\"docs\":{},\"e\":{\"docs\":{},\"\\\"\":{\"docs\":{},\",\":{\"docs\":{\"document-apis/update-api.html\":{\"ref\":\"document-apis/update-api.html\",\"tf\":0.007407407407407408}}}}}}}},\"b\":{\"docs\":{},\"i\":{\"docs\":{},\"r\":{\"docs\":{},\"t\":{\"docs\":{},\"h\":{\"docs\":{},\"\\\"\":{\"docs\":{},\")\":{\"docs\":{\"search-api/using-aggregations.html\":{\"ref\":\"search-api/using-aggregations.html\",\"tf\":0.029411764705882353}}}}}}}}},\"d\":{\"docs\":{},\"a\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"o\":{\"docs\":{},\"f\":{\"docs\":{},\"b\":{\"docs\":{},\"i\":{\"docs\":{},\"r\":{\"docs\":{},\"t\":{\"docs\":{},\"h\":{\"docs\":{},\"\\\"\":{\"docs\":{},\")\":{\"docs\":{\"aggregations/structuring-aggregations.html\":{\"ref\":\"aggregations/structuring-aggregations.html\",\"tf\":0.02702702702702703},\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0024793388429752068}}}}}}}}}}}}}}},\"a\":{\"docs\":{},\"d\":{\"docs\":{},\"d\":{\"docs\":{},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"s\":{\"docs\":{},\"s\":{\"docs\":{},\".\":{\"docs\":{},\"l\":{\"docs\":{},\"o\":{\"docs\":{},\"c\":{\"docs\":{},\"a\":{\"docs\":{},\"t\":{\"docs\":{},\"i\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{},\"\\\"\":{\"docs\":{},\")\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854},\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.001652892561983471}}}}}}}}}}}},\"c\":{\"docs\":{},\"o\":{\"docs\":{},\"u\":{\"docs\":{},\"n\":{\"docs\":{},\"t\":{\"docs\":{},\"r\":{\"docs\":{},\"y\":{\"docs\":{},\"\\\"\":{\"docs\":{},\")\":{\"docs\":{},\";\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}}}}}}}}}}}}}}}}},\"h\":{\"docs\":{},\"e\":{\"docs\":{},\"i\":{\"docs\":{},\"g\":{\"docs\":{},\"h\":{\"docs\":{},\"t\":{\"docs\":{},\"\\\"\":{\"docs\":{},\")\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854},\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.001652892561983471}},\";\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.013138686131386862}}}}}}}}}}},\"t\":{\"docs\":{},\"a\":{\"docs\":{},\"g\":{\"docs\":{},\"s\":{\"docs\":{},\"\\\"\":{\"docs\":{},\")\":{\"docs\":{},\";\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}}}}}}}}},\"i\":{\"docs\":{},\"p\":{\"docs\":{},\"\\\"\":{\"docs\":{},\")\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}}},\"q\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"y\":{\"docs\":{},\"\\\"\":{\"docs\":{},\",\":{\"docs\":{\"query-dsl/specialized-queries.html\":{\"ref\":\"query-dsl/specialized-queries.html\",\"tf\":0.004761904761904762}}}}}}}}}}}}}},\"l\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"(\":{\"docs\":{},\"q\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"y\":{\"docs\":{},\"b\":{\"docs\":{},\"u\":{\"docs\":{},\"i\":{\"docs\":{},\"l\":{\"docs\":{},\"d\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"s\":{\"docs\":{},\".\":{\"docs\":{},\"m\":{\"docs\":{},\"a\":{\"docs\":{},\"t\":{\"docs\":{},\"c\":{\"docs\":{},\"h\":{\"docs\":{},\"q\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"y\":{\"docs\":{},\"(\":{\"docs\":{},\"\\\"\":{\"docs\":{},\"g\":{\"docs\":{},\"e\":{\"docs\":{},\"n\":{\"docs\":{},\"d\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"\\\"\":{\"docs\":{},\",\":{\"docs\":{\"document-apis/delete-by-query-api.html\":{\"ref\":\"document-apis/delete-by-query-api.html\",\"tf\":0.037037037037037035}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"\\\"\":{\"docs\":{},\"a\":{\"docs\":{},\"g\":{\"docs\":{},\"g\":{\"docs\":{},\"\\\"\":{\"docs\":{},\",\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}}}}},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"m\":{\"docs\":{},\"q\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"y\":{\"docs\":{},\"(\":{\"docs\":{},\"\\\"\":{\"docs\":{},\"c\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"n\":{\"docs\":{},\"t\":{\"docs\":{},\"\\\"\":{\"docs\":{},\",\":{\"docs\":{\"query-dsl/compound-queries.html\":{\"ref\":\"query-dsl/compound-queries.html\",\"tf\":0.005847953216374269}}}}}}}}}}}}}}}}}}}}}}},\"s\":{\"docs\":{},\"(\":{\"docs\":{},\"\\\"\":{\"docs\":{},\"a\":{\"docs\":{},\"g\":{\"docs\":{},\"g\":{\"docs\":{},\"\\\"\":{\"docs\":{},\",\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}}}}}}}}}}}},\"r\":{\"docs\":{},\"o\":{\"docs\":{},\"m\":{\"docs\":{},\"(\":{\"1\":{\"0\":{\"docs\":{},\")\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}}}},\"docs\":{}},\"5\":{\"docs\":{},\")\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125}}}},\"docs\":{}}}}},\"o\":{\"docs\":{},\"r\":{\"docs\":{},\"m\":{\"docs\":{},\"a\":{\"docs\":{},\"t\":{\"docs\":{},\"(\":{\"docs\":{},\"\\\"\":{\"docs\":{},\"y\":{\"docs\":{},\"y\":{\"docs\":{},\"y\":{\"docs\":{},\"y\":{\"docs\":{},\"\\\"\":{\"docs\":{},\")\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}}}}}}}}}}}}},\"g\":{\"docs\":{},\"e\":{\"docs\":{},\"t\":{\"docs\":{},\"(\":{\"docs\":{},\")\":{\"docs\":{\"search-api/search-template.html\":{\"ref\":\"search-api/search-template.html\",\"tf\":0.016574585635359115}},\";\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.012396694214876033},\"document-apis/get-api.html\":{\"ref\":\"document-apis/get-api.html\",\"tf\":0.034482758620689655},\"document-apis/delete-api.html\":{\"ref\":\"document-apis/delete-api.html\",\"tf\":0.05263157894736842},\"document-apis/delete-by-query-api.html\":{\"ref\":\"document-apis/delete-by-query-api.html\",\"tf\":0.018518518518518517},\"document-apis/update-api.html\":{\"ref\":\"document-apis/update-api.html\",\"tf\":0.014814814814814815},\"document-apis/multi-get-api.html\":{\"ref\":\"document-apis/multi-get-api.html\",\"tf\":0.021739130434782608},\"search-api.html\":{\"ref\":\"search-api.html\",\"tf\":0.017241379310344827},\"search-api/multisearch-api.html\":{\"ref\":\"search-api/multisearch-api.html\",\"tf\":0.019230769230769232},\"search-api/using-aggregations.html\":{\"ref\":\"search-api/using-aggregations.html\",\"tf\":0.029411764705882353},\"search-api/terminate-after.html\":{\"ref\":\"search-api/terminate-after.html\",\"tf\":0.0625},\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355},\"query-dsl/specialized-queries.html\":{\"ref\":\"query-dsl/specialized-queries.html\",\"tf\":0.014285714285714285}}}}},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"s\":{\"docs\":{},\"p\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{},\"s\":{\"docs\":{},\"e\":{\"docs\":{},\"(\":{\"docs\":{},\")\":{\"docs\":{},\";\":{\"docs\":{\"search-api/search-template.html\":{\"ref\":\"search-api/search-template.html\",\"tf\":0.016574585635359115}}}}}}}}}}}}}},\"o\":{\"docs\":{},\"b\":{\"docs\":{},\"o\":{\"docs\":{},\"u\":{\"docs\":{},\"n\":{\"docs\":{},\"d\":{\"docs\":{},\"s\":{\"docs\":{},\"(\":{\"docs\":{},\"\\\"\":{\"docs\":{},\"a\":{\"docs\":{},\"g\":{\"docs\":{},\"g\":{\"docs\":{},\"\\\"\":{\"docs\":{},\")\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}}}}}}}}}}}}}}},\"d\":{\"docs\":{},\"i\":{\"docs\":{},\"s\":{\"docs\":{},\"t\":{\"docs\":{},\"a\":{\"docs\":{},\"n\":{\"docs\":{},\"c\":{\"docs\":{},\"e\":{\"docs\":{},\"(\":{\"docs\":{},\"\\\"\":{\"docs\":{},\"a\":{\"docs\":{},\"g\":{\"docs\":{},\"g\":{\"docs\":{},\"\\\"\":{\"docs\":{},\",\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}}}}}}}}}}}}}},\"h\":{\"docs\":{},\"a\":{\"docs\":{},\"s\":{\"docs\":{},\"h\":{\"docs\":{},\"g\":{\"docs\":{},\"r\":{\"docs\":{},\"i\":{\"docs\":{},\"d\":{\"docs\":{},\"(\":{\"docs\":{},\"\\\"\":{\"docs\":{},\"a\":{\"docs\":{},\"g\":{\"docs\":{},\"g\":{\"docs\":{},\"\\\"\":{\"docs\":{},\")\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}}}}}}}}}}}}}}}},\"l\":{\"docs\":{},\"o\":{\"docs\":{},\"b\":{\"docs\":{},\"a\":{\"docs\":{},\"l\":{\"docs\":{},\"(\":{\"docs\":{},\"\\\"\":{\"docs\":{},\"a\":{\"docs\":{},\"g\":{\"docs\":{},\"g\":{\"docs\":{},\"\\\"\":{\"docs\":{},\")\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}}}}}}}}}}}},\"s\":{\"docs\":{},\"e\":{\"docs\":{},\"t\":{\"docs\":{},\"s\":{\"docs\":{},\"o\":{\"docs\":{},\"u\":{\"docs\":{},\"r\":{\"docs\":{},\"c\":{\"docs\":{},\"e\":{\"docs\":{},\"(\":{\"docs\":{},\"j\":{\"docs\":{},\"s\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{},\")\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.012396694214876033}}},\"b\":{\"docs\":{},\"u\":{\"docs\":{},\"i\":{\"docs\":{},\"l\":{\"docs\":{},\"d\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"(\":{\"docs\":{},\")\":{\"docs\":{\"document-apis/bulk-api.html\":{\"ref\":\"document-apis/bulk-api.html\",\"tf\":0.028985507246376812},\"query-dsl/specialized-queries.html\":{\"ref\":\"query-dsl/specialized-queries.html\",\"tf\":0.004761904761904762}}}}}}}}}}}}}}},\"n\":{\"docs\":{},\"e\":{\"docs\":{},\"w\":{\"docs\":{\"search-api/search-template.html\":{\"ref\":\"search-api/search-template.html\",\"tf\":0.0055248618784530384}}}}}}}}}}},\"c\":{\"docs\":{},\"r\":{\"docs\":{},\"i\":{\"docs\":{},\"p\":{\"docs\":{},\"t\":{\"docs\":{},\"(\":{\"docs\":{},\"n\":{\"docs\":{},\"e\":{\"docs\":{},\"w\":{\"docs\":{\"document-apis/update-api.html\":{\"ref\":\"document-apis/update-api.html\",\"tf\":0.007407407407407408}}}}},\"\\\"\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"m\":{\"docs\":{},\"p\":{\"docs\":{},\"l\":{\"docs\":{},\"a\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"_\":{\"docs\":{},\"g\":{\"docs\":{},\"e\":{\"docs\":{},\"n\":{\"docs\":{},\"d\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"\\\"\":{\"docs\":{},\")\":{\"docs\":{\"search-api/search-template.html\":{\"ref\":\"search-api/search-template.html\",\"tf\":0.011049723756906077}}}}}}}}}}}}}}}}}}},\"{\":{\"docs\":{},\"\\\\\":{\"docs\":{},\"n\":{\"docs\":{},\"\\\"\":{\"docs\":{\"search-api/search-template.html\":{\"ref\":\"search-api/search-template.html\",\"tf\":0.0055248618784530384}}}}}}}},\"l\":{\"docs\":{},\"a\":{\"docs\":{},\"n\":{\"docs\":{},\"g\":{\"docs\":{},\"(\":{\"docs\":{},\"\\\"\":{\"docs\":{},\"m\":{\"docs\":{},\"u\":{\"docs\":{},\"s\":{\"docs\":{},\"t\":{\"docs\":{},\"a\":{\"docs\":{},\"c\":{\"docs\":{},\"h\":{\"docs\":{},\"e\":{\"docs\":{},\"\\\"\":{\"docs\":{},\")\":{\"docs\":{\"search-api/search-template.html\":{\"ref\":\"search-api/search-template.html\",\"tf\":0.0055248618784530384}}}}}}}}}}}}}}}}}},\"p\":{\"docs\":{},\"a\":{\"docs\":{},\"r\":{\"docs\":{},\"a\":{\"docs\":{},\"m\":{\"docs\":{},\"s\":{\"docs\":{},\"(\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"m\":{\"docs\":{},\"p\":{\"docs\":{},\"l\":{\"docs\":{},\"a\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"_\":{\"docs\":{},\"p\":{\"docs\":{},\"a\":{\"docs\":{},\"r\":{\"docs\":{},\"a\":{\"docs\":{},\"m\":{\"docs\":{},\"s\":{\"docs\":{},\")\":{\"docs\":{\"search-api/search-template.html\":{\"ref\":\"search-api/search-template.html\",\"tf\":0.016574585635359115}}}}}}}}}}}}}}}}}}}}}}}}},\"t\":{\"docs\":{},\"y\":{\"docs\":{},\"p\":{\"docs\":{},\"e\":{\"docs\":{},\"(\":{\"docs\":{},\"s\":{\"docs\":{},\"c\":{\"docs\":{},\"r\":{\"docs\":{},\"i\":{\"docs\":{},\"p\":{\"docs\":{},\"t\":{\"docs\":{},\"s\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"v\":{\"docs\":{},\"i\":{\"docs\":{},\"c\":{\"docs\":{},\"e\":{\"docs\":{},\".\":{\"docs\":{},\"s\":{\"docs\":{},\"c\":{\"docs\":{},\"r\":{\"docs\":{},\"i\":{\"docs\":{},\"p\":{\"docs\":{},\"t\":{\"docs\":{},\"t\":{\"docs\":{},\"y\":{\"docs\":{},\"p\":{\"docs\":{},\"e\":{\"docs\":{},\".\":{\"docs\":{},\"f\":{\"docs\":{},\"i\":{\"docs\":{},\"l\":{\"docs\":{},\"e\":{\"docs\":{},\")\":{\"docs\":{\"search-api/search-template.html\":{\"ref\":\"search-api/search-template.html\",\"tf\":0.0055248618784530384}}}}}}}}}}}}}}}}}}}}}}}}}},\"t\":{\"docs\":{},\"y\":{\"docs\":{},\"p\":{\"docs\":{},\"e\":{\"docs\":{},\".\":{\"docs\":{},\"i\":{\"docs\":{},\"n\":{\"docs\":{},\"l\":{\"docs\":{},\"i\":{\"docs\":{},\"n\":{\"docs\":{},\"e\":{\"docs\":{},\")\":{\"docs\":{\"search-api/search-template.html\":{\"ref\":\"search-api/search-template.html\",\"tf\":0.0055248618784530384}}}}}}}}},\"s\":{\"docs\":{},\"t\":{\"docs\":{},\"o\":{\"docs\":{},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"d\":{\"docs\":{},\")\":{\"docs\":{\"search-api/search-template.html\":{\"ref\":\"search-api/search-template.html\",\"tf\":0.0055248618784530384}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"o\":{\"docs\":{},\"l\":{\"docs\":{},\"l\":{\"docs\":{},\"(\":{\"docs\":{},\"n\":{\"docs\":{},\"e\":{\"docs\":{},\"w\":{\"docs\":{\"search-api/using-scrolls-in-java.html\":{\"ref\":\"search-api/using-scrolls-in-java.html\",\"tf\":0.00546448087431694}}}}}}}}}}},\"e\":{\"docs\":{},\"a\":{\"docs\":{},\"r\":{\"docs\":{},\"c\":{\"docs\":{},\"h\":{\"docs\":{},\"t\":{\"docs\":{},\"y\":{\"docs\":{},\"p\":{\"docs\":{},\"e\":{\"docs\":{},\"(\":{\"docs\":{},\"s\":{\"docs\":{},\"e\":{\"docs\":{},\"a\":{\"docs\":{},\"r\":{\"docs\":{},\"c\":{\"docs\":{},\"h\":{\"docs\":{},\"t\":{\"docs\":{},\"y\":{\"docs\":{},\"p\":{\"docs\":{},\"e\":{\"docs\":{},\".\":{\"docs\":{},\"d\":{\"docs\":{},\"f\":{\"docs\":{},\"s\":{\"docs\":{},\"_\":{\"docs\":{},\"q\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"y\":{\"docs\":{},\"_\":{\"docs\":{},\"t\":{\"docs\":{},\"h\":{\"docs\":{},\"e\":{\"docs\":{},\"n\":{\"docs\":{},\"_\":{\"docs\":{},\"f\":{\"docs\":{},\"e\":{\"docs\":{},\"t\":{\"docs\":{},\"c\":{\"docs\":{},\"h\":{\"docs\":{},\")\":{\"docs\":{\"search-api.html\":{\"ref\":\"search-api.html\",\"tf\":0.017241379310344827}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"i\":{\"docs\":{},\"z\":{\"docs\":{},\"e\":{\"docs\":{},\"(\":{\"1\":{\"0\":{\"0\":{\"docs\":{},\")\":{\"docs\":{},\".\":{\"docs\":{},\"g\":{\"docs\":{},\"e\":{\"docs\":{},\"t\":{\"docs\":{},\"(\":{\"docs\":{},\")\":{\"docs\":{},\";\":{\"docs\":{\"search-api/using-scrolls-in-java.html\":{\"ref\":\"search-api/using-scrolls-in-java.html\",\"tf\":0.00546448087431694}}}}}}}}}}},\"docs\":{}},\"docs\":{}},\"docs\":{}}}}}},\"o\":{\"docs\":{},\"p\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"a\":{\"docs\":{},\"t\":{\"docs\":{},\"i\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{},\"t\":{\"docs\":{},\"h\":{\"docs\":{},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"a\":{\"docs\":{},\"d\":{\"docs\":{},\"e\":{\"docs\":{},\"d\":{\"docs\":{},\"(\":{\"docs\":{},\"f\":{\"docs\":{},\"a\":{\"docs\":{},\"l\":{\"docs\":{},\"s\":{\"docs\":{},\"e\":{\"docs\":{},\")\":{\"docs\":{\"document-apis/get-api.html\":{\"ref\":\"document-apis/get-api.html\",\"tf\":0.034482758620689655},\"document-apis/delete-api.html\":{\"ref\":\"document-apis/delete-api.html\",\"tf\":0.05263157894736842}}}}}}}}}}}}}}}}}}}}}}}}}},\"d\":{\"docs\":{},\"o\":{\"docs\":{},\"c\":{\"docs\":{},\"(\":{\"docs\":{},\"j\":{\"docs\":{},\"s\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{},\"b\":{\"docs\":{},\"u\":{\"docs\":{},\"i\":{\"docs\":{},\"l\":{\"docs\":{},\"d\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"(\":{\"docs\":{},\")\":{\"docs\":{\"document-apis/update-api.html\":{\"ref\":\"document-apis/update-api.html\",\"tf\":0.007407407407407408}}}}}}}}}}}}}}}}}}},\"b\":{\"docs\":{},\"a\":{\"docs\":{},\"c\":{\"docs\":{},\"k\":{\"docs\":{},\"o\":{\"docs\":{},\"f\":{\"docs\":{},\"f\":{\"docs\":{},\"p\":{\"docs\":{},\"o\":{\"docs\":{},\"l\":{\"docs\":{},\"i\":{\"docs\":{},\"c\":{\"docs\":{},\"y\":{\"docs\":{},\"(\":{\"docs\":{\"document-apis/using-bulk-processor.html\":{\"ref\":\"document-apis/using-bulk-processor.html\",\"tf\":0.006024096385542169}}}}}}}}}}}}}}},\"u\":{\"docs\":{},\"l\":{\"docs\":{},\"k\":{\"docs\":{},\"a\":{\"docs\":{},\"c\":{\"docs\":{},\"t\":{\"docs\":{},\"i\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{},\"s\":{\"docs\":{},\"(\":{\"1\":{\"0\":{\"0\":{\"0\":{\"0\":{\"docs\":{},\")\":{\"docs\":{\"document-apis/using-bulk-processor.html\":{\"ref\":\"document-apis/using-bulk-processor.html\",\"tf\":0.012048192771084338}}}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}}}}}}}}},\"s\":{\"docs\":{},\"i\":{\"docs\":{},\"z\":{\"docs\":{},\"e\":{\"docs\":{},\"(\":{\"docs\":{},\"n\":{\"docs\":{},\"e\":{\"docs\":{},\"w\":{\"docs\":{\"document-apis/using-bulk-processor.html\":{\"ref\":\"document-apis/using-bulk-processor.html\",\"tf\":0.006024096385542169}}}}}}}}}}}}}},\"c\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{},\"c\":{\"docs\":{},\"u\":{\"docs\":{},\"r\":{\"docs\":{},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"n\":{\"docs\":{},\"t\":{\"docs\":{},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"q\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"docs\":{},\"s\":{\"docs\":{},\"t\":{\"docs\":{},\"s\":{\"docs\":{},\"(\":{\"0\":{\"docs\":{},\")\":{\"docs\":{\"document-apis/using-bulk-processor.html\":{\"ref\":\"document-apis/using-bulk-processor.html\",\"tf\":0.006024096385542169}}}},\"1\":{\"docs\":{},\")\":{\"docs\":{\"document-apis/using-bulk-processor.html\":{\"ref\":\"document-apis/using-bulk-processor.html\",\"tf\":0.006024096385542169}}}},\"docs\":{}}}}}}}}}}}}}}}}}},\"r\":{\"docs\":{},\"n\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"s\":{\"docs\":{},\"(\":{\"4\":{\"0\":{\"docs\":{},\".\":{\"7\":{\"3\":{\"docs\":{},\",\":{\"docs\":{\"query-dsl/geo-queries.html\":{\"ref\":\"query-dsl/geo-queries.html\",\"tf\":0.004901960784313725}}}},\"docs\":{}},\"docs\":{}}},\"docs\":{}},\"docs\":{}}}}}}}}},\"f\":{\"docs\":{},\"l\":{\"docs\":{},\"u\":{\"docs\":{},\"s\":{\"docs\":{},\"h\":{\"docs\":{},\"i\":{\"docs\":{},\"n\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"v\":{\"docs\":{},\"a\":{\"docs\":{},\"l\":{\"docs\":{},\"(\":{\"docs\":{},\"t\":{\"docs\":{},\"i\":{\"docs\":{},\"m\":{\"docs\":{},\"e\":{\"docs\":{},\"v\":{\"docs\":{},\"a\":{\"docs\":{},\"l\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"docs\":{},\".\":{\"docs\":{},\"t\":{\"docs\":{},\"i\":{\"docs\":{},\"m\":{\"docs\":{},\"e\":{\"docs\":{},\"v\":{\"docs\":{},\"a\":{\"docs\":{},\"l\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"docs\":{},\"s\":{\"docs\":{},\"e\":{\"docs\":{},\"c\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{},\"d\":{\"docs\":{},\"s\":{\"docs\":{},\"(\":{\"5\":{\"docs\":{},\")\":{\"docs\":{},\")\":{\"docs\":{\"document-apis/using-bulk-processor.html\":{\"ref\":\"document-apis/using-bulk-processor.html\",\"tf\":0.006024096385542169}}}}},\"docs\":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"r\":{\"docs\":{},\"o\":{\"docs\":{},\"m\":{\"docs\":{},\"(\":{\"0\":{\"docs\":{},\")\":{\"docs\":{},\".\":{\"docs\":{},\"s\":{\"docs\":{},\"e\":{\"docs\":{},\"t\":{\"docs\":{},\"s\":{\"docs\":{},\"i\":{\"docs\":{},\"z\":{\"docs\":{},\"e\":{\"docs\":{},\"(\":{\"6\":{\"0\":{\"docs\":{},\")\":{\"docs\":{},\".\":{\"docs\":{},\"s\":{\"docs\":{},\"e\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"x\":{\"docs\":{},\"p\":{\"docs\":{},\"l\":{\"docs\":{},\"a\":{\"docs\":{},\"i\":{\"docs\":{},\"n\":{\"docs\":{},\"(\":{\"docs\":{},\"t\":{\"docs\":{},\"r\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"docs\":{},\")\":{\"docs\":{\"search-api.html\":{\"ref\":\"search-api.html\",\"tf\":0.017241379310344827}}}}}}}}}}}}}}}}}}}}},\"docs\":{}},\"docs\":{}}}}}}}}}}}},\"docs\":{}}}}}},\"p\":{\"docs\":{},\"o\":{\"docs\":{},\"s\":{\"docs\":{},\"t\":{\"docs\":{},\"f\":{\"docs\":{},\"i\":{\"docs\":{},\"l\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"(\":{\"docs\":{},\"q\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"y\":{\"docs\":{},\"b\":{\"docs\":{},\"u\":{\"docs\":{},\"i\":{\"docs\":{},\"l\":{\"docs\":{},\"d\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"s\":{\"docs\":{},\".\":{\"docs\":{},\"r\":{\"docs\":{},\"a\":{\"docs\":{},\"n\":{\"docs\":{},\"g\":{\"docs\":{},\"e\":{\"docs\":{},\"q\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"y\":{\"docs\":{},\"(\":{\"docs\":{},\"\\\"\":{\"docs\":{},\"a\":{\"docs\":{},\"g\":{\"docs\":{},\"e\":{\"docs\":{},\"\\\"\":{\"docs\":{},\")\":{\"docs\":{},\".\":{\"docs\":{},\"f\":{\"docs\":{},\"r\":{\"docs\":{},\"o\":{\"docs\":{},\"m\":{\"docs\":{},\"(\":{\"1\":{\"2\":{\"docs\":{},\")\":{\"docs\":{},\".\":{\"docs\":{},\"t\":{\"docs\":{},\"o\":{\"docs\":{},\"(\":{\"1\":{\"8\":{\"docs\":{},\")\":{\"docs\":{},\")\":{\"docs\":{\"search-api.html\":{\"ref\":\"search-api.html\",\"tf\":0.017241379310344827}}}}},\"docs\":{}},\"docs\":{}}}}}}},\"docs\":{}},\"docs\":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"q\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"y\":{\"docs\":{},\"(\":{\"docs\":{\"aggregations.html\":{\"ref\":\"aggregations.html\",\"tf\":0.038461538461538464}},\"q\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"y\":{\"docs\":{},\"b\":{\"docs\":{},\"u\":{\"docs\":{},\"i\":{\"docs\":{},\"l\":{\"docs\":{},\"d\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"s\":{\"docs\":{},\".\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"m\":{\"docs\":{},\"q\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"y\":{\"docs\":{},\"(\":{\"docs\":{},\"\\\"\":{\"docs\":{},\"m\":{\"docs\":{},\"u\":{\"docs\":{},\"l\":{\"docs\":{},\"t\":{\"docs\":{},\"i\":{\"docs\":{},\"\\\"\":{\"docs\":{},\",\":{\"docs\":{\"search-api.html\":{\"ref\":\"search-api.html\",\"tf\":0.017241379310344827}}}}}}}}},\"g\":{\"docs\":{},\"e\":{\"docs\":{},\"n\":{\"docs\":{},\"d\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"\\\"\":{\"docs\":{},\",\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}}}}}}}}}}}}}}}}}},\"m\":{\"docs\":{},\"a\":{\"docs\":{},\"t\":{\"docs\":{},\"c\":{\"docs\":{},\"h\":{\"docs\":{},\"a\":{\"docs\":{},\"l\":{\"docs\":{},\"l\":{\"docs\":{},\"q\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"y\":{\"docs\":{},\"(\":{\"docs\":{},\")\":{\"docs\":{},\")\":{\"docs\":{\"search-api/using-aggregations.html\":{\"ref\":\"search-api/using-aggregations.html\",\"tf\":0.029411764705882353}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"b\":{\"docs\":{},\")\":{\"docs\":{\"search-api/using-scrolls-in-java.html\":{\"ref\":\"search-api/using-scrolls-in-java.html\",\"tf\":0.00546448087431694}}}}},\"p\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"c\":{\"docs\":{},\"o\":{\"docs\":{},\"l\":{\"docs\":{},\"a\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"q\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"y\":{\"docs\":{},\")\":{\"docs\":{},\")\":{\"docs\":{\"query-dsl/specialized-queries.html\":{\"ref\":\"query-dsl/specialized-queries.html\",\"tf\":0.004761904761904762}}}}}}}}}}}}}}}}}}}}}}}},\"t\":{\"docs\":{},\"y\":{\"docs\":{},\"p\":{\"docs\":{},\"e\":{\"docs\":{},\"s\":{\"docs\":{},\"(\":{\"docs\":{},\"\\\"\":{\"docs\":{},\"t\":{\"docs\":{},\"y\":{\"docs\":{},\"p\":{\"docs\":{},\"e\":{\"1\":{\"docs\":{},\"\\\"\":{\"docs\":{},\",\":{\"docs\":{\"search-api.html\":{\"ref\":\"search-api.html\",\"tf\":0.017241379310344827}}}}},\"docs\":{}}}}}}}}}}},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"m\":{\"docs\":{},\"i\":{\"docs\":{},\"n\":{\"docs\":{},\"a\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"a\":{\"docs\":{},\"f\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"(\":{\"1\":{\"0\":{\"0\":{\"0\":{\"docs\":{},\")\":{\"docs\":{\"search-api/terminate-after.html\":{\"ref\":\"search-api/terminate-after.html\",\"tf\":0.0625}}}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}}}}}}}}}}}}}}}},\"i\":{\"docs\":{},\"d\":{\"docs\":{},\"(\":{\"docs\":{},\"\\\"\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"m\":{\"docs\":{},\"p\":{\"docs\":{},\"l\":{\"docs\":{},\"a\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"_\":{\"docs\":{},\"g\":{\"docs\":{},\"e\":{\"docs\":{},\"n\":{\"docs\":{},\"d\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"\\\"\":{\"docs\":{},\")\":{\"docs\":{\"search-api/search-template.html\":{\"ref\":\"search-api/search-template.html\",\"tf\":0.0055248618784530384}}}}}}}}}}}}}}}}}}}}}}},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"q\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"docs\":{},\"s\":{\"docs\":{},\"t\":{\"docs\":{},\"(\":{\"docs\":{},\"n\":{\"docs\":{},\"e\":{\"docs\":{},\"w\":{\"docs\":{\"search-api/search-template.html\":{\"ref\":\"search-api/search-template.html\",\"tf\":0.016574585635359115}}}}}}}}}}},\"f\":{\"docs\":{},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"s\":{\"docs\":{},\"h\":{\"docs\":{},\"p\":{\"docs\":{},\"o\":{\"docs\":{},\"l\":{\"docs\":{},\"i\":{\"docs\":{},\"c\":{\"docs\":{},\"y\":{\"docs\":{},\"(\":{\"docs\":{},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"f\":{\"docs\":{},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"s\":{\"docs\":{},\"h\":{\"docs\":{},\"p\":{\"docs\":{},\"o\":{\"docs\":{},\"l\":{\"docs\":{},\"i\":{\"docs\":{},\"c\":{\"docs\":{},\"y\":{\"docs\":{},\".\":{\"docs\":{},\"i\":{\"docs\":{},\"m\":{\"docs\":{},\"m\":{\"docs\":{},\"e\":{\"docs\":{},\"d\":{\"docs\":{},\"i\":{\"docs\":{},\"a\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\")\":{\"docs\":{\"query-dsl/specialized-queries.html\":{\"ref\":\"query-dsl/specialized-queries.html\",\"tf\":0.004761904761904762}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"t\":{\"docs\":{},\"a\":{\"docs\":{},\"r\":{\"docs\":{},\"t\":{\"docs\":{},\"o\":{\"docs\":{},\"b\":{\"docs\":{},\"j\":{\"docs\":{},\"e\":{\"docs\":{},\"c\":{\"docs\":{},\"t\":{\"docs\":{},\"(\":{\"docs\":{},\")\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.004132231404958678},\"document-apis/update-api.html\":{\"ref\":\"document-apis/update-api.html\",\"tf\":0.037037037037037035},\"document-apis/bulk-api.html\":{\"ref\":\"document-apis/bulk-api.html\",\"tf\":0.028985507246376812},\"query-dsl/specialized-queries.html\":{\"ref\":\"query-dsl/specialized-queries.html\",\"tf\":0.004761904761904762}}}}}}}}}}}},\"t\":{\"docs\":{},\"s\":{\"docs\":{},\"(\":{\"docs\":{},\"\\\"\":{\"docs\":{},\"a\":{\"docs\":{},\"g\":{\"docs\":{},\"g\":{\"docs\":{},\"\\\"\":{\"docs\":{},\")\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}}}}}}}}}}}}},\"o\":{\"docs\":{},\"u\":{\"docs\":{},\"r\":{\"docs\":{},\"c\":{\"docs\":{},\"e\":{\"docs\":{},\"(\":{\"docs\":{},\"\\\"\":{\"docs\":{},\"p\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"s\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{},\"s\":{\"docs\":{},\"\\\"\":{\"docs\":{},\")\":{\"docs\":{\"document-apis/delete-by-query-api.html\":{\"ref\":\"document-apis/delete-by-query-api.html\",\"tf\":0.037037037037037035}}}}}}}}}}}},\"j\":{\"docs\":{},\"s\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{},\"b\":{\"docs\":{},\"u\":{\"docs\":{},\"i\":{\"docs\":{},\"l\":{\"docs\":{},\"d\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"(\":{\"docs\":{},\")\":{\"docs\":{\"document-apis/update-api.html\":{\"ref\":\"document-apis/update-api.html\",\"tf\":0.007407407407407408}}}}}}}}}}}}}}}}}}}}},\"c\":{\"docs\":{},\"r\":{\"docs\":{},\"i\":{\"docs\":{},\"p\":{\"docs\":{},\"t\":{\"docs\":{},\"(\":{\"docs\":{},\"n\":{\"docs\":{},\"e\":{\"docs\":{},\"w\":{\"docs\":{\"document-apis/update-api.html\":{\"ref\":\"document-apis/update-api.html\",\"tf\":0.007407407407407408}}}}}}}}}}},\"u\":{\"docs\":{},\"b\":{\"docs\":{},\"a\":{\"docs\":{},\"g\":{\"docs\":{},\"g\":{\"docs\":{},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"g\":{\"docs\":{},\"a\":{\"docs\":{},\"t\":{\"docs\":{},\"i\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{},\"(\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00291970802919708},\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0024793388429752068}},\"a\":{\"docs\":{},\"g\":{\"docs\":{},\"g\":{\"docs\":{},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"g\":{\"docs\":{},\"a\":{\"docs\":{},\"t\":{\"docs\":{},\"i\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{},\"b\":{\"docs\":{},\"u\":{\"docs\":{},\"i\":{\"docs\":{},\"l\":{\"docs\":{},\"d\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"s\":{\"docs\":{},\".\":{\"docs\":{},\"a\":{\"docs\":{},\"v\":{\"docs\":{},\"g\":{\"docs\":{},\"(\":{\"docs\":{},\"\\\"\":{\"docs\":{},\"a\":{\"docs\":{},\"v\":{\"docs\":{},\"g\":{\"docs\":{},\"_\":{\"docs\":{},\"c\":{\"docs\":{},\"h\":{\"docs\":{},\"i\":{\"docs\":{},\"l\":{\"docs\":{},\"d\":{\"docs\":{},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"n\":{\"docs\":{},\"\\\"\":{\"docs\":{},\")\":{\"docs\":{},\".\":{\"docs\":{},\"f\":{\"docs\":{},\"i\":{\"docs\":{},\"e\":{\"docs\":{},\"l\":{\"docs\":{},\"d\":{\"docs\":{},\"(\":{\"docs\":{},\"\\\"\":{\"docs\":{},\"c\":{\"docs\":{},\"h\":{\"docs\":{},\"i\":{\"docs\":{},\"l\":{\"docs\":{},\"d\":{\"docs\":{},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"n\":{\"docs\":{},\"\\\"\":{\"docs\":{},\")\":{\"docs\":{},\")\":{\"docs\":{\"aggregations/structuring-aggregations.html\":{\"ref\":\"aggregations/structuring-aggregations.html\",\"tf\":0.02702702702702703}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"d\":{\"docs\":{},\"a\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"h\":{\"docs\":{},\"i\":{\"docs\":{},\"s\":{\"docs\":{},\"t\":{\"docs\":{},\"o\":{\"docs\":{},\"g\":{\"docs\":{},\"r\":{\"docs\":{},\"a\":{\"docs\":{},\"m\":{\"docs\":{},\"(\":{\"docs\":{},\"\\\"\":{\"docs\":{},\"b\":{\"docs\":{},\"y\":{\"docs\":{},\"_\":{\"docs\":{},\"y\":{\"docs\":{},\"e\":{\"docs\":{},\"a\":{\"docs\":{},\"r\":{\"docs\":{},\"\\\"\":{\"docs\":{},\")\":{\"docs\":{\"aggregations/structuring-aggregations.html\":{\"ref\":\"aggregations/structuring-aggregations.html\",\"tf\":0.02702702702702703}}}}}}}}}}}}}}}}}}}}}}}}}},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"m\":{\"docs\":{},\"s\":{\"docs\":{},\"(\":{\"docs\":{},\"\\\"\":{\"docs\":{},\"g\":{\"docs\":{},\"e\":{\"docs\":{},\"n\":{\"docs\":{},\"d\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"s\":{\"docs\":{},\"\\\"\":{\"docs\":{},\")\":{\"docs\":{},\".\":{\"docs\":{},\"f\":{\"docs\":{},\"i\":{\"docs\":{},\"e\":{\"docs\":{},\"l\":{\"docs\":{},\"d\":{\"docs\":{},\"(\":{\"docs\":{},\"\\\"\":{\"docs\":{},\"g\":{\"docs\":{},\"e\":{\"docs\":{},\"n\":{\"docs\":{},\"d\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"\\\"\":{\"docs\":{},\")\":{\"docs\":{},\")\":{\"docs\":{},\";\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"m\":{\"docs\":{},\"(\":{\"docs\":{},\"\\\"\":{\"docs\":{},\"a\":{\"docs\":{},\"g\":{\"docs\":{},\"g\":{\"docs\":{},\"\\\"\":{\"docs\":{},\")\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}}}}}}}}}}},\"i\":{\"docs\":{},\"z\":{\"docs\":{},\"e\":{\"docs\":{},\"(\":{\"1\":{\"docs\":{},\")\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}}}},\"docs\":{}}}},\"g\":{\"docs\":{},\"n\":{\"docs\":{},\"i\":{\"docs\":{},\"f\":{\"docs\":{},\"i\":{\"docs\":{},\"c\":{\"docs\":{},\"a\":{\"docs\":{},\"n\":{\"docs\":{},\"t\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"m\":{\"docs\":{},\"s\":{\"docs\":{},\"(\":{\"docs\":{},\"\\\"\":{\"docs\":{},\"s\":{\"docs\":{},\"i\":{\"docs\":{},\"g\":{\"docs\":{},\"n\":{\"docs\":{},\"i\":{\"docs\":{},\"f\":{\"docs\":{},\"i\":{\"docs\":{},\"c\":{\"docs\":{},\"a\":{\"docs\":{},\"n\":{\"docs\":{},\"t\":{\"docs\":{},\"_\":{\"docs\":{},\"c\":{\"docs\":{},\"o\":{\"docs\":{},\"u\":{\"docs\":{},\"n\":{\"docs\":{},\"t\":{\"docs\":{},\"r\":{\"docs\":{},\"i\":{\"docs\":{},\"e\":{\"docs\":{},\"s\":{\"docs\":{},\"\\\"\":{\"docs\":{},\")\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"h\":{\"docs\":{},\"o\":{\"docs\":{},\"u\":{\"docs\":{},\"l\":{\"docs\":{},\"d\":{\"docs\":{},\"(\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"m\":{\"docs\":{},\"q\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"y\":{\"docs\":{},\"(\":{\"docs\":{},\"\\\"\":{\"docs\":{},\"c\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"n\":{\"docs\":{},\"t\":{\"docs\":{},\"\\\"\":{\"docs\":{},\",\":{\"docs\":{\"query-dsl/compound-queries.html\":{\"ref\":\"query-dsl/compound-queries.html\",\"tf\":0.005847953216374269}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"d\":{\"docs\":{},\"o\":{\"docs\":{},\"c\":{\"docs\":{},\"(\":{\"docs\":{},\"j\":{\"docs\":{},\"s\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{},\"b\":{\"docs\":{},\"u\":{\"docs\":{},\"i\":{\"docs\":{},\"l\":{\"docs\":{},\"d\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"(\":{\"docs\":{},\")\":{\"docs\":{\"document-apis/update-api.html\":{\"ref\":\"document-apis/update-api.html\",\"tf\":0.014814814814814815}}}}}}}}}}}}}}}}}},\"a\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"h\":{\"docs\":{},\"i\":{\"docs\":{},\"s\":{\"docs\":{},\"t\":{\"docs\":{},\"o\":{\"docs\":{},\"g\":{\"docs\":{},\"r\":{\"docs\":{},\"a\":{\"docs\":{},\"m\":{\"docs\":{},\"i\":{\"docs\":{},\"n\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"v\":{\"docs\":{},\"a\":{\"docs\":{},\"l\":{\"docs\":{},\"(\":{\"docs\":{},\"d\":{\"docs\":{},\"a\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"h\":{\"docs\":{},\"i\":{\"docs\":{},\"s\":{\"docs\":{},\"t\":{\"docs\":{},\"o\":{\"docs\":{},\"g\":{\"docs\":{},\"r\":{\"docs\":{},\"a\":{\"docs\":{},\"m\":{\"docs\":{},\"i\":{\"docs\":{},\"n\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"v\":{\"docs\":{},\"a\":{\"docs\":{},\"l\":{\"docs\":{},\".\":{\"docs\":{},\"y\":{\"docs\":{},\"e\":{\"docs\":{},\"a\":{\"docs\":{},\"r\":{\"docs\":{},\")\":{\"docs\":{\"search-api/using-aggregations.html\":{\"ref\":\"search-api/using-aggregations.html\",\"tf\":0.029411764705882353},\"aggregations/structuring-aggregations.html\":{\"ref\":\"aggregations/structuring-aggregations.html\",\"tf\":0.02702702702702703}},\";\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}}}}},\"d\":{\"docs\":{},\"a\":{\"docs\":{},\"y\":{\"docs\":{},\"s\":{\"docs\":{},\"(\":{\"1\":{\"0\":{\"docs\":{},\")\":{\"docs\":{},\")\":{\"docs\":{},\";\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}}},\"docs\":{}},\"docs\":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"(\":{\"docs\":{},\"\\\"\":{\"docs\":{},\"a\":{\"docs\":{},\"g\":{\"docs\":{},\"g\":{\"docs\":{},\"\\\"\":{\"docs\":{},\")\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.001652892561983471}}}}}}}}}}}}}}}}}},\"r\":{\"docs\":{},\"a\":{\"docs\":{},\"n\":{\"docs\":{},\"g\":{\"docs\":{},\"e\":{\"docs\":{},\"(\":{\"docs\":{},\"\\\"\":{\"docs\":{},\"a\":{\"docs\":{},\"g\":{\"docs\":{},\"g\":{\"docs\":{},\"\\\"\":{\"docs\":{},\")\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}}}}}}}}}}}}}},\"i\":{\"docs\":{},\"s\":{\"docs\":{},\"t\":{\"docs\":{},\"a\":{\"docs\":{},\"n\":{\"docs\":{},\"c\":{\"docs\":{},\"e\":{\"docs\":{},\"(\":{\"2\":{\"0\":{\"0\":{\"docs\":{},\",\":{\"docs\":{\"query-dsl/geo-queries.html\":{\"ref\":\"query-dsl/geo-queries.html\",\"tf\":0.004901960784313725}}}},\"docs\":{}},\"docs\":{}},\"docs\":{}}}}}}}}}},\"u\":{\"docs\":{},\"p\":{\"docs\":{},\"s\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"t\":{\"docs\":{},\"(\":{\"docs\":{},\"i\":{\"docs\":{},\"n\":{\"docs\":{},\"d\":{\"docs\":{},\"e\":{\"docs\":{},\"x\":{\"docs\":{},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"q\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"docs\":{},\"s\":{\"docs\":{},\"t\":{\"docs\":{},\")\":{\"docs\":{},\";\":{\"docs\":{\"document-apis/update-api.html\":{\"ref\":\"document-apis/update-api.html\",\"tf\":0.007407407407407408}}}}}}}}}}}}}}}}}}}}}},\"n\":{\"docs\":{},\"i\":{\"docs\":{},\"t\":{\"docs\":{},\"(\":{\"docs\":{},\"d\":{\"docs\":{},\"i\":{\"docs\":{},\"s\":{\"docs\":{},\"t\":{\"docs\":{},\"a\":{\"docs\":{},\"n\":{\"docs\":{},\"c\":{\"docs\":{},\"e\":{\"docs\":{},\"u\":{\"docs\":{},\"n\":{\"docs\":{},\"i\":{\"docs\":{},\"t\":{\"docs\":{},\".\":{\"docs\":{},\"k\":{\"docs\":{},\"i\":{\"docs\":{},\"l\":{\"docs\":{},\"o\":{\"docs\":{},\"m\":{\"docs\":{},\"e\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"s\":{\"docs\":{},\")\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"c\":{\"docs\":{},\"a\":{\"docs\":{},\"r\":{\"docs\":{},\"d\":{\"docs\":{},\"i\":{\"docs\":{},\"n\":{\"docs\":{},\"a\":{\"docs\":{},\"l\":{\"docs\":{},\"i\":{\"docs\":{},\"t\":{\"docs\":{},\"y\":{\"docs\":{},\"(\":{\"docs\":{},\"\\\"\":{\"docs\":{},\"a\":{\"docs\":{},\"g\":{\"docs\":{},\"g\":{\"docs\":{},\"\\\"\":{\"docs\":{},\")\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}}}}}}}}}}}}}}}}}}},\"o\":{\"docs\":{},\"u\":{\"docs\":{},\"n\":{\"docs\":{},\"t\":{\"docs\":{},\"(\":{\"docs\":{},\"\\\"\":{\"docs\":{},\"a\":{\"docs\":{},\"g\":{\"docs\":{},\"g\":{\"docs\":{},\"\\\"\":{\"docs\":{},\")\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}}}}}}}}}}}}},\"h\":{\"docs\":{},\"i\":{\"docs\":{},\"l\":{\"docs\":{},\"d\":{\"docs\":{},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"n\":{\"docs\":{},\"(\":{\"docs\":{},\"\\\"\":{\"docs\":{},\"a\":{\"docs\":{},\"g\":{\"docs\":{},\"g\":{\"docs\":{},\"\\\"\":{\"docs\":{},\",\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}}}}}}}}}}}}}},\"m\":{\"docs\":{},\"a\":{\"docs\":{},\"x\":{\"docs\":{},\"(\":{\"docs\":{},\"\\\"\":{\"docs\":{},\"a\":{\"docs\":{},\"g\":{\"docs\":{},\"g\":{\"docs\":{},\"\\\"\":{\"docs\":{},\")\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}}}}}}}}},\"q\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"y\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"m\":{\"docs\":{},\"s\":{\"docs\":{},\"(\":{\"1\":{\"2\":{\"docs\":{},\")\":{\"docs\":{},\";\":{\"docs\":{\"query-dsl/specialized-queries.html\":{\"ref\":\"query-dsl/specialized-queries.html\",\"tf\":0.004761904761904762}}}}},\"docs\":{}},\"docs\":{}}}}}}}}}}}}}},\"i\":{\"docs\":{},\"n\":{\"docs\":{},\"(\":{\"docs\":{},\"\\\"\":{\"docs\":{},\"a\":{\"docs\":{},\"g\":{\"docs\":{},\"g\":{\"docs\":{},\"\\\"\":{\"docs\":{},\")\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}}}}}}}}},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"m\":{\"docs\":{},\"f\":{\"docs\":{},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"q\":{\"docs\":{},\"(\":{\"1\":{\"docs\":{},\")\":{\"docs\":{\"query-dsl/specialized-queries.html\":{\"ref\":\"query-dsl/specialized-queries.html\",\"tf\":0.004761904761904762}}}},\"docs\":{}}}}}}}}}}}},\"u\":{\"docs\":{},\"s\":{\"docs\":{},\"t\":{\"docs\":{},\"(\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"m\":{\"docs\":{},\"q\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"y\":{\"docs\":{},\"(\":{\"docs\":{},\"\\\"\":{\"docs\":{},\"c\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"n\":{\"docs\":{},\"t\":{\"docs\":{},\"\\\"\":{\"docs\":{},\",\":{\"docs\":{\"query-dsl/compound-queries.html\":{\"ref\":\"query-dsl/compound-queries.html\",\"tf\":0.011695906432748537}}}}}}}}}}}}}}}}}}}}}},\"m\":{\"docs\":{},\"a\":{\"docs\":{},\"t\":{\"docs\":{},\"c\":{\"docs\":{},\"h\":{\"docs\":{},\"q\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"y\":{\"docs\":{},\"(\":{\"docs\":{},\"\\\"\":{\"docs\":{},\"o\":{\"docs\":{},\"b\":{\"docs\":{},\"j\":{\"1\":{\"docs\":{},\".\":{\"docs\":{},\"n\":{\"docs\":{},\"a\":{\"docs\":{},\"m\":{\"docs\":{},\"e\":{\"docs\":{},\"\\\"\":{\"docs\":{},\",\":{\"docs\":{\"query-dsl/joining-queries.html\":{\"ref\":\"query-dsl/joining-queries.html\",\"tf\":0.007194244604316547}}}}}}}}}},\"docs\":{}}}}}}}}}}}}}}}},\"r\":{\"docs\":{},\"a\":{\"docs\":{},\"n\":{\"docs\":{},\"g\":{\"docs\":{},\"e\":{\"docs\":{},\"q\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"y\":{\"docs\":{},\"(\":{\"docs\":{},\"\\\"\":{\"docs\":{},\"o\":{\"docs\":{},\"b\":{\"docs\":{},\"j\":{\"1\":{\"docs\":{},\".\":{\"docs\":{},\"c\":{\"docs\":{},\"o\":{\"docs\":{},\"u\":{\"docs\":{},\"n\":{\"docs\":{},\"t\":{\"docs\":{},\"\\\"\":{\"docs\":{},\")\":{\"docs\":{},\".\":{\"docs\":{},\"g\":{\"docs\":{},\"t\":{\"docs\":{},\"(\":{\"5\":{\"docs\":{},\")\":{\"docs\":{},\")\":{\"docs\":{},\",\":{\"docs\":{\"query-dsl/joining-queries.html\":{\"ref\":\"query-dsl/joining-queries.html\",\"tf\":0.007194244604316547}}}}}},\"docs\":{}}}}}}}}}}}}}},\"docs\":{}}}}}}}}}}}}}}}}},\"n\":{\"docs\":{},\"o\":{\"docs\":{},\"t\":{\"docs\":{},\"(\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"m\":{\"docs\":{},\"q\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"y\":{\"docs\":{},\"(\":{\"docs\":{},\"\\\"\":{\"docs\":{},\"c\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"n\":{\"docs\":{},\"t\":{\"docs\":{},\"\\\"\":{\"docs\":{},\",\":{\"docs\":{\"query-dsl/compound-queries.html\":{\"ref\":\"query-dsl/compound-queries.html\",\"tf\":0.005847953216374269}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"m\":{\"docs\":{},\"s\":{\"docs\":{},\"(\":{\"docs\":{},\"\\\"\":{\"docs\":{},\"a\":{\"docs\":{},\"g\":{\"docs\":{},\"g\":{\"docs\":{},\"\\\"\":{\"docs\":{},\")\":{\"docs\":{},\".\":{\"docs\":{},\"f\":{\"docs\":{},\"i\":{\"docs\":{},\"e\":{\"docs\":{},\"l\":{\"docs\":{},\"d\":{\"docs\":{},\"(\":{\"docs\":{},\"\\\"\":{\"docs\":{},\"g\":{\"docs\":{},\"e\":{\"docs\":{},\"n\":{\"docs\":{},\"d\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"\\\"\":{\"docs\":{},\")\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00291970802919708}}}}}}}}}}}}}}}}}}}}}}},\"g\":{\"docs\":{},\"e\":{\"docs\":{},\"n\":{\"docs\":{},\"d\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"s\":{\"docs\":{},\"\\\"\":{\"docs\":{},\")\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.003305785123966942}}}}}}}}}}},\"n\":{\"docs\":{},\"a\":{\"docs\":{},\"m\":{\"docs\":{},\"e\":{\"docs\":{},\"\\\"\":{\"docs\":{},\")\":{\"docs\":{},\".\":{\"docs\":{},\"f\":{\"docs\":{},\"i\":{\"docs\":{},\"e\":{\"docs\":{},\"l\":{\"docs\":{},\"d\":{\"docs\":{},\"(\":{\"docs\":{},\"\\\"\":{\"docs\":{},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"s\":{\"docs\":{},\"e\":{\"docs\":{},\"l\":{\"docs\":{},\"l\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"s\":{\"docs\":{},\".\":{\"docs\":{},\"n\":{\"docs\":{},\"a\":{\"docs\":{},\"m\":{\"docs\":{},\"e\":{\"docs\":{},\"\\\"\":{\"docs\":{},\")\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"o\":{\"docs\":{},\"(\":{\"1\":{\"0\":{\"docs\":{},\")\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125}}}},\"docs\":{}},\"docs\":{}}},\"i\":{\"docs\":{},\"e\":{\"docs\":{},\"b\":{\"docs\":{},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"a\":{\"docs\":{},\"k\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"(\":{\"0\":{\"docs\":{},\".\":{\"7\":{\"docs\":{},\"f\":{\"docs\":{},\")\":{\"docs\":{},\";\":{\"docs\":{\"query-dsl/compound-queries.html\":{\"ref\":\"query-dsl/compound-queries.html\",\"tf\":0.005847953216374269}}}}}},\"docs\":{}}},\"docs\":{}}}}}}}}}}}},\"w\":{\"docs\":{},\"r\":{\"docs\":{},\"a\":{\"docs\":{},\"p\":{\"docs\":{},\"l\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{},\"g\":{\"docs\":{},\"i\":{\"docs\":{},\"t\":{\"docs\":{},\"u\":{\"docs\":{},\"d\":{\"docs\":{},\"e\":{\"docs\":{},\"(\":{\"docs\":{},\"t\":{\"docs\":{},\"r\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"docs\":{},\")\":{\"docs\":{},\";\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}}}}}}}}}}}}}}}}}}}}}},\"h\":{\"docs\":{},\"i\":{\"docs\":{},\"s\":{\"docs\":{},\"t\":{\"docs\":{},\"o\":{\"docs\":{},\"g\":{\"docs\":{},\"r\":{\"docs\":{},\"a\":{\"docs\":{},\"m\":{\"docs\":{},\"(\":{\"docs\":{},\"\\\"\":{\"docs\":{},\"a\":{\"docs\":{},\"g\":{\"docs\":{},\"g\":{\"docs\":{},\"\\\"\":{\"docs\":{},\")\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}}}}}}}}}}}}}}},\"i\":{\"docs\":{},\"n\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"v\":{\"docs\":{},\"a\":{\"docs\":{},\"l\":{\"docs\":{},\"(\":{\"1\":{\"docs\":{},\")\":{\"docs\":{},\";\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}},\"docs\":{}}}}}}}},\"c\":{\"docs\":{},\"l\":{\"docs\":{},\"u\":{\"docs\":{},\"d\":{\"docs\":{},\"e\":{\"docs\":{},\"l\":{\"docs\":{},\"o\":{\"docs\":{},\"w\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"(\":{\"docs\":{},\"t\":{\"docs\":{},\"r\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"docs\":{},\")\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125}}}}}}}}}}}}},\"u\":{\"docs\":{},\"p\":{\"docs\":{},\"p\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"(\":{\"docs\":{},\"f\":{\"docs\":{},\"a\":{\"docs\":{},\"l\":{\"docs\":{},\"s\":{\"docs\":{},\"e\":{\"docs\":{},\")\":{\"docs\":{},\";\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125}}}}}}}}}}}}}}}}}}}},\"d\":{\"docs\":{},\"e\":{\"docs\":{},\"x\":{\"docs\":{},\"e\":{\"docs\":{},\"d\":{\"docs\":{},\"s\":{\"docs\":{},\"h\":{\"docs\":{},\"a\":{\"docs\":{},\"p\":{\"docs\":{},\"e\":{\"docs\":{},\"i\":{\"docs\":{},\"n\":{\"docs\":{},\"d\":{\"docs\":{},\"e\":{\"docs\":{},\"x\":{\"docs\":{},\"(\":{\"docs\":{},\"\\\"\":{\"docs\":{},\"s\":{\"docs\":{},\"h\":{\"docs\":{},\"a\":{\"docs\":{},\"p\":{\"docs\":{},\"e\":{\"docs\":{},\"s\":{\"docs\":{},\"\\\"\":{\"docs\":{},\")\":{\"docs\":{\"query-dsl/geo-queries.html\":{\"ref\":\"query-dsl/geo-queries.html\",\"tf\":0.004901960784313725}}}}}}}}}}}}}}}}},\"p\":{\"docs\":{},\"a\":{\"docs\":{},\"t\":{\"docs\":{},\"h\":{\"docs\":{},\"(\":{\"docs\":{},\"\\\"\":{\"docs\":{},\"l\":{\"docs\":{},\"o\":{\"docs\":{},\"c\":{\"docs\":{},\"a\":{\"docs\":{},\"t\":{\"docs\":{},\"i\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{},\"\\\"\":{\"docs\":{},\")\":{\"docs\":{},\";\":{\"docs\":{\"query-dsl/geo-queries.html\":{\"ref\":\"query-dsl/geo-queries.html\",\"tf\":0.004901960784313725}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"o\":{\"docs\":{},\"r\":{\"docs\":{},\"d\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"(\":{\"docs\":{},\"f\":{\"docs\":{},\"a\":{\"docs\":{},\"l\":{\"docs\":{},\"s\":{\"docs\":{},\"e\":{\"docs\":{},\")\":{\"docs\":{},\";\":{\"docs\":{\"query-dsl/span-queries.html\":{\"ref\":\"query-dsl/span-queries.html\",\"tf\":0.005555555555555556}}}}}}}}},\"t\":{\"docs\":{},\"r\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"docs\":{},\")\":{\"docs\":{},\",\":{\"docs\":{\"query-dsl/span-queries.html\":{\"ref\":\"query-dsl/span-queries.html\",\"tf\":0.011111111111111112}}}}}}}}}}}}}}},\"p\":{\"docs\":{},\"r\":{\"docs\":{},\"a\":{\"docs\":{},\"n\":{\"docs\":{},\"g\":{\"docs\":{},\"e\":{\"docs\":{},\"(\":{\"docs\":{},\"\\\"\":{\"docs\":{},\"a\":{\"docs\":{},\"g\":{\"docs\":{},\"g\":{\"docs\":{},\"\\\"\":{\"docs\":{},\")\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}}}}}}}}}}}}},\"n\":{\"docs\":{},\"e\":{\"docs\":{},\"s\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"d\":{\"docs\":{},\"(\":{\"docs\":{},\"\\\"\":{\"docs\":{},\"a\":{\"docs\":{},\"g\":{\"docs\":{},\"g\":{\"docs\":{},\"\\\"\":{\"docs\":{},\",\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.001652892561983471}}}}}}}}}}}}},\"g\":{\"docs\":{},\"a\":{\"docs\":{},\"t\":{\"docs\":{},\"i\":{\"docs\":{},\"v\":{\"docs\":{},\"e\":{\"docs\":{},\"b\":{\"docs\":{},\"o\":{\"docs\":{},\"o\":{\"docs\":{},\"s\":{\"docs\":{},\"t\":{\"docs\":{},\"(\":{\"0\":{\"docs\":{},\".\":{\"2\":{\"docs\":{},\"f\":{\"docs\":{},\")\":{\"docs\":{},\";\":{\"docs\":{\"query-dsl/compound-queries.html\":{\"ref\":\"query-dsl/compound-queries.html\",\"tf\":0.005847953216374269}}}}}},\"docs\":{}}},\"docs\":{}}}}}}}}}}}}}}},\"o\":{\"docs\":{},\"r\":{\"docs\":{},\"d\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"(\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"m\":{\"docs\":{},\"s\":{\"docs\":{},\".\":{\"docs\":{},\"o\":{\"docs\":{},\"r\":{\"docs\":{},\"d\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\".\":{\"docs\":{},\"a\":{\"docs\":{},\"g\":{\"docs\":{},\"g\":{\"docs\":{},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"g\":{\"docs\":{},\"a\":{\"docs\":{},\"t\":{\"docs\":{},\"i\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{},\"(\":{\"docs\":{},\"\\\"\":{\"docs\":{},\"a\":{\"docs\":{},\"v\":{\"docs\":{},\"g\":{\"docs\":{},\"_\":{\"docs\":{},\"h\":{\"docs\":{},\"e\":{\"docs\":{},\"i\":{\"docs\":{},\"g\":{\"docs\":{},\"h\":{\"docs\":{},\"t\":{\"docs\":{},\"\\\"\":{\"docs\":{},\",\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}}}}}}}}}}}}}}}}}}}}}}}},\"c\":{\"docs\":{},\"o\":{\"docs\":{},\"u\":{\"docs\":{},\"n\":{\"docs\":{},\"t\":{\"docs\":{},\"(\":{\"docs\":{},\"t\":{\"docs\":{},\"r\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"docs\":{},\")\":{\"docs\":{},\")\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}}}}}}}}}}},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"m\":{\"docs\":{},\"(\":{\"docs\":{},\"t\":{\"docs\":{},\"r\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"docs\":{},\")\":{\"docs\":{},\")\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"r\":{\"docs\":{},\"a\":{\"docs\":{},\"n\":{\"docs\":{},\"g\":{\"docs\":{},\"e\":{\"docs\":{},\"(\":{\"docs\":{},\"\\\"\":{\"docs\":{},\"a\":{\"docs\":{},\"g\":{\"docs\":{},\"g\":{\"docs\":{},\"\\\"\":{\"docs\":{},\")\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}}}}}}}}}},\"e\":{\"docs\":{},\"v\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"s\":{\"docs\":{},\"e\":{\"docs\":{},\"n\":{\"docs\":{},\"e\":{\"docs\":{},\"s\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"d\":{\"docs\":{},\"(\":{\"docs\":{},\"\\\"\":{\"docs\":{},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"s\":{\"docs\":{},\"e\":{\"docs\":{},\"l\":{\"docs\":{},\"l\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"_\":{\"docs\":{},\"t\":{\"docs\":{},\"o\":{\"docs\":{},\"_\":{\"docs\":{},\"p\":{\"docs\":{},\"r\":{\"docs\":{},\"o\":{\"docs\":{},\"d\":{\"docs\":{},\"u\":{\"docs\":{},\"c\":{\"docs\":{},\"t\":{\"docs\":{},\"\\\"\":{\"docs\":{},\")\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"l\":{\"docs\":{},\"a\":{\"docs\":{},\"t\":{\"docs\":{},\"i\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{},\"(\":{\"docs\":{},\"s\":{\"docs\":{},\"h\":{\"docs\":{},\"a\":{\"docs\":{},\"p\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"l\":{\"docs\":{},\"a\":{\"docs\":{},\"t\":{\"docs\":{},\"i\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{},\".\":{\"docs\":{},\"w\":{\"docs\":{},\"i\":{\"docs\":{},\"t\":{\"docs\":{},\"h\":{\"docs\":{},\"i\":{\"docs\":{},\"n\":{\"docs\":{},\")\":{\"docs\":{},\")\":{\"docs\":{\"query-dsl/geo-queries.html\":{\"ref\":\"query-dsl/geo-queries.html\",\"tf\":0.004901960784313725}}},\";\":{\"docs\":{\"query-dsl/geo-queries.html\":{\"ref\":\"query-dsl/geo-queries.html\",\"tf\":0.004901960784313725}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"/\":{\"docs\":{\"search-api.html\":{\"ref\":\"search-api.html\",\"tf\":0.034482758620689655}},\"/\":{\"docs\":{\"client/transport-client.html\":{\"ref\":\"client/transport-client.html\",\"tf\":0.022222222222222223},\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.028925619834710745},\"document-apis/delete-by-query-api.html\":{\"ref\":\"document-apis/delete-by-query-api.html\",\"tf\":0.018518518518518517},\"document-apis/bulk-api.html\":{\"ref\":\"document-apis/bulk-api.html\",\"tf\":0.028985507246376812},\"document-apis/using-bulk-processor.html\":{\"ref\":\"document-apis/using-bulk-processor.html\",\"tf\":0.030120481927710843},\"search-api.html\":{\"ref\":\"search-api.html\",\"tf\":0.05172413793103448},\"search-api/using-scrolls-in-java.html\":{\"ref\":\"search-api/using-scrolls-in-java.html\",\"tf\":0.00546448087431694},\"search-api/multisearch-api.html\":{\"ref\":\"search-api/multisearch-api.html\",\"tf\":0.019230769230769232},\"search-api/using-aggregations.html\":{\"ref\":\"search-api/using-aggregations.html\",\"tf\":0.029411764705882353},\"search-api/terminate-after.html\":{\"ref\":\"search-api/terminate-after.html\",\"tf\":0.0625},\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.032116788321167884},\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0603305785123967},\"query-dsl/full-text-queries.html\":{\"ref\":\"query-dsl/full-text-queries.html\",\"tf\":0.023809523809523808},\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.03773584905660377},\"query-dsl/compound-queries.html\":{\"ref\":\"query-dsl/compound-queries.html\",\"tf\":0.017543859649122806},\"query-dsl/joining-queries.html\":{\"ref\":\"query-dsl/joining-queries.html\",\"tf\":0.014388489208633094},\"query-dsl/geo-queries.html\":{\"ref\":\"query-dsl/geo-queries.html\",\"tf\":0.00980392156862745},\"query-dsl/specialized-queries.html\":{\"ref\":\"query-dsl/specialized-queries.html\",\"tf\":0.023809523809523808}},\"a\":{\"docs\":{},\"d\":{\"docs\":{},\"d\":{\"docs\":{\"client/transport-client.html\":{\"ref\":\"client/transport-client.html\",\"tf\":0.011111111111111112},\"query-dsl/geo-queries.html\":{\"ref\":\"query-dsl/geo-queries.html\",\"tf\":0.004901960784313725}}}}},\"p\":{\"docs\":{},\"i\":{\"docs\":{},\"n\":{\"docs\":{},\"g\":{\"docs\":{},\"一\":{\"docs\":{},\"个\":{\"docs\":{},\"节\":{\"docs\":{},\"点\":{\"docs\":{},\"的\":{\"docs\":{},\"响\":{\"docs\":{},\"应\":{\"docs\":{},\"时\":{\"docs\":{},\"间\":{\"docs\":{\"client/transport-client.html\":{\"ref\":\"client/transport-client.html\",\"tf\":0.011111111111111112}}}}}}}}}}}}}},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"f\":{\"docs\":{},\"i\":{\"docs\":{},\"x\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125}}}}}}},\"a\":{\"docs\":{},\"r\":{\"docs\":{},\"a\":{\"docs\":{},\"m\":{\"docs\":{},\"e\":{\"docs\":{},\"t\":{\"docs\":{\"query-dsl/specialized-queries.html\":{\"ref\":\"query-dsl/specialized-queries.html\",\"tf\":0.004761904761904762}}}}}}}}},\"s\":{\"docs\":{},\"a\":{\"docs\":{},\"m\":{\"docs\":{},\"p\":{\"docs\":{},\"l\":{\"docs\":{},\"e\":{\"docs\":{},\"/\":{\"docs\":{},\"p\":{\"docs\":{\"client/transport-client.html\":{\"ref\":\"client/transport-client.html\",\"tf\":0.011111111111111112}}}}}}}}},\"c\":{\"docs\":{},\"r\":{\"docs\":{},\"o\":{\"docs\":{},\"l\":{\"docs\":{},\"l\":{\"docs\":{\"search-api/using-scrolls-in-java.html\":{\"ref\":\"search-api/using-scrolls-in-java.html\",\"tf\":0.00546448087431694}}}}},\"i\":{\"docs\":{},\"p\":{\"docs\":{},\"t\":{\"docs\":{\"query-dsl/specialized-queries.html\":{\"ref\":\"query-dsl/specialized-queries.html\",\"tf\":0.009523809523809525}}}}}},\"o\":{\"docs\":{},\"r\":{\"docs\":{},\"e\":{\"docs\":{\"query-dsl/joining-queries.html\":{\"ref\":\"query-dsl/joining-queries.html\",\"tf\":0.007194244604316547}}}}}},\"h\":{\"docs\":{},\"a\":{\"docs\":{},\"p\":{\"docs\":{},\"e\":{\"docs\":{\"query-dsl/geo-queries.html\":{\"ref\":\"query-dsl/geo-queries.html\",\"tf\":0.004901960784313725}}}}}},\"l\":{\"docs\":{},\"o\":{\"docs\":{},\"p\":{\"docs\":{\"query-dsl/span-queries.html\":{\"ref\":\"query-dsl/span-queries.html\",\"tf\":0.005555555555555556}}}}},\"p\":{\"docs\":{},\"a\":{\"docs\":{},\"n\":{\"docs\":{\"query-dsl/span-queries.html\":{\"ref\":\"query-dsl/span-queries.html\",\"tf\":0.03333333333333333}}}}}},\"此\":{\"docs\":{},\"步\":{\"docs\":{},\"骤\":{\"docs\":{},\"添\":{\"docs\":{},\"加\":{\"docs\":{},\"i\":{\"docs\":{},\"p\":{\"docs\":{},\"，\":{\"docs\":{},\"至\":{\"docs\":{},\"少\":{\"docs\":{},\"一\":{\"docs\":{},\"个\":{\"docs\":{},\"，\":{\"docs\":{},\"其\":{\"docs\":{},\"实\":{\"docs\":{},\"一\":{\"docs\":{},\"个\":{\"docs\":{},\"就\":{\"docs\":{},\"够\":{\"docs\":{},\"了\":{\"docs\":{},\"，\":{\"docs\":{},\"因\":{\"docs\":{},\"为\":{\"docs\":{},\"添\":{\"docs\":{},\"加\":{\"docs\":{},\"了\":{\"docs\":{},\"自\":{\"docs\":{},\"动\":{\"docs\":{},\"嗅\":{\"docs\":{},\"探\":{\"docs\":{},\"配\":{\"docs\":{},\"置\":{\"docs\":{\"client/transport-client.html\":{\"ref\":\"client/transport-client.html\",\"tf\":0.011111111111111112}}}}}}}}}}}}}}}}}}}}},\"如\":{\"docs\":{},\"果\":{\"docs\":{},\"设\":{\"docs\":{},\"置\":{\"docs\":{},\"了\":{\"docs\":{},\"\\\"\":{\"docs\":{},\"c\":{\"docs\":{},\"l\":{\"docs\":{},\"i\":{\"docs\":{},\"e\":{\"docs\":{},\"n\":{\"docs\":{},\"t\":{\"docs\":{},\".\":{\"docs\":{},\"t\":{\"docs\":{},\"r\":{\"docs\":{},\"a\":{\"docs\":{},\"n\":{\"docs\":{},\"s\":{\"docs\":{},\"p\":{\"docs\":{},\"o\":{\"docs\":{},\"r\":{\"docs\":{},\"t\":{\"docs\":{},\".\":{\"docs\":{},\"s\":{\"docs\":{},\"n\":{\"docs\":{},\"i\":{\"docs\":{},\"f\":{\"docs\":{},\"f\":{\"docs\":{},\"\\\"\":{\"docs\":{},\"=\":{\"docs\":{\"client/transport-client.html\":{\"ref\":\"client/transport-client.html\",\"tf\":0.011111111111111112}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"自\":{\"docs\":{},\"动\":{\"docs\":{},\"嗅\":{\"docs\":{},\"探\":{\"docs\":{},\"整\":{\"docs\":{},\"个\":{\"docs\":{},\"集\":{\"docs\":{},\"群\":{\"docs\":{},\"的\":{\"docs\":{},\"状\":{\"docs\":{},\"态\":{\"docs\":{},\"，\":{\"docs\":{},\"把\":{\"docs\":{},\"集\":{\"docs\":{},\"群\":{\"docs\":{},\"中\":{\"docs\":{},\"其\":{\"docs\":{},\"他\":{\"docs\":{},\"e\":{\"docs\":{},\"s\":{\"docs\":{},\"节\":{\"docs\":{},\"点\":{\"docs\":{},\"的\":{\"docs\":{},\"i\":{\"docs\":{},\"p\":{\"docs\":{},\"添\":{\"docs\":{},\"加\":{\"docs\":{},\"到\":{\"docs\":{},\"本\":{\"docs\":{},\"地\":{\"docs\":{},\"的\":{\"docs\":{},\"客\":{\"docs\":{},\"户\":{\"docs\":{},\"端\":{\"docs\":{},\"列\":{\"docs\":{},\"表\":{\"docs\":{},\"中\":{\"docs\":{\"client/transport-client.html\":{\"ref\":\"client/transport-client.html\",\"tf\":0.022222222222222223}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"设\":{\"docs\":{},\"置\":{\"docs\":{\"client/transport-client.html\":{\"ref\":\"client/transport-client.html\",\"tf\":0.011111111111111112}},\"e\":{\"docs\":{},\"s\":{\"docs\":{},\"实\":{\"docs\":{},\"例\":{\"docs\":{},\"的\":{\"docs\":{},\"名\":{\"docs\":{},\"称\":{\"docs\":{\"client/transport-client.html\":{\"ref\":\"client/transport-client.html\",\"tf\":0.022222222222222223}}}}}}}}},\"集\":{\"docs\":{},\"群\":{\"docs\":{},\"名\":{\"docs\":{},\"称\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.002066115702479339}}}}}},\"并\":{\"docs\":{},\"发\":{\"docs\":{},\"请\":{\"docs\":{},\"求\":{\"docs\":{},\"的\":{\"docs\":{},\"数\":{\"docs\":{},\"量\":{\"docs\":{},\"。\":{\"docs\":{},\"值\":{\"docs\":{},\"为\":{\"0\":{\"docs\":{},\"意\":{\"docs\":{},\"味\":{\"docs\":{},\"着\":{\"docs\":{},\"只\":{\"docs\":{},\"允\":{\"docs\":{},\"许\":{\"docs\":{},\"执\":{\"docs\":{},\"行\":{\"docs\":{},\"一\":{\"docs\":{},\"个\":{\"docs\":{},\"请\":{\"docs\":{},\"求\":{\"docs\":{},\"。\":{\"docs\":{},\"值\":{\"docs\":{},\"为\":{\"1\":{\"docs\":{},\"意\":{\"docs\":{},\"味\":{\"docs\":{},\"着\":{\"docs\":{},\"允\":{\"docs\":{},\"许\":{\"1\":{\"docs\":{},\"并\":{\"docs\":{},\"发\":{\"docs\":{},\"请\":{\"docs\":{},\"求\":{\"docs\":{},\"。\":{\"docs\":{\"document-apis/using-bulk-processor.html\":{\"ref\":\"document-apis/using-bulk-processor.html\",\"tf\":0.006024096385542169}}}}}}}},\"docs\":{}}}}}}},\"docs\":{}}}}}}}}}}}}}}}}},\"docs\":{}}}}}}}}}}},\"执\":{\"docs\":{},\"行\":{\"docs\":{},\"的\":{\"docs\":{},\"c\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"x\":{\"docs\":{},\"t\":{\"docs\":{},\"（\":{\"docs\":{},\"i\":{\"docs\":{},\"e\":{\"docs\":{},\":\":{\"docs\":{\"search-api/search-template.html\":{\"ref\":\"search-api/search-template.html\",\"tf\":0.016574585635359115}}}}}}}}}}}}}}}}}},\"创\":{\"docs\":{},\"建\":{\"docs\":{},\"c\":{\"docs\":{},\"l\":{\"docs\":{},\"i\":{\"docs\":{},\"e\":{\"docs\":{},\"n\":{\"docs\":{},\"t\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.002066115702479339}}}}}}}}}},\"i\":{\"docs\":{},\"n\":{\"docs\":{},\"d\":{\"docs\":{},\"e\":{\"docs\":{},\"x\":{\"docs\":{\"query-dsl/geo-queries.html\":{\"ref\":\"query-dsl/geo-queries.html\",\"tf\":0.004901960784313725},\"query-dsl/specialized-queries.html\":{\"ref\":\"query-dsl/specialized-queries.html\",\"tf\":0.004761904761904762}},\"(\":{\"docs\":{},\"索\":{\"docs\":{},\"引\":{\"docs\":{},\"名\":{\"docs\":{},\")\":{\"docs\":{\"document-apis/delete-by-query-api.html\":{\"ref\":\"document-apis/delete-by-query-api.html\",\"tf\":0.037037037037037035}}}}}}}}}},\"i\":{\"docs\":{},\"t\":{\"docs\":{},\"i\":{\"docs\":{},\"a\":{\"docs\":{},\"l\":{\"docs\":{},\"i\":{\"docs\":{},\"s\":{\"docs\":{\"query-dsl/geo-queries.html\":{\"ref\":\"query-dsl/geo-queries.html\",\"tf\":0.004901960784313725}}}}}}}}},\"l\":{\"docs\":{},\"i\":{\"docs\":{},\"n\":{\"docs\":{\"query-dsl/specialized-queries.html\":{\"ref\":\"query-dsl/specialized-queries.html\",\"tf\":0.004761904761904762}}}}}},\"g\":{\"docs\":{},\"n\":{\"docs\":{},\"o\":{\"docs\":{},\"r\":{\"docs\":{\"query-dsl/specialized-queries.html\":{\"ref\":\"query-dsl/specialized-queries.html\",\"tf\":0.004761904761904762}}}}}},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{\"query-dsl/specialized-queries.html\":{\"ref\":\"query-dsl/specialized-queries.html\",\"tf\":0.004761904761904762}}}}}},\"删\":{\"docs\":{},\"除\":{\"docs\":{},\"文\":{\"docs\":{},\"档\":{\"docs\":{},\"的\":{\"docs\":{},\"数\":{\"docs\":{},\"量\":{\"docs\":{\"document-apis/delete-by-query-api.html\":{\"ref\":\"document-apis/delete-by-query-api.html\",\"tf\":0.037037037037037035}}}}}}}}},\"回\":{\"docs\":{},\"调\":{\"docs\":{},\"监\":{\"docs\":{},\"听\":{\"docs\":{\"document-apis/delete-by-query-api.html\":{\"ref\":\"document-apis/delete-by-query-api.html\",\"tf\":0.018518518518518517}}}}}},\"执\":{\"docs\":{},\"行\":{\"docs\":{\"document-apis/delete-by-query-api.html\":{\"ref\":\"document-apis/delete-by-query-api.html\",\"tf\":0.018518518518518517}},\"获\":{\"docs\":{},\"取\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"m\":{\"docs\":{},\"p\":{\"docs\":{},\"l\":{\"docs\":{},\"a\":{\"docs\":{},\"t\":{\"docs\":{\"search-api/search-template.html\":{\"ref\":\"search-api/search-template.html\",\"tf\":0.011049723756906077}}}}}}}}}}}}},\"查\":{\"docs\":{},\"询\":{\"docs\":{\"document-apis/delete-by-query-api.html\":{\"ref\":\"document-apis/delete-by-query-api.html\",\"tf\":0.018518518518518517},\"query-dsl/joining-queries.html\":{\"ref\":\"query-dsl/joining-queries.html\",\"tf\":0.014388489208633094}},\"条\":{\"docs\":{},\"件\":{\"docs\":{\"document-apis/delete-by-query-api.html\":{\"ref\":\"document-apis/delete-by-query-api.html\",\"tf\":0.018518518518518517}}}},\"语\":{\"docs\":{},\"句\":{\"docs\":{\"query-dsl/compound-queries.html\":{\"ref\":\"query-dsl/compound-queries.html\",\"tf\":0.005847953216374269}}}}}},\"合\":{\"docs\":{},\"并\":{\"docs\":{},\"到\":{\"docs\":{},\"现\":{\"docs\":{},\"有\":{\"docs\":{},\"文\":{\"docs\":{},\"档\":{\"docs\":{\"document-apis/update-api.html\":{\"ref\":\"document-apis/update-api.html\",\"tf\":0.007407407407407408}}}}}}}}},\"如\":{\"docs\":{},\"果\":{\"docs\":{},\"不\":{\"docs\":{},\"存\":{\"docs\":{},\"在\":{\"docs\":{},\"此\":{\"docs\":{},\"文\":{\"docs\":{},\"档\":{\"docs\":{\"document-apis/update-api.html\":{\"ref\":\"document-apis/update-api.html\",\"tf\":0.007407407407407408}}}}}}}},\"达\":{\"docs\":{},\"到\":{\"docs\":{},\"这\":{\"docs\":{},\"个\":{\"docs\":{},\"数\":{\"docs\":{},\"量\":{\"docs\":{},\"，\":{\"docs\":{},\"提\":{\"docs\":{},\"前\":{\"docs\":{},\"终\":{\"docs\":{},\"止\":{\"docs\":{\"search-api/terminate-after.html\":{\"ref\":\"search-api/terminate-after.html\",\"tf\":0.0625}}}}}}}}}}}}}}},\"_\":{\"docs\":{},\"s\":{\"docs\":{},\"o\":{\"docs\":{},\"u\":{\"docs\":{},\"r\":{\"docs\":{},\"c\":{\"docs\":{\"document-apis/multi-get-api.html\":{\"ref\":\"document-apis/multi-get-api.html\",\"tf\":0.021739130434782608}}}}}}}},\"一\":{\"docs\":{},\"个\":{\"docs\":{},\"i\":{\"docs\":{},\"d\":{\"docs\":{},\"的\":{\"docs\":{},\"方\":{\"docs\":{},\"式\":{\"docs\":{\"document-apis/multi-get-api.html\":{\"ref\":\"document-apis/multi-get-api.html\",\"tf\":0.021739130434782608}}}}}}}}},\"判\":{\"docs\":{},\"断\":{\"docs\":{},\"是\":{\"docs\":{},\"否\":{\"docs\":{},\"存\":{\"docs\":{},\"在\":{\"docs\":{\"document-apis/multi-get-api.html\":{\"ref\":\"document-apis/multi-get-api.html\",\"tf\":0.021739130434782608}}}}}}}},\"可\":{\"docs\":{},\"以\":{\"docs\":{},\"从\":{\"docs\":{},\"另\":{\"docs\":{},\"外\":{\"docs\":{},\"一\":{\"docs\":{},\"个\":{\"docs\":{},\"索\":{\"docs\":{},\"引\":{\"docs\":{},\"获\":{\"docs\":{},\"取\":{\"docs\":{\"document-apis/multi-get-api.html\":{\"ref\":\"document-apis/multi-get-api.html\",\"tf\":0.021739130434782608}}}}}}}}}}},\"是\":{\"docs\":{},\"m\":{\"docs\":{},\"u\":{\"docs\":{},\"l\":{\"docs\":{},\"t\":{\"docs\":{},\"i\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"m\":{\"docs\":{},\"q\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"y\":{\"docs\":{},\"b\":{\"docs\":{},\"u\":{\"docs\":{},\"i\":{\"docs\":{},\"l\":{\"docs\":{},\"d\":{\"docs\":{\"query-dsl/span-queries.html\":{\"ref\":\"query-dsl/span-queries.html\",\"tf\":0.005555555555555556}}}}}}}}}}}}}}}}}}}}}}}},\"多\":{\"docs\":{},\"个\":{\"docs\":{},\"i\":{\"docs\":{},\"d\":{\"docs\":{},\"的\":{\"docs\":{},\"方\":{\"docs\":{},\"式\":{\"docs\":{\"document-apis/multi-get-api.html\":{\"ref\":\"document-apis/multi-get-api.html\",\"tf\":0.021739130434782608}}}}}}}}},\"迭\":{\"docs\":{},\"代\":{\"docs\":{},\"返\":{\"docs\":{},\"回\":{\"docs\":{},\"值\":{\"docs\":{\"document-apis/multi-get-api.html\":{\"ref\":\"document-apis/multi-get-api.html\",\"tf\":0.021739130434782608}}}}}}},\"增\":{\"docs\":{},\"加\":{\"docs\":{},\"e\":{\"docs\":{},\"l\":{\"docs\":{},\"a\":{\"docs\":{},\"s\":{\"docs\":{},\"t\":{\"docs\":{},\"i\":{\"docs\":{},\"c\":{\"docs\":{},\"s\":{\"docs\":{},\"e\":{\"docs\":{},\"a\":{\"docs\":{},\"r\":{\"docs\":{},\"c\":{\"docs\":{},\"h\":{\"docs\":{},\"客\":{\"docs\":{},\"户\":{\"docs\":{},\"端\":{\"docs\":{\"document-apis/using-bulk-processor.html\":{\"ref\":\"document-apis/using-bulk-processor.html\",\"tf\":0.006024096385542169}}}}}}}}}}}}}}}}}}}},\"拆\":{\"docs\":{},\"成\":{\"5\":{\"docs\":{},\"m\":{\"docs\":{},\"b\":{\"docs\":{},\"一\":{\"docs\":{},\"块\":{\"docs\":{\"document-apis/using-bulk-processor.html\":{\"ref\":\"document-apis/using-bulk-processor.html\",\"tf\":0.006024096385542169}}}}}}},\"docs\":{}}},\"无\":{\"docs\":{},\"论\":{\"docs\":{},\"请\":{\"docs\":{},\"求\":{\"docs\":{},\"数\":{\"docs\":{},\"量\":{\"docs\":{},\"多\":{\"docs\":{},\"少\":{\"docs\":{},\"，\":{\"docs\":{},\"每\":{\"5\":{\"docs\":{},\"秒\":{\"docs\":{},\"钟\":{\"docs\":{},\"请\":{\"docs\":{},\"求\":{\"docs\":{},\"一\":{\"docs\":{},\"次\":{\"docs\":{},\"。\":{\"docs\":{\"document-apis/using-bulk-processor.html\":{\"ref\":\"document-apis/using-bulk-processor.html\",\"tf\":0.006024096385542169}}}}}}}}}},\"docs\":{}}}}}}}}}}},\"每\":{\"docs\":{},\"次\":{\"1\":{\"0\":{\"0\":{\"0\":{\"0\":{\"docs\":{},\"请\":{\"docs\":{},\"求\":{\"docs\":{\"document-apis/using-bulk-processor.html\":{\"ref\":\"document-apis/using-bulk-processor.html\",\"tf\":0.006024096385542169}}}}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}}},\"调\":{\"docs\":{},\"用\":{\"docs\":{},\"b\":{\"docs\":{},\"u\":{\"docs\":{},\"l\":{\"docs\":{},\"k\":{\"docs\":{},\"之\":{\"docs\":{},\"前\":{\"docs\":{},\"执\":{\"docs\":{},\"行\":{\"docs\":{\"document-apis/using-bulk-processor.html\":{\"ref\":\"document-apis/using-bulk-processor.html\",\"tf\":0.006024096385542169}}}}},\"后\":{\"docs\":{},\"执\":{\"docs\":{},\"行\":{\"docs\":{\"document-apis/using-bulk-processor.html\":{\"ref\":\"document-apis/using-bulk-processor.html\",\"tf\":0.006024096385542169}}}}}}}}}},\"失\":{\"docs\":{},\"败\":{\"docs\":{},\"抛\":{\"docs\":{\"document-apis/using-bulk-processor.html\":{\"ref\":\"document-apis/using-bulk-processor.html\",\"tf\":0.006024096385542169}}}}}}},\"h\":{\"docs\":{},\"a\":{\"docs\":{},\"n\":{\"docs\":{},\"d\":{\"docs\":{},\"l\":{\"docs\":{\"search-api/using-scrolls-in-java.html\":{\"ref\":\"search-api/using-scrolls-in-java.html\",\"tf\":0.00546448087431694}}}}}}},\"m\":{\"docs\":{},\"a\":{\"docs\":{},\"x\":{\"docs\":{\"search-api/using-scrolls-in-java.html\":{\"ref\":\"search-api/using-scrolls-in-java.html\",\"tf\":0.00546448087431694},\"query-dsl/specialized-queries.html\":{\"ref\":\"query-dsl/specialized-queries.html\",\"tf\":0.004761904761904762},\"query-dsl/span-queries.html\":{\"ref\":\"query-dsl/span-queries.html\",\"tf\":0.005555555555555556}}}},\"u\":{\"docs\":{},\"s\":{\"docs\":{},\"t\":{\"docs\":{\"query-dsl/compound-queries.html\":{\"ref\":\"query-dsl/compound-queries.html\",\"tf\":0.011695906432748537}}}}}},\"为\":{\"docs\":{},\"了\":{\"docs\":{},\"使\":{\"docs\":{},\"用\":{\"docs\":{\"search-api/using-scrolls-in-java.html\":{\"ref\":\"search-api/using-scrolls-in-java.html\",\"tf\":0.00546448087431694}}}}}},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"m\":{\"docs\":{},\"p\":{\"docs\":{},\"l\":{\"docs\":{},\"a\":{\"docs\":{},\"t\":{\"docs\":{\"search-api/search-template.html\":{\"ref\":\"search-api/search-template.html\",\"tf\":0.03314917127071823}}}}}}},\"x\":{\"docs\":{},\"t\":{\"docs\":{\"query-dsl/full-text-queries.html\":{\"ref\":\"query-dsl/full-text-queries.html\",\"tf\":0.03571428571428571},\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.005390835579514825},\"query-dsl/specialized-queries.html\":{\"ref\":\"query-dsl/specialized-queries.html\",\"tf\":0.004761904761904762}}}}},\"r\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"docs\":{},\":\":{\"docs\":{},\"表\":{\"docs\":{},\"示\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125}}}}}}}},\"y\":{\"docs\":{},\"p\":{\"docs\":{},\"e\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125}}}}},\"i\":{\"docs\":{},\"e\":{\"docs\":{\"query-dsl/compound-queries.html\":{\"ref\":\"query-dsl/compound-queries.html\",\"tf\":0.005847953216374269}}}},\"h\":{\"docs\":{},\"e\":{\"docs\":{\"query-dsl/geo-queries.html\":{\"ref\":\"query-dsl/geo-queries.html\",\"tf\":0.00980392156862745}}},\"i\":{\"docs\":{\"query-dsl/specialized-queries.html\":{\"ref\":\"query-dsl/specialized-queries.html\",\"tf\":0.004761904761904762}}}}},\"参\":{\"docs\":{},\"数\":{\"docs\":{\"search-api/search-template.html\":{\"ref\":\"search-api/search-template.html\",\"tf\":0.016574585635359115}}}},\"f\":{\"docs\":{},\"i\":{\"docs\":{},\"e\":{\"docs\":{},\"l\":{\"docs\":{},\"d\":{\"docs\":{\"query-dsl/full-text-queries.html\":{\"ref\":\"query-dsl/full-text-queries.html\",\"tf\":0.03571428571428571},\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.016172506738544475},\"query-dsl/geo-queries.html\":{\"ref\":\"query-dsl/geo-queries.html\",\"tf\":0.0196078431372549},\"query-dsl/specialized-queries.html\":{\"ref\":\"query-dsl/specialized-queries.html\",\"tf\":0.004761904761904762},\"query-dsl/span-queries.html\":{\"ref\":\"query-dsl/span-queries.html\",\"tf\":0.005555555555555556}}}}}}},\"r\":{\"docs\":{},\"a\":{\"docs\":{},\"n\":{\"docs\":{},\"g\":{\"docs\":{},\"e\":{\"docs\":{},\"q\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"y\":{\"docs\":{},\"b\":{\"docs\":{},\"u\":{\"docs\":{},\"i\":{\"docs\":{},\"l\":{\"docs\":{},\"d\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125}}}}}}}}}}}}}}}},\"e\":{\"docs\":{},\"g\":{\"docs\":{},\"e\":{\"docs\":{},\"x\":{\"docs\":{},\"p\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125}}}}}},\"l\":{\"docs\":{},\"a\":{\"docs\":{},\"t\":{\"docs\":{\"query-dsl/geo-queries.html\":{\"ref\":\"query-dsl/geo-queries.html\",\"tf\":0.00980392156862745}}}}}}},\"v\":{\"docs\":{},\"a\":{\"docs\":{},\"l\":{\"docs\":{},\"u\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125},\"query-dsl/span-queries.html\":{\"ref\":\"query-dsl/span-queries.html\",\"tf\":0.005555555555555556}}}}}},\"开\":{\"docs\":{},\"始\":{\"docs\":{},\"值\":{\"docs\":{},\"，\":{\"docs\":{},\"与\":{\"docs\":{},\"i\":{\"docs\":{},\"n\":{\"docs\":{},\"c\":{\"docs\":{},\"l\":{\"docs\":{},\"u\":{\"docs\":{},\"d\":{\"docs\":{},\"e\":{\"docs\":{},\"l\":{\"docs\":{},\"o\":{\"docs\":{},\"w\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"(\":{\"docs\":{},\")\":{\"docs\":{},\"和\":{\"docs\":{},\"i\":{\"docs\":{},\"n\":{\"docs\":{},\"c\":{\"docs\":{},\"l\":{\"docs\":{},\"u\":{\"docs\":{},\"d\":{\"docs\":{},\"e\":{\"docs\":{},\"u\":{\"docs\":{},\"p\":{\"docs\":{},\"p\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"(\":{\"docs\":{},\")\":{\"docs\":{},\"函\":{\"docs\":{},\"数\":{\"docs\":{},\"配\":{\"docs\":{},\"套\":{\"docs\":{},\"使\":{\"docs\":{},\"用\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"结\":{\"docs\":{},\"束\":{\"docs\":{},\"值\":{\"docs\":{},\"，\":{\"docs\":{},\"与\":{\"docs\":{},\"i\":{\"docs\":{},\"n\":{\"docs\":{},\"c\":{\"docs\":{},\"l\":{\"docs\":{},\"u\":{\"docs\":{},\"d\":{\"docs\":{},\"e\":{\"docs\":{},\"l\":{\"docs\":{},\"o\":{\"docs\":{},\"w\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"(\":{\"docs\":{},\")\":{\"docs\":{},\"和\":{\"docs\":{},\"i\":{\"docs\":{},\"n\":{\"docs\":{},\"c\":{\"docs\":{},\"l\":{\"docs\":{},\"u\":{\"docs\":{},\"d\":{\"docs\":{},\"e\":{\"docs\":{},\"u\":{\"docs\":{},\"p\":{\"docs\":{},\"p\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"(\":{\"docs\":{},\")\":{\"docs\":{},\"函\":{\"docs\":{},\"数\":{\"docs\":{},\"配\":{\"docs\":{},\"套\":{\"docs\":{},\"使\":{\"docs\":{},\"用\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"b\":{\"docs\":{},\"o\":{\"docs\":{},\"o\":{\"docs\":{},\"s\":{\"docs\":{},\"t\":{\"docs\":{\"query-dsl/compound-queries.html\":{\"ref\":\"query-dsl/compound-queries.html\",\"tf\":0.005847953216374269}}}}},\"u\":{\"docs\":{},\"n\":{\"docs\":{},\"d\":{\"docs\":{\"query-dsl/geo-queries.html\":{\"ref\":\"query-dsl/geo-queries.html\",\"tf\":0.00980392156862745}}}}}},\"u\":{\"docs\":{},\"i\":{\"docs\":{},\"l\":{\"docs\":{},\"d\":{\"docs\":{\"query-dsl/specialized-queries.html\":{\"ref\":\"query-dsl/specialized-queries.html\",\"tf\":0.004761904761904762}}}}}},\"i\":{\"docs\":{},\"g\":{\"docs\":{\"query-dsl/span-queries.html\":{\"ref\":\"query-dsl/span-queries.html\",\"tf\":0.011111111111111112}}}}},\"分\":{\"docs\":{},\"数\":{\"docs\":{\"query-dsl/compound-queries.html\":{\"ref\":\"query-dsl/compound-queries.html\",\"tf\":0.005847953216374269}}}},\"根\":{\"docs\":{},\"据\":{\"docs\":{},\"年\":{\"docs\":{},\"龄\":{\"docs\":{},\"字\":{\"docs\":{},\"段\":{\"docs\":{},\"添\":{\"docs\":{},\"加\":{\"docs\":{},\"另\":{\"docs\":{},\"一\":{\"docs\":{},\"个\":{\"docs\":{},\"f\":{\"docs\":{},\"u\":{\"docs\":{},\"n\":{\"docs\":{},\"c\":{\"docs\":{},\"t\":{\"docs\":{},\"i\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{\"query-dsl/compound-queries.html\":{\"ref\":\"query-dsl/compound-queries.html\",\"tf\":0.005847953216374269}}}}}}}}}}}}}}}}}}},\"查\":{\"docs\":{},\"询\":{\"docs\":{},\"添\":{\"docs\":{},\"加\":{\"docs\":{},\"第\":{\"docs\":{},\"一\":{\"docs\":{},\"个\":{\"docs\":{},\"f\":{\"docs\":{},\"u\":{\"docs\":{},\"n\":{\"docs\":{},\"c\":{\"docs\":{},\"t\":{\"docs\":{},\"i\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{\"query-dsl/compound-queries.html\":{\"ref\":\"query-dsl/compound-queries.html\",\"tf\":0.005847953216374269}}}}}}}}}}}}}}}}},\"给\":{\"docs\":{},\"定\":{\"docs\":{},\"的\":{\"docs\":{},\"种\":{\"docs\":{},\"子\":{\"docs\":{},\"随\":{\"docs\":{},\"机\":{\"docs\":{},\"分\":{\"docs\":{},\"数\":{\"docs\":{\"query-dsl/compound-queries.html\":{\"ref\":\"query-dsl/compound-queries.html\",\"tf\":0.005847953216374269}}}}}}}}}}}}},\"n\":{\"docs\":{},\"e\":{\"docs\":{},\"s\":{\"docs\":{},\"t\":{\"docs\":{\"query-dsl/joining-queries.html\":{\"ref\":\"query-dsl/joining-queries.html\",\"tf\":0.007194244604316547}}}}},\"a\":{\"docs\":{},\"m\":{\"docs\":{},\"e\":{\"docs\":{\"query-dsl/geo-queries.html\":{\"ref\":\"query-dsl/geo-queries.html\",\"tf\":0.004901960784313725}}}}}},\"是\":{\"docs\":{},\"否\":{\"docs\":{},\"从\":{\"docs\":{},\"父\":{\"docs\":{},\"h\":{\"docs\":{},\"i\":{\"docs\":{},\"t\":{\"docs\":{},\"的\":{\"docs\":{},\"s\":{\"docs\":{},\"c\":{\"docs\":{},\"o\":{\"docs\":{},\"r\":{\"docs\":{\"query-dsl/joining-queries.html\":{\"ref\":\"query-dsl/joining-queries.html\",\"tf\":0.007194244604316547}}}}}}}}}}}}}},\"要\":{\"docs\":{},\"查\":{\"docs\":{},\"询\":{\"docs\":{},\"的\":{\"docs\":{},\"子\":{\"docs\":{},\"类\":{\"docs\":{},\"型\":{\"docs\":{\"query-dsl/joining-queries.html\":{\"ref\":\"query-dsl/joining-queries.html\",\"tf\":0.014388489208633094}}}}}}}}},\"c\":{\"docs\":{},\"e\":{\"docs\":{},\"n\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{\"query-dsl/geo-queries.html\":{\"ref\":\"query-dsl/geo-queries.html\",\"tf\":0.004901960784313725}}}}}}}},\"d\":{\"docs\":{},\"i\":{\"docs\":{},\"s\":{\"docs\":{},\"t\":{\"docs\":{},\"a\":{\"docs\":{},\"n\":{\"docs\":{},\"c\":{\"docs\":{\"query-dsl/geo-queries.html\":{\"ref\":\"query-dsl/geo-queries.html\",\"tf\":0.004901960784313725}}}}}}}}},\"e\":{\"docs\":{},\"n\":{\"docs\":{},\"d\":{\"docs\":{\"query-dsl/specialized-queries.html\":{\"ref\":\"query-dsl/specialized-queries.html\",\"tf\":0.004761904761904762}}}}},\"脚\":{\"docs\":{},\"本\":{\"docs\":{},\"类\":{\"docs\":{},\"型\":{\"docs\":{\"query-dsl/specialized-queries.html\":{\"ref\":\"query-dsl/specialized-queries.html\",\"tf\":0.004761904761904762}}}}}},\"l\":{\"docs\":{},\"i\":{\"docs\":{},\"t\":{\"docs\":{},\"t\":{\"docs\":{},\"l\":{\"docs\":{\"query-dsl/span-queries.html\":{\"ref\":\"query-dsl/span-queries.html\",\"tf\":0.011111111111111112}}}}}}},\"q\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"i\":{\"docs\":{\"query-dsl/span-queries.html\":{\"ref\":\"query-dsl/span-queries.html\",\"tf\":0.005555555555555556}}}}}}},\"w\":{\"docs\":{},\"h\":{\"docs\":{},\"e\":{\"docs\":{},\"t\":{\"docs\":{},\"h\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{\"query-dsl/span-queries.html\":{\"ref\":\"query-dsl/span-queries.html\",\"tf\":0.005555555555555556}}}}}}}}}},\"*\":{\"docs\":{\"document-apis/using-bulk-processor.html\":{\"ref\":\"document-apis/using-bulk-processor.html\",\"tf\":0.006024096385542169},\"aggregations.html\":{\"ref\":\"aggregations.html\",\"tf\":0.07692307692307693}},\"*\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.01652892561983471},\"search-api/using-scrolls-in-java.html\":{\"ref\":\"search-api/using-scrolls-in-java.html\",\"tf\":0.01092896174863388}}}},\"_\":{\"docs\":{},\"s\":{\"docs\":{},\"e\":{\"docs\":{},\"a\":{\"docs\":{},\"r\":{\"docs\":{},\"c\":{\"docs\":{},\"h\":{\"docs\":{},\"/\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"m\":{\"docs\":{},\"p\":{\"docs\":{},\"l\":{\"docs\":{\"search-api/search-template.html\":{\"ref\":\"search-api/search-template.html\",\"tf\":0.0055248618784530384}}}}}}}}}}}}}}}},\"=\":{\"docs\":{\"client/transport-client.html\":{\"ref\":\"client/transport-client.html\",\"tf\":0.07777777777777778},\"client/xpack-transport-client.html\":{\"ref\":\"client/xpack-transport-client.html\",\"tf\":0.03278688524590164},\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.05991735537190083},\"document-apis/get-api.html\":{\"ref\":\"document-apis/get-api.html\",\"tf\":0.06896551724137931},\"document-apis/delete-api.html\":{\"ref\":\"document-apis/delete-api.html\",\"tf\":0.07894736842105263},\"document-apis/delete-by-query-api.html\":{\"ref\":\"document-apis/delete-by-query-api.html\",\"tf\":0.05555555555555555},\"document-apis/update-api.html\":{\"ref\":\"document-apis/update-api.html\",\"tf\":0.05185185185185185},\"document-apis/multi-get-api.html\":{\"ref\":\"document-apis/multi-get-api.html\",\"tf\":0.06521739130434782},\"document-apis/bulk-api.html\":{\"ref\":\"document-apis/bulk-api.html\",\"tf\":0.028985507246376812},\"document-apis/using-bulk-processor.html\":{\"ref\":\"document-apis/using-bulk-processor.html\",\"tf\":0.012048192771084338},\"search-api.html\":{\"ref\":\"search-api.html\",\"tf\":0.034482758620689655},\"search-api/using-scrolls-in-java.html\":{\"ref\":\"search-api/using-scrolls-in-java.html\",\"tf\":0.03825136612021858},\"search-api/multisearch-api.html\":{\"ref\":\"search-api/multisearch-api.html\",\"tf\":0.09615384615384616},\"search-api/using-aggregations.html\":{\"ref\":\"search-api/using-aggregations.html\",\"tf\":0.08823529411764706},\"search-api/terminate-after.html\":{\"ref\":\"search-api/terminate-after.html\",\"tf\":0.0625},\"search-api/search-template.html\":{\"ref\":\"search-api/search-template.html\",\"tf\":0.022099447513812154},\"aggregations.html\":{\"ref\":\"aggregations.html\",\"tf\":0.038461538461538464},\"aggregations/structuring-aggregations.html\":{\"ref\":\"aggregations/structuring-aggregations.html\",\"tf\":0.02702702702702703},\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.07883211678832117},\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.047107438016528926},\"query-dsl/match-all-query.html\":{\"ref\":\"query-dsl/match-all-query.html\",\"tf\":0.1},\"query-dsl/full-text-queries.html\":{\"ref\":\"query-dsl/full-text-queries.html\",\"tf\":0.05952380952380952},\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0673854447439353},\"query-dsl/compound-queries.html\":{\"ref\":\"query-dsl/compound-queries.html\",\"tf\":0.04678362573099415},\"query-dsl/joining-queries.html\":{\"ref\":\"query-dsl/joining-queries.html\",\"tf\":0.050359712230215826},\"query-dsl/geo-queries.html\":{\"ref\":\"query-dsl/geo-queries.html\",\"tf\":0.03431372549019608},\"query-dsl/specialized-queries.html\":{\"ref\":\"query-dsl/specialized-queries.html\",\"tf\":0.06190476190476191},\"query-dsl/span-queries.html\":{\"ref\":\"query-dsl/span-queries.html\",\"tf\":0.044444444444444446}}},\"n\":{\"docs\":{},\"e\":{\"docs\":{},\"w\":{\"docs\":{\"client/transport-client.html\":{\"ref\":\"client/transport-client.html\",\"tf\":0.044444444444444446},\"client/xpack-transport-client.html\":{\"ref\":\"client/xpack-transport-client.html\",\"tf\":0.01639344262295082},\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.01859504132231405},\"document-apis/update-api.html\":{\"ref\":\"document-apis/update-api.html\",\"tf\":0.037037037037037035},\"document-apis/bulk-api.html\":{\"ref\":\"document-apis/bulk-api.html\",\"tf\":0.028985507246376812},\"document-apis/using-bulk-processor.html\":{\"ref\":\"document-apis/using-bulk-processor.html\",\"tf\":0.012048192771084338},\"search-api/search-template.html\":{\"ref\":\"search-api/search-template.html\",\"tf\":0.022099447513812154},\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0024793388429752068},\"query-dsl/compound-queries.html\":{\"ref\":\"query-dsl/compound-queries.html\",\"tf\":0.011695906432748537},\"query-dsl/joining-queries.html\":{\"ref\":\"query-dsl/joining-queries.html\",\"tf\":0.014388489208633094},\"query-dsl/geo-queries.html\":{\"ref\":\"query-dsl/geo-queries.html\",\"tf\":0.00980392156862745},\"query-dsl/specialized-queries.html\":{\"ref\":\"query-dsl/specialized-queries.html\",\"tf\":0.01904761904761905}}},\"e\":{\"docs\":{},\"d\":{\"docs\":{\"document-apis/using-bulk-processor.html\":{\"ref\":\"document-apis/using-bulk-processor.html\",\"tf\":0.006024096385542169},\"query-dsl/specialized-queries.html\":{\"ref\":\"query-dsl/specialized-queries.html\",\"tf\":0.004761904761904762}}}},\"s\":{\"docs\":{},\"t\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.004132231404958678},\"query-dsl/joining-queries.html\":{\"ref\":\"query-dsl/joining-queries.html\",\"tf\":0.007194244604316547}},\"e\":{\"docs\":{},\"d\":{\"docs\":{},\"q\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"y\":{\"docs\":{},\"(\":{\"docs\":{\"query-dsl/joining-queries.html\":{\"ref\":\"query-dsl/joining-queries.html\",\"tf\":0.007194244604316547}}}}}}}}}}}},\"g\":{\"docs\":{\"query-dsl/compound-queries.html\":{\"ref\":\"query-dsl/compound-queries.html\",\"tf\":0.005847953216374269}}},\"a\":{\"docs\":{},\"r\":{\"docs\":{\"query-dsl/span-queries.html\":{\"ref\":\"query-dsl/span-queries.html\",\"tf\":0.005555555555555556}}}}},\"o\":{\"docs\":{},\"d\":{\"docs\":{},\"e\":{\"docs\":{},\"c\":{\"docs\":{},\"l\":{\"docs\":{},\"i\":{\"docs\":{},\"e\":{\"docs\":{},\"n\":{\"docs\":{},\"t\":{\"docs\":{},\"顾\":{\"docs\":{},\"名\":{\"docs\":{},\"思\":{\"docs\":{},\"义\":{\"docs\":{},\"，\":{\"docs\":{},\"是\":{\"docs\":{},\"作\":{\"docs\":{},\"为\":{\"docs\":{},\"e\":{\"docs\":{},\"s\":{\"docs\":{},\"集\":{\"docs\":{},\"群\":{\"docs\":{},\"的\":{\"docs\":{},\"一\":{\"docs\":{},\"个\":{\"docs\":{},\"节\":{\"docs\":{},\"点\":{\"docs\":{},\"，\":{\"docs\":{},\"它\":{\"docs\":{},\"是\":{\"docs\":{},\"e\":{\"docs\":{},\"s\":{\"docs\":{},\"中\":{\"docs\":{},\"的\":{\"docs\":{},\"一\":{\"docs\":{},\"环\":{\"docs\":{},\"，\":{\"docs\":{},\"其\":{\"docs\":{},\"他\":{\"docs\":{},\"的\":{\"docs\":{},\"节\":{\"docs\":{},\"点\":{\"docs\":{},\"对\":{\"docs\":{},\"它\":{\"docs\":{},\"是\":{\"docs\":{},\"感\":{\"docs\":{},\"知\":{\"docs\":{},\"的\":{\"docs\":{},\"，\":{\"docs\":{},\"不\":{\"docs\":{},\"像\":{\"docs\":{},\"t\":{\"docs\":{},\"r\":{\"docs\":{},\"a\":{\"docs\":{},\"n\":{\"docs\":{},\"s\":{\"docs\":{},\"p\":{\"docs\":{},\"o\":{\"docs\":{},\"r\":{\"docs\":{},\"t\":{\"docs\":{},\"c\":{\"docs\":{},\"l\":{\"docs\":{},\"i\":{\"docs\":{},\"e\":{\"docs\":{},\"n\":{\"docs\":{},\"t\":{\"docs\":{},\"那\":{\"docs\":{},\"样\":{\"docs\":{},\"，\":{\"docs\":{},\"e\":{\"docs\":{},\"s\":{\"docs\":{},\"集\":{\"docs\":{},\"群\":{\"docs\":{},\"对\":{\"docs\":{},\"它\":{\"docs\":{},\"一\":{\"docs\":{},\"无\":{\"docs\":{},\"所\":{\"docs\":{},\"知\":{\"docs\":{},\"。\":{\"docs\":{},\"n\":{\"docs\":{},\"o\":{\"docs\":{},\"d\":{\"docs\":{},\"e\":{\"docs\":{},\"c\":{\"docs\":{},\"l\":{\"docs\":{},\"i\":{\"docs\":{},\"e\":{\"docs\":{},\"n\":{\"docs\":{},\"t\":{\"docs\":{},\"通\":{\"docs\":{},\"信\":{\"docs\":{},\"的\":{\"docs\":{},\"性\":{\"docs\":{},\"能\":{\"docs\":{},\"会\":{\"docs\":{},\"更\":{\"docs\":{},\"好\":{\"docs\":{},\"，\":{\"docs\":{},\"但\":{\"docs\":{},\"是\":{\"docs\":{},\"因\":{\"docs\":{},\"为\":{\"docs\":{},\"是\":{\"docs\":{},\"e\":{\"docs\":{},\"s\":{\"docs\":{},\"的\":{\"docs\":{},\"一\":{\"docs\":{},\"环\":{\"docs\":{},\"，\":{\"docs\":{},\"所\":{\"docs\":{},\"以\":{\"docs\":{},\"它\":{\"docs\":{},\"出\":{\"docs\":{},\"问\":{\"docs\":{},\"题\":{\"docs\":{},\"，\":{\"docs\":{},\"也\":{\"docs\":{},\"会\":{\"docs\":{},\"给\":{\"docs\":{},\"e\":{\"docs\":{},\"s\":{\"docs\":{},\"集\":{\"docs\":{},\"群\":{\"docs\":{},\"带\":{\"docs\":{},\"来\":{\"docs\":{},\"问\":{\"docs\":{},\"题\":{\"docs\":{},\"。\":{\"docs\":{},\"n\":{\"docs\":{},\"o\":{\"docs\":{},\"d\":{\"docs\":{},\"e\":{\"docs\":{},\"c\":{\"docs\":{},\"l\":{\"docs\":{},\"i\":{\"docs\":{},\"e\":{\"docs\":{},\"n\":{\"docs\":{},\"t\":{\"docs\":{},\"可\":{\"docs\":{},\"以\":{\"docs\":{},\"设\":{\"docs\":{},\"置\":{\"docs\":{},\"不\":{\"docs\":{},\"作\":{\"docs\":{},\"为\":{\"docs\":{},\"数\":{\"docs\":{},\"据\":{\"docs\":{},\"节\":{\"docs\":{},\"点\":{\"docs\":{},\"，\":{\"docs\":{},\"在\":{\"docs\":{},\"e\":{\"docs\":{},\"l\":{\"docs\":{},\"a\":{\"docs\":{},\"s\":{\"docs\":{},\"t\":{\"docs\":{},\"i\":{\"docs\":{},\"c\":{\"docs\":{},\"s\":{\"docs\":{},\"e\":{\"docs\":{},\"a\":{\"docs\":{},\"r\":{\"docs\":{},\"c\":{\"docs\":{},\"h\":{\"docs\":{},\".\":{\"docs\":{},\"y\":{\"docs\":{},\"m\":{\"docs\":{},\"l\":{\"docs\":{},\"中\":{\"docs\":{},\"设\":{\"docs\":{},\"置\":{\"docs\":{},\"，\":{\"docs\":{},\"这\":{\"docs\":{},\"样\":{\"docs\":{},\"就\":{\"docs\":{},\"不\":{\"docs\":{},\"会\":{\"docs\":{},\"在\":{\"docs\":{},\"此\":{\"docs\":{},\"节\":{\"docs\":{},\"点\":{\"docs\":{},\"上\":{\"docs\":{},\"分\":{\"docs\":{},\"配\":{\"docs\":{},\"数\":{\"docs\":{},\"据\":{\"docs\":{},\"。\":{\"docs\":{\"client/transport-client.html\":{\"ref\":\"client/transport-client.html\",\"tf\":0.011111111111111112}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\".\":{\"docs\":{},\"c\":{\"docs\":{},\"l\":{\"docs\":{},\"i\":{\"docs\":{},\"e\":{\"docs\":{},\"n\":{\"docs\":{},\"t\":{\"docs\":{},\"(\":{\"docs\":{},\")\":{\"docs\":{},\".\":{\"docs\":{},\"p\":{\"docs\":{},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"p\":{\"docs\":{},\"a\":{\"docs\":{},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"s\":{\"docs\":{},\"e\":{\"docs\":{},\"a\":{\"docs\":{},\"r\":{\"docs\":{},\"c\":{\"docs\":{},\"h\":{\"docs\":{},\"(\":{\"docs\":{},\")\":{\"docs\":{\"aggregations.html\":{\"ref\":\"aggregations.html\",\"tf\":0.038461538461538464},\"aggregations/structuring-aggregations.html\":{\"ref\":\"aggregations/structuring-aggregations.html\",\"tf\":0.02702702702702703}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"t\":{\"docs\":{},\")\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.002066115702479339}}}},\"w\":{\"docs\":{\"document-apis/using-bulk-processor.html\":{\"ref\":\"document-apis/using-bulk-processor.html\",\"tf\":0.006024096385542169}}},\"n\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125}},\"e\":{\"docs\":{\"query-dsl/compound-queries.html\":{\"ref\":\"query-dsl/compound-queries.html\",\"tf\":0.005847953216374269}}}}},\"a\":{\"docs\":{},\"m\":{\"docs\":{},\"e\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.004132231404958678},\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355},\"query-dsl/specialized-queries.html\":{\"ref\":\"query-dsl/specialized-queries.html\",\"tf\":0.009523809523809525}},\".\":{\"docs\":{},\"g\":{\"docs\":{},\"e\":{\"docs\":{},\"t\":{\"docs\":{},\"b\":{\"docs\":{},\"u\":{\"docs\":{},\"c\":{\"docs\":{},\"k\":{\"docs\":{},\"e\":{\"docs\":{},\"t\":{\"docs\":{},\"s\":{\"docs\":{},\"(\":{\"docs\":{},\")\":{\"docs\":{},\")\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}}}}}}}}}}}}}}}},\"u\":{\"docs\":{},\"l\":{\"docs\":{},\"l\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.005390835579514825}},\")\":{\"docs\":{},\")\":{\"docs\":{},\"/\":{\"docs\":{},\"/\":{\"docs\":{},\"脚\":{\"docs\":{},\"本\":{\"docs\":{},\"可\":{\"docs\":{},\"以\":{\"docs\":{},\"是\":{\"docs\":{},\"本\":{\"docs\":{},\"地\":{\"docs\":{},\"文\":{\"docs\":{},\"件\":{\"docs\":{},\"存\":{\"docs\":{},\"储\":{\"docs\":{},\"的\":{\"docs\":{},\"，\":{\"docs\":{},\"如\":{\"docs\":{},\"果\":{\"docs\":{},\"使\":{\"docs\":{},\"用\":{\"docs\":{},\"文\":{\"docs\":{},\"件\":{\"docs\":{},\"存\":{\"docs\":{},\"储\":{\"docs\":{},\"的\":{\"docs\":{},\"脚\":{\"docs\":{},\"本\":{\"docs\":{},\"，\":{\"docs\":{},\"需\":{\"docs\":{},\"要\":{\"docs\":{},\"设\":{\"docs\":{},\"置\":{\"docs\":{\"document-apis/update-api.html\":{\"ref\":\"document-apis/update-api.html\",\"tf\":0.007407407407407408}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\",\":{\"docs\":{\"document-apis/update-api.html\":{\"ref\":\"document-apis/update-api.html\",\"tf\":0.007407407407407408}}},\"的\":{\"docs\":{},\"值\":{\"docs\":{},\"就\":{\"docs\":{},\"会\":{\"docs\":{},\"返\":{\"docs\":{},\"回\":{\"docs\":{},\"该\":{\"docs\":{},\"文\":{\"docs\":{},\"档\":{\"docs\":{},\"。\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125}}}}}}}}}}}},\"）\":{\"docs\":{},\"。\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125}}}},\";\":{\"docs\":{\"query-dsl/specialized-queries.html\":{\"ref\":\"query-dsl/specialized-queries.html\",\"tf\":0.004761904761904762}}}}},\"m\":{\"docs\":{\"query-dsl/specialized-queries.html\":{\"ref\":\"query-dsl/specialized-queries.html\",\"tf\":0.004761904761904762}},\"e\":{\"docs\":{},\"r\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00291970802919708},\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125}}}},\"b\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.004132231404958678},\"query-dsl/span-queries.html\":{\"ref\":\"query-dsl/span-queries.html\",\"tf\":0.005555555555555556}}}}}}},\"b\":{\"docs\":{},\"h\":{\"docs\":{},\"i\":{\"docs\":{},\"t\":{\"docs\":{\"search-api/multisearch-api.html\":{\"ref\":\"search-api/multisearch-api.html\",\"tf\":0.038461538461538464}}}}}}},\"s\":{\"docs\":{},\"e\":{\"docs\":{},\"t\":{\"docs\":{\"client/transport-client.html\":{\"ref\":\"client/transport-client.html\",\"tf\":0.05555555555555555},\"client/xpack-transport-client.html\":{\"ref\":\"client/xpack-transport-client.html\",\"tf\":0.03278688524590164},\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.004132231404958678},\"query-dsl/joining-queries.html\":{\"ref\":\"query-dsl/joining-queries.html\",\"tf\":0.02877697841726619},\"query-dsl/specialized-queries.html\":{\"ref\":\"query-dsl/specialized-queries.html\",\"tf\":0.009523809523809525}},\"t\":{\"docs\":{},\"i\":{\"docs\":{},\"n\":{\"docs\":{},\"g\":{\"docs\":{},\"s\":{\"docs\":{},\".\":{\"docs\":{},\"b\":{\"docs\":{},\"u\":{\"docs\":{},\"i\":{\"docs\":{},\"l\":{\"docs\":{},\"d\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"(\":{\"docs\":{},\")\":{\"docs\":{\"client/transport-client.html\":{\"ref\":\"client/transport-client.html\",\"tf\":0.03333333333333333}},\".\":{\"docs\":{},\"p\":{\"docs\":{},\"u\":{\"docs\":{},\"t\":{\"docs\":{},\"(\":{\"docs\":{},\"\\\"\":{\"docs\":{},\"c\":{\"docs\":{},\"l\":{\"docs\":{},\"u\":{\"docs\":{},\"s\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\".\":{\"docs\":{},\"n\":{\"docs\":{},\"a\":{\"docs\":{},\"m\":{\"docs\":{},\"e\":{\"docs\":{},\"\\\"\":{\"docs\":{},\",\":{\"docs\":{\"client/xpack-transport-client.html\":{\"ref\":\"client/xpack-transport-client.html\",\"tf\":0.01639344262295082},\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.002066115702479339},\"query-dsl/joining-queries.html\":{\"ref\":\"query-dsl/joining-queries.html\",\"tf\":0.014388489208633094},\"query-dsl/specialized-queries.html\":{\"ref\":\"query-dsl/specialized-queries.html\",\"tf\":0.004761904761904762}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"a\":{\"docs\":{},\"r\":{\"docs\":{},\"c\":{\"docs\":{},\"h\":{\"docs\":{\"search-api.html\":{\"ref\":\"search-api.html\",\"tf\":5.0344827586206895},\"search-api/using-scrolls-in-java.html\":{\"ref\":\"search-api/using-scrolls-in-java.html\",\"tf\":0.01639344262295082},\"search-api/multisearch-api.html\":{\"ref\":\"search-api/multisearch-api.html\",\"tf\":0.019230769230769232},\"search-api/search-template.html\":{\"ref\":\"search-api/search-template.html\",\"tf\":5.016574585635359},\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355},\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.01078167115902965}},\"i\":{\"docs\":{},\"n\":{\"docs\":{},\"g\":{\"docs\":{},\"!\":{\"docs\":{\"document-apis/using-bulk-processor.html\":{\"ref\":\"document-apis/using-bulk-processor.html\",\"tf\":0.006024096385542169}}}}}},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"s\":{\"docs\":{},\"p\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{},\"s\":{\"docs\":{\"search-api.html\":{\"ref\":\"search-api.html\",\"tf\":0.034482758620689655},\"search-api/using-scrolls-in-java.html\":{\"ref\":\"search-api/using-scrolls-in-java.html\",\"tf\":0.00546448087431694},\"search-api/multisearch-api.html\":{\"ref\":\"search-api/multisearch-api.html\",\"tf\":0.019230769230769232},\"search-api/using-aggregations.html\":{\"ref\":\"search-api/using-aggregations.html\",\"tf\":0.029411764705882353},\"search-api/terminate-after.html\":{\"ref\":\"search-api/terminate-after.html\",\"tf\":0.0625},\"search-api/search-template.html\":{\"ref\":\"search-api/search-template.html\",\"tf\":0.011049723756906077},\"aggregations.html\":{\"ref\":\"aggregations.html\",\"tf\":0.038461538461538464},\"aggregations/structuring-aggregations.html\":{\"ref\":\"aggregations/structuring-aggregations.html\",\"tf\":0.02702702702702703},\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.017518248175182483},\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.014049586776859505},\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0215633423180593},\"query-dsl/specialized-queries.html\":{\"ref\":\"query-dsl/specialized-queries.html\",\"tf\":0.004761904761904762}}}}}}},\"q\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"docs\":{},\"s\":{\"docs\":{},\"t\":{\"docs\":{},\"b\":{\"docs\":{},\"u\":{\"docs\":{},\"i\":{\"docs\":{},\"l\":{\"docs\":{},\"d\":{\"docs\":{\"search-api/multisearch-api.html\":{\"ref\":\"search-api/multisearch-api.html\",\"tf\":0.038461538461538464},\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0215633423180593}},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\".\":{\"docs\":{},\"e\":{\"docs\":{},\"x\":{\"docs\":{},\"e\":{\"docs\":{},\"c\":{\"docs\":{},\"u\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"(\":{\"docs\":{},\")\":{\"docs\":{},\".\":{\"docs\":{},\"a\":{\"docs\":{},\"c\":{\"docs\":{},\"t\":{\"docs\":{},\"i\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{},\"g\":{\"docs\":{},\"e\":{\"docs\":{},\"t\":{\"docs\":{},\"(\":{\"docs\":{},\")\":{\"docs\":{},\";\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125}}}}}}}}}}}}}}}}}}}}}}}},\"g\":{\"docs\":{},\"e\":{\"docs\":{},\"t\":{\"docs\":{},\"(\":{\"docs\":{},\")\":{\"docs\":{},\";\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.008086253369272238}}}}}}}},\"s\":{\"docs\":{},\"e\":{\"docs\":{},\"t\":{\"docs\":{},\"q\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"y\":{\"docs\":{},\"(\":{\"docs\":{},\"e\":{\"docs\":{},\"x\":{\"docs\":{},\"i\":{\"docs\":{},\"s\":{\"docs\":{},\"t\":{\"docs\":{},\"s\":{\"docs\":{},\"q\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"y\":{\"docs\":{},\"b\":{\"docs\":{},\"u\":{\"docs\":{},\"i\":{\"docs\":{},\"l\":{\"docs\":{},\"d\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\")\":{\"docs\":{},\";\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125}}}}}}}}}}}}}}}}}}}}}},\"r\":{\"docs\":{},\"a\":{\"docs\":{},\"n\":{\"docs\":{},\"g\":{\"docs\":{},\"e\":{\"docs\":{},\"q\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"y\":{\"docs\":{},\"b\":{\"docs\":{},\"u\":{\"docs\":{},\"i\":{\"docs\":{},\"l\":{\"docs\":{},\"d\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\")\":{\"docs\":{},\";\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125}}}}}}}}}}}}}}}}}}}},\"e\":{\"docs\":{},\"g\":{\"docs\":{},\"e\":{\"docs\":{},\"x\":{\"docs\":{},\"p\":{\"docs\":{},\"q\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"y\":{\"docs\":{},\"b\":{\"docs\":{},\"u\":{\"docs\":{},\"i\":{\"docs\":{},\"l\":{\"docs\":{},\"d\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\")\":{\"docs\":{},\";\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125}}}}}}}}}}}}}}}}}}}}}},\"w\":{\"docs\":{},\"i\":{\"docs\":{},\"l\":{\"docs\":{},\"d\":{\"docs\":{},\"c\":{\"docs\":{},\"a\":{\"docs\":{},\"r\":{\"docs\":{},\"d\":{\"docs\":{},\"q\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"y\":{\"docs\":{},\"b\":{\"docs\":{},\"u\":{\"docs\":{},\"i\":{\"docs\":{},\"l\":{\"docs\":{},\"d\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\")\":{\"docs\":{},\";\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"t\":{\"docs\":{},\"y\":{\"docs\":{},\"p\":{\"docs\":{},\"e\":{\"docs\":{},\"s\":{\"docs\":{},\"(\":{\"docs\":{},\"t\":{\"docs\":{},\"y\":{\"docs\":{},\"p\":{\"docs\":{},\"e\":{\"docs\":{},\")\":{\"docs\":{},\";\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.01078167115902965}}}}}}}}}}}}}}}}}}}}}}}}},\"(\":{\"docs\":{},\")\":{\"docs\":{},\")\":{\"docs\":{\"search-api/search-template.html\":{\"ref\":\"search-api/search-template.html\",\"tf\":0.016574585635359115}}}}}}}}}}}},\"c\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"x\":{\"docs\":{},\"t\":{\"docs\":{},\"m\":{\"docs\":{},\"i\":{\"docs\":{},\"s\":{\"docs\":{},\"s\":{\"docs\":{},\"i\":{\"docs\":{},\"n\":{\"docs\":{},\"g\":{\"docs\":{},\"e\":{\"docs\":{},\"x\":{\"docs\":{},\"c\":{\"docs\":{},\"e\":{\"docs\":{},\"p\":{\"docs\":{},\"t\":{\"docs\":{},\"i\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{},\"[\":{\"docs\":{},\"n\":{\"docs\":{},\"o\":{\"docs\":{\"search-api/using-scrolls-in-java.html\":{\"ref\":\"search-api/using-scrolls-in-java.html\",\"tf\":0.00546448087431694}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"m\":{\"docs\":{},\"p\":{\"docs\":{},\"l\":{\"docs\":{},\"a\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"q\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"docs\":{},\"s\":{\"docs\":{},\"t\":{\"docs\":{},\"b\":{\"docs\":{},\"u\":{\"docs\":{},\"i\":{\"docs\":{},\"l\":{\"docs\":{},\"d\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"(\":{\"docs\":{},\"c\":{\"docs\":{},\"l\":{\"docs\":{},\"i\":{\"docs\":{},\"e\":{\"docs\":{},\"n\":{\"docs\":{},\"t\":{\"docs\":{},\")\":{\"docs\":{\"search-api/search-template.html\":{\"ref\":\"search-api/search-template.html\",\"tf\":0.016574585635359115}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"h\":{\"docs\":{},\"u\":{\"docs\":{},\"t\":{\"docs\":{},\"d\":{\"docs\":{},\"o\":{\"docs\":{},\"w\":{\"docs\":{},\"n\":{\"docs\":{\"client/transport-client.html\":{\"ref\":\"client/transport-client.html\",\"tf\":0.011111111111111112}}}}}}}},\"o\":{\"docs\":{},\"u\":{\"docs\":{},\"l\":{\"docs\":{},\"d\":{\"docs\":{},\",\":{\"docs\":{\"query-dsl/compound-queries.html\":{\"ref\":\"query-dsl/compound-queries.html\",\"tf\":0.005847953216374269}}}}}}},\"a\":{\"docs\":{},\"p\":{\"docs\":{},\"e\":{\"docs\":{\"query-dsl/geo-queries.html\":{\"ref\":\"query-dsl/geo-queries.html\",\"tf\":0.0196078431372549}},\".\":{\"docs\":{\"query-dsl/geo-queries.html\":{\"ref\":\"query-dsl/geo-queries.html\",\"tf\":0.014705882352941176}}},\"b\":{\"docs\":{},\"u\":{\"docs\":{},\"i\":{\"docs\":{},\"l\":{\"docs\":{},\"d\":{\"docs\":{\"query-dsl/geo-queries.html\":{\"ref\":\"query-dsl/geo-queries.html\",\"tf\":0.004901960784313725}},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"s\":{\"docs\":{},\".\":{\"docs\":{},\"n\":{\"docs\":{},\"e\":{\"docs\":{},\"w\":{\"docs\":{},\"m\":{\"docs\":{},\"u\":{\"docs\":{},\"l\":{\"docs\":{},\"t\":{\"docs\":{},\"i\":{\"docs\":{},\"p\":{\"docs\":{},\"o\":{\"docs\":{},\"i\":{\"docs\":{},\"n\":{\"docs\":{},\"t\":{\"docs\":{},\"(\":{\"docs\":{},\"p\":{\"docs\":{},\"o\":{\"docs\":{},\"i\":{\"docs\":{},\"n\":{\"docs\":{},\"t\":{\"docs\":{},\"s\":{\"docs\":{},\")\":{\"docs\":{\"query-dsl/geo-queries.html\":{\"ref\":\"query-dsl/geo-queries.html\",\"tf\":0.004901960784313725}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"l\":{\"docs\":{\"query-dsl/geo-queries.html\":{\"ref\":\"query-dsl/geo-queries.html\",\"tf\":0.004901960784313725}},\"a\":{\"docs\":{},\"t\":{\"docs\":{},\"i\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{},\".\":{\"docs\":{},\"c\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{},\"t\":{\"docs\":{},\"a\":{\"docs\":{},\"i\":{\"docs\":{},\"n\":{\"docs\":{},\"s\":{\"docs\":{},\",\":{\"docs\":{\"query-dsl/geo-queries.html\":{\"ref\":\"query-dsl/geo-queries.html\",\"tf\":0.004901960784313725}}}}}}}}}}},\"d\":{\"docs\":{},\"i\":{\"docs\":{},\"s\":{\"docs\":{},\"j\":{\"docs\":{},\"o\":{\"docs\":{},\"i\":{\"docs\":{},\"n\":{\"docs\":{},\"t\":{\"docs\":{\"query-dsl/geo-queries.html\":{\"ref\":\"query-dsl/geo-queries.html\",\"tf\":0.004901960784313725}}}}}}}}}},\"i\":{\"docs\":{},\"n\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"s\":{\"docs\":{},\"e\":{\"docs\":{},\"c\":{\"docs\":{},\"t\":{\"docs\":{\"query-dsl/geo-queries.html\":{\"ref\":\"query-dsl/geo-queries.html\",\"tf\":0.004901960784313725}}}}}}}}}}},\"w\":{\"docs\":{},\"i\":{\"docs\":{},\"t\":{\"docs\":{},\"h\":{\"docs\":{},\"i\":{\"docs\":{},\"n\":{\"docs\":{},\",\":{\"docs\":{\"query-dsl/geo-queries.html\":{\"ref\":\"query-dsl/geo-queries.html\",\"tf\":0.004901960784313725}}}}}}}}}}}}}}}}}},\"s\":{\"docs\":{},\".\":{\"docs\":{\"query-dsl/geo-queries.html\":{\"ref\":\"query-dsl/geo-queries.html\",\"tf\":0.004901960784313725}}}}}},\"l\":{\"docs\":{},\"l\":{\"docs\":{\"query-dsl/specialized-queries.html\":{\"ref\":\"query-dsl/specialized-queries.html\",\"tf\":0.004761904761904762}}}}}},\"o\":{\"docs\":{},\"m\":{\"docs\":{},\"e\":{\"docs\":{},\"t\":{\"docs\":{},\"h\":{\"docs\":{\"client/transport-client.html\":{\"ref\":\"client/transport-client.html\",\"tf\":0.011111111111111112}}}}}},\"r\":{\"docs\":{},\"t\":{\"docs\":{},\"o\":{\"docs\":{},\"r\":{\"docs\":{},\"d\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\".\":{\"docs\":{},\"a\":{\"docs\":{},\"s\":{\"docs\":{},\"c\":{\"docs\":{},\")\":{\"docs\":{\"search-api/using-scrolls-in-java.html\":{\"ref\":\"search-api/using-scrolls-in-java.html\",\"tf\":0.00546448087431694}}}}}}}}}}}},\",\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}}}}}},\"t\":{\"docs\":{},\"a\":{\"docs\":{},\"r\":{\"docs\":{},\"t\":{\"docs\":{\"document-apis/using-bulk-processor.html\":{\"ref\":\"document-apis/using-bulk-processor.html\",\"tf\":0.006024096385542169}},\"u\":{\"docs\":{},\"p\":{\"docs\":{\"client/transport-client.html\":{\"ref\":\"client/transport-client.html\",\"tf\":0.011111111111111112}}}},\"e\":{\"docs\":{},\"r\":{\"docs\":{\"client/xpack-transport-client.html\":{\"ref\":\"client/xpack-transport-client.html\",\"tf\":0.01639344262295082}}}}}},\"t\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.004379562043795621}},\"e\":{\"docs\":{\"search-api/using-scrolls-in-java.html\":{\"ref\":\"search-api/using-scrolls-in-java.html\",\"tf\":0.00546448087431694},\"search-api/search-template.html\":{\"ref\":\"search-api/search-template.html\",\"tf\":0.011049723756906077}},\"m\":{\"docs\":{},\"e\":{\"docs\":{},\"n\":{\"docs\":{},\"t\":{\"docs\":{},\".\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.002066115702479339}}}}}}},\"》\":{\"docs\":{\"search-api/search-template.html\":{\"ref\":\"search-api/search-template.html\",\"tf\":0.0055248618784530384}}},\"是\":{\"docs\":{},\"全\":{\"docs\":{},\"局\":{\"docs\":{},\"性\":{\"docs\":{},\"信\":{\"docs\":{},\"息\":{\"docs\":{},\",\":{\"docs\":{\"search-api/search-template.html\":{\"ref\":\"search-api/search-template.html\",\"tf\":0.0055248618784530384}}}}}}}}}},\"u\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.004132231404958678}}},\"i\":{\"docs\":{},\"c\":{\"docs\":{\"document-apis/bulk-api.html\":{\"ref\":\"document-apis/bulk-api.html\",\"tf\":0.014492753623188406},\"search-api/using-scrolls-in-java.html\":{\"ref\":\"search-api/using-scrolls-in-java.html\",\"tf\":0.01639344262295082},\"query-dsl.html\":{\"ref\":\"query-dsl.html\",\"tf\":0.043478260869565216},\"query-dsl/compound-queries.html\":{\"ref\":\"query-dsl/compound-queries.html\",\"tf\":0.005847953216374269}}}},\"s\":{\"docs\":{},\"a\":{\"docs\":{},\"g\":{\"docs\":{},\"g\":{\"docs\":{},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"g\":{\"docs\":{},\"a\":{\"docs\":{},\"t\":{\"docs\":{},\"i\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{},\"b\":{\"docs\":{},\"u\":{\"docs\":{},\"i\":{\"docs\":{},\"l\":{\"docs\":{},\"d\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}}}}}}}}}}}}}}}}}},\"）\":{\"docs\":{},\"的\":{\"docs\":{},\"称\":{\"docs\":{},\"作\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}}}}}}}},\"n\":{\"docs\":{},\"d\":{\"docs\":{},\"a\":{\"docs\":{},\"r\":{\"docs\":{},\"d\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125}}}}}}}},\"o\":{\"docs\":{},\"r\":{\"docs\":{},\"e\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.002066115702479339}}}}},\"r\":{\"docs\":{},\"i\":{\"docs\":{},\"n\":{\"docs\":{},\"g\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.012396694214876033},\"document-apis/multi-get-api.html\":{\"ref\":\"document-apis/multi-get-api.html\",\"tf\":0.021739130434782608},\"search-api/using-scrolls-in-java.html\":{\"ref\":\"search-api/using-scrolls-in-java.html\",\"tf\":0.00546448087431694},\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854},\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.011570247933884297},\"query-dsl/full-text-queries.html\":{\"ref\":\"query-dsl/full-text-queries.html\",\"tf\":0.023809523809523808},\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125}},\"[\":{\"docs\":{},\"]\":{\"docs\":{\"query-dsl/specialized-queries.html\":{\"ref\":\"query-dsl/specialized-queries.html\",\"tf\":0.009523809523809525}}}}}}},\"u\":{\"docs\":{},\"c\":{\"docs\":{},\"t\":{\"docs\":{},\"u\":{\"docs\":{},\"r\":{\"docs\":{\"aggregations/structuring-aggregations.html\":{\"ref\":\"aggregations/structuring-aggregations.html\",\"tf\":5.027027027027027}}}}}}}},\"d\":{\"docs\":{},\"d\":{\"docs\":{},\"e\":{\"docs\":{},\"v\":{\"docs\":{},\"i\":{\"docs\":{},\"a\":{\"docs\":{},\"t\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}}}}}}}}}},\"p\":{\"docs\":{},\"r\":{\"docs\":{},\"i\":{\"docs\":{},\"n\":{\"docs\":{},\"g\":{\"docs\":{\"client/xpack-transport-client.html\":{\"ref\":\"client/xpack-transport-client.html\",\"tf\":0.01639344262295082}}}}}},\"a\":{\"docs\":{},\"t\":{\"docs\":{},\"i\":{\"docs\":{},\"a\":{\"docs\":{},\"l\":{\"4\":{\"docs\":{},\"j\":{\"docs\":{\"query-dsl/geo-queries.html\":{\"ref\":\"query-dsl/geo-queries.html\",\"tf\":0.014705882352941176}}}},\"docs\":{}}}}},\"n\":{\"docs\":{\"query-dsl/span-queries.html\":{\"ref\":\"query-dsl/span-queries.html\",\"tf\":5.022222222222222}},\"_\":{\"docs\":{},\"c\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{},\"t\":{\"docs\":{},\"a\":{\"docs\":{},\"i\":{\"docs\":{},\"n\":{\"docs\":{\"query-dsl/span-queries.html\":{\"ref\":\"query-dsl/span-queries.html\",\"tf\":0.005555555555555556}}}}}}}}},\"f\":{\"docs\":{},\"i\":{\"docs\":{},\"r\":{\"docs\":{},\"s\":{\"docs\":{},\"t\":{\"docs\":{},\"查\":{\"docs\":{},\"询\":{\"docs\":{\"query-dsl/span-queries.html\":{\"ref\":\"query-dsl/span-queries.html\",\"tf\":0.005555555555555556}}}}}}}}},\"m\":{\"docs\":{},\"u\":{\"docs\":{},\"l\":{\"docs\":{},\"t\":{\"docs\":{},\"i\":{\"docs\":{},\"查\":{\"docs\":{},\"询\":{\"docs\":{\"query-dsl/span-queries.html\":{\"ref\":\"query-dsl/span-queries.html\",\"tf\":0.005555555555555556}}}}}}}}},\"n\":{\"docs\":{},\"e\":{\"docs\":{},\"a\":{\"docs\":{},\"r\":{\"docs\":{},\"查\":{\"docs\":{},\"询\":{\"docs\":{\"query-dsl/span-queries.html\":{\"ref\":\"query-dsl/span-queries.html\",\"tf\":0.005555555555555556}}}}}}},\"o\":{\"docs\":{},\"t\":{\"docs\":{},\"查\":{\"docs\":{},\"询\":{\"docs\":{\"query-dsl/span-queries.html\":{\"ref\":\"query-dsl/span-queries.html\",\"tf\":0.005555555555555556}}}}}}},\"o\":{\"docs\":{},\"r\":{\"docs\":{},\"查\":{\"docs\":{},\"询\":{\"docs\":{\"query-dsl/span-queries.html\":{\"ref\":\"query-dsl/span-queries.html\",\"tf\":0.005555555555555556}}}}}},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"m\":{\"docs\":{},\"查\":{\"docs\":{},\"询\":{\"docs\":{\"query-dsl/span-queries.html\":{\"ref\":\"query-dsl/span-queries.html\",\"tf\":0.005555555555555556}}}}}}}},\"w\":{\"docs\":{},\"i\":{\"docs\":{},\"t\":{\"docs\":{},\"h\":{\"docs\":{},\"i\":{\"docs\":{},\"n\":{\"docs\":{},\"查\":{\"docs\":{},\"询\":{\"docs\":{\"query-dsl/span-queries.html\":{\"ref\":\"query-dsl/span-queries.html\",\"tf\":0.005555555555555556}}}}}}}}}}},\"c\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{},\"t\":{\"docs\":{},\"a\":{\"docs\":{},\"i\":{\"docs\":{},\"n\":{\"docs\":{},\"i\":{\"docs\":{},\"n\":{\"docs\":{},\"g\":{\"docs\":{},\"q\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"y\":{\"docs\":{},\"(\":{\"docs\":{\"query-dsl/span-queries.html\":{\"ref\":\"query-dsl/span-queries.html\",\"tf\":0.005555555555555556}}}}}}}}}}}}}}}}}},\"f\":{\"docs\":{},\"i\":{\"docs\":{},\"r\":{\"docs\":{},\"s\":{\"docs\":{},\"t\":{\"docs\":{},\"q\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"y\":{\"docs\":{},\"(\":{\"docs\":{\"query-dsl/span-queries.html\":{\"ref\":\"query-dsl/span-queries.html\",\"tf\":0.005555555555555556}}}}}}}}}}}}},\"m\":{\"docs\":{},\"u\":{\"docs\":{},\"l\":{\"docs\":{},\"t\":{\"docs\":{},\"i\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"m\":{\"docs\":{},\"q\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"y\":{\"docs\":{},\"b\":{\"docs\":{},\"u\":{\"docs\":{},\"i\":{\"docs\":{},\"l\":{\"docs\":{},\"d\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"(\":{\"docs\":{\"query-dsl/span-queries.html\":{\"ref\":\"query-dsl/span-queries.html\",\"tf\":0.005555555555555556}}}}}}}}}}}}}}}}}}}}}}}},\"n\":{\"docs\":{},\"e\":{\"docs\":{},\"a\":{\"docs\":{},\"r\":{\"docs\":{},\"q\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"y\":{\"docs\":{},\"(\":{\"docs\":{\"query-dsl/span-queries.html\":{\"ref\":\"query-dsl/span-queries.html\",\"tf\":0.005555555555555556}},\"s\":{\"docs\":{},\"p\":{\"docs\":{},\"a\":{\"docs\":{},\"n\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"m\":{\"docs\":{},\"q\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"y\":{\"docs\":{},\"(\":{\"docs\":{},\"\\\"\":{\"docs\":{},\"f\":{\"docs\":{},\"i\":{\"docs\":{},\"e\":{\"docs\":{},\"l\":{\"docs\":{},\"d\":{\"1\":{\"docs\":{},\"\\\"\":{\"docs\":{},\",\":{\"docs\":{\"query-dsl/span-queries.html\":{\"ref\":\"query-dsl/span-queries.html\",\"tf\":0.005555555555555556}},\"\\\"\":{\"docs\":{},\"b\":{\"docs\":{},\"a\":{\"docs\":{},\"r\":{\"docs\":{},\"\\\"\":{\"docs\":{},\")\":{\"docs\":{},\",\":{\"docs\":{\"query-dsl/span-queries.html\":{\"ref\":\"query-dsl/span-queries.html\",\"tf\":0.005555555555555556}}}}}}}}}}}},\"docs\":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"o\":{\"docs\":{},\"t\":{\"docs\":{},\"q\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"y\":{\"docs\":{},\"(\":{\"docs\":{\"query-dsl/span-queries.html\":{\"ref\":\"query-dsl/span-queries.html\",\"tf\":0.005555555555555556}}}}}}}}}}},\"o\":{\"docs\":{},\"r\":{\"docs\":{},\"q\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"y\":{\"docs\":{},\"(\":{\"docs\":{\"query-dsl/span-queries.html\":{\"ref\":\"query-dsl/span-queries.html\",\"tf\":0.005555555555555556}}}}}}}}}},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"m\":{\"docs\":{},\"q\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"y\":{\"docs\":{},\"(\":{\"docs\":{\"query-dsl/span-queries.html\":{\"ref\":\"query-dsl/span-queries.html\",\"tf\":0.005555555555555556}},\"\\\"\":{\"docs\":{},\"f\":{\"docs\":{},\"i\":{\"docs\":{},\"e\":{\"docs\":{},\"l\":{\"docs\":{},\"d\":{\"1\":{\"docs\":{},\"\\\"\":{\"docs\":{},\",\":{\"docs\":{\"query-dsl/span-queries.html\":{\"ref\":\"query-dsl/span-queries.html\",\"tf\":0.005555555555555556}},\"\\\"\":{\"docs\":{},\"f\":{\"docs\":{},\"o\":{\"docs\":{},\"o\":{\"docs\":{},\"\\\"\":{\"docs\":{},\")\":{\"docs\":{},\")\":{\"docs\":{},\";\":{\"docs\":{\"query-dsl/span-queries.html\":{\"ref\":\"query-dsl/span-queries.html\",\"tf\":0.005555555555555556}}}}}}}}}}}}},\"docs\":{},\"\\\"\":{\"docs\":{},\",\":{\"docs\":{},\"\\\"\":{\"docs\":{},\"v\":{\"docs\":{},\"a\":{\"docs\":{},\"l\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"1\":{\"docs\":{},\"\\\"\":{\"docs\":{},\")\":{\"docs\":{},\")\":{\"docs\":{\"query-dsl/span-queries.html\":{\"ref\":\"query-dsl/span-queries.html\",\"tf\":0.005555555555555556}}},\",\":{\"docs\":{\"query-dsl/span-queries.html\":{\"ref\":\"query-dsl/span-queries.html\",\"tf\":0.011111111111111112}}}}}},\"2\":{\"docs\":{},\"\\\"\":{\"docs\":{},\")\":{\"docs\":{},\")\":{\"docs\":{},\";\":{\"docs\":{\"query-dsl/span-queries.html\":{\"ref\":\"query-dsl/span-queries.html\",\"tf\":0.005555555555555556}}}}}}},\"docs\":{}}}}}}}}}}}}}},\"u\":{\"docs\":{},\"s\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"\\\"\":{\"docs\":{},\",\":{\"docs\":{\"query-dsl/span-queries.html\":{\"ref\":\"query-dsl/span-queries.html\",\"tf\":0.005555555555555556}}}}}}}}}}}}}}}}}}},\"w\":{\"docs\":{},\"i\":{\"docs\":{},\"t\":{\"docs\":{},\"h\":{\"docs\":{},\"i\":{\"docs\":{},\"n\":{\"docs\":{},\"q\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"y\":{\"docs\":{},\"(\":{\"docs\":{\"query-dsl/span-queries.html\":{\"ref\":\"query-dsl/span-queries.html\",\"tf\":0.005555555555555556}}}}}}}}}}}}}}}},\"e\":{\"docs\":{},\"c\":{\"docs\":{},\"i\":{\"docs\":{},\"f\":{\"docs\":{},\"i\":{\"docs\":{\"query-dsl/geo-queries.html\":{\"ref\":\"query-dsl/geo-queries.html\",\"tf\":0.004901960784313725}}}},\"a\":{\"docs\":{},\"l\":{\"docs\":{\"query-dsl/specialized-queries.html\":{\"ref\":\"query-dsl/specialized-queries.html\",\"tf\":5.004761904761905}}}}}}}},\"y\":{\"docs\":{},\"s\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"m\":{\"docs\":{},\".\":{\"docs\":{},\"o\":{\"docs\":{},\"u\":{\"docs\":{},\"t\":{\"docs\":{},\".\":{\"docs\":{},\"p\":{\"docs\":{},\"r\":{\"docs\":{},\"i\":{\"docs\":{},\"n\":{\"docs\":{},\"t\":{\"docs\":{},\"l\":{\"docs\":{},\"n\":{\"docs\":{},\"(\":{\"docs\":{},\"\\\"\":{\"docs\":{},\"创\":{\"docs\":{},\"建\":{\"docs\":{},\"成\":{\"docs\":{},\"功\":{\"docs\":{},\"!\":{\"docs\":{},\"\\\"\":{\"docs\":{},\")\":{\"docs\":{},\";\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.004132231404958678}}}}}}}}}}},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"s\":{\"docs\":{},\"p\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{},\"s\":{\"docs\":{},\"e\":{\"docs\":{},\".\":{\"docs\":{},\"g\":{\"docs\":{},\"e\":{\"docs\":{},\"t\":{\"docs\":{},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"s\":{\"docs\":{},\"u\":{\"docs\":{},\"l\":{\"docs\":{},\"t\":{\"docs\":{},\"(\":{\"docs\":{},\")\":{\"docs\":{},\")\":{\"docs\":{},\";\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.012396694214876033}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"c\":{\"docs\":{},\"r\":{\"docs\":{},\"i\":{\"docs\":{},\"p\":{\"docs\":{},\"t\":{\"docs\":{\"document-apis/update-api.html\":{\"ref\":\"document-apis/update-api.html\",\"tf\":0.007407407407407408},\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854},\"query-dsl/specialized-queries.html\":{\"ref\":\"query-dsl/specialized-queries.html\",\"tf\":0.009523809523809525},\"indexed-scripts-api.html\":{\"ref\":\"indexed-scripts-api.html\",\"tf\":3.333333333333333},\"indexed-scripts-api/script-language.html\":{\"ref\":\"indexed-scripts-api/script-language.html\",\"tf\":5}},\"(\":{\"docs\":{\"query-dsl/specialized-queries.html\":{\"ref\":\"query-dsl/specialized-queries.html\",\"tf\":0.004761904761904762}},\"\\\"\":{\"docs\":{},\"c\":{\"docs\":{},\"t\":{\"docs\":{},\"x\":{\"docs\":{},\".\":{\"docs\":{},\"_\":{\"docs\":{},\"s\":{\"docs\":{},\"o\":{\"docs\":{},\"u\":{\"docs\":{},\"r\":{\"docs\":{},\"c\":{\"docs\":{},\"e\":{\"docs\":{},\".\":{\"docs\":{},\"g\":{\"docs\":{},\"e\":{\"docs\":{},\"n\":{\"docs\":{},\"d\":{\"docs\":{\"document-apis/update-api.html\":{\"ref\":\"document-apis/update-api.html\",\"tf\":0.014814814814814815}}}}}}}}}}}}}}}}}},\"d\":{\"docs\":{},\"o\":{\"docs\":{},\"c\":{\"docs\":{},\"[\":{\"docs\":{},\"'\":{\"docs\":{},\"n\":{\"docs\":{},\"u\":{\"docs\":{},\"m\":{\"1\":{\"docs\":{},\"'\":{\"docs\":{},\"]\":{\"docs\":{},\".\":{\"docs\":{},\"v\":{\"docs\":{},\"a\":{\"docs\":{},\"l\":{\"docs\":{},\"u\":{\"docs\":{\"query-dsl/specialized-queries.html\":{\"ref\":\"query-dsl/specialized-queries.html\",\"tf\":0.004761904761904762}}}}}}}}}},\"docs\":{}}}}}}}}}}},\"s\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"v\":{\"docs\":{},\"i\":{\"docs\":{},\"c\":{\"docs\":{},\"e\":{\"docs\":{},\".\":{\"docs\":{},\"s\":{\"docs\":{},\"c\":{\"docs\":{},\"r\":{\"docs\":{},\"i\":{\"docs\":{},\"p\":{\"docs\":{},\"t\":{\"docs\":{},\"t\":{\"docs\":{},\"y\":{\"docs\":{},\"p\":{\"docs\":{},\"e\":{\"docs\":{},\".\":{\"docs\":{},\"f\":{\"docs\":{},\"i\":{\"docs\":{},\"l\":{\"docs\":{\"document-apis/update-api.html\":{\"ref\":\"document-apis/update-api.html\",\"tf\":0.007407407407407408}}}}}}}}}}}}}}}}}}}}}}}},\"）\":{\"docs\":{},\"，\":{\"docs\":{},\"以\":{\"docs\":{},\"【\":{\"docs\":{},\"字\":{\"docs\":{},\"段\":{\"docs\":{},\"范\":{\"docs\":{},\"围\":{\"docs\":{},\"】\":{\"docs\":{},\"来\":{\"docs\":{},\"桶\":{\"docs\":{},\"分\":{\"docs\":{},\"聚\":{\"docs\":{},\"合\":{\"docs\":{},\"。\":{\"docs\":{},\"范\":{\"docs\":{},\"围\":{\"docs\":{},\"聚\":{\"docs\":{},\"合\":{\"docs\":{},\"包\":{\"docs\":{},\"括\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}}}}}}}}}}}}}}}}}}}},\"q\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"y\":{\"docs\":{},\"(\":{\"docs\":{\"query-dsl/specialized-queries.html\":{\"ref\":\"query-dsl/specialized-queries.html\",\"tf\":0.009523809523809525}}}}}}}},\"t\":{\"docs\":{},\"y\":{\"docs\":{},\"p\":{\"docs\":{},\"e\":{\"docs\":{},\".\":{\"docs\":{},\"f\":{\"docs\":{},\"i\":{\"docs\":{},\"l\":{\"docs\":{},\"e\":{\"docs\":{},\",\":{\"docs\":{\"query-dsl/specialized-queries.html\":{\"ref\":\"query-dsl/specialized-queries.html\",\"tf\":0.009523809523809525}}}}}}},\"i\":{\"docs\":{},\"n\":{\"docs\":{},\"d\":{\"docs\":{},\"e\":{\"docs\":{},\"x\":{\"docs\":{\"query-dsl/specialized-queries.html\":{\"ref\":\"query-dsl/specialized-queries.html\",\"tf\":0.004761904761904762}}}}},\"l\":{\"docs\":{},\"i\":{\"docs\":{},\"n\":{\"docs\":{},\"e\":{\"docs\":{},\"，\":{\"docs\":{\"query-dsl/specialized-queries.html\":{\"ref\":\"query-dsl/specialized-queries.html\",\"tf\":0.004761904761904762}}}}}}}}}}}}}}}}},\"o\":{\"docs\":{},\"l\":{\"docs\":{},\"l\":{\"docs\":{\"search-api/using-scrolls-in-java.html\":{\"ref\":\"search-api/using-scrolls-in-java.html\",\"tf\":3.3825136612021853}},\"i\":{\"docs\":{},\"d\":{\"docs\":{\"search-api/using-scrolls-in-java.html\":{\"ref\":\"search-api/using-scrolls-in-java.html\",\"tf\":0.00546448087431694}},\")\":{\"docs\":{},\"{\":{\"docs\":{\"search-api/using-scrolls-in-java.html\":{\"ref\":\"search-api/using-scrolls-in-java.html\",\"tf\":0.00546448087431694}}}},\"l\":{\"docs\":{},\"i\":{\"docs\":{},\"s\":{\"docs\":{},\"t\":{\"docs\":{\"search-api/using-scrolls-in-java.html\":{\"ref\":\"search-api/using-scrolls-in-java.html\",\"tf\":0.00546448087431694}},\")\":{\"docs\":{},\"{\":{\"docs\":{\"search-api/using-scrolls-in-java.html\":{\"ref\":\"search-api/using-scrolls-in-java.html\",\"tf\":0.00546448087431694}}}}}}}}}},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"s\":{\"docs\":{},\"p\":{\"docs\":{\"search-api/using-scrolls-in-java.html\":{\"ref\":\"search-api/using-scrolls-in-java.html\",\"tf\":0.01092896174863388}},\".\":{\"docs\":{},\"g\":{\"docs\":{},\"e\":{\"docs\":{},\"t\":{\"docs\":{},\"h\":{\"docs\":{},\"i\":{\"docs\":{},\"t\":{\"docs\":{},\"s\":{\"docs\":{},\"(\":{\"docs\":{},\")\":{\"docs\":{},\".\":{\"docs\":{},\"g\":{\"docs\":{},\"e\":{\"docs\":{},\"t\":{\"docs\":{},\"h\":{\"docs\":{},\"i\":{\"docs\":{},\"t\":{\"docs\":{},\"s\":{\"docs\":{},\"(\":{\"docs\":{},\")\":{\"docs\":{},\")\":{\"docs\":{\"search-api/using-scrolls-in-java.html\":{\"ref\":\"search-api/using-scrolls-in-java.html\",\"tf\":0.00546448087431694}}}}}}}}}}}}}}}}}}}}}}}}}}},\"，\":{\"docs\":{},\"初\":{\"docs\":{},\"始\":{\"docs\":{},\"搜\":{\"docs\":{},\"索\":{\"docs\":{},\"请\":{\"docs\":{},\"求\":{\"docs\":{},\"应\":{\"docs\":{},\"该\":{\"docs\":{},\"在\":{\"docs\":{},\"查\":{\"docs\":{},\"询\":{\"docs\":{},\"中\":{\"docs\":{},\"指\":{\"docs\":{},\"定\":{\"docs\":{\"search-api/using-scrolls-in-java.html\":{\"ref\":\"search-api/using-scrolls-in-java.html\",\"tf\":0.00546448087431694}}}}}}}}}}}}}}}}}}}}},\"o\":{\"docs\":{},\"r\":{\"docs\":{},\"e\":{\"docs\":{\"query-dsl/compound-queries.html\":{\"ref\":\"query-dsl/compound-queries.html\",\"tf\":0.011695906432748537},\"query-dsl/joining-queries.html\":{\"ref\":\"query-dsl/joining-queries.html\",\"tf\":0.007194244604316547}},\"m\":{\"docs\":{},\"o\":{\"docs\":{},\"d\":{\"docs\":{},\"e\":{\"docs\":{},\".\":{\"docs\":{},\"a\":{\"docs\":{},\"v\":{\"docs\":{},\"g\":{\"docs\":{\"query-dsl/joining-queries.html\":{\"ref\":\"query-dsl/joining-queries.html\",\"tf\":0.02158273381294964}},\",\":{\"docs\":{\"query-dsl/joining-queries.html\":{\"ref\":\"query-dsl/joining-queries.html\",\"tf\":0.007194244604316547}}}}}},\"m\":{\"docs\":{},\"a\":{\"docs\":{},\"x\":{\"docs\":{},\",\":{\"docs\":{\"query-dsl/joining-queries.html\":{\"ref\":\"query-dsl/joining-queries.html\",\"tf\":0.014388489208633094}}}}},\"i\":{\"docs\":{},\"n\":{\"docs\":{},\",\":{\"docs\":{\"query-dsl/joining-queries.html\":{\"ref\":\"query-dsl/joining-queries.html\",\"tf\":0.014388489208633094}}}}}},\"n\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{\"query-dsl/joining-queries.html\":{\"ref\":\"query-dsl/joining-queries.html\",\"tf\":0.014388489208633094}}}}},\"t\":{\"docs\":{},\"o\":{\"docs\":{},\"t\":{\"docs\":{\"query-dsl/joining-queries.html\":{\"ref\":\"query-dsl/joining-queries.html\",\"tf\":0.007194244604316547}},\"a\":{\"docs\":{},\"l\":{\"docs\":{},\",\":{\"docs\":{\"query-dsl/joining-queries.html\":{\"ref\":\"query-dsl/joining-queries.html\",\"tf\":0.007194244604316547}}}}}}}}}}}}}}}}},\"m\":{\"docs\":{},\"i\":{\"docs\":{},\"t\":{\"docs\":{},\"h\":{\"docs\":{},\"\\\"\":{\"docs\":{},\")\":{\"docs\":{\"document-apis/update-api.html\":{\"ref\":\"document-apis/update-api.html\",\"tf\":0.007407407407407408}}},\",\":{\"docs\":{\"document-apis/update-api.html\":{\"ref\":\"document-apis/update-api.html\",\"tf\":0.007407407407407408}}}}}}}},\"n\":{\"docs\":{},\"a\":{\"docs\":{},\"p\":{\"docs\":{},\"s\":{\"docs\":{},\"h\":{\"docs\":{},\"o\":{\"docs\":{},\"t\":{\"docs\":{\"search-api/using-scrolls-in-java.html\":{\"ref\":\"search-api/using-scrolls-in-java.html\",\"tf\":0.00546448087431694}}}}}}}}},\"r\":{\"docs\":{\"search-api/multisearch-api.html\":{\"ref\":\"search-api/multisearch-api.html\",\"tf\":0.019230769230769232},\"search-api/using-aggregations.html\":{\"ref\":\"search-api/using-aggregations.html\",\"tf\":0.029411764705882353},\"search-api/terminate-after.html\":{\"ref\":\"search-api/terminate-after.html\",\"tf\":0.0625},\"search-api/search-template.html\":{\"ref\":\"search-api/search-template.html\",\"tf\":0.016574585635359115},\"aggregations.html\":{\"ref\":\"aggregations.html\",\"tf\":0.038461538461538464},\"aggregations/structuring-aggregations.html\":{\"ref\":\"aggregations/structuring-aggregations.html\",\"tf\":0.02702702702702703},\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.017518248175182483},\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.014049586776859505}},\".\":{\"docs\":{},\"g\":{\"docs\":{},\"e\":{\"docs\":{},\"t\":{\"docs\":{},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"s\":{\"docs\":{},\"p\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{},\"s\":{\"docs\":{},\"e\":{\"docs\":{},\"s\":{\"docs\":{},\"(\":{\"docs\":{},\")\":{\"docs\":{},\")\":{\"docs\":{\"search-api/multisearch-api.html\":{\"ref\":\"search-api/multisearch-api.html\",\"tf\":0.019230769230769232}}}}}}}}}}}}}},\"a\":{\"docs\":{},\"g\":{\"docs\":{},\"g\":{\"docs\":{},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"g\":{\"docs\":{},\"a\":{\"docs\":{},\"t\":{\"docs\":{},\"i\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{},\"s\":{\"docs\":{},\"(\":{\"docs\":{},\")\":{\"docs\":{},\".\":{\"docs\":{},\"g\":{\"docs\":{},\"e\":{\"docs\":{},\"t\":{\"docs\":{},\"(\":{\"docs\":{},\"\\\"\":{\"docs\":{},\"a\":{\"docs\":{},\"g\":{\"docs\":{},\"g\":{\"1\":{\"docs\":{},\"\\\"\":{\"docs\":{},\")\":{\"docs\":{},\";\":{\"docs\":{\"search-api/using-aggregations.html\":{\"ref\":\"search-api/using-aggregations.html\",\"tf\":0.029411764705882353}}}}}},\"2\":{\"docs\":{},\"\\\"\":{\"docs\":{},\")\":{\"docs\":{},\";\":{\"docs\":{\"search-api/using-aggregations.html\":{\"ref\":\"search-api/using-aggregations.html\",\"tf\":0.029411764705882353}}}}}},\"docs\":{},\"\\\"\":{\"docs\":{},\")\":{\"docs\":{},\";\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.017518248175182483},\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.011570247933884297}}}}}}}},\"g\":{\"docs\":{},\"e\":{\"docs\":{},\"n\":{\"docs\":{},\"d\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"s\":{\"docs\":{},\"\\\"\":{\"docs\":{},\")\":{\"docs\":{},\";\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}}}}}}}}},\"s\":{\"docs\":{},\"i\":{\"docs\":{},\"g\":{\"docs\":{},\"n\":{\"docs\":{},\"i\":{\"docs\":{},\"f\":{\"docs\":{},\"i\":{\"docs\":{},\"c\":{\"docs\":{},\"a\":{\"docs\":{},\"n\":{\"docs\":{},\"t\":{\"docs\":{},\"_\":{\"docs\":{},\"c\":{\"docs\":{},\"o\":{\"docs\":{},\"u\":{\"docs\":{},\"n\":{\"docs\":{},\"t\":{\"docs\":{},\"r\":{\"docs\":{},\"i\":{\"docs\":{},\"e\":{\"docs\":{},\"s\":{\"docs\":{},\"\\\"\":{\"docs\":{},\")\":{\"docs\":{},\";\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"b\":{\"1\":{\"docs\":{\"search-api/multisearch-api.html\":{\"ref\":\"search-api/multisearch-api.html\",\"tf\":0.019230769230769232}}},\"2\":{\"docs\":{\"search-api/multisearch-api.html\":{\"ref\":\"search-api/multisearch-api.html\",\"tf\":0.019230769230769232}}},\"docs\":{}}},\"i\":{\"docs\":{},\"n\":{\"docs\":{},\"g\":{\"docs\":{},\"l\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}}}}},\"z\":{\"docs\":{},\"e\":{\"docs\":{},\",\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}}}}},\"g\":{\"docs\":{},\"n\":{\"docs\":{},\"i\":{\"docs\":{},\"f\":{\"docs\":{},\"i\":{\"docs\":{},\"c\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}},\"a\":{\"docs\":{},\"n\":{\"docs\":{},\"t\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"m\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}}}}}}}}}}}},\"m\":{\"docs\":{},\"p\":{\"docs\":{},\"l\":{\"docs\":{},\"e\":{\"docs\":{},\"q\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"y\":{\"docs\":{},\"s\":{\"docs\":{},\"t\":{\"docs\":{},\"r\":{\"docs\":{},\"i\":{\"docs\":{},\"n\":{\"docs\":{},\"g\":{\"docs\":{},\"q\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"y\":{\"docs\":{},\"(\":{\"docs\":{},\"\\\"\":{\"docs\":{},\"+\":{\"docs\":{},\"k\":{\"docs\":{},\"i\":{\"docs\":{},\"m\":{\"docs\":{},\"c\":{\"docs\":{},\"h\":{\"docs\":{},\"i\":{\"docs\":{\"query-dsl/full-text-queries.html\":{\"ref\":\"query-dsl/full-text-queries.html\",\"tf\":0.011904761904761904}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"i\":{\"docs\":{},\"l\":{\"docs\":{},\"a\":{\"docs\":{},\"r\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125}}}}}}}},\"u\":{\"docs\":{},\"b\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}}},\"m\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00583941605839416}},\"a\":{\"docs\":{},\"g\":{\"docs\":{},\"g\":{\"docs\":{},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"g\":{\"docs\":{},\"a\":{\"docs\":{},\"t\":{\"docs\":{},\"i\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{},\"b\":{\"docs\":{},\"u\":{\"docs\":{},\"i\":{\"docs\":{},\"l\":{\"docs\":{},\"d\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}}}}}}}}}}}}}}}}}},\"o\":{\"docs\":{},\"f\":{\"docs\":{},\"s\":{\"docs\":{},\"q\":{\"docs\":{},\"u\":{\"docs\":{},\"a\":{\"docs\":{},\"r\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}}}}}}}}}}},\"q\":{\"docs\":{},\"l\":{\"docs\":{\"query-dsl/joining-queries.html\":{\"ref\":\"query-dsl/joining-queries.html\",\"tf\":0.007194244604316547}}}}},\"一\":{\"docs\":{},\"个\":{\"docs\":{},\"就\":{\"docs\":{},\"够\":{\"docs\":{},\"了\":{\"docs\":{},\"，\":{\"docs\":{},\"因\":{\"docs\":{},\"为\":{\"docs\":{},\"添\":{\"docs\":{},\"加\":{\"docs\":{},\"了\":{\"docs\":{},\"自\":{\"docs\":{},\"动\":{\"docs\":{},\"嗅\":{\"docs\":{},\"探\":{\"docs\":{},\"配\":{\"docs\":{},\"置\":{\"docs\":{\"client/transport-client.html\":{\"ref\":\"client/transport-client.html\",\"tf\":0.011111111111111112}}}}}}}}}}}}}}}}},\"m\":{\"docs\":{},\"u\":{\"docs\":{},\"l\":{\"docs\":{},\"t\":{\"docs\":{},\"i\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}}}}}}},\"特\":{\"docs\":{},\"殊\":{\"docs\":{},\"的\":{\"docs\":{},\"单\":{\"docs\":{},\"桶\":{\"docs\":{},\"聚\":{\"docs\":{},\"合\":{\"docs\":{},\"，\":{\"docs\":{},\"可\":{\"docs\":{},\"以\":{\"docs\":{},\"从\":{\"docs\":{},\"嵌\":{\"docs\":{},\"套\":{\"docs\":{},\"文\":{\"docs\":{},\"档\":{\"docs\":{},\"中\":{\"docs\":{},\"聚\":{\"docs\":{},\"合\":{\"docs\":{},\"父\":{\"docs\":{},\"文\":{\"docs\":{},\"档\":{\"docs\":{},\"。\":{\"docs\":{},\"实\":{\"docs\":{},\"际\":{\"docs\":{},\"上\":{\"docs\":{},\"，\":{\"docs\":{},\"这\":{\"docs\":{},\"种\":{\"docs\":{},\"聚\":{\"docs\":{},\"合\":{\"docs\":{},\"可\":{\"docs\":{},\"以\":{\"docs\":{},\"从\":{\"docs\":{},\"嵌\":{\"docs\":{},\"套\":{\"docs\":{},\"的\":{\"docs\":{},\"块\":{\"docs\":{},\"结\":{\"docs\":{},\"构\":{\"docs\":{},\"中\":{\"docs\":{},\"跳\":{\"docs\":{},\"出\":{\"docs\":{},\"来\":{\"docs\":{},\"，\":{\"docs\":{},\"并\":{\"docs\":{},\"链\":{\"docs\":{},\"接\":{\"docs\":{},\"到\":{\"docs\":{},\"其\":{\"docs\":{},\"他\":{\"docs\":{},\"嵌\":{\"docs\":{},\"套\":{\"docs\":{},\"的\":{\"docs\":{},\"结\":{\"docs\":{},\"构\":{\"docs\":{},\"或\":{\"docs\":{},\"根\":{\"docs\":{},\"文\":{\"docs\":{},\"档\":{\"docs\":{},\".\":{\"docs\":{},\"这\":{\"docs\":{},\"允\":{\"docs\":{},\"许\":{\"docs\":{},\"嵌\":{\"docs\":{},\"套\":{\"docs\":{},\"不\":{\"docs\":{},\"是\":{\"docs\":{},\"嵌\":{\"docs\":{},\"套\":{\"docs\":{},\"对\":{\"docs\":{},\"象\":{\"docs\":{},\"的\":{\"docs\":{},\"一\":{\"docs\":{},\"部\":{\"docs\":{},\"分\":{\"docs\":{},\"的\":{\"docs\":{},\"其\":{\"docs\":{},\"他\":{\"docs\":{},\"聚\":{\"docs\":{},\"合\":{\"docs\":{},\"在\":{\"docs\":{},\"嵌\":{\"docs\":{},\"套\":{\"docs\":{},\"聚\":{\"docs\":{},\"合\":{\"docs\":{},\"中\":{\"docs\":{},\"。\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"定\":{\"docs\":{},\"要\":{\"docs\":{},\"修\":{\"docs\":{},\"改\":{\"docs\":{},\"默\":{\"docs\":{},\"认\":{\"docs\":{},\"仓\":{\"docs\":{},\"库\":{\"docs\":{},\"地\":{\"docs\":{},\"址\":{\"docs\":{},\"为\":{\"docs\":{},\"h\":{\"docs\":{},\"t\":{\"docs\":{},\"t\":{\"docs\":{},\"p\":{\"docs\":{},\"s\":{\"docs\":{},\":\":{\"docs\":{},\"/\":{\"docs\":{},\"/\":{\"docs\":{},\"a\":{\"docs\":{},\"r\":{\"docs\":{},\"t\":{\"docs\":{},\"i\":{\"docs\":{},\"f\":{\"docs\":{},\"a\":{\"docs\":{},\"c\":{\"docs\":{},\"t\":{\"docs\":{},\"s\":{\"docs\":{},\".\":{\"docs\":{},\"e\":{\"docs\":{},\"l\":{\"docs\":{},\"a\":{\"docs\":{},\"s\":{\"docs\":{},\"t\":{\"docs\":{},\"i\":{\"docs\":{},\"c\":{\"docs\":{},\".\":{\"docs\":{},\"c\":{\"docs\":{},\"o\":{\"docs\":{},\"/\":{\"docs\":{},\"m\":{\"docs\":{},\"a\":{\"docs\":{},\"v\":{\"docs\":{},\"e\":{\"docs\":{},\"n\":{\"docs\":{\"client/xpack-transport-client.html\":{\"ref\":\"client/xpack-transport-client.html\",\"tf\":0.01639344262295082}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"次\":{\"docs\":{},\"获\":{\"docs\":{},\"取\":{\"docs\":{},\"多\":{\"docs\":{},\"个\":{\"docs\":{},\"文\":{\"docs\":{},\"档\":{\"docs\":{\"document-apis/multi-get-api.html\":{\"ref\":\"document-apis/multi-get-api.html\",\"tf\":0.021739130434782608}}}}}}}}},\"般\":{\"docs\":{},\"搜\":{\"docs\":{},\"索\":{\"docs\":{},\"请\":{\"docs\":{},\"求\":{\"docs\":{},\"都\":{\"docs\":{},\"是\":{\"docs\":{},\"返\":{\"docs\":{},\"回\":{\"docs\":{},\"一\":{\"docs\":{},\"\\\"\":{\"docs\":{},\"页\":{\"docs\":{},\"\\\"\":{\"docs\":{},\"数\":{\"docs\":{},\"据\":{\"docs\":{},\"，\":{\"docs\":{},\"无\":{\"docs\":{},\"论\":{\"docs\":{},\"数\":{\"docs\":{},\"据\":{\"docs\":{},\"量\":{\"docs\":{},\"多\":{\"docs\":{},\"大\":{\"docs\":{},\"都\":{\"docs\":{},\"一\":{\"docs\":{},\"起\":{\"docs\":{},\"返\":{\"docs\":{},\"回\":{\"docs\":{},\"给\":{\"docs\":{},\"用\":{\"docs\":{},\"户\":{\"docs\":{},\"，\":{\"docs\":{},\"s\":{\"docs\":{},\"c\":{\"docs\":{},\"r\":{\"docs\":{},\"o\":{\"docs\":{},\"l\":{\"docs\":{},\"l\":{\"docs\":{\"search-api/using-scrolls-in-java.html\":{\"ref\":\"search-api/using-scrolls-in-java.html\",\"tf\":0.00546448087431694}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"种\":{\"docs\":{},\"特\":{\"docs\":{},\"殊\":{\"docs\":{},\"的\":{\"docs\":{},\"单\":{\"docs\":{},\"桶\":{\"docs\":{},\"聚\":{\"docs\":{},\"合\":{\"docs\":{},\"，\":{\"docs\":{},\"可\":{\"docs\":{},\"以\":{\"docs\":{},\"将\":{\"docs\":{},\"父\":{\"docs\":{},\"文\":{\"docs\":{},\"档\":{\"docs\":{},\"类\":{\"docs\":{},\"型\":{\"docs\":{},\"上\":{\"docs\":{},\"的\":{\"docs\":{},\"桶\":{\"docs\":{},\"聚\":{\"docs\":{},\"合\":{\"docs\":{},\"到\":{\"docs\":{},\"子\":{\"docs\":{},\"文\":{\"docs\":{},\"档\":{\"docs\":{},\"上\":{\"docs\":{},\"。\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"旦\":{\"docs\":{},\"的\":{\"docs\":{},\"查\":{\"docs\":{},\"询\":{\"docs\":{},\"准\":{\"docs\":{},\"备\":{\"docs\":{},\"就\":{\"docs\":{},\"绪\":{\"docs\":{},\"，\":{\"docs\":{},\"就\":{\"docs\":{},\"可\":{\"docs\":{},\"以\":{\"docs\":{},\"使\":{\"docs\":{},\"用\":{\"docs\":{},\"s\":{\"docs\":{},\"e\":{\"docs\":{},\"a\":{\"docs\":{},\"r\":{\"docs\":{},\"c\":{\"docs\":{},\"h\":{\"docs\":{\"query-dsl.html\":{\"ref\":\"query-dsl.html\",\"tf\":0.043478260869565216}}}}}}}}}}}}}}}}}}}}}},\"类\":{\"docs\":{},\"父\":{\"docs\":{},\"子\":{\"docs\":{},\"关\":{\"docs\":{},\"系\":{\"docs\":{},\"可\":{\"docs\":{},\"以\":{\"docs\":{},\"存\":{\"docs\":{},\"在\":{\"docs\":{},\"单\":{\"docs\":{},\"个\":{\"docs\":{},\"的\":{\"docs\":{},\"索\":{\"docs\":{},\"引\":{\"docs\":{},\"的\":{\"docs\":{},\"两\":{\"docs\":{},\"个\":{\"docs\":{},\"类\":{\"docs\":{},\"型\":{\"docs\":{},\"的\":{\"docs\":{},\"文\":{\"docs\":{},\"档\":{\"docs\":{},\"之\":{\"docs\":{},\"间\":{\"docs\":{},\"。\":{\"docs\":{},\"h\":{\"docs\":{},\"a\":{\"docs\":{},\"s\":{\"docs\":{},\"_\":{\"docs\":{},\"c\":{\"docs\":{},\"h\":{\"docs\":{},\"i\":{\"docs\":{},\"l\":{\"docs\":{},\"d\":{\"docs\":{\"query-dsl/joining-queries.html\":{\"ref\":\"query-dsl/joining-queries.html\",\"tf\":0.007194244604316547}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"不\":{\"docs\":{},\"设\":{\"docs\":{},\"置\":{\"docs\":{},\"集\":{\"docs\":{},\"群\":{\"docs\":{},\"名\":{\"docs\":{},\"称\":{\"docs\":{\"client/transport-client.html\":{\"ref\":\"client/transport-client.html\",\"tf\":0.011111111111111112}}}}}},\"f\":{\"docs\":{},\"l\":{\"docs\":{},\"u\":{\"docs\":{},\"s\":{\"docs\":{},\"h\":{\"docs\":{},\"i\":{\"docs\":{},\"n\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"v\":{\"docs\":{\"document-apis/using-bulk-processor.html\":{\"ref\":\"document-apis/using-bulk-processor.html\",\"tf\":0.006024096385542169}}}}}}}}}}}}}}},\"像\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}},\"关\":{\"docs\":{},\"闭\":{\"docs\":{\"document-apis/using-bulk-processor.html\":{\"ref\":\"document-apis/using-bulk-processor.html\",\"tf\":0.006024096385542169}},\"c\":{\"docs\":{},\"l\":{\"docs\":{},\"i\":{\"docs\":{},\"e\":{\"docs\":{},\"n\":{\"docs\":{},\"t\":{\"docs\":{\"client/transport-client.html\":{\"ref\":\"client/transport-client.html\",\"tf\":0.011111111111111112}}}}}}}}}},\"其\":{\"docs\":{},\"他\":{\"docs\":{},\"配\":{\"docs\":{},\"置\":{\"docs\":{\"client/transport-client.html\":{\"ref\":\"client/transport-client.html\",\"tf\":0.011111111111111112}}}}}},\"增\":{\"docs\":{},\"加\":{\"docs\":{},\"自\":{\"docs\":{},\"动\":{\"docs\":{},\"嗅\":{\"docs\":{},\"探\":{\"docs\":{},\"配\":{\"docs\":{},\"置\":{\"docs\":{\"client/transport-client.html\":{\"ref\":\"client/transport-client.html\",\"tf\":0.011111111111111112}}}}}}}},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"q\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"docs\":{},\"s\":{\"docs\":{},\"t\":{\"docs\":{\"document-apis/using-bulk-processor.html\":{\"ref\":\"document-apis/using-bulk-processor.html\",\"tf\":0.006024096385542169}}}}}}}}}}},\"如\":{\"docs\":{\"aggregations/structuring-aggregations.html\":{\"ref\":\"aggregations/structuring-aggregations.html\",\"tf\":0.02702702702702703}},\"果\":{\"docs\":{\"client/xpack-transport-client.html\":{\"ref\":\"client/xpack-transport-client.html\",\"tf\":0.01639344262295082},\"document-apis/update-api.html\":{\"ref\":\"document-apis/update-api.html\",\"tf\":0.007407407407407408}},\"用\":{\"docs\":{},\"e\":{\"docs\":{},\"s\":{\"docs\":{},\"的\":{\"docs\":{},\"节\":{\"docs\":{},\"点\":{\"docs\":{},\"，\":{\"docs\":{},\"大\":{\"docs\":{},\"家\":{\"docs\":{},\"仁\":{\"docs\":{},\"者\":{\"docs\":{},\"见\":{\"docs\":{},\"仁\":{\"docs\":{},\"智\":{\"docs\":{},\"者\":{\"docs\":{},\"见\":{\"docs\":{},\"智\":{\"docs\":{},\"，\":{\"docs\":{},\"各\":{\"docs\":{},\"按\":{\"docs\":{},\"所\":{\"docs\":{},\"需\":{\"docs\":{},\"。\":{\"docs\":{\"client/transport-client.html\":{\"ref\":\"client/transport-client.html\",\"tf\":0.011111111111111112}}}}}}}}}}}}}}}}}}}}}}}}},\"需\":{\"docs\":{},\"要\":{\"docs\":{},\"执\":{\"docs\":{},\"行\":{\"docs\":{},\"的\":{\"docs\":{},\"时\":{\"docs\":{},\"间\":{\"docs\":{},\"比\":{\"docs\":{},\"较\":{\"docs\":{},\"长\":{\"docs\":{},\"，\":{\"docs\":{},\"可\":{\"docs\":{},\"以\":{\"docs\":{},\"使\":{\"docs\":{},\"用\":{\"docs\":{},\"异\":{\"docs\":{},\"步\":{\"docs\":{},\"的\":{\"docs\":{},\"方\":{\"docs\":{},\"式\":{\"docs\":{},\"处\":{\"docs\":{},\"理\":{\"docs\":{},\",\":{\"docs\":{},\"结\":{\"docs\":{},\"果\":{\"docs\":{},\"在\":{\"docs\":{},\"回\":{\"docs\":{},\"调\":{\"docs\":{},\"里\":{\"docs\":{},\"面\":{\"docs\":{},\"获\":{\"docs\":{},\"取\":{\"docs\":{\"document-apis/delete-by-query-api.html\":{\"ref\":\"document-apis/delete-by-query-api.html\",\"tf\":0.018518518518518517}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"不\":{\"docs\":{},\"存\":{\"docs\":{},\"在\":{\"docs\":{},\"，\":{\"docs\":{},\"会\":{\"docs\":{},\"插\":{\"docs\":{},\"入\":{\"docs\":{},\"新\":{\"docs\":{},\"的\":{\"docs\":{},\"文\":{\"docs\":{},\"档\":{\"docs\":{},\"：\":{\"docs\":{\"document-apis/update-api.html\":{\"ref\":\"document-apis/update-api.html\",\"tf\":0.007407407407407408}}}}}}}}}}}}}},\"超\":{\"docs\":{},\"过\":{\"docs\":{},\"滚\":{\"docs\":{},\"动\":{\"docs\":{},\"时\":{\"docs\":{},\"间\":{\"docs\":{},\"，\":{\"docs\":{},\"继\":{\"docs\":{},\"续\":{\"docs\":{},\"使\":{\"docs\":{},\"用\":{\"docs\":{},\"该\":{\"docs\":{},\"滚\":{\"docs\":{},\"动\":{\"docs\":{},\"i\":{\"docs\":{},\"d\":{\"docs\":{},\"搜\":{\"docs\":{},\"索\":{\"docs\":{},\"数\":{\"docs\":{},\"据\":{\"docs\":{},\"，\":{\"docs\":{},\"则\":{\"docs\":{},\"会\":{\"docs\":{},\"报\":{\"docs\":{},\"错\":{\"docs\":{},\"：\":{\"docs\":{\"search-api/using-scrolls-in-java.html\":{\"ref\":\"search-api/using-scrolls-in-java.html\",\"tf\":0.00546448087431694}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"指\":{\"docs\":{},\"定\":{\"docs\":{},\"的\":{\"docs\":{},\"字\":{\"docs\":{},\"段\":{\"docs\":{},\"是\":{\"docs\":{},\"s\":{\"docs\":{},\"t\":{\"docs\":{},\"r\":{\"docs\":{},\"i\":{\"docs\":{},\"n\":{\"docs\":{},\"g\":{\"docs\":{},\"类\":{\"docs\":{},\"型\":{\"docs\":{},\"，\":{\"docs\":{},\"模\":{\"docs\":{},\"糊\":{\"docs\":{},\"查\":{\"docs\":{},\"询\":{\"docs\":{},\"是\":{\"docs\":{},\"基\":{\"docs\":{},\"于\":{\"docs\":{},\"编\":{\"docs\":{},\"辑\":{\"docs\":{},\"距\":{\"docs\":{},\"离\":{\"docs\":{},\"算\":{\"docs\":{},\"法\":{\"docs\":{},\"来\":{\"docs\":{},\"匹\":{\"docs\":{},\"配\":{\"docs\":{},\"文\":{\"docs\":{},\"档\":{\"docs\":{},\"。\":{\"docs\":{},\"编\":{\"docs\":{},\"辑\":{\"docs\":{},\"距\":{\"docs\":{},\"离\":{\"docs\":{},\"的\":{\"docs\":{},\"计\":{\"docs\":{},\"算\":{\"docs\":{},\"基\":{\"docs\":{},\"于\":{\"docs\":{},\"我\":{\"docs\":{},\"们\":{\"docs\":{},\"提\":{\"docs\":{},\"供\":{\"docs\":{},\"的\":{\"docs\":{},\"查\":{\"docs\":{},\"询\":{\"docs\":{},\"词\":{\"docs\":{},\"条\":{\"docs\":{},\"和\":{\"docs\":{},\"被\":{\"docs\":{},\"搜\":{\"docs\":{},\"索\":{\"docs\":{},\"文\":{\"docs\":{},\"档\":{\"docs\":{},\"。\":{\"docs\":{},\"如\":{\"docs\":{},\"果\":{\"docs\":{},\"指\":{\"docs\":{},\"定\":{\"docs\":{},\"的\":{\"docs\":{},\"字\":{\"docs\":{},\"段\":{\"docs\":{},\"是\":{\"docs\":{},\"数\":{\"docs\":{},\"值\":{\"docs\":{},\"类\":{\"docs\":{},\"型\":{\"docs\":{},\"或\":{\"docs\":{},\"者\":{\"docs\":{},\"日\":{\"docs\":{},\"期\":{\"docs\":{},\"类\":{\"docs\":{},\"型\":{\"docs\":{},\"，\":{\"docs\":{},\"模\":{\"docs\":{},\"糊\":{\"docs\":{},\"查\":{\"docs\":{},\"询\":{\"docs\":{},\"基\":{\"docs\":{},\"于\":{\"docs\":{},\"在\":{\"docs\":{},\"字\":{\"docs\":{},\"段\":{\"docs\":{},\"值\":{\"docs\":{},\"上\":{\"docs\":{},\"进\":{\"docs\":{},\"行\":{\"docs\":{},\"加\":{\"docs\":{},\"减\":{\"docs\":{},\"操\":{\"docs\":{},\"作\":{\"docs\":{},\"来\":{\"docs\":{},\"匹\":{\"docs\":{},\"配\":{\"docs\":{},\"文\":{\"docs\":{},\"档\":{\"docs\":{},\"（\":{\"docs\":{},\"t\":{\"docs\":{},\"h\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"已\":{\"docs\":{},\"经\":{\"docs\":{},\"在\":{\"docs\":{},\"每\":{\"docs\":{},\"个\":{\"docs\":{},\"数\":{\"docs\":{},\"据\":{\"docs\":{},\"节\":{\"docs\":{},\"点\":{\"docs\":{},\"上\":{\"docs\":{},\"存\":{\"docs\":{},\"储\":{\"docs\":{},\"名\":{\"docs\":{},\"为\":{\"docs\":{\"query-dsl/specialized-queries.html\":{\"ref\":\"query-dsl/specialized-queries.html\",\"tf\":0.004761904761904762}}}}}}}}}}}}}}}}}},\"实\":{\"docs\":{},\"例\":{\"docs\":{\"client/transport-client.html\":{\"ref\":\"client/transport-client.html\",\"tf\":0.011111111111111112},\"client/xpack-transport-client.html\":{\"ref\":\"client/xpack-transport-client.html\",\"tf\":0.01639344262295082},\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.008264462809917356},\"search-api/using-scrolls-in-java.html\":{\"ref\":\"search-api/using-scrolls-in-java.html\",\"tf\":0.00546448087431694},\"search-api/multisearch-api.html\":{\"ref\":\"search-api/multisearch-api.html\",\"tf\":0.019230769230769232},\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.01078167115902965}}}},\"对\":{\"docs\":{},\"于\":{\"docs\":{},\"e\":{\"docs\":{\"client/transport-client.html\":{\"ref\":\"client/transport-client.html\",\"tf\":0.011111111111111112}}}},\"指\":{\"docs\":{},\"定\":{\"docs\":{},\"的\":{\"docs\":{},\"索\":{\"docs\":{},\"引\":{\"docs\":{},\"执\":{\"docs\":{},\"行\":{\"docs\":{},\"一\":{\"docs\":{},\"个\":{\"docs\":{},\"查\":{\"docs\":{},\"询\":{\"docs\":{},\"，\":{\"docs\":{},\"对\":{\"docs\":{},\"其\":{\"docs\":{},\"他\":{\"docs\":{},\"索\":{\"docs\":{},\"引\":{\"docs\":{},\"执\":{\"docs\":{},\"行\":{\"docs\":{},\"另\":{\"docs\":{},\"一\":{\"docs\":{},\"个\":{\"docs\":{},\"查\":{\"docs\":{},\"询\":{\"docs\":{},\"。\":{\"docs\":{\"query-dsl/compound-queries.html\":{\"ref\":\"query-dsl/compound-queries.html\",\"tf\":0.005847953216374269}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"节\":{\"docs\":{},\"点\":{\"docs\":{},\"的\":{\"docs\":{},\"时\":{\"docs\":{},\"间\":{\"docs\":{},\"间\":{\"docs\":{},\"隔\":{\"docs\":{},\"，\":{\"docs\":{},\"默\":{\"docs\":{},\"认\":{\"docs\":{},\"是\":{\"5\":{\"docs\":{\"client/transport-client.html\":{\"ref\":\"client/transport-client.html\",\"tf\":0.011111111111111112}}},\"docs\":{}}}}}}}}}}}},\"设\":{\"docs\":{},\"置\":{\"docs\":{},\"集\":{\"docs\":{},\"群\":{\"docs\":{},\"名\":{\"docs\":{},\"称\":{\"docs\":{\"client/transport-client.html\":{\"ref\":\"client/transport-client.html\",\"tf\":0.011111111111111112}}}}}},\"为\":{\"docs\":{\"document-apis/get-api.html\":{\"ref\":\"document-apis/get-api.html\",\"tf\":0.06896551724137931},\"document-apis/delete-api.html\":{\"ref\":\"document-apis/delete-api.html\",\"tf\":0.05263157894736842}}}}},\"默\":{\"docs\":{},\"认\":{\"5\":{\"docs\":{},\"秒\":{\"docs\":{\"client/transport-client.html\":{\"ref\":\"client/transport-client.html\",\"tf\":0.011111111111111112}}}},\"docs\":{},\"设\":{\"docs\":{},\"置\":{\"docs\":{\"document-apis/using-bulk-processor.html\":{\"ref\":\"document-apis/using-bulk-processor.html\",\"tf\":0.006024096385542169}}}}}},\"(\":{\"docs\":{},\"u\":{\"docs\":{},\"n\":{\"docs\":{},\"k\":{\"docs\":{},\"n\":{\"docs\":{},\"o\":{\"docs\":{},\"w\":{\"docs\":{},\"n\":{\"docs\":{},\"h\":{\"docs\":{},\"o\":{\"docs\":{},\"s\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"x\":{\"docs\":{},\"c\":{\"docs\":{},\"e\":{\"docs\":{},\"p\":{\"docs\":{},\"t\":{\"docs\":{\"client/xpack-transport-client.html\":{\"ref\":\"client/xpack-transport-client.html\",\"tf\":0.01639344262295082}}}}}}}}}}}}}}}}}},\"s\":{\"docs\":{},\"u\":{\"docs\":{},\"a\":{\"docs\":{},\"l\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}}}}}}},\"g\":{\"docs\":{},\"e\":{\"docs\":{},\"n\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.002066115702479339}}}}},\"o\":{\"docs\":{},\"h\":{\"docs\":{},\"a\":{\"docs\":{},\"s\":{\"docs\":{},\"h\":{\"docs\":{},\"g\":{\"docs\":{},\"r\":{\"docs\":{},\"i\":{\"docs\":{},\"d\":{\"docs\":{},\".\":{\"docs\":{},\"b\":{\"docs\":{},\"u\":{\"docs\":{},\"c\":{\"docs\":{},\"k\":{\"docs\":{},\"e\":{\"docs\":{},\"t\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}}}}}}}}}}}}}},\"p\":{\"docs\":{},\"o\":{\"docs\":{},\"i\":{\"docs\":{},\"n\":{\"docs\":{},\"t\":{\"docs\":{},\")\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}}}}}}}},\"i\":{\"docs\":{},\"f\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.002066115702479339}}}},\"m\":{\"docs\":{},\"u\":{\"docs\":{},\"l\":{\"docs\":{},\"t\":{\"docs\":{},\"i\":{\"docs\":{},\"g\":{\"docs\":{},\"e\":{\"docs\":{},\"t\":{\"docs\":{},\"i\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"m\":{\"docs\":{},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"s\":{\"docs\":{},\"p\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{},\"s\":{\"docs\":{\"document-apis/multi-get-api.html\":{\"ref\":\"document-apis/multi-get-api.html\",\"tf\":0.021739130434782608}}}}}}}}}}}}}}}},\"s\":{\"docs\":{},\"e\":{\"docs\":{},\"a\":{\"docs\":{},\"r\":{\"docs\":{},\"c\":{\"docs\":{},\"h\":{\"docs\":{},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"s\":{\"docs\":{},\"p\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{},\"s\":{\"docs\":{},\"e\":{\"docs\":{},\".\":{\"docs\":{},\"i\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"m\":{\"docs\":{\"search-api/multisearch-api.html\":{\"ref\":\"search-api/multisearch-api.html\",\"tf\":0.019230769230769232}}}}}}}}}}}}}}}}}}}}}}}}},\"e\":{\"docs\":{},\"t\":{\"docs\":{},\"r\":{\"docs\":{},\"i\":{\"docs\":{},\"c\":{\"docs\":{},\")\":{\"docs\":{\"aggregations/structuring-aggregations.html\":{\"ref\":\"aggregations/structuring-aggregations.html\",\"tf\":0.02702702702702703}}}}}}}},\"a\":{\"docs\":{},\"t\":{\"docs\":{},\"c\":{\"docs\":{},\"h\":{\"docs\":{\"query-dsl/compound-queries.html\":{\"ref\":\"query-dsl/compound-queries.html\",\"tf\":0.011695906432748537}}}}}}},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"s\":{\"docs\":{},\"p\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{},\"s\":{\"docs\":{},\"e\":{\"docs\":{},\".\":{\"docs\":{},\"i\":{\"docs\":{},\"s\":{\"docs\":{},\"e\":{\"docs\":{},\"x\":{\"docs\":{},\"i\":{\"docs\":{},\"s\":{\"docs\":{},\"t\":{\"docs\":{},\"s\":{\"docs\":{},\"(\":{\"docs\":{},\")\":{\"docs\":{},\")\":{\"docs\":{\"document-apis/multi-get-api.html\":{\"ref\":\"document-apis/multi-get-api.html\",\"tf\":0.021739130434782608}}}}}}}}}}}}}}}}}}}}},\"a\":{\"docs\":{},\"n\":{\"docs\":{},\"g\":{\"docs\":{},\"e\":{\"docs\":{},\".\":{\"docs\":{},\"b\":{\"docs\":{},\"u\":{\"docs\":{},\"c\":{\"docs\":{},\"k\":{\"docs\":{},\"e\":{\"docs\":{},\"t\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.003305785123966942}}}}}}}}}}}}}},\"b\":{\"docs\":{},\"u\":{\"docs\":{},\"l\":{\"docs\":{},\"k\":{\"docs\":{},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"s\":{\"docs\":{},\"p\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{},\"s\":{\"docs\":{},\"e\":{\"docs\":{},\".\":{\"docs\":{},\"h\":{\"docs\":{},\"a\":{\"docs\":{},\"s\":{\"docs\":{},\"f\":{\"docs\":{},\"a\":{\"docs\":{},\"i\":{\"docs\":{},\"l\":{\"docs\":{},\"u\":{\"docs\":{},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"s\":{\"docs\":{},\"(\":{\"docs\":{},\")\":{\"docs\":{},\")\":{\"docs\":{\"document-apis/bulk-api.html\":{\"ref\":\"document-apis/bulk-api.html\",\"tf\":0.014492753623188406}}}}}}}}}}}}}}}}}}}}}}}}}}},\"c\":{\"docs\":{},\"k\":{\"docs\":{},\"e\":{\"docs\":{},\"t\":{\"docs\":{},\")\":{\"docs\":{\"aggregations/structuring-aggregations.html\":{\"ref\":\"aggregations/structuring-aggregations.html\",\"tf\":0.05405405405405406}}}}}}}}},\"s\":{\"docs\":{},\"e\":{\"docs\":{},\"a\":{\"docs\":{},\"r\":{\"docs\":{},\"c\":{\"docs\":{},\"h\":{\"docs\":{},\"h\":{\"docs\":{},\"i\":{\"docs\":{},\"t\":{\"docs\":{\"search-api/using-scrolls-in-java.html\":{\"ref\":\"search-api/using-scrolls-in-java.html\",\"tf\":0.00546448087431694},\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}}}}}}}}}},\"r\":{\"docs\":{},\".\":{\"docs\":{},\"i\":{\"docs\":{},\"s\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"m\":{\"docs\":{},\"i\":{\"docs\":{},\"n\":{\"docs\":{},\"a\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"d\":{\"docs\":{},\"e\":{\"docs\":{},\"a\":{\"docs\":{},\"r\":{\"docs\":{},\"l\":{\"docs\":{},\"y\":{\"docs\":{},\"(\":{\"docs\":{},\")\":{\"docs\":{},\")\":{\"docs\":{\"search-api/terminate-after.html\":{\"ref\":\"search-api/terminate-after.html\",\"tf\":0.0625}}}}}}}}}}}}}}}}}}}}}}}},\"i\":{\"docs\":{},\"g\":{\"docs\":{},\"n\":{\"docs\":{},\"i\":{\"docs\":{},\"f\":{\"docs\":{},\"i\":{\"docs\":{},\"c\":{\"docs\":{},\"a\":{\"docs\":{},\"n\":{\"docs\":{},\"t\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"m\":{\"docs\":{},\"s\":{\"docs\":{},\".\":{\"docs\":{},\"b\":{\"docs\":{},\"u\":{\"docs\":{},\"c\":{\"docs\":{},\"k\":{\"docs\":{},\"e\":{\"docs\":{},\"t\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}}}}}}}}}}}}}}}}}}}}}},\"构\":{\"docs\":{},\"建\":{\"docs\":{},\"桶\":{\"docs\":{},\"聚\":{\"docs\":{},\"合\":{\"docs\":{},\")\":{\"docs\":{\"aggregations/structuring-aggregations.html\":{\"ref\":\"aggregations/structuring-aggregations.html\",\"tf\":0.02702702702702703}}}}}}}},\"p\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"c\":{\"docs\":{},\"e\":{\"docs\":{},\"n\":{\"docs\":{},\"t\":{\"docs\":{},\"i\":{\"docs\":{},\"l\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00291970802919708}}}}}}}}}}},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"m\":{\"docs\":{},\"s\":{\"docs\":{},\".\":{\"docs\":{},\"b\":{\"docs\":{},\"u\":{\"docs\":{},\"c\":{\"docs\":{},\"k\":{\"docs\":{},\"e\":{\"docs\":{},\"t\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854},\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.001652892561983471}}}}}}}}}}}}}},\"d\":{\"docs\":{},\"a\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"t\":{\"docs\":{},\"i\":{\"docs\":{},\"m\":{\"docs\":{},\"e\":{\"docs\":{},\")\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0024793388429752068}}}}}}}}}}},\"e\":{\"docs\":{},\"x\":{\"docs\":{},\"c\":{\"docs\":{},\"l\":{\"docs\":{},\"u\":{\"docs\":{},\"d\":{\"docs\":{},\"e\":{\"docs\":{},\"d\":{\"docs\":{},\")\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0049586776859504135}}}}}}}}}}},\"f\":{\"docs\":{},\"i\":{\"docs\":{},\"l\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"s\":{\"docs\":{},\".\":{\"docs\":{},\"b\":{\"docs\":{},\"u\":{\"docs\":{},\"c\":{\"docs\":{},\"k\":{\"docs\":{},\"e\":{\"docs\":{},\"t\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}}}}}}}}}}}}},\"h\":{\"docs\":{},\"i\":{\"docs\":{},\"s\":{\"docs\":{},\"t\":{\"docs\":{},\"o\":{\"docs\":{},\"g\":{\"docs\":{},\"r\":{\"docs\":{},\"a\":{\"docs\":{},\"m\":{\"docs\":{},\".\":{\"docs\":{},\"b\":{\"docs\":{},\"u\":{\"docs\":{},\"c\":{\"docs\":{},\"k\":{\"docs\":{},\"e\":{\"docs\":{},\"t\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.001652892561983471}}}}}}}}}}}}}}}}}},\"n\":{\"docs\":{},\"u\":{\"docs\":{},\"m\":{\"docs\":{},\"b\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\")\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.004132231404958678}}}}}}}}},\"嵌\":{\"docs\":{},\"套\":{\"docs\":{},\"查\":{\"docs\":{},\"询\":{\"docs\":{},\")\":{\"docs\":{\"query-dsl/joining-queries.html\":{\"ref\":\"query-dsl/joining-queries.html\",\"tf\":0.007194244604316547}}}}}}},\"有\":{\"docs\":{},\"子\":{\"docs\":{},\"查\":{\"docs\":{},\"询\":{\"docs\":{},\")\":{\"docs\":{\"query-dsl/joining-queries.html\":{\"ref\":\"query-dsl/joining-queries.html\",\"tf\":0.007194244604316547}}}}}},\"父\":{\"docs\":{},\"查\":{\"docs\":{},\"询\":{\"docs\":{},\")\":{\"docs\":{\"query-dsl/joining-queries.html\":{\"ref\":\"query-dsl/joining-queries.html\",\"tf\":0.007194244604316547}}}}}}}},\"b\":{\"docs\":{},\"o\":{\"docs\":{},\"o\":{\"docs\":{},\"t\":{\"docs\":{\"client/xpack-transport-client.html\":{\"ref\":\"client/xpack-transport-client.html\",\"tf\":0.01639344262295082}}},\"l\":{\"docs\":{\"query-dsl/compound-queries.html\":{\"ref\":\"query-dsl/compound-queries.html\",\"tf\":0.011695906432748537}},\"e\":{\"docs\":{},\"a\":{\"docs\":{},\"n\":{\"docs\":{\"search-api/using-scrolls-in-java.html\":{\"ref\":\"search-api/using-scrolls-in-java.html\",\"tf\":0.01092896174863388}}}}},\"q\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"y\":{\"docs\":{},\"(\":{\"docs\":{},\")\":{\"docs\":{\"query-dsl/compound-queries.html\":{\"ref\":\"query-dsl/compound-queries.html\",\"tf\":0.005847953216374269},\"query-dsl/joining-queries.html\":{\"ref\":\"query-dsl/joining-queries.html\",\"tf\":0.007194244604316547}}}}}}}}}},\"s\":{\"docs\":{},\"t\":{\"docs\":{\"query-dsl/compound-queries.html\":{\"ref\":\"query-dsl/compound-queries.html\",\"tf\":0.005847953216374269}},\"i\":{\"docs\":{},\"n\":{\"docs\":{},\"g\":{\"docs\":{},\"q\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"y\":{\"docs\":{},\"(\":{\"docs\":{\"query-dsl/compound-queries.html\":{\"ref\":\"query-dsl/compound-queries.html\",\"tf\":0.005847953216374269}}}}}}}}}}}}}},\"t\":{\"docs\":{},\"t\":{\"docs\":{},\"o\":{\"docs\":{},\"m\":{\"docs\":{\"query-dsl/geo-queries.html\":{\"ref\":\"query-dsl/geo-queries.html\",\"tf\":0.004901960784313725}},\"r\":{\"docs\":{},\"i\":{\"docs\":{},\"g\":{\"docs\":{},\"h\":{\"docs\":{},\"t\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00291970802919708}},\",\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}}}}}}}}}}}},\"u\":{\"docs\":{},\"n\":{\"docs\":{},\"d\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854},\"query-dsl/geo-queries.html\":{\"ref\":\"query-dsl/geo-queries.html\",\"tf\":0.004901960784313725}}}}},\"x\":{\"docs\":{\"query-dsl/geo-queries.html\":{\"ref\":\"query-dsl/geo-queries.html\",\"tf\":0.014705882352941176}}}},\"u\":{\"docs\":{},\"i\":{\"docs\":{},\"l\":{\"docs\":{},\"d\":{\"docs\":{\"document-apis/bulk-api.html\":{\"ref\":\"document-apis/bulk-api.html\",\"tf\":0.014492753623188406}},\"e\":{\"docs\":{},\"r\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.004132231404958678}}}}}}},\"l\":{\"docs\":{},\"k\":{\"docs\":{\"document-apis/bulk-api.html\":{\"ref\":\"document-apis/bulk-api.html\",\"tf\":5.043478260869565},\"document-apis/using-bulk-processor.html\":{\"ref\":\"document-apis/using-bulk-processor.html\",\"tf\":3.3453815261044175}},\"b\":{\"docs\":{},\"y\":{\"docs\":{},\"s\":{\"docs\":{},\"c\":{\"docs\":{},\"r\":{\"docs\":{},\"o\":{\"docs\":{},\"l\":{\"docs\":{},\"l\":{\"docs\":{},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"s\":{\"docs\":{},\"p\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{},\"s\":{\"docs\":{\"document-apis/delete-by-query-api.html\":{\"ref\":\"document-apis/delete-by-query-api.html\",\"tf\":0.018518518518518517}}}}}}}}}}}}}}}}},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"q\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"docs\":{},\"s\":{\"docs\":{},\"t\":{\"docs\":{\"document-apis/bulk-api.html\":{\"ref\":\"document-apis/bulk-api.html\",\"tf\":0.014492753623188406},\"document-apis/using-bulk-processor.html\":{\"ref\":\"document-apis/using-bulk-processor.html\",\"tf\":0.018072289156626505}},\".\":{\"docs\":{},\"a\":{\"docs\":{},\"d\":{\"docs\":{},\"d\":{\"docs\":{},\"(\":{\"docs\":{},\"c\":{\"docs\":{},\"l\":{\"docs\":{},\"i\":{\"docs\":{},\"e\":{\"docs\":{},\"n\":{\"docs\":{},\"t\":{\"docs\":{},\".\":{\"docs\":{},\"p\":{\"docs\":{},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"p\":{\"docs\":{},\"a\":{\"docs\":{},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"i\":{\"docs\":{},\"n\":{\"docs\":{},\"d\":{\"docs\":{},\"e\":{\"docs\":{},\"x\":{\"docs\":{},\"(\":{\"docs\":{},\"\\\"\":{\"docs\":{},\"t\":{\"docs\":{},\"w\":{\"docs\":{},\"i\":{\"docs\":{},\"t\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"\\\"\":{\"docs\":{},\",\":{\"docs\":{\"document-apis/bulk-api.html\":{\"ref\":\"document-apis/bulk-api.html\",\"tf\":0.028985507246376812}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"g\":{\"docs\":{},\"e\":{\"docs\":{},\"t\":{\"docs\":{},\"(\":{\"docs\":{},\")\":{\"docs\":{},\";\":{\"docs\":{\"document-apis/bulk-api.html\":{\"ref\":\"document-apis/bulk-api.html\",\"tf\":0.014492753623188406}}}}}}}}},\"b\":{\"docs\":{},\"u\":{\"docs\":{},\"i\":{\"docs\":{},\"l\":{\"docs\":{},\"d\":{\"docs\":{\"document-apis/bulk-api.html\":{\"ref\":\"document-apis/bulk-api.html\",\"tf\":0.014492753623188406}}}}}}}}}}}},\"s\":{\"docs\":{},\"p\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{},\"s\":{\"docs\":{\"document-apis/bulk-api.html\":{\"ref\":\"document-apis/bulk-api.html\",\"tf\":0.028985507246376812},\"document-apis/using-bulk-processor.html\":{\"ref\":\"document-apis/using-bulk-processor.html\",\"tf\":0.006024096385542169}}}}}}}}},\"a\":{\"docs\":{},\"c\":{\"docs\":{},\"t\":{\"docs\":{\"document-apis/using-bulk-processor.html\":{\"ref\":\"document-apis/using-bulk-processor.html\",\"tf\":0.006024096385542169}}}}},\"p\":{\"docs\":{},\"r\":{\"docs\":{},\"o\":{\"docs\":{},\"c\":{\"docs\":{},\"e\":{\"docs\":{},\"s\":{\"docs\":{},\"s\":{\"docs\":{},\"o\":{\"docs\":{},\"r\":{\"docs\":{\"document-apis/using-bulk-processor.html\":{\"ref\":\"document-apis/using-bulk-processor.html\",\"tf\":0.04216867469879518}},\".\":{\"docs\":{},\"a\":{\"docs\":{},\"d\":{\"docs\":{},\"d\":{\"docs\":{},\"(\":{\"docs\":{},\"/\":{\"docs\":{},\"*\":{\"docs\":{\"document-apis/using-bulk-processor.html\":{\"ref\":\"document-apis/using-bulk-processor.html\",\"tf\":0.006024096385542169}}}},\"n\":{\"docs\":{},\"e\":{\"docs\":{},\"w\":{\"docs\":{\"document-apis/using-bulk-processor.html\":{\"ref\":\"document-apis/using-bulk-processor.html\",\"tf\":0.012048192771084338}}}}}}}},\"w\":{\"docs\":{},\"a\":{\"docs\":{},\"i\":{\"docs\":{},\"t\":{\"docs\":{},\"c\":{\"docs\":{},\"l\":{\"docs\":{},\"o\":{\"docs\":{},\"s\":{\"docs\":{},\"e\":{\"docs\":{},\"(\":{\"1\":{\"0\":{\"docs\":{},\",\":{\"docs\":{\"document-apis/using-bulk-processor.html\":{\"ref\":\"document-apis/using-bulk-processor.html\",\"tf\":0.006024096385542169}}}},\"docs\":{}},\"docs\":{}}}}}}}}}}}},\"b\":{\"docs\":{},\"u\":{\"docs\":{},\"i\":{\"docs\":{},\"l\":{\"docs\":{},\"d\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"(\":{\"docs\":{\"document-apis/using-bulk-processor.html\":{\"ref\":\"document-apis/using-bulk-processor.html\",\"tf\":0.006024096385542169}},\"c\":{\"docs\":{},\"l\":{\"docs\":{},\"i\":{\"docs\":{},\"e\":{\"docs\":{},\"n\":{\"docs\":{},\"t\":{\"docs\":{},\",\":{\"docs\":{\"document-apis/using-bulk-processor.html\":{\"ref\":\"document-apis/using-bulk-processor.html\",\"tf\":0.006024096385542169}}}}}}}}}}}}}}}}},\"c\":{\"docs\":{},\"l\":{\"docs\":{},\"o\":{\"docs\":{},\"s\":{\"docs\":{},\"e\":{\"docs\":{},\"(\":{\"docs\":{},\")\":{\"docs\":{},\";\":{\"docs\":{\"document-apis/using-bulk-processor.html\":{\"ref\":\"document-apis/using-bulk-processor.html\",\"tf\":0.012048192771084338}}}}}}}}}},\"f\":{\"docs\":{},\"l\":{\"docs\":{},\"u\":{\"docs\":{},\"s\":{\"docs\":{},\"h\":{\"docs\":{},\"(\":{\"docs\":{},\")\":{\"docs\":{},\";\":{\"docs\":{\"document-apis/using-bulk-processor.html\":{\"ref\":\"document-apis/using-bulk-processor.html\",\"tf\":0.006024096385542169}}}}}}}}}},\"l\":{\"docs\":{},\"i\":{\"docs\":{},\"s\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"n\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"(\":{\"docs\":{},\")\":{\"docs\":{\"document-apis/using-bulk-processor.html\":{\"ref\":\"document-apis/using-bulk-processor.html\",\"tf\":0.012048192771084338}}}}}}}}}}}}}}}}}}}}}},\"s\":{\"docs\":{},\"i\":{\"docs\":{},\"z\":{\"docs\":{\"document-apis/using-bulk-processor.html\":{\"ref\":\"document-apis/using-bulk-processor.html\",\"tf\":0.006024096385542169}}}}}}},\"c\":{\"docs\":{},\"k\":{\"docs\":{},\"e\":{\"docs\":{},\"t\":{\"docs\":{\"aggregations/structuring-aggregations.html\":{\"ref\":\"aggregations/structuring-aggregations.html\",\"tf\":0.02702702702702703},\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00291970802919708},\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":5.010743801652892}},\".\":{\"docs\":{},\"g\":{\"docs\":{},\"e\":{\"docs\":{},\"t\":{\"docs\":{},\"a\":{\"docs\":{},\"g\":{\"docs\":{},\"g\":{\"docs\":{},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"g\":{\"docs\":{},\"a\":{\"docs\":{},\"t\":{\"docs\":{},\"i\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{},\"s\":{\"docs\":{},\"(\":{\"docs\":{},\")\":{\"docs\":{},\".\":{\"docs\":{},\"g\":{\"docs\":{},\"e\":{\"docs\":{},\"t\":{\"docs\":{},\"(\":{\"docs\":{},\"\\\"\":{\"docs\":{},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"s\":{\"docs\":{},\"e\":{\"docs\":{},\"l\":{\"docs\":{},\"l\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"_\":{\"docs\":{},\"t\":{\"docs\":{},\"o\":{\"docs\":{},\"_\":{\"docs\":{},\"p\":{\"docs\":{},\"r\":{\"docs\":{},\"o\":{\"docs\":{},\"d\":{\"docs\":{},\"u\":{\"docs\":{},\"c\":{\"docs\":{},\"t\":{\"docs\":{},\"\\\"\":{\"docs\":{},\")\":{\"docs\":{},\";\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"y\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"[\":{\"docs\":{},\"]\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.006198347107438017}}}},\"s\":{\"docs\":{},\"i\":{\"docs\":{},\"z\":{\"docs\":{},\"e\":{\"docs\":{},\"u\":{\"docs\":{},\"n\":{\"docs\":{},\"i\":{\"docs\":{},\"t\":{\"docs\":{},\".\":{\"docs\":{},\"m\":{\"docs\":{},\"b\":{\"docs\":{},\")\":{\"docs\":{},\")\":{\"docs\":{\"document-apis/using-bulk-processor.html\":{\"ref\":\"document-apis/using-bulk-processor.html\",\"tf\":0.006024096385542169}}}}}}}}}}},\"v\":{\"docs\":{},\"a\":{\"docs\":{},\"l\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"docs\":{},\"(\":{\"5\":{\"docs\":{},\",\":{\"docs\":{\"document-apis/using-bulk-processor.html\":{\"ref\":\"document-apis/using-bulk-processor.html\",\"tf\":0.006024096385542169}}}},\"docs\":{}}}}}}}}}},\"a\":{\"docs\":{},\"r\":{\"docs\":{},\"r\":{\"docs\":{},\"a\":{\"docs\":{},\"y\":{\"docs\":{},\"(\":{\"docs\":{\"search-api/search-template.html\":{\"ref\":\"search-api/search-template.html\",\"tf\":0.0055248618784530384}}}}}}}}}}},\":\":{\"docs\":{\"search-api/using-scrolls-in-java.html\":{\"ref\":\"search-api/using-scrolls-in-java.html\",\"tf\":0.00546448087431694}}}},\"a\":{\"docs\":{},\"c\":{\"docs\":{},\"k\":{\"docs\":{},\"o\":{\"docs\":{},\"f\":{\"docs\":{},\"f\":{\"docs\":{},\"p\":{\"docs\":{},\"o\":{\"docs\":{},\"l\":{\"docs\":{},\"i\":{\"docs\":{},\"c\":{\"docs\":{},\"i\":{\"docs\":{\"document-apis/using-bulk-processor.html\":{\"ref\":\"document-apis/using-bulk-processor.html\",\"tf\":0.006024096385542169}}},\"y\":{\"docs\":{},\".\":{\"docs\":{},\"e\":{\"docs\":{},\"x\":{\"docs\":{},\"p\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{},\"e\":{\"docs\":{},\"n\":{\"docs\":{},\"t\":{\"docs\":{},\"i\":{\"docs\":{},\"a\":{\"docs\":{},\"l\":{\"docs\":{},\"b\":{\"docs\":{},\"a\":{\"docs\":{},\"c\":{\"docs\":{},\"k\":{\"docs\":{},\"o\":{\"docs\":{},\"f\":{\"docs\":{},\"f\":{\"docs\":{},\"(\":{\"docs\":{},\"t\":{\"docs\":{},\"i\":{\"docs\":{},\"m\":{\"docs\":{},\"e\":{\"docs\":{},\"v\":{\"docs\":{},\"a\":{\"docs\":{},\"l\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"docs\":{},\".\":{\"docs\":{},\"t\":{\"docs\":{},\"i\":{\"docs\":{},\"m\":{\"docs\":{},\"e\":{\"docs\":{},\"v\":{\"docs\":{},\"a\":{\"docs\":{},\"l\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"docs\":{},\"m\":{\"docs\":{},\"i\":{\"docs\":{},\"l\":{\"docs\":{},\"l\":{\"docs\":{},\"i\":{\"docs\":{},\"s\":{\"docs\":{},\"(\":{\"1\":{\"0\":{\"0\":{\"docs\":{},\")\":{\"docs\":{},\",\":{\"docs\":{\"document-apis/using-bulk-processor.html\":{\"ref\":\"document-apis/using-bulk-processor.html\",\"tf\":0.006024096385542169}}}}},\"docs\":{}},\"docs\":{}},\"docs\":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"s\":{\"docs\":{},\"e\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125}}}}},\"e\":{\"docs\":{},\"f\":{\"docs\":{},\"o\":{\"docs\":{},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"b\":{\"docs\":{},\"u\":{\"docs\":{},\"l\":{\"docs\":{},\"k\":{\"docs\":{},\"(\":{\"docs\":{},\"l\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{},\"g\":{\"docs\":{\"document-apis/using-bulk-processor.html\":{\"ref\":\"document-apis/using-bulk-processor.html\",\"tf\":0.006024096385542169}}}}}}}}}}}}}}}},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"a\":{\"docs\":{},\"k\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{\"query-dsl/compound-queries.html\":{\"ref\":\"query-dsl/compound-queries.html\",\"tf\":0.005847953216374269}}}}}}}}},\"h\":{\"docs\":{},\"t\":{\"docs\":{},\"t\":{\"docs\":{},\"p\":{\"docs\":{},\"s\":{\"docs\":{},\":\":{\"docs\":{},\"/\":{\"docs\":{},\"/\":{\"docs\":{},\"a\":{\"docs\":{},\"r\":{\"docs\":{},\"t\":{\"docs\":{},\"i\":{\"docs\":{},\"f\":{\"docs\":{},\"a\":{\"docs\":{},\"c\":{\"docs\":{},\"t\":{\"docs\":{},\"s\":{\"docs\":{},\".\":{\"docs\":{},\"e\":{\"docs\":{},\"l\":{\"docs\":{},\"a\":{\"docs\":{},\"s\":{\"docs\":{},\"t\":{\"docs\":{},\"i\":{\"docs\":{},\"c\":{\"docs\":{},\".\":{\"docs\":{},\"c\":{\"docs\":{},\"o\":{\"docs\":{},\"/\":{\"docs\":{},\"m\":{\"docs\":{},\"a\":{\"docs\":{},\"v\":{\"docs\":{},\"e\":{\"docs\":{},\"n\":{\"docs\":{\"client/xpack-transport-client.html\":{\"ref\":\"client/xpack-transport-client.html\",\"tf\":0.01639344262295082}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"a\":{\"docs\":{},\"s\":{\"docs\":{},\"h\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.001652892561983471}},\"m\":{\"docs\":{},\"a\":{\"docs\":{},\"p\":{\"docs\":{},\"(\":{\"docs\":{},\")\":{\"docs\":{},\";\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.006198347107438017}}}}},\"\":{\"docs\":{},\"(\":{\"docs\":{},\")\":{\"docs\":{},\";\":{\"docs\":{\"search-api/search-template.html\":{\"ref\":\"search-api/search-template.html\",\"tf\":0.0055248618784530384}}}}}}}}}}},\"_\":{\"docs\":{},\"c\":{\"docs\":{},\"h\":{\"docs\":{},\"i\":{\"docs\":{},\"l\":{\"docs\":{},\"d\":{\"docs\":{\"query-dsl/joining-queries.html\":{\"ref\":\"query-dsl/joining-queries.html\",\"tf\":0.014388489208633094}}}}}}},\"p\":{\"docs\":{},\"a\":{\"docs\":{},\"r\":{\"docs\":{\"query-dsl/joining-queries.html\":{\"ref\":\"query-dsl/joining-queries.html\",\"tf\":0.014388489208633094}}}}}}},\"n\":{\"docs\":{},\"d\":{\"docs\":{},\"l\":{\"docs\":{\"document-apis/delete-by-query-api.html\":{\"ref\":\"document-apis/delete-by-query-api.html\",\"tf\":0.018518518518518517}}}}}},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"e\":{\"docs\":{\"document-apis/using-bulk-processor.html\":{\"ref\":\"document-apis/using-bulk-processor.html\",\"tf\":0.006024096385542169},\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.017518248175182483},\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.013223140495867768}}}}},\"i\":{\"docs\":{},\"t\":{\"docs\":{\"search-api/using-scrolls-in-java.html\":{\"ref\":\"search-api/using-scrolls-in-java.html\",\"tf\":0.02185792349726776},\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00291970802919708},\"query-dsl/joining-queries.html\":{\"ref\":\"query-dsl/joining-queries.html\",\"tf\":0.007194244604316547},\"query-dsl/specialized-queries.html\":{\"ref\":\"query-dsl/specialized-queries.html\",\"tf\":0.009523809523809525}},\".\":{\"docs\":{},\".\":{\"docs\":{},\".\":{\"docs\":{\"search-api/using-scrolls-in-java.html\":{\"ref\":\"search-api/using-scrolls-in-java.html\",\"tf\":0.00546448087431694}}}},\"g\":{\"docs\":{},\"e\":{\"docs\":{},\"t\":{\"docs\":{},\"i\":{\"docs\":{},\"d\":{\"docs\":{},\"(\":{\"docs\":{},\")\":{\"docs\":{},\",\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}}}}}}},\"s\":{\"docs\":{},\"o\":{\"docs\":{},\"u\":{\"docs\":{},\"r\":{\"docs\":{},\"c\":{\"docs\":{},\"e\":{\"docs\":{},\"a\":{\"docs\":{},\"s\":{\"docs\":{},\"s\":{\"docs\":{},\"t\":{\"docs\":{},\"r\":{\"docs\":{},\"i\":{\"docs\":{},\"n\":{\"docs\":{},\"g\":{\"docs\":{},\"(\":{\"docs\":{},\")\":{\"docs\":{},\")\":{\"docs\":{},\";\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}}}}}}}}}}}}}}}}}}}}}}}}},\"s\":{\"docs\":{},\"t\":{\"docs\":{},\"o\":{\"docs\":{},\"g\":{\"docs\":{},\"r\":{\"docs\":{},\"a\":{\"docs\":{},\"m\":{\"docs\":{\"search-api/using-aggregations.html\":{\"ref\":\"search-api/using-aggregations.html\",\"tf\":0.029411764705882353},\"aggregations/structuring-aggregations.html\":{\"ref\":\"aggregations/structuring-aggregations.html\",\"tf\":0.02702702702702703},\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.004132231404958678}}}}}}}}},\"g\":{\"docs\":{},\"h\":{\"docs\":{},\"l\":{\"docs\":{},\"i\":{\"docs\":{},\"g\":{\"docs\":{},\"h\":{\"docs\":{},\"t\":{\"docs\":{},\",\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}}}}}}}}}}}},\"x\":{\"docs\":{\"client/xpack-transport-client.html\":{\"ref\":\"client/xpack-transport-client.html\",\"tf\":0.03278688524590164}},\"p\":{\"docs\":{},\"a\":{\"docs\":{},\"c\":{\"docs\":{},\"k\":{\"docs\":{\"client/xpack-transport-client.html\":{\"ref\":\"client/xpack-transport-client.html\",\"tf\":3.333333333333333}},\"t\":{\"docs\":{},\"r\":{\"docs\":{},\"a\":{\"docs\":{},\"n\":{\"docs\":{},\"s\":{\"docs\":{},\"p\":{\"docs\":{},\"o\":{\"docs\":{},\"r\":{\"docs\":{},\"t\":{\"docs\":{},\"c\":{\"docs\":{},\"l\":{\"docs\":{},\"i\":{\"docs\":{\"client/xpack-transport-client.html\":{\"ref\":\"client/xpack-transport-client.html\",\"tf\":0.01639344262295082}}}}}}}}}}}}}}}}}},\"c\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"n\":{\"docs\":{},\"t\":{\"docs\":{},\"b\":{\"docs\":{},\"u\":{\"docs\":{},\"i\":{\"docs\":{},\"l\":{\"docs\":{},\"d\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.004132231404958678},\"query-dsl/specialized-queries.html\":{\"ref\":\"query-dsl/specialized-queries.html\",\"tf\":0.004761904761904762}},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"帮\":{\"docs\":{},\"助\":{\"docs\":{},\"类\":{\"docs\":{},\"方\":{\"docs\":{},\"式\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.002066115702479339}}}}}}}}}}}}}},\"f\":{\"docs\":{},\"a\":{\"docs\":{},\"c\":{\"docs\":{},\"t\":{\"docs\":{},\"o\":{\"docs\":{},\"r\":{\"docs\":{},\"y\":{\"docs\":{},\".\":{\"docs\":{},\"j\":{\"docs\":{},\"s\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{},\"b\":{\"docs\":{},\"u\":{\"docs\":{},\"i\":{\"docs\":{},\"l\":{\"docs\":{},\"d\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"(\":{\"docs\":{},\")\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.006198347107438017}},\".\":{\"docs\":{},\"s\":{\"docs\":{},\"t\":{\"docs\":{},\"a\":{\"docs\":{},\"r\":{\"docs\":{},\"t\":{\"docs\":{},\"o\":{\"docs\":{},\"b\":{\"docs\":{},\"j\":{\"docs\":{},\"e\":{\"docs\":{},\"c\":{\"docs\":{},\"t\":{\"docs\":{},\"(\":{\"docs\":{},\")\":{\"docs\":{},\";\":{\"docs\":{\"query-dsl/specialized-queries.html\":{\"ref\":\"query-dsl/specialized-queries.html\",\"tf\":0.004761904761904762}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"c\":{\"docs\":{\"query-dsl/geo-queries.html\":{\"ref\":\"query-dsl/geo-queries.html\",\"tf\":0.004901960784313725}},\"e\":{\"docs\":{},\"s\":{\"docs\":{},\"i\":{\"docs\":{},\"m\":{\"docs\":{},\"p\":{\"docs\":{},\"l\":{\"docs\":{\"query-dsl/geo-queries.html\":{\"ref\":\"query-dsl/geo-queries.html\",\"tf\":0.004901960784313725}}}}}}}}}}}},\"{\":{\"docs\":{\"client/xpack-transport-client.html\":{\"ref\":\"client/xpack-transport-client.html\",\"tf\":0.03278688524590164},\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.002066115702479339},\"document-apis/delete-by-query-api.html\":{\"ref\":\"document-apis/delete-by-query-api.html\",\"tf\":0.05555555555555555},\"document-apis/update-api.html\":{\"ref\":\"document-apis/update-api.html\",\"tf\":0.014814814814814815},\"document-apis/multi-get-api.html\":{\"ref\":\"document-apis/multi-get-api.html\",\"tf\":0.043478260869565216},\"document-apis/bulk-api.html\":{\"ref\":\"document-apis/bulk-api.html\",\"tf\":0.014492753623188406},\"document-apis/using-bulk-processor.html\":{\"ref\":\"document-apis/using-bulk-processor.html\",\"tf\":0.030120481927710843},\"search-api/using-scrolls-in-java.html\":{\"ref\":\"search-api/using-scrolls-in-java.html\",\"tf\":0.01092896174863388},\"search-api/multisearch-api.html\":{\"ref\":\"search-api/multisearch-api.html\",\"tf\":0.019230769230769232},\"search-api/terminate-after.html\":{\"ref\":\"search-api/terminate-after.html\",\"tf\":0.0625},\"search-api/search-template.html\":{\"ref\":\"search-api/search-template.html\",\"tf\":0.016574585635359115},\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00583941605839416},\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.00909090909090909},\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.02425876010781671},\"query-dsl/compound-queries.html\":{\"ref\":\"query-dsl/compound-queries.html\",\"tf\":0.005847953216374269},\"query-dsl/specialized-queries.html\":{\"ref\":\"query-dsl/specialized-queries.html\",\"tf\":0.004761904761904762}},\"\\\\\":{\"docs\":{},\"n\":{\"docs\":{},\"\\\"\":{\"docs\":{\"search-api/search-template.html\":{\"ref\":\"search-api/search-template.html\",\"tf\":0.022099447513812154}}}}},\"}\":{\"docs\":{},\"\\\"\":{\"docs\":{},\",\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}}}},\",\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854},\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}},\"\\\"\":{\"docs\":{},\"n\":{\"docs\":{},\"a\":{\"docs\":{},\"m\":{\"docs\":{},\"e\":{\"docs\":{},\".\":{\"docs\":{},\"f\":{\"docs\":{},\"i\":{\"docs\":{},\"r\":{\"docs\":{},\"s\":{\"docs\":{},\"t\":{\"docs\":{},\"\\\"\":{\"docs\":{},\",\":{\"docs\":{\"query-dsl/specialized-queries.html\":{\"ref\":\"query-dsl/specialized-queries.html\",\"tf\":0.004761904761904762}}}}}}}}}}}}}},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"x\":{\"docs\":{},\"t\":{\"docs\":{\"query-dsl/specialized-queries.html\":{\"ref\":\"query-dsl/specialized-queries.html\",\"tf\":0.004761904761904762}}}}}}}},\"}\":{\"docs\":{\"client/xpack-transport-client.html\":{\"ref\":\"client/xpack-transport-client.html\",\"tf\":0.03278688524590164},\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.02066115702479339},\"document-apis/delete-by-query-api.html\":{\"ref\":\"document-apis/delete-by-query-api.html\",\"tf\":0.037037037037037035},\"document-apis/update-api.html\":{\"ref\":\"document-apis/update-api.html\",\"tf\":0.014814814814814815},\"document-apis/multi-get-api.html\":{\"ref\":\"document-apis/multi-get-api.html\",\"tf\":0.043478260869565216},\"document-apis/bulk-api.html\":{\"ref\":\"document-apis/bulk-api.html\",\"tf\":0.014492753623188406},\"document-apis/using-bulk-processor.html\":{\"ref\":\"document-apis/using-bulk-processor.html\",\"tf\":0.018072289156626505},\"search-api/using-scrolls-in-java.html\":{\"ref\":\"search-api/using-scrolls-in-java.html\",\"tf\":0.02185792349726776},\"search-api/multisearch-api.html\":{\"ref\":\"search-api/multisearch-api.html\",\"tf\":0.019230769230769232},\"search-api/terminate-after.html\":{\"ref\":\"search-api/terminate-after.html\",\"tf\":0.0625},\"search-api/search-template.html\":{\"ref\":\"search-api/search-template.html\",\"tf\":0.016574585635359115},\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00583941605839416},\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.00909090909090909},\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.02425876010781671},\"query-dsl/specialized-queries.html\":{\"ref\":\"query-dsl/specialized-queries.html\",\"tf\":0.004761904761904762}},\")\":{\"docs\":{\"document-apis/using-bulk-processor.html\":{\"ref\":\"document-apis/using-bulk-processor.html\",\"tf\":0.012048192771084338}},\";\":{\"docs\":{\"document-apis/delete-by-query-api.html\":{\"ref\":\"document-apis/delete-by-query-api.html\",\"tf\":0.018518518518518517}}}},\"\\\\\":{\"docs\":{},\"n\":{\"docs\":{},\"\\\"\":{\"docs\":{\"search-api/search-template.html\":{\"ref\":\"search-api/search-template.html\",\"tf\":0.022099447513812154}}}}},\";\":{\"docs\":{\"query-dsl/compound-queries.html\":{\"ref\":\"query-dsl/compound-queries.html\",\"tf\":0.005847953216374269}}}},\"使\":{\"docs\":{},\"用\":{\"docs\":{\"document-apis/update-api.html\":{\"ref\":\"document-apis/update-api.html\",\"tf\":0.014814814814814815},\"document-apis/using-bulk-processor.html\":{\"ref\":\"document-apis/using-bulk-processor.html\",\"tf\":0.006024096385542169},\"aggregations.html\":{\"ref\":\"aggregations.html\",\"tf\":0.038461538461538464},\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.001652892561983471},\"query-dsl/joining-queries.html\":{\"ref\":\"query-dsl/joining-queries.html\",\"tf\":0.007194244604316547}},\"m\":{\"docs\":{},\"a\":{\"docs\":{},\"v\":{\"docs\":{},\"e\":{\"docs\":{},\"n\":{\"docs\":{},\"管\":{\"docs\":{},\"理\":{\"docs\":{},\"项\":{\"docs\":{},\"目\":{\"docs\":{},\"，\":{\"docs\":{},\"把\":{\"docs\":{},\"下\":{\"docs\":{},\"面\":{\"docs\":{},\"代\":{\"docs\":{},\"码\":{\"docs\":{},\"增\":{\"docs\":{},\"加\":{\"docs\":{},\"到\":{\"docs\":{},\"p\":{\"docs\":{},\"o\":{\"docs\":{},\"m\":{\"docs\":{},\".\":{\"docs\":{},\"x\":{\"docs\":{},\"m\":{\"docs\":{},\"l\":{\"docs\":{},\";\":{\"docs\":{\"client/xpack-transport-client.html\":{\"ref\":\"client/xpack-transport-client.html\",\"tf\":0.01639344262295082}}}}}}}}}}}}}}}}}}}}}}}}}},\"p\":{\"docs\":{},\"方\":{\"docs\":{},\"式\":{\"docs\":{},\"，\":{\"docs\":{},\"会\":{\"docs\":{},\"自\":{\"docs\":{},\"动\":{\"docs\":{},\"转\":{\"docs\":{},\"换\":{\"docs\":{},\"成\":{\"docs\":{},\"与\":{\"docs\":{},\"之\":{\"docs\":{},\"等\":{\"docs\":{},\"价\":{\"docs\":{},\"的\":{\"docs\":{},\"j\":{\"docs\":{},\"s\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.002066115702479339}}}}}}}}}}}}}}}}}}}}}}},\"e\":{\"docs\":{},\"l\":{\"docs\":{},\"a\":{\"docs\":{},\"s\":{\"docs\":{},\"t\":{\"docs\":{},\"i\":{\"docs\":{},\"c\":{\"docs\":{},\"s\":{\"docs\":{},\"e\":{\"docs\":{},\"a\":{\"docs\":{},\"r\":{\"docs\":{},\"c\":{\"docs\":{},\"h\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.004132231404958678}}}}}}}}}}}}}}},\"j\":{\"docs\":{},\"a\":{\"docs\":{},\"c\":{\"docs\":{},\"k\":{\"docs\":{},\"s\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{},\"序\":{\"docs\":{},\"列\":{\"docs\":{},\"化\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.004132231404958678}}}}}}}}}}}},\"内\":{\"docs\":{},\"置\":{\"docs\":{},\"的\":{\"docs\":{},\"帮\":{\"docs\":{},\"助\":{\"docs\":{},\"类\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.002066115702479339}}}}}}}},\"第\":{\"docs\":{},\"三\":{\"docs\":{},\"方\":{\"docs\":{},\"库\":{\"docs\":{},\"来\":{\"docs\":{},\"序\":{\"docs\":{},\"列\":{\"docs\":{},\"化\":{\"docs\":{},\"b\":{\"docs\":{},\"e\":{\"docs\":{},\"a\":{\"docs\":{},\"n\":{\"docs\":{},\"s\":{\"docs\":{},\"，\":{\"docs\":{},\"如\":{\"docs\":{},\"j\":{\"docs\":{},\"a\":{\"docs\":{},\"c\":{\"docs\":{},\"k\":{\"docs\":{},\"s\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.002066115702479339}}}}}}}}}}}}}}}}}}}}}}}},\"集\":{\"docs\":{},\"合\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.004132231404958678}}}},\"u\":{\"docs\":{},\"p\":{\"docs\":{},\"d\":{\"docs\":{},\"a\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"q\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"docs\":{},\"s\":{\"docs\":{},\"t\":{\"docs\":{\"document-apis/update-api.html\":{\"ref\":\"document-apis/update-api.html\",\"tf\":0.007407407407407408}}}}}}}}}}}}}}},\"脚\":{\"docs\":{},\"本\":{\"docs\":{},\"更\":{\"docs\":{},\"新\":{\"docs\":{},\"文\":{\"docs\":{},\"档\":{\"docs\":{\"document-apis/update-api.html\":{\"ref\":\"document-apis/update-api.html\",\"tf\":0.007407407407407408}}}}}}}},\"s\":{\"docs\":{},\"c\":{\"docs\":{},\"r\":{\"docs\":{},\"i\":{\"docs\":{},\"p\":{\"docs\":{},\"t\":{\"docs\":{},\"s\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"v\":{\"docs\":{},\"i\":{\"docs\":{},\"c\":{\"docs\":{},\"e\":{\"docs\":{},\".\":{\"docs\":{},\"s\":{\"docs\":{},\"c\":{\"docs\":{},\"r\":{\"docs\":{},\"i\":{\"docs\":{},\"p\":{\"docs\":{},\"t\":{\"docs\":{},\"t\":{\"docs\":{},\"y\":{\"docs\":{},\"p\":{\"docs\":{},\"e\":{\"docs\":{},\".\":{\"docs\":{},\"s\":{\"docs\":{},\"t\":{\"docs\":{},\"o\":{\"docs\":{},\"r\":{\"docs\":{\"search-api/search-template.html\":{\"ref\":\"search-api/search-template.html\",\"tf\":0.0055248618784530384}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"i\":{\"docs\":{},\"g\":{\"docs\":{},\"n\":{\"docs\":{},\"i\":{\"docs\":{},\"f\":{\"docs\":{},\"i\":{\"docs\":{},\"c\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}}}}}}},\"值\":{\"docs\":{},\"计\":{\"docs\":{},\"数\":{\"docs\":{},\"聚\":{\"docs\":{},\"合\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}}}}}}},\"地\":{\"docs\":{},\"理\":{\"docs\":{},\"边\":{\"docs\":{},\"界\":{\"docs\":{},\"聚\":{\"docs\":{},\"合\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}}}}}}}},\"基\":{\"docs\":{},\"数\":{\"docs\":{},\"聚\":{\"docs\":{},\"合\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}}}}},\"于\":{\"docs\":{},\"字\":{\"docs\":{},\"段\":{\"docs\":{},\"数\":{\"docs\":{},\"据\":{\"docs\":{},\"的\":{\"docs\":{},\"单\":{\"docs\":{},\"桶\":{\"docs\":{},\"聚\":{\"docs\":{},\"合\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}}}}}}}}}},\"平\":{\"docs\":{},\"均\":{\"docs\":{},\"值\":{\"docs\":{},\"聚\":{\"docs\":{},\"合\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}}}}}}},\"扩\":{\"docs\":{},\"展\":{\"docs\":{},\"统\":{\"docs\":{},\"计\":{\"docs\":{},\"聚\":{\"docs\":{},\"合\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}}}}}}}},\"最\":{\"docs\":{},\"大\":{\"docs\":{},\"值\":{\"docs\":{},\"聚\":{\"docs\":{},\"合\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}}}}}},\"小\":{\"docs\":{},\"值\":{\"docs\":{},\"聚\":{\"docs\":{},\"合\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}}}}}},\"高\":{\"docs\":{},\"匹\":{\"docs\":{},\"配\":{\"docs\":{},\"权\":{\"docs\":{},\"值\":{\"docs\":{},\"聚\":{\"docs\":{},\"合\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}}}}}}}}}},\"求\":{\"docs\":{},\"和\":{\"docs\":{},\"聚\":{\"docs\":{},\"合\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}}}}}},\"百\":{\"docs\":{},\"分\":{\"docs\":{},\"比\":{\"docs\":{},\"等\":{\"docs\":{},\"级\":{\"docs\":{},\"聚\":{\"docs\":{},\"合\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}}}}}}},\"百\":{\"docs\":{},\"聚\":{\"docs\":{},\"合\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}}}}}}},\"统\":{\"docs\":{},\"计\":{\"docs\":{},\"聚\":{\"docs\":{},\"合\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}}}}}},\"聚\":{\"docs\":{},\"合\":{\"docs\":{},\"请\":{\"docs\":{},\"求\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.017518248175182483},\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.013223140495867768}}}}}},\"c\":{\"docs\":{},\"h\":{\"docs\":{},\"i\":{\"docs\":{},\"l\":{\"docs\":{},\"d\":{\"docs\":{},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"n\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}}}}}}},\"d\":{\"docs\":{},\"a\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}}},\"g\":{\"docs\":{},\"e\":{\"docs\":{},\"o\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}},\"h\":{\"docs\":{},\"i\":{\"docs\":{},\"s\":{\"docs\":{},\"t\":{\"docs\":{},\"o\":{\"docs\":{},\"g\":{\"docs\":{},\"r\":{\"docs\":{},\"a\":{\"docs\":{},\"m\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}}}}}}},\"a\":{\"docs\":{},\"s\":{\"docs\":{},\"_\":{\"docs\":{},\"c\":{\"docs\":{},\"h\":{\"docs\":{},\"i\":{\"docs\":{},\"l\":{\"docs\":{},\"d\":{\"docs\":{},\"查\":{\"docs\":{},\"询\":{\"docs\":{},\"。\":{\"docs\":{\"query-dsl/joining-queries.html\":{\"ref\":\"query-dsl/joining-queries.html\",\"tf\":0.014388489208633094}}}}}}}}}},\"p\":{\"docs\":{},\"a\":{\"docs\":{},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"n\":{\"docs\":{},\"t\":{\"docs\":{},\"查\":{\"docs\":{},\"询\":{\"docs\":{},\"时\":{\"docs\":{},\"，\":{\"docs\":{},\"必\":{\"docs\":{},\"须\":{\"docs\":{},\"使\":{\"docs\":{},\"用\":{\"docs\":{},\"p\":{\"docs\":{},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"b\":{\"docs\":{},\"u\":{\"docs\":{},\"i\":{\"docs\":{},\"l\":{\"docs\":{},\"t\":{\"docs\":{},\"t\":{\"docs\":{},\"r\":{\"docs\":{},\"a\":{\"docs\":{},\"n\":{\"docs\":{},\"s\":{\"docs\":{},\"p\":{\"docs\":{},\"o\":{\"docs\":{},\"r\":{\"docs\":{},\"t\":{\"docs\":{},\"c\":{\"docs\":{},\"l\":{\"docs\":{},\"i\":{\"docs\":{},\"e\":{\"docs\":{},\"n\":{\"docs\":{},\"t\":{\"docs\":{},\"而\":{\"docs\":{},\"不\":{\"docs\":{},\"是\":{\"docs\":{},\"常\":{\"docs\":{},\"规\":{\"docs\":{\"query-dsl/joining-queries.html\":{\"ref\":\"query-dsl/joining-queries.html\",\"tf\":0.007194244604316547}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"i\":{\"docs\":{},\"p\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}},\"r\":{\"docs\":{},\"a\":{\"docs\":{},\"n\":{\"docs\":{},\"g\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}},\"e\":{\"docs\":{},\"v\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"s\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}}}}},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"m\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}}},\"全\":{\"docs\":{},\"局\":{\"docs\":{},\"聚\":{\"docs\":{},\"合\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}}},\"多\":{\"docs\":{},\"过\":{\"docs\":{},\"滤\":{\"docs\":{},\"聚\":{\"docs\":{},\"合\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}}}},\"嵌\":{\"docs\":{},\"套\":{\"docs\":{},\"类\":{\"docs\":{},\"型\":{\"docs\":{},\"聚\":{\"docs\":{},\"合\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}}}}},\"过\":{\"docs\":{},\"滤\":{\"docs\":{},\"聚\":{\"docs\":{},\"合\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}}},\"函\":{\"docs\":{},\"数\":{\"docs\":{},\"修\":{\"docs\":{},\"改\":{\"docs\":{},\"主\":{\"docs\":{},\"查\":{\"docs\":{},\"询\":{\"docs\":{},\"返\":{\"docs\":{},\"回\":{\"docs\":{},\"的\":{\"docs\":{},\"分\":{\"docs\":{},\"数\":{\"docs\":{},\"，\":{\"docs\":{},\"以\":{\"docs\":{},\"考\":{\"docs\":{},\"虑\":{\"docs\":{},\"诸\":{\"docs\":{},\"如\":{\"docs\":{},\"流\":{\"docs\":{},\"行\":{\"docs\":{},\"度\":{\"docs\":{},\"，\":{\"docs\":{},\"新\":{\"docs\":{},\"近\":{\"docs\":{},\"度\":{\"docs\":{},\"，\":{\"docs\":{},\"距\":{\"docs\":{},\"离\":{\"docs\":{},\"或\":{\"docs\":{},\"使\":{\"docs\":{},\"用\":{\"docs\":{},\"脚\":{\"docs\":{},\"本\":{\"docs\":{},\"实\":{\"docs\":{},\"现\":{\"docs\":{},\"的\":{\"docs\":{},\"自\":{\"docs\":{},\"定\":{\"docs\":{},\"义\":{\"docs\":{},\"算\":{\"docs\":{},\"法\":{\"docs\":{},\"等\":{\"docs\":{},\"因\":{\"docs\":{},\"素\":{\"docs\":{},\"。\":{\"docs\":{\"query-dsl/compound-queries.html\":{\"ref\":\"query-dsl/compound-queries.html\",\"tf\":0.005847953216374269}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"开\":{\"docs\":{},\"源\":{\"docs\":{},\"项\":{\"docs\":{},\"目\":{\"docs\":{\"client/xpack-transport-client.html\":{\"ref\":\"client/xpack-transport-client.html\",\"tf\":0.01639344262295082}}}}},\"始\":{\"docs\":{},\"值\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125}}}}},\"插\":{\"docs\":{},\"件\":{\"docs\":{},\"，\":{\"docs\":{},\"需\":{\"docs\":{},\"要\":{\"docs\":{},\"p\":{\"docs\":{},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"b\":{\"docs\":{},\"u\":{\"docs\":{},\"i\":{\"docs\":{},\"l\":{\"docs\":{},\"t\":{\"docs\":{},\"x\":{\"docs\":{},\"p\":{\"docs\":{},\"a\":{\"docs\":{},\"c\":{\"docs\":{},\"k\":{\"docs\":{},\"t\":{\"docs\":{},\"r\":{\"docs\":{},\"a\":{\"docs\":{},\"n\":{\"docs\":{},\"s\":{\"docs\":{},\"p\":{\"docs\":{},\"o\":{\"docs\":{},\"r\":{\"docs\":{},\"t\":{\"docs\":{},\"c\":{\"docs\":{},\"l\":{\"docs\":{},\"i\":{\"docs\":{},\"e\":{\"docs\":{},\"n\":{\"docs\":{},\"t\":{\"docs\":{},\"实\":{\"docs\":{},\"例\":{\"docs\":{},\"才\":{\"docs\":{},\"能\":{\"docs\":{},\"访\":{\"docs\":{},\"问\":{\"docs\":{\"client/xpack-transport-client.html\":{\"ref\":\"client/xpack-transport-client.html\",\"tf\":0.01639344262295082}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"服\":{\"docs\":{},\"务\":{\"docs\":{},\"安\":{\"docs\":{},\"装\":{\"docs\":{},\"了\":{\"docs\":{\"client/xpack-transport-client.html\":{\"ref\":\"client/xpack-transport-client.html\",\"tf\":0.01639344262295082}}}}}}},\"*\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.024793388429752067},\"search-api/using-scrolls-in-java.html\":{\"ref\":\"search-api/using-scrolls-in-java.html\",\"tf\":0.04371584699453552}},\"/\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.01652892561983471},\"document-apis/using-bulk-processor.html\":{\"ref\":\"document-apis/using-bulk-processor.html\",\"tf\":0.006024096385542169},\"search-api/using-scrolls-in-java.html\":{\"ref\":\"search-api/using-scrolls-in-java.html\",\"tf\":0.01092896174863388},\"aggregations.html\":{\"ref\":\"aggregations.html\",\"tf\":0.07692307692307693}},\")\":{\"docs\":{},\")\":{\"docs\":{},\";\":{\"docs\":{\"document-apis/using-bulk-processor.html\":{\"ref\":\"document-apis/using-bulk-processor.html\",\"tf\":0.006024096385542169}}}},\";\":{\"docs\":{\"document-apis/using-bulk-processor.html\":{\"ref\":\"document-apis/using-bulk-processor.html\",\"tf\":0.006024096385542169}}}}},\"]\":{\"docs\":{},\",\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0024793388429752068}}}}},\"+\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.024793388429752067},\"search-api/search-template.html\":{\"ref\":\"search-api/search-template.html\",\"tf\":0.06629834254143646}},\"=\":{\"docs\":{\"search-api/multisearch-api.html\":{\"ref\":\"search-api/multisearch-api.html\",\"tf\":0.019230769230769232}}},\"i\":{\"docs\":{},\"n\":{\"docs\":{},\"f\":{\"docs\":{},\"i\":{\"docs\":{},\"n\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0024793388429752068}}}}}}},\"/\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125}}}},\"@\":{\"docs\":{},\"b\":{\"docs\":{},\"e\":{\"docs\":{},\"f\":{\"docs\":{},\"o\":{\"docs\":{},\"r\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.002066115702479339}}}}}}},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"s\":{\"docs\":{},\"t\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.01652892561983471}}}}},\"h\":{\"docs\":{},\"r\":{\"docs\":{},\"o\":{\"docs\":{},\"w\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.008264462809917356}}}}}}},\"o\":{\"docs\":{},\"v\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"r\":{\"docs\":{},\"i\":{\"docs\":{},\"d\":{\"docs\":{\"document-apis/delete-by-query-api.html\":{\"ref\":\"document-apis/delete-by-query-api.html\",\"tf\":0.037037037037037035},\"document-apis/using-bulk-processor.html\":{\"ref\":\"document-apis/using-bulk-processor.html\",\"tf\":0.018072289156626505}}}}}}}}},\"p\":{\"docs\":{},\"a\":{\"docs\":{},\"r\":{\"docs\":{},\"a\":{\"docs\":{},\"m\":{\"docs\":{\"search-api/using-scrolls-in-java.html\":{\"ref\":\"search-api/using-scrolls-in-java.html\",\"tf\":0.02185792349726776}}}}}}},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"t\":{\"docs\":{},\"u\":{\"docs\":{},\"r\":{\"docs\":{},\"n\":{\"docs\":{\"search-api/using-scrolls-in-java.html\":{\"ref\":\"search-api/using-scrolls-in-java.html\",\"tf\":0.01092896174863388}}}}}}}}},\"_\":{\"docs\":{},\"i\":{\"docs\":{},\"d\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.002066115702479339}}},\"n\":{\"docs\":{},\"d\":{\"docs\":{},\"e\":{\"docs\":{},\"x\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.002066115702479339},\"query-dsl/compound-queries.html\":{\"ref\":\"query-dsl/compound-queries.html\",\"tf\":0.005847953216374269}}}}}}},\"t\":{\"docs\":{},\"y\":{\"docs\":{},\"p\":{\"docs\":{},\"e\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.002066115702479339}}}}}},\"v\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"s\":{\"docs\":{},\"i\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.002066115702479339}}}}}}}}},\"m\":{\"docs\":{},\"s\":{\"docs\":{},\"e\":{\"docs\":{},\"a\":{\"docs\":{},\"r\":{\"docs\":{},\"c\":{\"docs\":{},\"h\":{\"docs\":{\"search-api/multisearch-api.html\":{\"ref\":\"search-api/multisearch-api.html\",\"tf\":0.019230769230769232}}}}}}}}},\"s\":{\"docs\":{},\"o\":{\"docs\":{},\"u\":{\"docs\":{},\"r\":{\"docs\":{},\"c\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.010218978102189781}}}}}},\"c\":{\"docs\":{},\"o\":{\"docs\":{},\"r\":{\"docs\":{},\"e\":{\"docs\":{\"query-dsl/compound-queries.html\":{\"ref\":\"query-dsl/compound-queries.html\",\"tf\":0.005847953216374269}}}}}}}},\"l\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{},\"g\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.002066115702479339},\"document-apis/delete-by-query-api.html\":{\"ref\":\"document-apis/delete-by-query-api.html\",\"tf\":0.037037037037037035},\"search-api/multisearch-api.html\":{\"ref\":\"search-api/multisearch-api.html\",\"tf\":0.019230769230769232},\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.0072992700729927005},\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.006611570247933884}}}},\"o\":{\"docs\":{},\"p\":{\"docs\":{},\".\":{\"docs\":{\"search-api/using-scrolls-in-java.html\":{\"ref\":\"search-api/using-scrolls-in-java.html\",\"tf\":0.00546448087431694}}}},\"k\":{\"docs\":{},\"u\":{\"docs\":{},\"p\":{\"docs\":{\"query-dsl/joining-queries.html\":{\"ref\":\"query-dsl/joining-queries.html\",\"tf\":0.007194244604316547}}}}}},\"g\":{\"docs\":{},\"g\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\".\":{\"docs\":{},\"i\":{\"docs\":{},\"n\":{\"docs\":{},\"f\":{\"docs\":{},\"o\":{\"docs\":{},\"(\":{\"docs\":{},\"\\\"\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}},\"b\":{\"docs\":{},\"o\":{\"docs\":{},\"t\":{\"docs\":{},\"t\":{\"docs\":{},\"o\":{\"docs\":{},\"m\":{\"docs\":{},\"r\":{\"docs\":{},\"i\":{\"docs\":{},\"g\":{\"docs\":{},\"h\":{\"docs\":{},\"t\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}}}}}}}}}}}}},\"k\":{\"docs\":{},\"e\":{\"docs\":{},\"y\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854},\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.006611570247933884}}}}},\"p\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"c\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00291970802919708}}}}}}}}}}}}}}}}}},\"i\":{\"docs\":{},\"s\":{\"docs\":{},\"t\":{\"docs\":{\"search-api/using-scrolls-in-java.html\":{\"ref\":\"search-api/using-scrolls-in-java.html\",\"tf\":0.00546448087431694},\"query-dsl/geo-queries.html\":{\"ref\":\"query-dsl/geo-queries.html\",\"tf\":0.00980392156862745}},\"e\":{\"docs\":{},\"n\":{\"docs\":{\"document-apis/using-bulk-processor.html\":{\"ref\":\"document-apis/using-bulk-processor.html\",\"tf\":0.006024096385542169}}}}}}},\"a\":{\"docs\":{},\"r\":{\"docs\":{},\"g\":{\"docs\":{\"search-api/using-scrolls-in-java.html\":{\"ref\":\"search-api/using-scrolls-in-java.html\",\"tf\":0.00546448087431694}}}},\"n\":{\"docs\":{},\"g\":{\"docs\":{},\"u\":{\"docs\":{},\"a\":{\"docs\":{},\"g\":{\"docs\":{\"indexed-scripts-api/script-language.html\":{\"ref\":\"indexed-scripts-api/script-language.html\",\"tf\":5}}}}}}}},\"e\":{\"docs\":{},\"v\":{\"docs\":{},\"e\":{\"docs\":{},\"l\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":3.3360287511230906}}},\"n\":{\"docs\":{},\"s\":{\"docs\":{},\"h\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"i\":{\"docs\":{},\"n\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125}},\"。\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125}}}}}}}}}}}},\"f\":{\"docs\":{},\"t\":{\"docs\":{\"query-dsl/geo-queries.html\":{\"ref\":\"query-dsl/geo-queries.html\",\"tf\":0.004901960784313725}}}}},\"t\":{\"docs\":{},\"(\":{\"docs\":{},\")\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125}}}},\"e\":{\"docs\":{},\"(\":{\"docs\":{},\")\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125}}}}}}},\"v\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"s\":{\"docs\":{},\"i\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.002066115702479339}}}}}}}},\"o\":{\"docs\":{},\"i\":{\"docs\":{},\"d\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.01859504132231405},\"document-apis/delete-by-query-api.html\":{\"ref\":\"document-apis/delete-by-query-api.html\",\"tf\":0.037037037037037035},\"document-apis/using-bulk-processor.html\":{\"ref\":\"document-apis/using-bulk-processor.html\",\"tf\":0.018072289156626505}}}}},\"a\":{\"docs\":{},\"l\":{\"docs\":{},\"u\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.03795620437956204},\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.001652892561983471},\"query-dsl/full-text-queries.html\":{\"ref\":\"query-dsl/full-text-queries.html\",\"tf\":0.011904761904761904}},\"e\":{\"docs\":{},\")\":{\"docs\":{},\";\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00291970802919708}}}},\"c\":{\"docs\":{},\"o\":{\"docs\":{},\"u\":{\"docs\":{},\"n\":{\"docs\":{},\"t\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}},\"a\":{\"docs\":{},\"g\":{\"docs\":{},\"g\":{\"docs\":{},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"g\":{\"docs\":{},\"a\":{\"docs\":{},\"t\":{\"docs\":{},\"i\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{},\"b\":{\"docs\":{},\"u\":{\"docs\":{},\"i\":{\"docs\":{},\"l\":{\"docs\":{},\"d\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}}}}}}}}}}}}}}}}}}}}}}},\"指\":{\"docs\":{},\"标\":{\"docs\":{},\"聚\":{\"docs\":{},\"合\":{\"docs\":{},\"，\":{\"docs\":{},\"它\":{\"docs\":{},\"通\":{\"docs\":{},\"过\":{\"docs\":{},\"从\":{\"docs\":{},\"聚\":{\"docs\":{},\"合\":{\"docs\":{},\"文\":{\"docs\":{},\"档\":{\"docs\":{},\"中\":{\"docs\":{},\"提\":{\"docs\":{},\"取\":{\"docs\":{},\"数\":{\"docs\":{},\"值\":{\"docs\":{},\"来\":{\"docs\":{},\"计\":{\"docs\":{},\"算\":{\"docs\":{},\"一\":{\"docs\":{},\"个\":{\"docs\":{},\"或\":{\"docs\":{},\"多\":{\"docs\":{},\"个\":{\"docs\":{},\"百\":{\"docs\":{},\"分\":{\"docs\":{},\"比\":{\"docs\":{},\"。\":{\"docs\":{},\"这\":{\"docs\":{},\"些\":{\"docs\":{},\"值\":{\"docs\":{},\"可\":{\"docs\":{},\"以\":{\"docs\":{},\"从\":{\"docs\":{},\"特\":{\"docs\":{},\"定\":{\"docs\":{},\"数\":{\"docs\":{},\"值\":{\"docs\":{},\"字\":{\"docs\":{},\"段\":{\"docs\":{},\"中\":{\"docs\":{},\"提\":{\"docs\":{},\"取\":{\"docs\":{},\"，\":{\"docs\":{},\"也\":{\"docs\":{},\"可\":{\"docs\":{},\"以\":{\"docs\":{},\"由\":{\"docs\":{},\"提\":{\"docs\":{},\"供\":{\"docs\":{},\"的\":{\"docs\":{},\"脚\":{\"docs\":{},\"本\":{\"docs\":{},\"生\":{\"docs\":{},\"成\":{\"docs\":{},\"。\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"r\":{\"docs\":{},\"i\":{\"docs\":{},\"a\":{\"docs\":{},\"n\":{\"docs\":{},\"c\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}}}}}}}}},\"w\":{\"docs\":{},\"o\":{\"docs\":{},\"r\":{\"docs\":{},\"d\":{\"docs\":{},\"\\\\\":{\"docs\":{},\"\\\"\":{\"docs\":{},\"\\\"\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.004132231404958678}}}}}}}},\"h\":{\"docs\":{},\"o\":{\"docs\":{},\"l\":{\"docs\":{},\"e\":{\"docs\":{\"search-api.html\":{\"ref\":\"search-api.html\",\"tf\":0.017241379310344827}}}},\"s\":{\"docs\":{},\"e\":{\"docs\":{\"query-dsl/span-queries.html\":{\"ref\":\"query-dsl/span-queries.html\",\"tf\":0.011111111111111112}}}}},\"i\":{\"docs\":{},\"l\":{\"docs\":{},\"e\":{\"docs\":{},\"(\":{\"docs\":{},\"s\":{\"docs\":{},\"c\":{\"docs\":{},\"r\":{\"docs\":{},\"o\":{\"docs\":{},\"l\":{\"docs\":{},\"l\":{\"docs\":{},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"s\":{\"docs\":{},\"p\":{\"docs\":{},\".\":{\"docs\":{},\"g\":{\"docs\":{},\"e\":{\"docs\":{},\"t\":{\"docs\":{},\"h\":{\"docs\":{},\"i\":{\"docs\":{},\"t\":{\"docs\":{},\"s\":{\"docs\":{},\"(\":{\"docs\":{},\")\":{\"docs\":{},\".\":{\"docs\":{},\"g\":{\"docs\":{},\"e\":{\"docs\":{},\"t\":{\"docs\":{},\"h\":{\"docs\":{},\"i\":{\"docs\":{},\"t\":{\"docs\":{},\"s\":{\"docs\":{},\"(\":{\"docs\":{},\")\":{\"docs\":{},\".\":{\"docs\":{},\"l\":{\"docs\":{},\"e\":{\"docs\":{},\"n\":{\"docs\":{},\"g\":{\"docs\":{},\"t\":{\"docs\":{},\"h\":{\"docs\":{\"search-api/using-scrolls-in-java.html\":{\"ref\":\"search-api/using-scrolls-in-java.html\",\"tf\":0.00546448087431694}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"i\":{\"docs\":{},\"l\":{\"docs\":{},\"d\":{\"docs\":{},\"c\":{\"docs\":{},\"a\":{\"docs\":{},\"r\":{\"docs\":{},\"d\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125}},\"q\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"y\":{\"docs\":{},\"(\":{\"docs\":{},\"\\\"\":{\"docs\":{},\"u\":{\"docs\":{},\"s\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"\\\"\":{\"docs\":{},\",\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125}}}}}}}}}},\"b\":{\"docs\":{},\"u\":{\"docs\":{},\"i\":{\"docs\":{},\"l\":{\"docs\":{},\"d\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.005390835579514825}},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"。\":{\"docs\":{\"query-dsl/span-queries.html\":{\"ref\":\"query-dsl/span-queries.html\",\"tf\":0.005555555555555556}}}}}}}}}}}}}}},\",\":{\"docs\":{\"query-dsl/span-queries.html\":{\"ref\":\"query-dsl/span-queries.html\",\"tf\":0.005555555555555556}}}}}}}}},\"t\":{\"docs\":{},\"h\":{\"docs\":{},\"i\":{\"docs\":{},\"n\":{\"docs\":{\"query-dsl/geo-queries.html\":{\"ref\":\"query-dsl/geo-queries.html\",\"tf\":0.004901960784313725},\"query-dsl/span-queries.html\":{\"ref\":\"query-dsl/span-queries.html\",\"tf\":0.005555555555555556}}}}}}},\"e\":{\"docs\":{},\"'\":{\"docs\":{},\"r\":{\"docs\":{\"query-dsl/specialized-queries.html\":{\"ref\":\"query-dsl/specialized-queries.html\",\"tf\":0.004761904761904762}}}}}},\"为\":{\"docs\":{\"document-apis/using-bulk-processor.html\":{\"ref\":\"document-apis/using-bulk-processor.html\",\"tf\":0.006024096385542169}},\"我\":{\"docs\":{},\"们\":{\"docs\":{},\"自\":{\"docs\":{},\"动\":{\"docs\":{},\"生\":{\"docs\":{},\"成\":{\"docs\":{},\"一\":{\"docs\":{},\"个\":{\"docs\":{},\"。\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.002066115702479339}}}}}}}}}}},\"了\":{\"docs\":{},\"检\":{\"docs\":{},\"查\":{\"docs\":{},\"文\":{\"docs\":{},\"档\":{\"docs\":{},\"注\":{\"docs\":{},\"册\":{\"docs\":{},\"查\":{\"docs\":{},\"询\":{\"docs\":{},\",\":{\"docs\":{},\"使\":{\"docs\":{},\"用\":{\"docs\":{},\"这\":{\"docs\":{},\"个\":{\"docs\":{},\"代\":{\"docs\":{},\"码\":{\"docs\":{},\":\":{\"docs\":{\"query-dsl/specialized-queries.html\":{\"ref\":\"query-dsl/specialized-queries.html\",\"tf\":0.004761904761904762}}}}}}}}}}}}}}}}}}}},\"你\":{\"docs\":{},\"还\":{\"docs\":{},\"可\":{\"docs\":{},\"以\":{\"docs\":{},\"通\":{\"docs\":{},\"过\":{\"docs\":{},\"s\":{\"docs\":{},\"t\":{\"docs\":{},\"a\":{\"docs\":{},\"r\":{\"docs\":{},\"t\":{\"docs\":{},\"a\":{\"docs\":{},\"r\":{\"docs\":{},\"r\":{\"docs\":{},\"a\":{\"docs\":{},\"y\":{\"docs\":{},\"(\":{\"docs\":{},\"s\":{\"docs\":{},\"t\":{\"docs\":{},\"r\":{\"docs\":{},\"i\":{\"docs\":{},\"n\":{\"docs\":{},\"g\":{\"docs\":{},\")\":{\"docs\":{},\"和\":{\"docs\":{},\"e\":{\"docs\":{},\"n\":{\"docs\":{},\"d\":{\"docs\":{},\"a\":{\"docs\":{},\"r\":{\"docs\":{},\"r\":{\"docs\":{},\"a\":{\"docs\":{},\"y\":{\"docs\":{},\"(\":{\"docs\":{},\")\":{\"docs\":{},\"方\":{\"docs\":{},\"法\":{\"docs\":{},\"添\":{\"docs\":{},\"加\":{\"docs\":{},\"数\":{\"docs\":{},\"组\":{\"docs\":{},\"。\":{\"docs\":{},\".\":{\"docs\":{},\"f\":{\"docs\":{},\"i\":{\"docs\":{},\"e\":{\"docs\":{},\"l\":{\"docs\":{},\"d\":{\"docs\":{},\"(\":{\"docs\":{},\")\":{\"docs\":{},\"方\":{\"docs\":{},\"法\":{\"docs\":{},\"可\":{\"docs\":{},\"以\":{\"docs\":{},\"接\":{\"docs\":{},\"受\":{\"docs\":{},\"多\":{\"docs\":{},\"种\":{\"docs\":{},\"对\":{\"docs\":{},\"象\":{\"docs\":{},\"类\":{\"docs\":{},\"型\":{\"docs\":{},\"。\":{\"docs\":{},\"你\":{\"docs\":{},\"可\":{\"docs\":{},\"以\":{\"docs\":{},\"给\":{\"docs\":{},\"它\":{\"docs\":{},\"传\":{\"docs\":{},\"递\":{\"docs\":{},\"数\":{\"docs\":{},\"字\":{\"docs\":{},\"、\":{\"docs\":{},\"日\":{\"docs\":{},\"期\":{\"docs\":{},\"、\":{\"docs\":{},\"甚\":{\"docs\":{},\"至\":{\"docs\":{},\"其\":{\"docs\":{},\"他\":{\"docs\":{},\"x\":{\"docs\":{},\"c\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"n\":{\"docs\":{},\"t\":{\"docs\":{},\"b\":{\"docs\":{},\"u\":{\"docs\":{},\"i\":{\"docs\":{},\"l\":{\"docs\":{},\"d\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"对\":{\"docs\":{},\"象\":{\"docs\":{},\"。\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.002066115702479339}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"允\":{\"docs\":{},\"许\":{\"docs\":{},\"我\":{\"docs\":{},\"们\":{\"docs\":{},\"存\":{\"docs\":{},\"储\":{\"docs\":{},\"一\":{\"docs\":{},\"个\":{\"docs\":{},\"j\":{\"docs\":{},\"s\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{},\"格\":{\"docs\":{},\"式\":{\"docs\":{},\"的\":{\"docs\":{},\"文\":{\"docs\":{},\"档\":{\"docs\":{},\"，\":{\"docs\":{},\"使\":{\"docs\":{},\"数\":{\"docs\":{},\"据\":{\"docs\":{},\"可\":{\"docs\":{},\"以\":{\"docs\":{},\"被\":{\"docs\":{},\"搜\":{\"docs\":{},\"索\":{\"docs\":{},\"。\":{\"docs\":{},\"文\":{\"docs\":{},\"档\":{\"docs\":{},\"通\":{\"docs\":{},\"过\":{\"docs\":{},\"i\":{\"docs\":{},\"n\":{\"docs\":{},\"d\":{\"docs\":{},\"e\":{\"docs\":{},\"x\":{\"docs\":{},\"、\":{\"docs\":{},\"t\":{\"docs\":{},\"y\":{\"docs\":{},\"p\":{\"docs\":{},\"e\":{\"docs\":{},\"、\":{\"docs\":{},\"i\":{\"docs\":{},\"d\":{\"docs\":{},\"唯\":{\"docs\":{},\"一\":{\"docs\":{},\"确\":{\"docs\":{},\"定\":{\"docs\":{},\"。\":{\"docs\":{},\"我\":{\"docs\":{},\"们\":{\"docs\":{},\"可\":{\"docs\":{},\"以\":{\"docs\":{},\"自\":{\"docs\":{},\"己\":{\"docs\":{},\"提\":{\"docs\":{},\"供\":{\"docs\":{},\"一\":{\"docs\":{},\"个\":{\"docs\":{},\"i\":{\"docs\":{},\"d\":{\"docs\":{},\"，\":{\"docs\":{},\"或\":{\"docs\":{},\"者\":{\"docs\":{},\"也\":{\"docs\":{},\"使\":{\"docs\":{},\"用\":{\"docs\":{},\"i\":{\"docs\":{},\"n\":{\"docs\":{},\"d\":{\"docs\":{},\"e\":{\"docs\":{},\"x\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.002066115702479339}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"在\":{\"docs\":{},\"执\":{\"docs\":{},\"行\":{\"docs\":{},\"搜\":{\"docs\":{},\"索\":{\"docs\":{},\"请\":{\"docs\":{},\"求\":{\"docs\":{},\"和\":{\"docs\":{},\"使\":{\"docs\":{},\"用\":{\"docs\":{},\"模\":{\"docs\":{},\"板\":{\"docs\":{},\"参\":{\"docs\":{},\"数\":{\"docs\":{},\"填\":{\"docs\":{},\"充\":{\"docs\":{},\"现\":{\"docs\":{},\"有\":{\"docs\":{},\"模\":{\"docs\":{},\"板\":{\"docs\":{},\"之\":{\"docs\":{},\"前\":{\"docs\":{},\"，\":{\"docs\":{},\"能\":{\"docs\":{},\"够\":{\"docs\":{},\"使\":{\"docs\":{},\"用\":{\"docs\":{\"search-api/search-template.html\":{\"ref\":\"search-api/search-template.html\",\"tf\":0.0055248618784530384}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"在\":{\"docs\":{},\"同\":{\"docs\":{},\"一\":{\"docs\":{},\"a\":{\"docs\":{},\"p\":{\"docs\":{},\"i\":{\"docs\":{},\"中\":{\"docs\":{},\"执\":{\"docs\":{},\"行\":{\"docs\":{},\"多\":{\"docs\":{},\"个\":{\"docs\":{},\"搜\":{\"docs\":{},\"索\":{\"docs\":{},\"请\":{\"docs\":{},\"求\":{\"docs\":{},\"。\":{\"docs\":{},\"它\":{\"docs\":{},\"的\":{\"docs\":{},\"端\":{\"docs\":{},\"点\":{\"docs\":{},\"（\":{\"docs\":{},\"e\":{\"docs\":{},\"n\":{\"docs\":{},\"d\":{\"docs\":{},\"p\":{\"docs\":{},\"o\":{\"docs\":{},\"i\":{\"docs\":{},\"n\":{\"docs\":{},\"t\":{\"docs\":{},\"）\":{\"docs\":{},\"是\":{\"docs\":{\"search-api/multisearch-api.html\":{\"ref\":\"search-api/multisearch-api.html\",\"tf\":0.019230769230769232}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"帮\":{\"docs\":{},\"助\":{\"docs\":{},\"类\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.004132231404958678}}}}},\"序\":{\"docs\":{},\"列\":{\"docs\":{},\"化\":{\"docs\":{},\"方\":{\"docs\":{},\"式\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.002066115702479339}}}}}}},\"数\":{\"docs\":{},\"据\":{\"docs\":{},\"格\":{\"docs\":{},\"式\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.002066115702479339}}}}},\"值\":{\"docs\":{},\"计\":{\"docs\":{},\"量\":{\"docs\":{},\"聚\":{\"docs\":{},\"合\":{\"docs\":{},\"操\":{\"docs\":{},\"作\":{\"docs\":{},\"是\":{\"docs\":{},\"能\":{\"docs\":{},\"够\":{\"docs\":{},\"产\":{\"docs\":{},\"生\":{\"docs\":{},\"具\":{\"docs\":{},\"体\":{\"docs\":{},\"的\":{\"docs\":{},\"数\":{\"docs\":{},\"值\":{\"docs\":{},\"的\":{\"docs\":{},\"一\":{\"docs\":{},\"种\":{\"docs\":{},\"计\":{\"docs\":{},\"量\":{\"docs\":{},\"聚\":{\"docs\":{},\"合\":{\"docs\":{},\"操\":{\"docs\":{},\"作\":{\"docs\":{},\"。\":{\"docs\":{},\"一\":{\"docs\":{},\"些\":{\"docs\":{},\"聚\":{\"docs\":{},\"合\":{\"docs\":{},\"操\":{\"docs\":{},\"作\":{\"docs\":{},\"输\":{\"docs\":{},\"出\":{\"docs\":{},\"单\":{\"docs\":{},\"个\":{\"docs\":{},\"的\":{\"docs\":{},\"计\":{\"docs\":{},\"量\":{\"docs\":{},\"数\":{\"docs\":{},\"值\":{\"docs\":{},\"（\":{\"docs\":{},\"例\":{\"docs\":{},\"如\":{\"docs\":{},\"a\":{\"docs\":{},\"v\":{\"docs\":{},\"g\":{\"docs\":{},\"）\":{\"docs\":{},\"，\":{\"docs\":{},\"并\":{\"docs\":{},\"且\":{\"docs\":{},\"被\":{\"docs\":{},\"称\":{\"docs\":{},\"作\":{\"docs\":{},\"s\":{\"docs\":{},\"i\":{\"docs\":{},\"n\":{\"docs\":{},\"g\":{\"docs\":{},\"l\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"综\":{\"docs\":{},\"合\":{\"docs\":{},\"实\":{\"docs\":{},\"例\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.002066115702479339}}}}}},\"这\":{\"docs\":{},\"里\":{\"docs\":{},\"有\":{\"docs\":{},\"几\":{\"docs\":{},\"种\":{\"docs\":{},\"不\":{\"docs\":{},\"同\":{\"docs\":{},\"的\":{\"docs\":{},\"方\":{\"docs\":{},\"式\":{\"docs\":{},\"来\":{\"docs\":{},\"产\":{\"docs\":{},\"生\":{\"docs\":{},\"j\":{\"docs\":{},\"s\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{},\"格\":{\"docs\":{},\"式\":{\"docs\":{},\"的\":{\"docs\":{},\"文\":{\"docs\":{},\"档\":{\"docs\":{},\"(\":{\"docs\":{},\"d\":{\"docs\":{},\"o\":{\"docs\":{},\"c\":{\"docs\":{},\"u\":{\"docs\":{},\"m\":{\"docs\":{},\"e\":{\"docs\":{},\"n\":{\"docs\":{},\"t\":{\"docs\":{},\")\":{\"docs\":{},\"：\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.002066115702479339}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"定\":{\"docs\":{},\"义\":{\"docs\":{},\"索\":{\"docs\":{},\"引\":{\"docs\":{},\"名\":{\"docs\":{},\"称\":{\"docs\":{},\"）\":{\"docs\":{\"search-api/search-template.html\":{\"ref\":\"search-api/search-template.html\",\"tf\":0.016574585635359115}}}}}}}}}},\"样\":{\"docs\":{},\"的\":{\"docs\":{},\"查\":{\"docs\":{},\"询\":{\"docs\":{},\"有\":{\"docs\":{},\"以\":{\"docs\":{},\"下\":{\"docs\":{},\"这\":{\"docs\":{},\"些\":{\"docs\":{},\"：\":{\"docs\":{\"query-dsl/full-text-queries.html\":{\"ref\":\"query-dsl/full-text-queries.html\",\"tf\":0.011904761904761904},\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125}}}}}}}}}},\"分\":{\"docs\":{},\"布\":{\"docs\":{},\"式\":{\"docs\":{},\"系\":{\"docs\":{},\"统\":{\"docs\":{},\"中\":{\"docs\":{},\"执\":{\"docs\":{},\"行\":{\"docs\":{},\"全\":{\"docs\":{\"query-dsl/joining-queries.html\":{\"ref\":\"query-dsl/joining-queries.html\",\"tf\":0.007194244604316547}}}}}}}}}}}}},\"两\":{\"docs\":{},\"个\":{\"docs\":{},\"函\":{\"docs\":{},\"数\":{\"docs\":{},\"与\":{\"docs\":{},\"i\":{\"docs\":{},\"n\":{\"docs\":{},\"c\":{\"docs\":{},\"l\":{\"docs\":{},\"u\":{\"docs\":{},\"d\":{\"docs\":{},\"e\":{\"docs\":{},\"l\":{\"docs\":{},\"o\":{\"docs\":{},\"w\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"(\":{\"docs\":{},\")\":{\"docs\":{},\"和\":{\"docs\":{},\"i\":{\"docs\":{},\"n\":{\"docs\":{},\"c\":{\"docs\":{},\"l\":{\"docs\":{},\"u\":{\"docs\":{},\"d\":{\"docs\":{},\"e\":{\"docs\":{},\"u\":{\"docs\":{},\"p\":{\"docs\":{},\"p\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"(\":{\"docs\":{},\")\":{\"docs\":{},\"函\":{\"docs\":{},\"数\":{\"docs\":{},\"配\":{\"docs\":{},\"套\":{\"docs\":{},\"使\":{\"docs\":{},\"用\":{\"docs\":{},\"。\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"些\":{\"docs\":{},\"查\":{\"docs\":{},\"询\":{\"docs\":{},\"通\":{\"docs\":{},\"常\":{\"docs\":{},\"用\":{\"docs\":{},\"于\":{\"docs\":{},\"结\":{\"docs\":{},\"构\":{\"docs\":{},\"化\":{\"docs\":{},\"数\":{\"docs\":{},\"据\":{\"docs\":{},\"，\":{\"docs\":{},\"如\":{\"docs\":{},\"数\":{\"docs\":{},\"字\":{\"docs\":{},\"、\":{\"docs\":{},\"日\":{\"docs\":{},\"期\":{\"docs\":{},\"和\":{\"docs\":{},\"枚\":{\"docs\":{},\"举\":{\"docs\":{},\"，\":{\"docs\":{},\"而\":{\"docs\":{},\"不\":{\"docs\":{},\"是\":{\"docs\":{},\"全\":{\"docs\":{},\"文\":{\"docs\":{},\"字\":{\"docs\":{},\"段\":{\"docs\":{},\"。\":{\"docs\":{},\"或\":{\"docs\":{},\"者\":{\"docs\":{},\"，\":{\"docs\":{},\"在\":{\"docs\":{},\"分\":{\"docs\":{},\"析\":{\"docs\":{},\"过\":{\"docs\":{},\"程\":{\"docs\":{},\"之\":{\"docs\":{},\"前\":{\"docs\":{},\"，\":{\"docs\":{},\"它\":{\"docs\":{},\"允\":{\"docs\":{},\"许\":{\"docs\":{},\"你\":{\"docs\":{},\"绘\":{\"docs\":{},\"制\":{\"docs\":{},\"低\":{\"docs\":{},\"级\":{\"docs\":{},\"查\":{\"docs\":{},\"询\":{\"docs\":{},\"。\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"是\":{\"docs\":{},\"一\":{\"docs\":{},\"个\":{\"docs\":{},\"包\":{\"docs\":{},\"装\":{\"docs\":{},\"其\":{\"docs\":{},\"他\":{\"docs\":{},\"查\":{\"docs\":{},\"询\":{\"docs\":{},\"的\":{\"docs\":{},\"查\":{\"docs\":{},\"询\":{\"docs\":{},\"，\":{\"docs\":{},\"并\":{\"docs\":{},\"且\":{\"docs\":{},\"在\":{\"docs\":{},\"过\":{\"docs\":{},\"滤\":{\"docs\":{},\"器\":{\"docs\":{},\"上\":{\"docs\":{},\"下\":{\"docs\":{},\"文\":{\"docs\":{},\"中\":{\"docs\":{},\"执\":{\"docs\":{},\"行\":{\"docs\":{},\"。\":{\"docs\":{},\"与\":{\"docs\":{},\"此\":{\"docs\":{},\"查\":{\"docs\":{},\"询\":{\"docs\":{},\"匹\":{\"docs\":{},\"配\":{\"docs\":{},\"的\":{\"docs\":{},\"所\":{\"docs\":{},\"有\":{\"docs\":{},\"文\":{\"docs\":{},\"件\":{\"docs\":{},\"都\":{\"docs\":{},\"需\":{\"docs\":{},\"要\":{\"docs\":{},\"返\":{\"docs\":{},\"回\":{\"docs\":{},\"相\":{\"docs\":{},\"同\":{\"docs\":{},\"的\":{\"docs\":{},\"“\":{\"docs\":{},\"常\":{\"docs\":{},\"量\":{\"docs\":{},\"”\":{\"docs\":{\"query-dsl/compound-queries.html\":{\"ref\":\"query-dsl/compound-queries.html\",\"tf\":0.005847953216374269}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"个\":{\"docs\":{},\"查\":{\"docs\":{},\"询\":{\"docs\":{},\"能\":{\"docs\":{},\"检\":{\"docs\":{},\"索\":{\"docs\":{},\"到\":{\"docs\":{},\"与\":{\"docs\":{},\"指\":{\"docs\":{},\"定\":{\"docs\":{},\"文\":{\"docs\":{},\"本\":{\"docs\":{},\"、\":{\"docs\":{},\"文\":{\"docs\":{},\"档\":{\"docs\":{},\"或\":{\"docs\":{},\"者\":{\"docs\":{},\"文\":{\"docs\":{},\"档\":{\"docs\":{},\"集\":{\"docs\":{},\"合\":{\"docs\":{},\"相\":{\"docs\":{},\"似\":{\"docs\":{},\"的\":{\"docs\":{},\"文\":{\"docs\":{},\"档\":{\"docs\":{},\"。\":{\"docs\":{\"query-dsl/specialized-queries.html\":{\"ref\":\"query-dsl/specialized-queries.html\",\"tf\":0.004761904761904762}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"集\":{\"docs\":{},\"群\":{\"docs\":{},\"名\":{\"docs\":{\"document-apis/index-api.html\":{\"ref\":\"document-apis/index-api.html\",\"tf\":0.002066115702479339}}}}},\"文\":{\"docs\":{},\"档\":{\"docs\":{\"document-apis/get-api.html\":{\"ref\":\"document-apis/get-api.html\",\"tf\":0.034482758620689655},\"document-apis/delete-api.html\":{\"ref\":\"document-apis/delete-api.html\",\"tf\":0.02631578947368421},\"document-apis/multi-get-api.html\":{\"ref\":\"document-apis/multi-get-api.html\",\"tf\":0.021739130434782608},\"search-api.html\":{\"ref\":\"search-api.html\",\"tf\":0.017241379310344827},\"search-api/multisearch-api.html\":{\"ref\":\"search-api/multisearch-api.html\",\"tf\":0.019230769230769232},\"search-api/search-template.html\":{\"ref\":\"search-api/search-template.html\",\"tf\":0.0055248618784530384}},\"中\":{\"docs\":{},\"可\":{\"docs\":{},\"能\":{\"docs\":{},\"包\":{\"docs\":{},\"含\":{\"docs\":{},\"嵌\":{\"docs\":{},\"套\":{\"docs\":{},\"类\":{\"docs\":{},\"型\":{\"docs\":{},\"的\":{\"docs\":{},\"字\":{\"docs\":{},\"段\":{\"docs\":{},\"，\":{\"docs\":{},\"这\":{\"docs\":{},\"些\":{\"docs\":{},\"字\":{\"docs\":{},\"段\":{\"docs\":{},\"用\":{\"docs\":{},\"来\":{\"docs\":{},\"索\":{\"docs\":{},\"引\":{\"docs\":{},\"一\":{\"docs\":{},\"些\":{\"docs\":{},\"数\":{\"docs\":{},\"组\":{\"docs\":{},\"对\":{\"docs\":{},\"象\":{\"docs\":{},\"，\":{\"docs\":{},\"每\":{\"docs\":{},\"个\":{\"docs\":{},\"对\":{\"docs\":{},\"象\":{\"docs\":{},\"都\":{\"docs\":{},\"可\":{\"docs\":{},\"以\":{\"docs\":{},\"作\":{\"docs\":{},\"为\":{\"docs\":{},\"一\":{\"docs\":{},\"条\":{\"docs\":{},\"独\":{\"docs\":{},\"立\":{\"docs\":{},\"的\":{\"docs\":{},\"文\":{\"docs\":{},\"档\":{\"docs\":{},\"被\":{\"docs\":{},\"查\":{\"docs\":{},\"询\":{\"docs\":{},\"出\":{\"docs\":{},\"来\":{\"docs\":{},\"(\":{\"docs\":{},\"用\":{\"docs\":{},\"嵌\":{\"docs\":{},\"套\":{\"docs\":{},\"查\":{\"docs\":{},\"询\":{\"docs\":{},\")\":{\"docs\":{\"query-dsl/joining-queries.html\":{\"ref\":\"query-dsl/joining-queries.html\",\"tf\":0.007194244604316547}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"是\":{\"docs\":{},\"在\":{\"docs\":{},\"不\":{\"docs\":{},\"同\":{\"docs\":{},\"的\":{\"docs\":{},\"线\":{\"docs\":{},\"程\":{\"docs\":{},\"里\":{\"docs\":{},\"执\":{\"docs\":{},\"行\":{\"docs\":{},\"此\":{\"docs\":{},\"次\":{\"docs\":{},\"操\":{\"docs\":{},\"作\":{\"docs\":{\"document-apis/get-api.html\":{\"ref\":\"document-apis/get-api.html\",\"tf\":0.034482758620689655},\"document-apis/delete-api.html\":{\"ref\":\"document-apis/delete-api.html\",\"tf\":0.02631578947368421}}}}}}}}}}}}}}},\"内\":{\"docs\":{},\"联\":{\"docs\":{},\"传\":{\"docs\":{},\"递\":{\"docs\":{},\"的\":{\"docs\":{\"search-api/search-template.html\":{\"ref\":\"search-api/search-template.html\",\"tf\":0.0055248618784530384}}}}}}},\"子\":{\"docs\":{},\"类\":{\"docs\":{},\"型\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}},\"聚\":{\"docs\":{},\"合\":{\"docs\":{},\"名\":{\"docs\":{},\"，\":{\"docs\":{},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"s\":{\"docs\":{},\"e\":{\"docs\":{},\"l\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}}}}}}}},\"一\":{\"docs\":{},\"种\":{\"docs\":{},\"适\":{\"docs\":{},\"合\":{\"docs\":{},\"直\":{\"docs\":{},\"接\":{\"docs\":{},\"暴\":{\"docs\":{},\"露\":{\"docs\":{},\"给\":{\"docs\":{},\"用\":{\"docs\":{},\"户\":{\"docs\":{},\"的\":{\"docs\":{},\"简\":{\"docs\":{},\"单\":{\"docs\":{},\"的\":{\"docs\":{},\"且\":{\"docs\":{},\"具\":{\"docs\":{},\"有\":{\"docs\":{},\"非\":{\"docs\":{},\"常\":{\"docs\":{},\"完\":{\"docs\":{},\"善\":{\"docs\":{},\"的\":{\"docs\":{},\"查\":{\"docs\":{},\"询\":{\"docs\":{},\"语\":{\"docs\":{},\"法\":{\"docs\":{},\"的\":{\"docs\":{},\"查\":{\"docs\":{},\"询\":{\"docs\":{},\"语\":{\"docs\":{},\"句\":{\"docs\":{\"query-dsl/full-text-queries.html\":{\"ref\":\"query-dsl/full-text-queries.html\",\"tf\":0.011904761904761904}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"可\":{\"docs\":{},\"选\":{\"docs\":{},\"择\":{\"docs\":{},\"的\":{\"docs\":{},\"，\":{\"docs\":{},\"可\":{\"docs\":{},\"以\":{\"docs\":{},\"不\":{\"docs\":{},\"写\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125}}}}}}}}}}}},\"配\":{\"docs\":{},\"置\":{\"docs\":{},\"线\":{\"docs\":{},\"程\":{\"docs\":{\"document-apis/get-api.html\":{\"ref\":\"document-apis/get-api.html\",\"tf\":0.034482758620689655},\"document-apis/delete-api.html\":{\"ref\":\"document-apis/delete-api.html\",\"tf\":0.02631578947368421}}}}}},\"：\":{\"docs\":{\"document-apis/get-api.html\":{\"ref\":\"document-apis/get-api.html\",\"tf\":0.034482758620689655},\"document-apis/delete-api.html\":{\"ref\":\"document-apis/delete-api.html\",\"tf\":0.02631578947368421},\"search-api/search-template.html\":{\"ref\":\"search-api/search-template.html\",\"tf\":0.0055248618784530384}}},\"根\":{\"docs\":{},\"据\":{\"docs\":{},\"i\":{\"docs\":{},\"d\":{\"docs\":{},\"删\":{\"docs\":{},\"除\":{\"docs\":{},\"：\":{\"docs\":{\"document-apis/delete-api.html\":{\"ref\":\"document-apis/delete-api.html\",\"tf\":0.02631578947368421}}}}}}}}},\"q\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"i\":{\"docs\":{\"document-apis/delete-by-query-api.html\":{\"ref\":\"document-apis/delete-by-query-api.html\",\"tf\":3.3518518518518516},\"search-api.html\":{\"ref\":\"search-api.html\",\"tf\":0.034482758620689655},\"search-api/multisearch-api.html\":{\"ref\":\"search-api/multisearch-api.html\",\"tf\":0.019230769230769232},\"aggregations.html\":{\"ref\":\"aggregations.html\",\"tf\":0.038461538461538464},\"query-dsl.html\":{\"ref\":\"query-dsl.html\",\"tf\":5.086956521739131},\"query-dsl/match-all-query.html\":{\"ref\":\"query-dsl/match-all-query.html\",\"tf\":5.2},\"query-dsl/full-text-queries.html\":{\"ref\":\"query-dsl/full-text-queries.html\",\"tf\":3.4166666666666665},\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":3.3764600179694515},\"query-dsl/compound-queries.html\":{\"ref\":\"query-dsl/compound-queries.html\",\"tf\":5.064327485380117},\"query-dsl/joining-queries.html\":{\"ref\":\"query-dsl/joining-queries.html\",\"tf\":5.0503597122302155},\"query-dsl/geo-queries.html\":{\"ref\":\"query-dsl/geo-queries.html\",\"tf\":5.029411764705882},\"query-dsl/specialized-queries.html\":{\"ref\":\"query-dsl/specialized-queries.html\",\"tf\":5.071428571428571},\"query-dsl/span-queries.html\":{\"ref\":\"query-dsl/span-queries.html\",\"tf\":5.088888888888889}}},\"y\":{\"docs\":{},\"b\":{\"docs\":{},\"u\":{\"docs\":{},\"i\":{\"docs\":{},\"l\":{\"docs\":{},\"d\":{\"docs\":{\"search-api/using-scrolls-in-java.html\":{\"ref\":\"search-api/using-scrolls-in-java.html\",\"tf\":0.00546448087431694},\"query-dsl/match-all-query.html\":{\"ref\":\"query-dsl/match-all-query.html\",\"tf\":0.1},\"query-dsl/full-text-queries.html\":{\"ref\":\"query-dsl/full-text-queries.html\",\"tf\":0.05952380952380952},\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.03504043126684636},\"query-dsl/compound-queries.html\":{\"ref\":\"query-dsl/compound-queries.html\",\"tf\":0.04093567251461988},\"query-dsl/joining-queries.html\":{\"ref\":\"query-dsl/joining-queries.html\",\"tf\":0.02158273381294964},\"query-dsl/geo-queries.html\":{\"ref\":\"query-dsl/geo-queries.html\",\"tf\":0.024509803921568627},\"query-dsl/specialized-queries.html\":{\"ref\":\"query-dsl/specialized-queries.html\",\"tf\":0.01904761904761905},\"query-dsl/span-queries.html\":{\"ref\":\"query-dsl/span-queries.html\",\"tf\":0.044444444444444446}},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"s\":{\"docs\":{},\".\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"m\":{\"docs\":{},\"q\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"y\":{\"docs\":{},\"(\":{\"docs\":{},\"\\\"\":{\"docs\":{},\"g\":{\"docs\":{},\"e\":{\"docs\":{},\"n\":{\"docs\":{},\"d\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"\\\"\":{\"docs\":{},\",\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0024793388429752068}}}}}}}}}}}}}}}}}}}}},\"e\":{\"docs\":{},\"x\":{\"docs\":{},\"i\":{\"docs\":{},\"s\":{\"docs\":{},\"t\":{\"docs\":{},\"s\":{\"docs\":{},\"q\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"y\":{\"docs\":{},\"(\":{\"docs\":{},\"\\\"\":{\"docs\":{},\"n\":{\"docs\":{},\"a\":{\"docs\":{},\"m\":{\"docs\":{},\"e\":{\"docs\":{},\"\\\"\":{\"docs\":{},\")\":{\"docs\":{},\";\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125}}}}}}}}}}}}}}}}}}}}}},\"r\":{\"docs\":{},\"a\":{\"docs\":{},\"n\":{\"docs\":{},\"g\":{\"docs\":{},\"e\":{\"docs\":{},\"q\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"y\":{\"docs\":{},\"(\":{\"docs\":{},\"\\\"\":{\"docs\":{},\"a\":{\"docs\":{},\"g\":{\"docs\":{},\"e\":{\"docs\":{},\"\\\"\":{\"docs\":{},\")\":{\"docs\":{},\".\":{\"docs\":{},\"g\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"(\":{\"1\":{\"9\":{\"docs\":{},\")\":{\"docs\":{},\".\":{\"docs\":{},\"l\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"(\":{\"2\":{\"1\":{\"docs\":{},\")\":{\"docs\":{},\";\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.005390835579514825}}}}},\"docs\":{}},\"docs\":{}}}}}}}},\"docs\":{}},\"docs\":{}}}}}},\";\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125}}}}}}}}}}}}}}}}}}},\"e\":{\"docs\":{},\"g\":{\"docs\":{},\"e\":{\"docs\":{},\"x\":{\"docs\":{},\"p\":{\"docs\":{},\"q\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"y\":{\"docs\":{},\"(\":{\"docs\":{},\"\\\"\":{\"docs\":{},\"c\":{\"docs\":{},\"o\":{\"docs\":{},\"u\":{\"docs\":{},\"n\":{\"docs\":{},\"t\":{\"docs\":{},\"r\":{\"docs\":{},\"y\":{\"docs\":{},\"\\\"\":{\"docs\":{},\",\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125}}}}}}}}}}}}}}}}}}}}}}}},\"w\":{\"docs\":{},\"i\":{\"docs\":{},\"l\":{\"docs\":{},\"d\":{\"docs\":{},\"c\":{\"docs\":{},\"a\":{\"docs\":{},\"r\":{\"docs\":{},\"d\":{\"docs\":{},\"q\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"y\":{\"docs\":{},\"(\":{\"docs\":{},\"\\\"\":{\"docs\":{},\"c\":{\"docs\":{},\"o\":{\"docs\":{},\"u\":{\"docs\":{},\"n\":{\"docs\":{},\"t\":{\"docs\":{},\"r\":{\"docs\":{},\"y\":{\"docs\":{},\"\\\"\":{\"docs\":{},\",\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125}}}}}}}}}}}}}}}}}}}}}}}}}},\"f\":{\"docs\":{},\"u\":{\"docs\":{},\"n\":{\"docs\":{},\"c\":{\"docs\":{},\"t\":{\"docs\":{},\"i\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{},\"s\":{\"docs\":{},\"c\":{\"docs\":{},\"o\":{\"docs\":{},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"q\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"y\":{\"docs\":{},\"(\":{\"docs\":{},\"f\":{\"docs\":{},\"u\":{\"docs\":{},\"n\":{\"docs\":{},\"c\":{\"docs\":{},\"t\":{\"docs\":{},\"i\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{},\"s\":{\"docs\":{},\")\":{\"docs\":{},\";\":{\"docs\":{\"query-dsl/compound-queries.html\":{\"ref\":\"query-dsl/compound-queries.html\",\"tf\":0.005847953216374269}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"。\":{\"docs\":{\"query-dsl.html\":{\"ref\":\"query-dsl.html\",\"tf\":0.043478260869565216}}}},\"可\":{\"docs\":{},\"以\":{\"docs\":{},\"用\":{\"docs\":{},\"于\":{\"docs\":{},\"接\":{\"docs\":{},\"受\":{\"docs\":{},\"任\":{\"docs\":{},\"何\":{\"docs\":{},\"查\":{\"docs\":{},\"询\":{\"docs\":{},\"a\":{\"docs\":{},\"p\":{\"docs\":{},\"i\":{\"docs\":{},\"，\":{\"docs\":{},\"如\":{\"docs\":{},\"c\":{\"docs\":{},\"o\":{\"docs\":{},\"u\":{\"docs\":{},\"n\":{\"docs\":{},\"t\":{\"docs\":{},\"和\":{\"docs\":{},\"s\":{\"docs\":{},\"e\":{\"docs\":{},\"a\":{\"docs\":{},\"r\":{\"docs\":{},\"c\":{\"docs\":{},\"h\":{\"docs\":{},\"。\":{\"docs\":{\"query-dsl.html\":{\"ref\":\"query-dsl.html\",\"tf\":0.043478260869565216}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"s\":{\"docs\":{},\"t\":{\"docs\":{},\"r\":{\"docs\":{},\"i\":{\"docs\":{},\"n\":{\"docs\":{},\"g\":{\"docs\":{},\"q\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"y\":{\"docs\":{},\"(\":{\"docs\":{},\"\\\"\":{\"docs\":{},\"+\":{\"docs\":{},\"k\":{\"docs\":{},\"i\":{\"docs\":{},\"m\":{\"docs\":{},\"c\":{\"docs\":{},\"h\":{\"docs\":{},\"i\":{\"docs\":{\"query-dsl/full-text-queries.html\":{\"ref\":\"query-dsl/full-text-queries.html\",\"tf\":0.011904761904761904}}}}}}}}}}}}}}}}}}}}}},\"）\":{\"docs\":{\"query-dsl/full-text-queries.html\":{\"ref\":\"query-dsl/full-text-queries.html\",\"tf\":0.047619047619047616}}},\"（\":{\"docs\":{},\"i\":{\"docs\":{},\"d\":{\"docs\":{},\"查\":{\"docs\":{},\"询\":{\"docs\":{},\"）\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125}}}}}}},\"前\":{\"docs\":{},\"缀\":{\"docs\":{},\"查\":{\"docs\":{},\"询\":{\"docs\":{},\"）\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125}}}}}}},\"多\":{\"docs\":{},\"项\":{\"docs\":{},\"查\":{\"docs\":{},\"询\":{\"docs\":{},\"）\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125}}}}}}},\"存\":{\"docs\":{},\"在\":{\"docs\":{},\"查\":{\"docs\":{},\"询\":{\"docs\":{},\"）\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125}}}}}}},\"模\":{\"docs\":{},\"糊\":{\"docs\":{},\"查\":{\"docs\":{},\"询\":{\"docs\":{},\"）\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125}}}}}}},\"正\":{\"docs\":{},\"则\":{\"docs\":{},\"表\":{\"docs\":{},\"达\":{\"docs\":{},\"式\":{\"docs\":{},\"查\":{\"docs\":{},\"询\":{\"docs\":{},\"）\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125}}}}}}}}}},\"类\":{\"docs\":{},\"型\":{\"docs\":{},\"查\":{\"docs\":{},\"询\":{\"docs\":{},\"）\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125}}}}}}},\"范\":{\"docs\":{},\"围\":{\"docs\":{},\"查\":{\"docs\":{},\"询\":{\"docs\":{},\"）\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125}}}}}}},\"通\":{\"docs\":{},\"配\":{\"docs\":{},\"符\":{\"docs\":{},\"查\":{\"docs\":{},\"询\":{\"docs\":{},\"）\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125}}}}}}}},\"项\":{\"docs\":{},\"查\":{\"docs\":{},\"询\":{\"docs\":{},\"）\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125}}}}}}},\"(\":{\"docs\":{},\"相\":{\"docs\":{},\"似\":{\"docs\":{},\"度\":{\"docs\":{},\"查\":{\"docs\":{},\"询\":{\"docs\":{},\")\":{\"docs\":{\"query-dsl/specialized-queries.html\":{\"ref\":\"query-dsl/specialized-queries.html\",\"tf\":0.004761904761904762}}}}}}}}}}}},\"a\":{\"docs\":{},\"l\":{\"docs\":{},\"i\":{\"docs\":{},\"f\":{\"docs\":{},\"i\":{\"docs\":{},\"e\":{\"docs\":{},\"d\":{\"docs\":{},\"）\":{\"docs\":{},\"。\":{\"docs\":{\"query-dsl/joining-queries.html\":{\"ref\":\"query-dsl/joining-queries.html\",\"tf\":0.007194244604316547}}}}}}}}}}}},\"b\":{\"docs\":{\"search-api/using-scrolls-in-java.html\":{\"ref\":\"search-api/using-scrolls-in-java.html\",\"tf\":0.00546448087431694},\"query-dsl/match-all-query.html\":{\"ref\":\"query-dsl/match-all-query.html\",\"tf\":0.1},\"query-dsl/full-text-queries.html\":{\"ref\":\"query-dsl/full-text-queries.html\",\"tf\":0.05952380952380952},\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.029649595687331536},\"query-dsl/compound-queries.html\":{\"ref\":\"query-dsl/compound-queries.html\",\"tf\":0.04093567251461988},\"query-dsl/joining-queries.html\":{\"ref\":\"query-dsl/joining-queries.html\",\"tf\":0.02158273381294964},\"query-dsl/geo-queries.html\":{\"ref\":\"query-dsl/geo-queries.html\",\"tf\":0.024509803921568627},\"query-dsl/specialized-queries.html\":{\"ref\":\"query-dsl/specialized-queries.html\",\"tf\":0.01904761904761905},\"query-dsl/span-queries.html\":{\"ref\":\"query-dsl/span-queries.html\",\"tf\":0.044444444444444446}},\")\":{\"docs\":{\"query-dsl/specialized-queries.html\":{\"ref\":\"query-dsl/specialized-queries.html\",\"tf\":0.004761904761904762}}}}},\"通\":{\"docs\":{},\"过\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}},\"查\":{\"docs\":{},\"询\":{\"docs\":{},\"条\":{\"docs\":{},\"件\":{\"docs\":{},\"删\":{\"docs\":{},\"除\":{\"docs\":{\"document-apis/delete-by-query-api.html\":{\"ref\":\"document-apis/delete-by-query-api.html\",\"tf\":0.018518518518518517}}}}}}}}}},\",\":{\"docs\":{},\"s\":{\"docs\":{},\"c\":{\"docs\":{},\"r\":{\"docs\":{},\"i\":{\"docs\":{},\"p\":{\"docs\":{},\"t\":{\"docs\":{},\"s\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"v\":{\"docs\":{},\"i\":{\"docs\":{},\"c\":{\"docs\":{},\"e\":{\"docs\":{},\".\":{\"docs\":{},\"s\":{\"docs\":{},\"c\":{\"docs\":{},\"r\":{\"docs\":{},\"i\":{\"docs\":{},\"p\":{\"docs\":{},\"t\":{\"docs\":{},\"t\":{\"docs\":{},\"y\":{\"docs\":{},\"p\":{\"docs\":{},\"e\":{\"docs\":{},\".\":{\"docs\":{},\"i\":{\"docs\":{},\"n\":{\"docs\":{},\"l\":{\"docs\":{},\"i\":{\"docs\":{},\"n\":{\"docs\":{},\"e\":{\"docs\":{},\",\":{\"docs\":{\"document-apis/update-api.html\":{\"ref\":\"document-apis/update-api.html\",\"tf\":0.007407407407407408}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\":\":{\"docs\":{\"document-apis/update-api.html\":{\"ref\":\"document-apis/update-api.html\",\"tf\":0.014814814814814815},\"document-apis/multi-get-api.html\":{\"ref\":\"document-apis/multi-get-api.html\",\"tf\":0.021739130434782608},\"search-api/using-scrolls-in-java.html\":{\"ref\":\"search-api/using-scrolls-in-java.html\",\"tf\":0.00546448087431694},\"search-api/multisearch-api.html\":{\"ref\":\"search-api/multisearch-api.html\",\"tf\":0.019230769230769232},\"search-api/search-template.html\":{\"ref\":\"search-api/search-template.html\",\"tf\":0.049723756906077346},\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00583941605839416},\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.00909090909090909},\"query-dsl/specialized-queries.html\":{\"ref\":\"query-dsl/specialized-queries.html\",\"tf\":0.004761904761904762}},\"范\":{\"docs\":{},\"围\":{\"docs\":{},\"查\":{\"docs\":{},\"询\":{\"docs\":{},\"将\":{\"docs\":{},\"匹\":{\"docs\":{},\"配\":{\"docs\":{},\"字\":{\"docs\":{},\"段\":{\"docs\":{},\"值\":{\"docs\":{},\"大\":{\"docs\":{},\"于\":{\"docs\":{},\"或\":{\"docs\":{},\"等\":{\"docs\":{},\"于\":{\"docs\":{},\"此\":{\"docs\":{},\"参\":{\"docs\":{},\"数\":{\"docs\":{},\"值\":{\"docs\":{},\"的\":{\"docs\":{},\"文\":{\"docs\":{},\"档\":{\"docs\":{},\"。\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125}}}}}}}}}}}}},\"此\":{\"docs\":{},\"参\":{\"docs\":{},\"数\":{\"docs\":{},\"值\":{\"docs\":{},\"的\":{\"docs\":{},\"文\":{\"docs\":{},\"档\":{\"docs\":{},\"。\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125}}}}}}}}}}}},\"小\":{\"docs\":{},\"于\":{\"docs\":{},\"或\":{\"docs\":{},\"等\":{\"docs\":{},\"于\":{\"docs\":{},\"此\":{\"docs\":{},\"参\":{\"docs\":{},\"数\":{\"docs\":{},\"值\":{\"docs\":{},\"的\":{\"docs\":{},\"文\":{\"docs\":{},\"档\":{\"docs\":{},\"。\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125}}}}}}}}}}}}},\"此\":{\"docs\":{},\"参\":{\"docs\":{},\"数\":{\"docs\":{},\"值\":{\"docs\":{},\"的\":{\"docs\":{},\"文\":{\"docs\":{},\"档\":{\"docs\":{},\"。\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125}}}}}}}}}}}}}}}}}}}}}}},\"\\\\\":{\"docs\":{},\"\\\"\":{\"docs\":{},\"m\":{\"docs\":{},\"a\":{\"docs\":{},\"l\":{\"docs\":{},\"e\":{\"docs\":{},\"\\\\\":{\"docs\":{},\"\\\"\":{\"docs\":{},\"\\\"\":{\"docs\":{\"document-apis/update-api.html\":{\"ref\":\"document-apis/update-api.html\",\"tf\":0.007407407407407408}},\")\":{\"docs\":{},\")\":{\"docs\":{},\";\":{\"docs\":{\"document-apis/update-api.html\":{\"ref\":\"document-apis/update-api.html\",\"tf\":0.007407407407407408}}}}}}}}}},\"t\":{\"docs\":{},\"c\":{\"docs\":{},\"h\":{\"docs\":{},\"\\\\\":{\"docs\":{},\"\\\"\":{\"docs\":{\"search-api/search-template.html\":{\"ref\":\"search-api/search-template.html\",\"tf\":0.011049723756906077}}}}}}}}},\"\\\\\":{\"docs\":{},\"\\\"\":{\"docs\":{},\"\\\\\":{\"docs\":{},\"n\":{\"docs\":{},\"\\\"\":{\"docs\":{\"search-api/search-template.html\":{\"ref\":\"search-api/search-template.html\",\"tf\":0.011049723756906077}}}}}}},\"g\":{\"docs\":{},\"e\":{\"docs\":{},\"n\":{\"docs\":{},\"d\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"\\\\\":{\"docs\":{},\"\\\"\":{\"docs\":{\"search-api/search-template.html\":{\"ref\":\"search-api/search-template.html\",\"tf\":0.011049723756906077}}}}}}}}}},\"q\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"y\":{\"docs\":{},\"\\\\\":{\"docs\":{},\"\\\"\":{\"docs\":{\"search-api/search-template.html\":{\"ref\":\"search-api/search-template.html\",\"tf\":0.011049723756906077}}}}}}}}}}},\"`\":{\"docs\":{},\"i\":{\"docs\":{},\"n\":{\"docs\":{},\"d\":{\"docs\":{},\"e\":{\"docs\":{},\"x\":{\"docs\":{},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"q\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"docs\":{},\"s\":{\"docs\":{},\"t\":{\"docs\":{},\"`\":{\"docs\":{\"document-apis/update-api.html\":{\"ref\":\"document-apis/update-api.html\",\"tf\":0.007407407407407408}}}}}}}}}}}}}}},\"`\":{\"docs\":{},\"`\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}},\"m\":{\"docs\":{},\"y\":{\"docs\":{},\"s\":{\"docs\":{},\"c\":{\"docs\":{},\"r\":{\"docs\":{},\"i\":{\"docs\":{},\"p\":{\"docs\":{},\"t\":{\"docs\":{},\".\":{\"docs\":{},\"p\":{\"docs\":{},\"a\":{\"docs\":{},\"i\":{\"docs\":{},\"n\":{\"docs\":{},\"l\":{\"docs\":{},\"e\":{\"docs\":{},\"s\":{\"docs\":{},\"s\":{\"docs\":{\"query-dsl/specialized-queries.html\":{\"ref\":\"query-dsl/specialized-queries.html\",\"tf\":0.004761904761904762}}}}}}}}}}}}}}}}}}}},\"u\":{\"docs\":{},\"p\":{\"docs\":{},\"d\":{\"docs\":{},\"a\":{\"docs\":{},\"t\":{\"docs\":{\"document-apis/update-api.html\":{\"ref\":\"document-apis/update-api.html\",\"tf\":5.022222222222222}},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"q\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"docs\":{},\"s\":{\"docs\":{},\"t\":{\"docs\":{\"document-apis/update-api.html\":{\"ref\":\"document-apis/update-api.html\",\"tf\":0.05925925925925926}},\"(\":{\"docs\":{},\"\\\"\":{\"docs\":{},\"i\":{\"docs\":{},\"n\":{\"docs\":{},\"d\":{\"docs\":{},\"e\":{\"docs\":{},\"x\":{\"docs\":{},\"\\\"\":{\"docs\":{},\",\":{\"docs\":{\"document-apis/update-api.html\":{\"ref\":\"document-apis/update-api.html\",\"tf\":0.014814814814814815}}}}}}}}},\"t\":{\"docs\":{},\"t\":{\"docs\":{},\"l\":{\"docs\":{},\"\\\"\":{\"docs\":{},\",\":{\"docs\":{\"document-apis/update-api.html\":{\"ref\":\"document-apis/update-api.html\",\"tf\":0.007407407407407408}}}}}}}},\")\":{\"docs\":{},\";\":{\"docs\":{\"document-apis/update-api.html\":{\"ref\":\"document-apis/update-api.html\",\"tf\":0.007407407407407408}}}}},\",\":{\"docs\":{},\"通\":{\"docs\":{},\"过\":{\"docs\":{},\"c\":{\"docs\":{},\"l\":{\"docs\":{},\"i\":{\"docs\":{},\"e\":{\"docs\":{},\"n\":{\"docs\":{},\"t\":{\"docs\":{},\"发\":{\"docs\":{},\"送\":{\"docs\":{},\"；\":{\"docs\":{\"document-apis/update-api.html\":{\"ref\":\"document-apis/update-api.html\",\"tf\":0.007407407407407408}}}}}}}}}}}}}},\".\":{\"docs\":{},\"d\":{\"docs\":{},\"o\":{\"docs\":{},\"c\":{\"docs\":{},\"(\":{\"docs\":{},\"j\":{\"docs\":{},\"s\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{},\"b\":{\"docs\":{},\"u\":{\"docs\":{},\"i\":{\"docs\":{},\"l\":{\"docs\":{},\"d\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"(\":{\"docs\":{},\")\":{\"docs\":{\"document-apis/update-api.html\":{\"ref\":\"document-apis/update-api.html\",\"tf\":0.007407407407407408}}}}}}}}}}}}}}}}}}},\"i\":{\"docs\":{},\"d\":{\"docs\":{},\"(\":{\"docs\":{},\"\\\"\":{\"1\":{\"docs\":{},\"\\\"\":{\"docs\":{},\")\":{\"docs\":{},\";\":{\"docs\":{\"document-apis/update-api.html\":{\"ref\":\"document-apis/update-api.html\",\"tf\":0.007407407407407408}}}}}},\"docs\":{}}}},\"n\":{\"docs\":{},\"d\":{\"docs\":{},\"e\":{\"docs\":{},\"x\":{\"docs\":{},\"(\":{\"docs\":{},\"\\\"\":{\"docs\":{},\"i\":{\"docs\":{},\"n\":{\"docs\":{},\"d\":{\"docs\":{},\"e\":{\"docs\":{},\"x\":{\"docs\":{},\"\\\"\":{\"docs\":{},\")\":{\"docs\":{},\";\":{\"docs\":{\"document-apis/update-api.html\":{\"ref\":\"document-apis/update-api.html\",\"tf\":0.007407407407407408}}}}}}}}}}}}}}}}},\"t\":{\"docs\":{},\"y\":{\"docs\":{},\"p\":{\"docs\":{},\"e\":{\"docs\":{},\"(\":{\"docs\":{},\"\\\"\":{\"docs\":{},\"t\":{\"docs\":{},\"y\":{\"docs\":{},\"p\":{\"docs\":{},\"e\":{\"docs\":{},\"\\\"\":{\"docs\":{},\")\":{\"docs\":{},\";\":{\"docs\":{\"document-apis/update-api.html\":{\"ref\":\"document-apis/update-api.html\",\"tf\":0.007407407407407408}}}}}}}}}}}}}}}}}}}}}}}}}}},\"s\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"t\":{\"docs\":{\"document-apis/update-api.html\":{\"ref\":\"document-apis/update-api.html\",\"tf\":0.007407407407407408}}}}}}},\"s\":{\"docs\":{\"document-apis/bulk-api.html\":{\"ref\":\"document-apis/bulk-api.html\",\"tf\":0.028985507246376812},\"document-apis/using-bulk-processor.html\":{\"ref\":\"document-apis/using-bulk-processor.html\",\"tf\":3.333333333333333},\"search-api/using-scrolls-in-java.html\":{\"ref\":\"search-api/using-scrolls-in-java.html\",\"tf\":3.3387978142076498},\"search-api/using-aggregations.html\":{\"ref\":\"search-api/using-aggregations.html\",\"tf\":5.029411764705882},\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125},\"query-dsl/compound-queries.html\":{\"ref\":\"query-dsl/compound-queries.html\",\"tf\":0.011695906432748537},\"query-dsl/geo-queries.html\":{\"ref\":\"query-dsl/geo-queries.html\",\"tf\":0.004901960784313725}},\"e\":{\"docs\":{},\"r\":{\"docs\":{\"search-api/using-scrolls-in-java.html\":{\"ref\":\"search-api/using-scrolls-in-java.html\",\"tf\":0.00546448087431694}}}}},\"n\":{\"docs\":{},\"t\":{\"docs\":{},\"i\":{\"docs\":{},\"l\":{\"docs\":{\"search-api/using-scrolls-in-java.html\":{\"ref\":\"search-api/using-scrolls-in-java.html\",\"tf\":0.00546448087431694}}}}},\"m\":{\"docs\":{},\"a\":{\"docs\":{},\"t\":{\"docs\":{},\"c\":{\"docs\":{},\"h\":{\"docs\":{\"query-dsl/span-queries.html\":{\"ref\":\"query-dsl/span-queries.html\",\"tf\":0.005555555555555556}}}}}}}}},\"创\":{\"docs\":{},\"建\":{\"docs\":{\"document-apis/update-api.html\":{\"ref\":\"document-apis/update-api.html\",\"tf\":0.007407407407407408}},\"b\":{\"docs\":{},\"u\":{\"docs\":{},\"l\":{\"docs\":{},\"k\":{\"docs\":{},\"p\":{\"docs\":{},\"r\":{\"docs\":{},\"o\":{\"docs\":{},\"c\":{\"docs\":{},\"e\":{\"docs\":{},\"s\":{\"docs\":{},\"s\":{\"docs\":{},\"o\":{\"docs\":{},\"r\":{\"docs\":{},\"实\":{\"docs\":{},\"例\":{\"docs\":{\"document-apis/using-bulk-processor.html\":{\"ref\":\"document-apis/using-bulk-processor.html\",\"tf\":0.006024096385542169}}}}}}}}}}}}}}}}},\"s\":{\"docs\":{},\"e\":{\"docs\":{},\"a\":{\"docs\":{},\"r\":{\"docs\":{},\"c\":{\"docs\":{},\"h\":{\"docs\":{\"search-api/search-template.html\":{\"ref\":\"search-api/search-template.html\",\"tf\":0.0055248618784530384}}}}}}}}}},\"合\":{\"docs\":{},\"并\":{\"docs\":{},\"文\":{\"docs\":{},\"档\":{\"docs\":{\"document-apis/update-api.html\":{\"ref\":\"document-apis/update-api.html\",\"tf\":0.007407407407407408}}}}}},\"存\":{\"docs\":{},\"在\":{\"docs\":{},\"，\":{\"docs\":{},\"类\":{\"docs\":{},\"似\":{\"docs\":{},\"下\":{\"docs\":{},\"面\":{\"docs\":{},\"的\":{\"docs\":{},\"文\":{\"docs\":{},\"档\":{\"docs\":{},\"：\":{\"docs\":{\"document-apis/update-api.html\":{\"ref\":\"document-apis/update-api.html\",\"tf\":0.007407407407407408}}}}}}}}}}}},\"储\":{\"docs\":{},\"在\":{\"docs\":{\"search-api/search-template.html\":{\"ref\":\"search-api/search-template.html\",\"tf\":0.016574585635359115}}}}},\"方\":{\"docs\":{},\"法\":{\"docs\":{\"document-apis/update-api.html\":{\"ref\":\"document-apis/update-api.html\",\"tf\":0.007407407407407408}},\"；\":{\"docs\":{\"document-apis/update-api.html\":{\"ref\":\"document-apis/update-api.html\",\"tf\":0.007407407407407408}}},\"关\":{\"docs\":{},\"闭\":{\"docs\":{},\"b\":{\"docs\":{},\"u\":{\"docs\":{},\"l\":{\"docs\":{},\"k\":{\"docs\":{},\"p\":{\"docs\":{},\"r\":{\"docs\":{},\"o\":{\"docs\":{},\"c\":{\"docs\":{},\"e\":{\"docs\":{},\"s\":{\"docs\":{},\"s\":{\"docs\":{},\"o\":{\"docs\":{},\"r\":{\"docs\":{},\":\":{\"docs\":{\"document-apis/using-bulk-processor.html\":{\"ref\":\"document-apis/using-bulk-processor.html\",\"tf\":0.006024096385542169}}}}}}}}}}}}}}}}}},\"：\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125}}}}},\"有\":{\"docs\":{},\"两\":{\"docs\":{},\"种\":{\"docs\":{},\"方\":{\"docs\":{},\"式\":{\"docs\":{},\"更\":{\"docs\":{},\"新\":{\"docs\":{},\"索\":{\"docs\":{},\"引\":{\"docs\":{},\"：\":{\"docs\":{\"document-apis/update-api.html\":{\"ref\":\"document-apis/update-api.html\",\"tf\":0.007407407407407408}}}}}}}}}}},\"兴\":{\"docs\":{},\"趣\":{\"docs\":{},\"可\":{\"docs\":{},\"以\":{\"docs\":{},\"自\":{\"docs\":{},\"己\":{\"docs\":{},\"参\":{\"docs\":{},\"考\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}}}}}}}}}},\"不\":{\"docs\":{},\"同\":{\"docs\":{},\"的\":{\"docs\":{},\"b\":{\"docs\":{},\"u\":{\"docs\":{},\"c\":{\"docs\":{},\"k\":{\"docs\":{},\"e\":{\"docs\":{},\"t\":{\"docs\":{},\"聚\":{\"docs\":{},\"合\":{\"docs\":{},\"器\":{\"docs\":{},\"，\":{\"docs\":{},\"每\":{\"docs\":{},\"个\":{\"docs\":{},\"具\":{\"docs\":{},\"有\":{\"docs\":{},\"不\":{\"docs\":{},\"同\":{\"docs\":{},\"的\":{\"docs\":{},\"“\":{\"docs\":{},\"b\":{\"docs\":{},\"u\":{\"docs\":{},\"c\":{\"docs\":{},\"k\":{\"docs\":{},\"e\":{\"docs\":{},\"t\":{\"docs\":{},\"i\":{\"docs\":{},\"n\":{\"docs\":{},\"g\":{\"docs\":{},\"”\":{\"docs\":{},\"策\":{\"docs\":{},\"略\":{\"docs\":{},\",\":{\"docs\":{},\"一\":{\"docs\":{},\"些\":{\"docs\":{},\"定\":{\"docs\":{},\"义\":{\"docs\":{},\"一\":{\"docs\":{},\"个\":{\"docs\":{},\"单\":{\"docs\":{},\"独\":{\"docs\":{},\"的\":{\"docs\":{},\"b\":{\"docs\":{},\"u\":{\"docs\":{},\"c\":{\"docs\":{},\"k\":{\"docs\":{},\"e\":{\"docs\":{},\"t\":{\"docs\":{},\"，\":{\"docs\":{},\"一\":{\"docs\":{},\"些\":{\"docs\":{},\"定\":{\"docs\":{},\"义\":{\"docs\":{},\"多\":{\"docs\":{},\"个\":{\"docs\":{},\"b\":{\"docs\":{},\"u\":{\"docs\":{},\"c\":{\"docs\":{},\"k\":{\"docs\":{},\"e\":{\"docs\":{},\"t\":{\"docs\":{},\"的\":{\"docs\":{},\"固\":{\"docs\":{},\"定\":{\"docs\":{},\"数\":{\"docs\":{},\"量\":{\"docs\":{},\"，\":{\"docs\":{},\"另\":{\"docs\":{},\"一\":{\"docs\":{},\"些\":{\"docs\":{},\"定\":{\"docs\":{},\"义\":{\"docs\":{},\"在\":{\"docs\":{},\"聚\":{\"docs\":{},\"合\":{\"docs\":{},\"过\":{\"docs\":{},\"程\":{\"docs\":{},\"中\":{\"docs\":{},\"动\":{\"docs\":{},\"态\":{\"docs\":{},\"创\":{\"docs\":{},\"建\":{\"docs\":{},\"b\":{\"docs\":{},\"u\":{\"docs\":{},\"c\":{\"docs\":{},\"k\":{\"docs\":{},\"e\":{\"docs\":{},\"t\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"字\":{\"docs\":{},\"段\":{\"docs\":{\"document-apis/multi-get-api.html\":{\"ref\":\"document-apis/multi-get-api.html\",\"tf\":0.021739130434782608},\"query-dsl/full-text-queries.html\":{\"ref\":\"query-dsl/full-text-queries.html\",\"tf\":0.023809523809523808}},\"来\":{\"docs\":{},\"代\":{\"docs\":{},\"替\":{\"docs\":{\"query-dsl/compound-queries.html\":{\"ref\":\"query-dsl/compound-queries.html\",\"tf\":0.005847953216374269}}}}}}},\")\":{\"docs\":{\"document-apis/bulk-api.html\":{\"ref\":\"document-apis/bulk-api.html\",\"tf\":0.028985507246376812},\"search-api/using-aggregations.html\":{\"ref\":\"search-api/using-aggregations.html\",\"tf\":0.058823529411764705},\"aggregations.html\":{\"ref\":\"aggregations.html\",\"tf\":0.07692307692307693},\"aggregations/structuring-aggregations.html\":{\"ref\":\"aggregations/structuring-aggregations.html\",\"tf\":0.05405405405405406},\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0024793388429752068},\"query-dsl/compound-queries.html\":{\"ref\":\"query-dsl/compound-queries.html\",\"tf\":0.005847953216374269}},\";\":{\"docs\":{\"document-apis/bulk-api.html\":{\"ref\":\"document-apis/bulk-api.html\",\"tf\":0.028985507246376812},\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00291970802919708},\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355},\"query-dsl/full-text-queries.html\":{\"ref\":\"query-dsl/full-text-queries.html\",\"tf\":0.023809523809523808},\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.008086253369272238},\"query-dsl/joining-queries.html\":{\"ref\":\"query-dsl/joining-queries.html\",\"tf\":0.02158273381294964},\"query-dsl/specialized-queries.html\":{\"ref\":\"query-dsl/specialized-queries.html\",\"tf\":0.009523809523809525},\"query-dsl/span-queries.html\":{\"ref\":\"query-dsl/span-queries.html\",\"tf\":0.016666666666666666}}},\".\":{\"docs\":{},\"n\":{\"docs\":{},\"o\":{\"docs\":{},\"m\":{\"docs\":{},\"a\":{\"docs\":{},\"t\":{\"docs\":{},\"c\":{\"docs\":{},\"h\":{\"docs\":{},\"q\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"y\":{\"docs\":{},\"(\":{\"docs\":{},\"\\\"\":{\"docs\":{},\"a\":{\"docs\":{},\"l\":{\"docs\":{},\"l\":{\"docs\":{},\"\\\"\":{\"docs\":{},\")\":{\"docs\":{},\";\":{\"docs\":{\"query-dsl/compound-queries.html\":{\"ref\":\"query-dsl/compound-queries.html\",\"tf\":0.005847953216374269}}}}}}}}},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"m\":{\"docs\":{},\"q\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"y\":{\"docs\":{},\"(\":{\"docs\":{},\"\\\"\":{\"docs\":{},\"t\":{\"docs\":{},\"a\":{\"docs\":{},\"g\":{\"docs\":{},\"\\\"\":{\"docs\":{},\",\":{\"docs\":{\"query-dsl/compound-queries.html\":{\"ref\":\"query-dsl/compound-queries.html\",\"tf\":0.005847953216374269}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"可\":{\"docs\":{},\"以\":{\"docs\":{},\"执\":{\"docs\":{},\"行\":{\"docs\":{},\"同\":{\"docs\":{},\"步\":{\"docs\":{},\"方\":{\"docs\":{},\"法\":{\"docs\":{\"document-apis/using-bulk-processor.html\":{\"ref\":\"document-apis/using-bulk-processor.html\",\"tf\":0.006024096385542169}}}}}}}},\"在\":{\"docs\":{},\"c\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{},\"f\":{\"docs\":{},\"i\":{\"docs\":{},\"g\":{\"docs\":{},\"/\":{\"docs\":{},\"s\":{\"docs\":{},\"c\":{\"docs\":{},\"r\":{\"docs\":{},\"i\":{\"docs\":{},\"p\":{\"docs\":{},\"t\":{\"docs\":{},\"s\":{\"docs\":{},\"中\":{\"docs\":{},\"使\":{\"docs\":{},\"用\":{\"docs\":{},\"存\":{\"docs\":{},\"储\":{\"docs\":{},\"的\":{\"docs\":{\"search-api/search-template.html\":{\"ref\":\"search-api/search-template.html\",\"tf\":0.0055248618784530384}}}}}}}}}}}}}}}}}}}}}}},\"提\":{\"docs\":{},\"供\":{\"docs\":{},\"百\":{\"docs\":{},\"分\":{\"docs\":{},\"位\":{\"docs\":{},\"数\":{\"docs\":{},\"，\":{\"docs\":{},\"而\":{\"docs\":{},\"不\":{\"docs\":{},\"是\":{\"docs\":{},\"使\":{\"docs\":{},\"用\":{\"docs\":{},\"默\":{\"docs\":{},\"认\":{\"docs\":{},\"值\":{\"docs\":{},\"：\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}}}}}}}}}}}}}}}}}},\"对\":{\"docs\":{},\"一\":{\"docs\":{},\"些\":{\"docs\":{},\"比\":{\"docs\":{},\"较\":{\"docs\":{},\"专\":{\"docs\":{},\"业\":{\"docs\":{},\"的\":{\"docs\":{},\"偏\":{\"docs\":{},\"门\":{\"docs\":{},\"词\":{\"docs\":{},\"语\":{\"docs\":{},\"进\":{\"docs\":{},\"行\":{\"docs\":{},\"的\":{\"docs\":{},\"更\":{\"docs\":{},\"加\":{\"docs\":{},\"专\":{\"docs\":{},\"业\":{\"docs\":{},\"的\":{\"docs\":{},\"查\":{\"docs\":{},\"询\":{\"docs\":{\"query-dsl/full-text-queries.html\":{\"ref\":\"query-dsl/full-text-queries.html\",\"tf\":0.011904761904761904}}}}}}}}}}}}}}}}}}}}}}}},\"用\":{\"docs\":{},\"来\":{\"docs\":{},\"对\":{\"docs\":{},\"多\":{\"docs\":{},\"个\":{\"docs\":{},\"字\":{\"docs\":{},\"段\":{\"docs\":{},\"的\":{\"docs\":{},\"版\":{\"docs\":{},\"本\":{\"docs\":{},\"进\":{\"docs\":{},\"行\":{\"docs\":{},\"匹\":{\"docs\":{},\"配\":{\"docs\":{},\"查\":{\"docs\":{},\"询\":{\"docs\":{\"query-dsl/full-text-queries.html\":{\"ref\":\"query-dsl/full-text-queries.html\",\"tf\":0.011904761904761904}}}}}}}}}}}}}}}}}},\"使\":{\"docs\":{},\"用\":{\"docs\":{},\"星\":{\"docs\":{},\"号\":{\"docs\":{},\"代\":{\"docs\":{},\"替\":{\"0\":{\"docs\":{},\"个\":{\"docs\":{},\"或\":{\"docs\":{},\"多\":{\"docs\":{},\"个\":{\"docs\":{},\"字\":{\"docs\":{},\"符\":{\"docs\":{},\"，\":{\"docs\":{},\"使\":{\"docs\":{},\"用\":{\"docs\":{},\"问\":{\"docs\":{},\"号\":{\"docs\":{},\"代\":{\"docs\":{},\"替\":{\"docs\":{},\"一\":{\"docs\":{},\"个\":{\"docs\":{},\"字\":{\"docs\":{},\"符\":{\"docs\":{},\"。\":{\"docs\":{},\"星\":{\"docs\":{},\"号\":{\"docs\":{},\"表\":{\"docs\":{},\"示\":{\"docs\":{},\"匹\":{\"docs\":{},\"配\":{\"docs\":{},\"的\":{\"docs\":{},\"数\":{\"docs\":{},\"量\":{\"docs\":{},\"不\":{\"docs\":{},\"受\":{\"docs\":{},\"限\":{\"docs\":{},\"制\":{\"docs\":{},\"，\":{\"docs\":{},\"而\":{\"docs\":{},\"后\":{\"docs\":{},\"者\":{\"docs\":{},\"的\":{\"docs\":{},\"匹\":{\"docs\":{},\"配\":{\"docs\":{},\"字\":{\"docs\":{},\"符\":{\"docs\":{},\"数\":{\"docs\":{},\"则\":{\"docs\":{},\"受\":{\"docs\":{},\"到\":{\"docs\":{},\"限\":{\"docs\":{},\"制\":{\"docs\":{},\"。\":{\"docs\":{},\"这\":{\"docs\":{},\"个\":{\"docs\":{},\"技\":{\"docs\":{},\"巧\":{\"docs\":{},\"主\":{\"docs\":{},\"要\":{\"docs\":{},\"用\":{\"docs\":{},\"于\":{\"docs\":{},\"英\":{\"docs\":{},\"文\":{\"docs\":{},\"搜\":{\"docs\":{},\"索\":{\"docs\":{},\"中\":{\"docs\":{},\"，\":{\"docs\":{},\"如\":{\"docs\":{},\"输\":{\"docs\":{},\"入\":{\"docs\":{},\"“\":{\"docs\":{},\"“\":{\"docs\":{},\"c\":{\"docs\":{},\"o\":{\"docs\":{},\"m\":{\"docs\":{},\"p\":{\"docs\":{},\"u\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"*\":{\"docs\":{},\"”\":{\"docs\":{},\"，\":{\"docs\":{},\"就\":{\"docs\":{},\"可\":{\"docs\":{},\"以\":{\"docs\":{},\"找\":{\"docs\":{},\"到\":{\"docs\":{},\"“\":{\"docs\":{},\"c\":{\"docs\":{},\"o\":{\"docs\":{},\"m\":{\"docs\":{},\"p\":{\"docs\":{},\"u\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"、\":{\"docs\":{},\"c\":{\"docs\":{},\"o\":{\"docs\":{},\"m\":{\"docs\":{},\"p\":{\"docs\":{},\"u\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"s\":{\"docs\":{},\"、\":{\"docs\":{},\"c\":{\"docs\":{},\"o\":{\"docs\":{},\"m\":{\"docs\":{},\"p\":{\"docs\":{},\"u\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"i\":{\"docs\":{},\"s\":{\"docs\":{},\"e\":{\"docs\":{},\"d\":{\"docs\":{},\"、\":{\"docs\":{},\"c\":{\"docs\":{},\"o\":{\"docs\":{},\"m\":{\"docs\":{},\"p\":{\"docs\":{},\"u\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"i\":{\"docs\":{},\"z\":{\"docs\":{},\"e\":{\"docs\":{},\"d\":{\"docs\":{},\"”\":{\"docs\":{},\"等\":{\"docs\":{},\"单\":{\"docs\":{},\"词\":{\"docs\":{},\"，\":{\"docs\":{},\"而\":{\"docs\":{},\"输\":{\"docs\":{},\"入\":{\"docs\":{},\"“\":{\"docs\":{},\"c\":{\"docs\":{},\"o\":{\"docs\":{},\"m\":{\"docs\":{},\"p\":{\"docs\":{},\"?\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"”\":{\"docs\":{},\"，\":{\"docs\":{},\"则\":{\"docs\":{},\"只\":{\"docs\":{},\"能\":{\"docs\":{},\"找\":{\"docs\":{},\"到\":{\"docs\":{},\"“\":{\"docs\":{},\"c\":{\"docs\":{},\"o\":{\"docs\":{},\"m\":{\"docs\":{},\"p\":{\"docs\":{},\"u\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"、\":{\"docs\":{},\"c\":{\"docs\":{},\"o\":{\"docs\":{},\"m\":{\"docs\":{},\"p\":{\"docs\":{},\"a\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"、\":{\"docs\":{},\"c\":{\"docs\":{},\"o\":{\"docs\":{},\"m\":{\"docs\":{},\"p\":{\"docs\":{},\"e\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"”\":{\"docs\":{},\"等\":{\"docs\":{},\"单\":{\"docs\":{},\"词\":{\"docs\":{},\"。\":{\"docs\":{},\"注\":{\"docs\":{},\"意\":{\"docs\":{},\"的\":{\"docs\":{},\"是\":{\"docs\":{},\"通\":{\"docs\":{},\"配\":{\"docs\":{},\"符\":{\"docs\":{},\"查\":{\"docs\":{},\"询\":{\"docs\":{},\"不\":{\"docs\":{},\"太\":{\"docs\":{},\"注\":{\"docs\":{},\"重\":{\"docs\":{},\"性\":{\"docs\":{},\"能\":{\"docs\":{},\"，\":{\"docs\":{},\"在\":{\"docs\":{},\"可\":{\"docs\":{},\"能\":{\"docs\":{},\"时\":{\"docs\":{},\"尽\":{\"docs\":{},\"量\":{\"docs\":{},\"避\":{\"docs\":{},\"免\":{\"docs\":{},\"，\":{\"docs\":{},\"特\":{\"docs\":{},\"别\":{\"docs\":{},\"是\":{\"docs\":{},\"要\":{\"docs\":{},\"避\":{\"docs\":{},\"免\":{\"docs\":{},\"前\":{\"docs\":{},\"缀\":{\"docs\":{},\"通\":{\"docs\":{},\"配\":{\"docs\":{},\"符\":{\"docs\":{},\"（\":{\"docs\":{},\"以\":{\"docs\":{},\"通\":{\"docs\":{},\"配\":{\"docs\":{},\"符\":{\"docs\":{},\"开\":{\"docs\":{},\"始\":{\"docs\":{},\"的\":{\"docs\":{},\"词\":{\"docs\":{},\"条\":{\"docs\":{},\"）\":{\"docs\":{},\"。\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"docs\":{}}}}}}},\"是\":{\"docs\":{\"query-dsl/geo-queries.html\":{\"ref\":\"query-dsl/geo-queries.html\",\"tf\":0.004901960784313725}}}}},\"异\":{\"docs\":{},\"常\":{\"docs\":{},\"，\":{\"docs\":{},\"可\":{\"docs\":{},\"以\":{\"docs\":{},\"通\":{\"docs\":{},\"过\":{\"docs\":{},\"b\":{\"docs\":{},\"a\":{\"docs\":{},\"c\":{\"docs\":{},\"k\":{\"docs\":{},\"o\":{\"docs\":{},\"f\":{\"docs\":{},\"f\":{\"docs\":{},\"p\":{\"docs\":{},\"o\":{\"docs\":{},\"l\":{\"docs\":{},\"i\":{\"docs\":{},\"c\":{\"docs\":{},\"y\":{\"docs\":{},\".\":{\"docs\":{},\"n\":{\"docs\":{},\"o\":{\"docs\":{},\"b\":{\"docs\":{},\"a\":{\"docs\":{},\"c\":{\"docs\":{},\"k\":{\"docs\":{},\"o\":{\"docs\":{},\"f\":{\"docs\":{},\"f\":{\"docs\":{},\"(\":{\"docs\":{},\")\":{\"docs\":{},\"方\":{\"docs\":{},\"法\":{\"docs\":{},\"关\":{\"docs\":{},\"闭\":{\"docs\":{},\"重\":{\"docs\":{},\"试\":{\"docs\":{},\"机\":{\"docs\":{},\"制\":{\"docs\":{\"document-apis/using-bulk-processor.html\":{\"ref\":\"document-apis/using-bulk-processor.html\",\"tf\":0.006024096385542169}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"当\":{\"docs\":{},\"所\":{\"docs\":{},\"有\":{\"docs\":{},\"文\":{\"docs\":{},\"档\":{\"docs\":{},\"都\":{\"docs\":{},\"处\":{\"docs\":{},\"理\":{\"docs\":{},\"完\":{\"docs\":{},\"成\":{\"docs\":{},\"，\":{\"docs\":{},\"使\":{\"docs\":{},\"用\":{\"docs\":{},\"a\":{\"docs\":{},\"w\":{\"docs\":{},\"a\":{\"docs\":{},\"i\":{\"docs\":{},\"t\":{\"docs\":{},\"c\":{\"docs\":{},\"l\":{\"docs\":{},\"o\":{\"docs\":{},\"s\":{\"docs\":{\"document-apis/using-bulk-processor.html\":{\"ref\":\"document-apis/using-bulk-processor.html\",\"tf\":0.006024096385542169}}}}}}}}}}}}}}}}}}}}}}}},\"或\":{\"docs\":{\"document-apis/using-bulk-processor.html\":{\"ref\":\"document-apis/using-bulk-processor.html\",\"tf\":0.012048192771084338},\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355},\"query-dsl/geo-queries.html\":{\"ref\":\"query-dsl/geo-queries.html\",\"tf\":0.004901960784313725}},\"者\":{\"docs\":{\"query-dsl/span-queries.html\":{\"ref\":\"query-dsl/span-queries.html\",\"tf\":0.005555555555555556}},\"多\":{\"docs\":{},\"个\":{\"docs\":{},\"i\":{\"docs\":{},\"n\":{\"docs\":{},\"d\":{\"docs\":{},\"e\":{\"docs\":{},\"x\":{\"docs\":{\"search-api.html\":{\"ref\":\"search-api.html\",\"tf\":0.017241379310344827}}}}}}}}},\"把\":{\"docs\":{},\"时\":{\"docs\":{},\"间\":{\"docs\":{},\"间\":{\"docs\":{},\"隔\":{\"docs\":{},\"设\":{\"docs\":{},\"置\":{\"docs\":{},\"为\":{\"1\":{\"0\":{\"docs\":{},\"天\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}},\"docs\":{}},\"docs\":{}}}}}}}}}}},\"提\":{\"docs\":{},\"供\":{\"docs\":{},\"了\":{\"docs\":{},\"一\":{\"docs\":{},\"个\":{\"docs\":{},\"简\":{\"docs\":{},\"单\":{\"docs\":{},\"的\":{\"docs\":{},\"接\":{\"docs\":{},\"口\":{\"docs\":{},\"，\":{\"docs\":{},\"在\":{\"docs\":{},\"给\":{\"docs\":{},\"定\":{\"docs\":{},\"的\":{\"docs\":{},\"大\":{\"docs\":{},\"小\":{\"docs\":{},\"数\":{\"docs\":{},\"量\":{\"docs\":{},\"上\":{\"docs\":{},\"定\":{\"docs\":{},\"时\":{\"docs\":{},\"批\":{\"docs\":{},\"量\":{\"docs\":{},\"自\":{\"docs\":{},\"动\":{\"docs\":{},\"请\":{\"docs\":{},\"求\":{\"docs\":{\"document-apis/using-bulk-processor.html\":{\"ref\":\"document-apis/using-bulk-processor.html\",\"tf\":0.006024096385542169}}}}}}}}}}}}}}}}}}}}}}}}},\"基\":{\"docs\":{},\"于\":{\"docs\":{\"query-dsl.html\":{\"ref\":\"query-dsl.html\",\"tf\":0.043478260869565216}}}}}},\"两\":{\"docs\":{},\"种\":{\"docs\":{},\"形\":{\"docs\":{},\"式\":{\"docs\":{},\"的\":{\"docs\":{\"query-dsl/joining-queries.html\":{\"ref\":\"query-dsl/joining-queries.html\",\"tf\":0.007194244604316547}}}}}}}}}},\"然\":{\"docs\":{},\"后\":{\"docs\":{},\"增\":{\"docs\":{},\"加\":{\"docs\":{},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"q\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"docs\":{},\"s\":{\"docs\":{},\"t\":{\"docs\":{},\"s\":{\"docs\":{},\"到\":{\"docs\":{},\"b\":{\"docs\":{},\"u\":{\"docs\":{},\"l\":{\"docs\":{},\"k\":{\"docs\":{},\"p\":{\"docs\":{},\"r\":{\"docs\":{},\"o\":{\"docs\":{},\"c\":{\"docs\":{},\"e\":{\"docs\":{},\"s\":{\"docs\":{},\"s\":{\"docs\":{},\"o\":{\"docs\":{},\"r\":{\"docs\":{\"document-apis/using-bulk-processor.html\":{\"ref\":\"document-apis/using-bulk-processor.html\",\"tf\":0.006024096385542169}}}}}}}}}}}}}}}}}}}}}}}}}},\"使\":{\"docs\":{},\"用\":{\"docs\":{},\"：\":{\"docs\":{\"query-dsl/specialized-queries.html\":{\"ref\":\"query-dsl/specialized-queries.html\",\"tf\":0.004761904761904762}}}}}}},\"重\":{\"docs\":{},\"试\":{\"docs\":{\"document-apis/using-bulk-processor.html\":{\"ref\":\"document-apis/using-bulk-processor.html\",\"tf\":0.006024096385542169}}}},\"首\":{\"docs\":{},\"先\":{\"docs\":{},\"创\":{\"docs\":{},\"建\":{\"docs\":{},\"b\":{\"docs\":{},\"u\":{\"docs\":{},\"l\":{\"docs\":{},\"k\":{\"docs\":{},\"p\":{\"docs\":{},\"r\":{\"docs\":{},\"o\":{\"docs\":{},\"c\":{\"docs\":{},\"e\":{\"docs\":{},\"s\":{\"docs\":{},\"s\":{\"docs\":{},\"o\":{\"docs\":{},\"r\":{\"docs\":{},\"实\":{\"docs\":{},\"例\":{\"docs\":{\"document-apis/using-bulk-processor.html\":{\"ref\":\"document-apis/using-bulk-processor.html\",\"tf\":0.006024096385542169}}}}}}}}}}}}}}}}}}},\"需\":{\"docs\":{},\"要\":{\"docs\":{},\"阅\":{\"docs\":{},\"读\":{\"docs\":{\"search-api/using-scrolls-in-java.html\":{\"ref\":\"search-api/using-scrolls-in-java.html\",\"tf\":0.00546448087431694}}}}}},\"请\":{\"docs\":{},\"看\":{\"docs\":{},\"m\":{\"docs\":{},\"u\":{\"docs\":{},\"l\":{\"docs\":{},\"t\":{\"docs\":{},\"i\":{\"docs\":{},\"s\":{\"docs\":{},\"e\":{\"docs\":{},\"a\":{\"docs\":{},\"r\":{\"docs\":{},\"c\":{\"docs\":{},\"h\":{\"docs\":{\"search-api/multisearch-api.html\":{\"ref\":\"search-api/multisearch-api.html\",\"tf\":0.019230769230769232}}}}}}}}}}}}}}},\"查\":{\"docs\":{},\"看\":{\"docs\":{\"search-api/search-template.html\":{\"ref\":\"search-api/search-template.html\",\"tf\":0.0055248618784530384}}}}}},\"两\":{\"docs\":{},\"种\":{\"docs\":{\"search-api.html\":{\"ref\":\"search-api.html\",\"tf\":0.017241379310344827}}}},\"作\":{\"docs\":{},\"为\":{\"docs\":{},\"查\":{\"docs\":{},\"询\":{\"docs\":{},\"条\":{\"docs\":{},\"件\":{\"docs\":{},\"，\":{\"docs\":{},\"下\":{\"docs\":{},\"面\":{\"docs\":{},\"是\":{\"docs\":{},\"例\":{\"docs\":{},\"子\":{\"docs\":{},\"：\":{\"docs\":{\"search-api.html\":{\"ref\":\"search-api.html\",\"tf\":0.017241379310344827}}}}}}}}}}}}}}},\"和\":{\"docs\":{\"search-api.html\":{\"ref\":\"search-api.html\",\"tf\":0.017241379310344827},\"query-dsl/compound-queries.html\":{\"ref\":\"query-dsl/compound-queries.html\",\"tf\":0.011695906432748537},\"query-dsl/geo-queries.html\":{\"ref\":\"query-dsl/geo-queries.html\",\"tf\":0.00980392156862745}},\"前\":{\"docs\":{},\"缀\":{\"docs\":{},\"查\":{\"docs\":{},\"询\":{\"docs\":{},\"一\":{\"docs\":{},\"样\":{\"docs\":{},\"，\":{\"docs\":{},\"正\":{\"docs\":{},\"则\":{\"docs\":{},\"表\":{\"docs\":{},\"达\":{\"docs\":{},\"式\":{\"docs\":{},\"查\":{\"docs\":{},\"询\":{\"docs\":{},\"指\":{\"docs\":{},\"定\":{\"docs\":{},\"字\":{\"docs\":{},\"段\":{\"docs\":{},\"是\":{\"docs\":{},\"未\":{\"docs\":{},\"分\":{\"docs\":{},\"析\":{\"docs\":{},\"的\":{\"docs\":{},\"（\":{\"docs\":{},\"n\":{\"docs\":{},\"o\":{\"docs\":{},\"t\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"尽\":{\"docs\":{},\"管\":{\"docs\":{},\"j\":{\"docs\":{},\"a\":{\"docs\":{},\"v\":{\"docs\":{},\"a\":{\"docs\":{\"search-api.html\":{\"ref\":\"search-api.html\",\"tf\":0.017241379310344827}}}}}}}},\"所\":{\"docs\":{},\"有\":{\"docs\":{},\"的\":{\"docs\":{},\"参\":{\"docs\":{},\"数\":{\"docs\":{},\"都\":{\"docs\":{},\"是\":{\"docs\":{},\"可\":{\"docs\":{},\"选\":{\"docs\":{},\"的\":{\"docs\":{},\"，\":{\"docs\":{},\"下\":{\"docs\":{},\"面\":{\"docs\":{},\"是\":{\"docs\":{},\"最\":{\"docs\":{},\"小\":{\"docs\":{},\"调\":{\"docs\":{},\"用\":{\"docs\":{},\"：\":{\"docs\":{\"search-api.html\":{\"ref\":\"search-api.html\",\"tf\":0.017241379310344827}}}}}}}}}}}}}}}}}}}}},\"搜\":{\"docs\":{},\"索\":{\"docs\":{},\"a\":{\"docs\":{},\"p\":{\"docs\":{},\"i\":{\"docs\":{},\"可\":{\"docs\":{},\"以\":{\"docs\":{},\"支\":{\"docs\":{},\"持\":{\"docs\":{},\"搜\":{\"docs\":{},\"索\":{\"docs\":{},\"查\":{\"docs\":{},\"询\":{\"docs\":{},\"，\":{\"docs\":{},\"返\":{\"docs\":{},\"回\":{\"docs\":{},\"查\":{\"docs\":{},\"询\":{\"docs\":{},\"匹\":{\"docs\":{},\"配\":{\"docs\":{},\"的\":{\"docs\":{},\"结\":{\"docs\":{},\"果\":{\"docs\":{},\"，\":{\"docs\":{},\"它\":{\"docs\":{},\"可\":{\"docs\":{},\"以\":{\"docs\":{},\"搜\":{\"docs\":{},\"索\":{\"docs\":{},\"一\":{\"docs\":{},\"个\":{\"docs\":{},\"i\":{\"docs\":{},\"n\":{\"docs\":{},\"d\":{\"docs\":{},\"e\":{\"docs\":{},\"x\":{\"docs\":{\"search-api.html\":{\"ref\":\"search-api.html\",\"tf\":0.017241379310344827}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"查\":{\"docs\":{},\"询\":{\"docs\":{\"query-dsl/compound-queries.html\":{\"ref\":\"query-dsl/compound-queries.html\",\"tf\":0.03508771929824561},\"query-dsl/joining-queries.html\":{\"ref\":\"query-dsl/joining-queries.html\",\"tf\":0.007194244604316547},\"query-dsl/geo-queries.html\":{\"ref\":\"query-dsl/geo-queries.html\",\"tf\":0.014705882352941176},\"query-dsl/span-queries.html\":{\"ref\":\"query-dsl/span-queries.html\",\"tf\":0.005555555555555556}},\"条\":{\"docs\":{},\"件\":{\"docs\":{\"search-api.html\":{\"ref\":\"search-api.html\",\"tf\":0.017241379310344827}}}},\"构\":{\"docs\":{},\"建\":{\"docs\":{},\"器\":{\"docs\":{},\"的\":{\"docs\":{},\"工\":{\"docs\":{},\"厂\":{\"docs\":{},\"是\":{\"docs\":{\"query-dsl.html\":{\"ref\":\"query-dsl.html\",\"tf\":0.043478260869565216}}}}}}}}},\"语\":{\"docs\":{},\"句\":{\"docs\":{},\"查\":{\"docs\":{},\"询\":{\"docs\":{},\"（\":{\"docs\":{},\"q\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"y\":{\"docs\":{},\"_\":{\"docs\":{},\"s\":{\"docs\":{},\"t\":{\"docs\":{},\"r\":{\"docs\":{\"query-dsl/full-text-queries.html\":{\"ref\":\"query-dsl/full-text-queries.html\",\"tf\":0.011904761904761904}}}}}}}}}}}}}}}},\"具\":{\"docs\":{},\"有\":{\"docs\":{},\"指\":{\"docs\":{},\"定\":{\"docs\":{},\"类\":{\"docs\":{},\"型\":{\"docs\":{},\"和\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125}}}}}}}}},\"包\":{\"docs\":{},\"含\":{\"docs\":{},\"任\":{\"docs\":{},\"意\":{\"docs\":{},\"一\":{\"docs\":{},\"个\":{\"docs\":{},\"在\":{\"docs\":{},\"指\":{\"docs\":{},\"定\":{\"docs\":{},\"字\":{\"docs\":{},\"段\":{\"docs\":{},\"中\":{\"docs\":{},\"指\":{\"docs\":{},\"定\":{\"docs\":{},\"的\":{\"docs\":{},\"多\":{\"docs\":{},\"个\":{\"docs\":{},\"确\":{\"docs\":{},\"切\":{\"docs\":{},\"值\":{\"docs\":{},\"的\":{\"docs\":{},\"文\":{\"docs\":{},\"档\":{\"docs\":{},\"。\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125}}}}}}}}}}}}}}}}}}}}}}}},\"在\":{\"docs\":{},\"指\":{\"docs\":{},\"定\":{\"docs\":{},\"字\":{\"docs\":{},\"段\":{\"docs\":{},\"中\":{\"docs\":{},\"指\":{\"docs\":{},\"定\":{\"docs\":{},\"的\":{\"docs\":{},\"确\":{\"docs\":{},\"切\":{\"docs\":{},\"值\":{\"docs\":{},\"的\":{\"docs\":{},\"文\":{\"docs\":{},\"档\":{\"docs\":{},\"。\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125}}}}}}}}}}}}}}}}}}}},\"将\":{\"docs\":{},\"匹\":{\"docs\":{},\"配\":{\"docs\":{},\"字\":{\"docs\":{},\"段\":{\"docs\":{},\"值\":{\"docs\":{},\"大\":{\"docs\":{},\"于\":{\"docs\":{},\"或\":{\"docs\":{},\"等\":{\"docs\":{},\"于\":{\"docs\":{},\"此\":{\"docs\":{},\"参\":{\"docs\":{},\"数\":{\"docs\":{},\"值\":{\"docs\":{},\"的\":{\"docs\":{},\"文\":{\"docs\":{},\"档\":{\"docs\":{},\";\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125}}},\"。\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125}}}}}}}}}}}}},\"此\":{\"docs\":{},\"参\":{\"docs\":{},\"数\":{\"docs\":{},\"值\":{\"docs\":{},\"的\":{\"docs\":{},\"文\":{\"docs\":{},\"档\":{\"docs\":{},\"。\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.005390835579514825}}}}}}}}}}}},\"小\":{\"docs\":{},\"于\":{\"docs\":{},\"或\":{\"docs\":{},\"等\":{\"docs\":{},\"于\":{\"docs\":{},\"此\":{\"docs\":{},\"参\":{\"docs\":{},\"数\":{\"docs\":{},\"值\":{\"docs\":{},\"的\":{\"docs\":{},\"文\":{\"docs\":{},\"档\":{\"docs\":{},\";\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125}}},\"。\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125}}}}}}}}}}}}},\"此\":{\"docs\":{},\"参\":{\"docs\":{},\"数\":{\"docs\":{},\"值\":{\"docs\":{},\"的\":{\"docs\":{},\"文\":{\"docs\":{},\"档\":{\"docs\":{},\"。\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.005390835579514825}}}}}}}}}}}}}}}}},\"返\":{\"docs\":{},\"回\":{\"docs\":{},\"其\":{\"docs\":{},\"子\":{\"docs\":{},\"文\":{\"docs\":{},\"档\":{\"docs\":{},\"能\":{\"docs\":{},\"满\":{\"docs\":{},\"足\":{\"docs\":{},\"特\":{\"docs\":{},\"定\":{\"docs\":{},\"的\":{\"docs\":{},\"查\":{\"docs\":{},\"询\":{\"docs\":{},\"的\":{\"docs\":{},\"父\":{\"docs\":{},\"文\":{\"docs\":{},\"档\":{\"docs\":{},\"，\":{\"docs\":{},\"而\":{\"docs\":{\"query-dsl/joining-queries.html\":{\"ref\":\"query-dsl/joining-queries.html\",\"tf\":0.007194244604316547}}}}}}}}}}}}}}}}}}}}}}},\"指\":{\"docs\":{},\"定\":{\"docs\":{},\"字\":{\"docs\":{},\"段\":{\"docs\":{},\"包\":{\"docs\":{},\"含\":{\"docs\":{},\"与\":{\"docs\":{},\"指\":{\"docs\":{},\"定\":{\"docs\":{},\"术\":{\"docs\":{},\"语\":{\"docs\":{},\"模\":{\"docs\":{},\"糊\":{\"docs\":{},\"相\":{\"docs\":{},\"似\":{\"docs\":{},\"的\":{\"docs\":{},\"术\":{\"docs\":{},\"语\":{\"docs\":{},\"的\":{\"docs\":{},\"文\":{\"docs\":{},\"档\":{\"docs\":{},\"。\":{\"docs\":{},\"模\":{\"docs\":{},\"糊\":{\"docs\":{},\"性\":{\"docs\":{},\"测\":{\"docs\":{},\"量\":{\"docs\":{},\"为\":{\"1\":{\"docs\":{},\"或\":{\"2\":{\"docs\":{},\"的\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125}}}},\"docs\":{}}},\"docs\":{}}}}}}}}}}}}}}}}}}}},\"模\":{\"docs\":{},\"式\":{\"docs\":{},\"匹\":{\"docs\":{},\"配\":{\"docs\":{},\"的\":{\"docs\":{},\"值\":{\"docs\":{},\"的\":{\"docs\":{},\"文\":{\"docs\":{},\"档\":{\"docs\":{},\"，\":{\"docs\":{},\"其\":{\"docs\":{},\"中\":{\"docs\":{},\"该\":{\"docs\":{},\"模\":{\"docs\":{},\"式\":{\"docs\":{},\"支\":{\"docs\":{},\"持\":{\"docs\":{},\"单\":{\"docs\":{},\"字\":{\"docs\":{},\"符\":{\"docs\":{},\"通\":{\"docs\":{},\"配\":{\"docs\":{},\"符\":{\"docs\":{},\"（\":{\"docs\":{},\"？\":{\"docs\":{},\"）\":{\"docs\":{},\"和\":{\"docs\":{},\"多\":{\"docs\":{},\"字\":{\"docs\":{},\"符\":{\"docs\":{},\"通\":{\"docs\":{},\"配\":{\"docs\":{},\"符\":{\"docs\":{},\"（\":{\"docs\":{},\"*\":{\"docs\":{},\"）\":{\"docs\":{},\",\":{\"docs\":{},\"和\":{\"docs\":{},\"前\":{\"docs\":{},\"缀\":{\"docs\":{},\"查\":{\"docs\":{},\"询\":{\"docs\":{},\"一\":{\"docs\":{},\"样\":{\"docs\":{},\"，\":{\"docs\":{},\"通\":{\"docs\":{},\"配\":{\"docs\":{},\"符\":{\"docs\":{},\"查\":{\"docs\":{},\"询\":{\"docs\":{},\"指\":{\"docs\":{},\"定\":{\"docs\":{},\"字\":{\"docs\":{},\"段\":{\"docs\":{},\"是\":{\"docs\":{},\"未\":{\"docs\":{},\"分\":{\"docs\":{},\"析\":{\"docs\":{},\"的\":{\"docs\":{},\"（\":{\"docs\":{},\"n\":{\"docs\":{},\"o\":{\"docs\":{},\"t\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"指\":{\"docs\":{},\"定\":{\"docs\":{},\"范\":{\"docs\":{},\"围\":{\"docs\":{},\"内\":{\"docs\":{},\"的\":{\"docs\":{},\"值\":{\"docs\":{},\"（\":{\"docs\":{},\"日\":{\"docs\":{},\"期\":{\"docs\":{},\"，\":{\"docs\":{},\"数\":{\"docs\":{},\"字\":{\"docs\":{},\"或\":{\"docs\":{},\"字\":{\"docs\":{},\"符\":{\"docs\":{},\"串\":{\"docs\":{},\"）\":{\"docs\":{},\"的\":{\"docs\":{},\"文\":{\"docs\":{},\"档\":{\"docs\":{},\"。\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"的\":{\"docs\":{},\"字\":{\"docs\":{},\"段\":{\"docs\":{},\"包\":{\"docs\":{},\"含\":{\"docs\":{},\"与\":{\"docs\":{},\"指\":{\"docs\":{},\"定\":{\"docs\":{},\"的\":{\"docs\":{},\"正\":{\"docs\":{},\"则\":{\"docs\":{},\"表\":{\"docs\":{},\"达\":{\"docs\":{},\"式\":{\"docs\":{},\"匹\":{\"docs\":{},\"配\":{\"docs\":{},\"的\":{\"docs\":{},\"值\":{\"docs\":{},\"的\":{\"docs\":{},\"文\":{\"docs\":{},\"档\":{\"docs\":{},\"。\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125}}}}}}}}}}}}}}}}}}},\"任\":{\"docs\":{},\"何\":{\"docs\":{},\"非\":{\"docs\":{},\"空\":{\"docs\":{},\"值\":{\"docs\":{},\"的\":{\"docs\":{},\"文\":{\"docs\":{},\"档\":{\"docs\":{},\",\":{\"docs\":{},\"如\":{\"docs\":{},\"果\":{\"docs\":{},\"指\":{\"docs\":{},\"定\":{\"docs\":{},\"字\":{\"docs\":{},\"段\":{\"docs\":{},\"上\":{\"docs\":{},\"至\":{\"docs\":{},\"少\":{\"docs\":{},\"存\":{\"docs\":{},\"在\":{\"docs\":{},\"一\":{\"docs\":{},\"个\":{\"docs\":{},\"n\":{\"docs\":{},\"o\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"类\":{\"docs\":{},\"型\":{\"docs\":{},\"的\":{\"docs\":{},\"文\":{\"docs\":{},\"档\":{\"docs\":{},\"。\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125}}}}}}}}}},\"。\":{\"docs\":{\"query-dsl/compound-queries.html\":{\"ref\":\"query-dsl/compound-queries.html\",\"tf\":0.005847953216374269},\"query-dsl/joining-queries.html\":{\"ref\":\"query-dsl/joining-queries.html\",\"tf\":0.007194244604316547},\"query-dsl/span-queries.html\":{\"ref\":\"query-dsl/span-queries.html\",\"tf\":0.005555555555555556}}},\"只\":{\"docs\":{},\"使\":{\"docs\":{},\"用\":{\"docs\":{},\"最\":{\"docs\":{},\"佳\":{\"docs\":{},\"匹\":{\"docs\":{},\"配\":{\"docs\":{},\"查\":{\"docs\":{},\"询\":{\"docs\":{},\"条\":{\"docs\":{},\"件\":{\"docs\":{},\"的\":{\"docs\":{},\"分\":{\"docs\":{},\"数\":{\"docs\":{},\"。\":{\"docs\":{\"query-dsl/compound-queries.html\":{\"ref\":\"query-dsl/compound-queries.html\",\"tf\":0.005847953216374269}}}}}}}}}}}}}}}}},\"可\":{\"docs\":{},\"以\":{\"docs\":{},\"将\":{\"docs\":{},\"所\":{\"docs\":{},\"有\":{\"docs\":{},\"匹\":{\"docs\":{},\"配\":{\"docs\":{},\"查\":{\"docs\":{},\"询\":{\"docs\":{},\"的\":{\"docs\":{},\"分\":{\"docs\":{},\"数\":{\"docs\":{},\"相\":{\"docs\":{},\"结\":{\"docs\":{},\"合\":{\"docs\":{},\"使\":{\"docs\":{},\"用\":{\"docs\":{},\"的\":{\"docs\":{},\"方\":{\"docs\":{},\"式\":{\"docs\":{},\"不\":{\"docs\":{},\"同\":{\"docs\":{},\"的\":{\"docs\":{},\"是\":{\"docs\":{},\"，\":{\"docs\":{},\"d\":{\"docs\":{},\"i\":{\"docs\":{},\"s\":{\"docs\":{},\"_\":{\"docs\":{},\"m\":{\"docs\":{},\"a\":{\"docs\":{},\"x\":{\"docs\":{\"query-dsl/compound-queries.html\":{\"ref\":\"query-dsl/compound-queries.html\",\"tf\":0.005847953216374269}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"的\":{\"docs\":{},\"文\":{\"docs\":{},\"档\":{\"docs\":{},\"，\":{\"docs\":{},\"并\":{\"docs\":{},\"且\":{\"docs\":{},\"当\":{\"docs\":{},\"减\":{\"docs\":{},\"少\":{\"docs\":{},\"文\":{\"docs\":{},\"档\":{\"docs\":{},\"的\":{\"docs\":{},\"分\":{\"docs\":{},\"数\":{\"docs\":{},\"时\":{\"docs\":{},\"其\":{\"docs\":{},\"结\":{\"docs\":{},\"果\":{\"docs\":{},\"也\":{\"docs\":{},\"匹\":{\"docs\":{},\"配\":{\"docs\":{\"query-dsl/compound-queries.html\":{\"ref\":\"query-dsl/compound-queries.html\",\"tf\":0.005847953216374269}}}}}}}}}}}}}}}}}}}}}}},\"中\":{\"docs\":{},\"引\":{\"docs\":{},\"用\":{\"docs\":{},\"的\":{\"docs\":{},\"任\":{\"docs\":{},\"何\":{\"docs\":{},\"字\":{\"docs\":{},\"段\":{\"docs\":{},\"都\":{\"docs\":{},\"必\":{\"docs\":{},\"须\":{\"docs\":{},\"使\":{\"docs\":{},\"用\":{\"docs\":{},\"完\":{\"docs\":{},\"整\":{\"docs\":{},\"路\":{\"docs\":{},\"径\":{\"docs\":{},\"（\":{\"docs\":{},\"f\":{\"docs\":{},\"u\":{\"docs\":{},\"l\":{\"docs\":{},\"l\":{\"docs\":{},\"i\":{\"docs\":{\"query-dsl/joining-queries.html\":{\"ref\":\"query-dsl/joining-queries.html\",\"tf\":0.007194244604316547}}}}}}}}}}}}}}}}}}}}}}}},\"的\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"m\":{\"docs\":{\"query-dsl/joining-queries.html\":{\"ref\":\"query-dsl/joining-queries.html\",\"tf\":0.007194244604316547}}}}}}}},\"时\":{\"docs\":{},\"，\":{\"docs\":{},\"必\":{\"docs\":{},\"须\":{\"docs\":{},\"使\":{\"docs\":{},\"用\":{\"docs\":{},\"p\":{\"docs\":{},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"b\":{\"docs\":{},\"u\":{\"docs\":{},\"i\":{\"docs\":{},\"l\":{\"docs\":{},\"t\":{\"docs\":{},\"t\":{\"docs\":{},\"r\":{\"docs\":{},\"a\":{\"docs\":{},\"n\":{\"docs\":{},\"s\":{\"docs\":{},\"p\":{\"docs\":{},\"o\":{\"docs\":{},\"r\":{\"docs\":{},\"t\":{\"docs\":{},\"c\":{\"docs\":{},\"l\":{\"docs\":{},\"i\":{\"docs\":{},\"e\":{\"docs\":{},\"n\":{\"docs\":{},\"t\":{\"docs\":{},\"而\":{\"docs\":{},\"不\":{\"docs\":{},\"是\":{\"docs\":{},\"常\":{\"docs\":{},\"规\":{\"docs\":{\"query-dsl/joining-queries.html\":{\"ref\":\"query-dsl/joining-queries.html\",\"tf\":0.007194244604316547}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"看\":{\"docs\":{\"query-dsl/match-all-query.html\":{\"ref\":\"query-dsl/match-all-query.html\",\"tf\":0.1},\"query-dsl/full-text-queries.html\":{\"ref\":\"query-dsl/full-text-queries.html\",\"tf\":0.023809523809523808},\"query-dsl/span-queries.html\":{\"ref\":\"query-dsl/span-queries.html\",\"tf\":0.011111111111111112}},\"c\":{\"docs\":{},\"o\":{\"docs\":{},\"m\":{\"docs\":{},\"m\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{\"query-dsl/full-text-queries.html\":{\"ref\":\"query-dsl/full-text-queries.html\",\"tf\":0.011904761904761904}}}}}},\"n\":{\"docs\":{},\"s\":{\"docs\":{},\"t\":{\"docs\":{},\"a\":{\"docs\":{},\"n\":{\"docs\":{},\"t\":{\"docs\":{\"query-dsl/compound-queries.html\":{\"ref\":\"query-dsl/compound-queries.html\",\"tf\":0.005847953216374269}}}}}}}}}},\"q\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"i\":{\"docs\":{\"query-dsl/full-text-queries.html\":{\"ref\":\"query-dsl/full-text-queries.html\",\"tf\":0.011904761904761904}}}}}}},\"s\":{\"docs\":{},\"i\":{\"docs\":{},\"m\":{\"docs\":{},\"p\":{\"docs\":{},\"l\":{\"docs\":{\"query-dsl/full-text-queries.html\":{\"ref\":\"query-dsl/full-text-queries.html\",\"tf\":0.011904761904761904}}}}}},\"c\":{\"docs\":{},\"r\":{\"docs\":{},\"i\":{\"docs\":{},\"p\":{\"docs\":{},\"t\":{\"docs\":{\"query-dsl/specialized-queries.html\":{\"ref\":\"query-dsl/specialized-queries.html\",\"tf\":0.004761904761904762}}}}}}},\"p\":{\"docs\":{},\"a\":{\"docs\":{},\"n\":{\"docs\":{\"query-dsl/span-queries.html\":{\"ref\":\"query-dsl/span-queries.html\",\"tf\":0.03333333333333333}}}}}},\"e\":{\"docs\":{},\"x\":{\"docs\":{},\"i\":{\"docs\":{},\"s\":{\"docs\":{},\"t\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125}}}}}}},\"f\":{\"docs\":{},\"u\":{\"docs\":{},\"z\":{\"docs\":{},\"z\":{\"docs\":{},\"i\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125}}}}},\"n\":{\"docs\":{},\"c\":{\"docs\":{},\"t\":{\"docs\":{},\"i\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{\"query-dsl/compound-queries.html\":{\"ref\":\"query-dsl/compound-queries.html\",\"tf\":0.005847953216374269}}}}}}}}}},\"i\":{\"docs\":{},\"d\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125}}},\"n\":{\"docs\":{},\"d\":{\"docs\":{},\"i\":{\"docs\":{},\"c\":{\"docs\":{\"query-dsl/compound-queries.html\":{\"ref\":\"query-dsl/compound-queries.html\",\"tf\":0.005847953216374269}}}}}}},\"p\":{\"docs\":{},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"f\":{\"docs\":{},\"i\":{\"docs\":{},\"x\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125}}}}}}},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"c\":{\"docs\":{},\"o\":{\"docs\":{},\"l\":{\"docs\":{\"query-dsl/specialized-queries.html\":{\"ref\":\"query-dsl/specialized-queries.html\",\"tf\":0.004761904761904762}}}}}}}},\"r\":{\"docs\":{},\"a\":{\"docs\":{},\"n\":{\"docs\":{},\"g\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125}}}}},\"e\":{\"docs\":{},\"g\":{\"docs\":{},\"e\":{\"docs\":{},\"x\":{\"docs\":{},\"p\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125}}}}}}}},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"m\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.005390835579514825}}}}},\"y\":{\"docs\":{},\"p\":{\"docs\":{},\"e\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125}}}}}},\"w\":{\"docs\":{},\"i\":{\"docs\":{},\"l\":{\"docs\":{},\"d\":{\"docs\":{},\"c\":{\"docs\":{},\"a\":{\"docs\":{},\"r\":{\"docs\":{},\"d\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125}}}}}}}}}},\"b\":{\"docs\":{},\"o\":{\"docs\":{},\"o\":{\"docs\":{},\"l\":{\"docs\":{\"query-dsl/compound-queries.html\":{\"ref\":\"query-dsl/compound-queries.html\",\"tf\":0.005847953216374269}}},\"s\":{\"docs\":{},\"t\":{\"docs\":{\"query-dsl/compound-queries.html\":{\"ref\":\"query-dsl/compound-queries.html\",\"tf\":0.005847953216374269}}}}}}},\"d\":{\"docs\":{},\"i\":{\"docs\":{\"query-dsl/compound-queries.html\":{\"ref\":\"query-dsl/compound-queries.html\",\"tf\":0.005847953216374269}}}},\"h\":{\"docs\":{},\"a\":{\"docs\":{\"query-dsl/joining-queries.html\":{\"ref\":\"query-dsl/joining-queries.html\",\"tf\":0.014388489208633094}}}},\"n\":{\"docs\":{},\"e\":{\"docs\":{},\"s\":{\"docs\":{},\"t\":{\"docs\":{\"query-dsl/joining-queries.html\":{\"ref\":\"query-dsl/joining-queries.html\",\"tf\":0.007194244604316547}}}}}},\"g\":{\"docs\":{},\"e\":{\"docs\":{},\"o\":{\"docs\":{\"query-dsl/geo-queries.html\":{\"ref\":\"query-dsl/geo-queries.html\",\"tf\":0.0196078431372549}}}}},\"m\":{\"docs\":{},\"o\":{\"docs\":{},\"r\":{\"docs\":{},\"e\":{\"docs\":{\"query-dsl/specialized-queries.html\":{\"ref\":\"query-dsl/specialized-queries.html\",\"tf\":0.004761904761904762}}}}}}},\"找\":{\"docs\":{},\"指\":{\"docs\":{},\"定\":{\"docs\":{},\"字\":{\"docs\":{},\"段\":{\"docs\":{},\"包\":{\"docs\":{},\"含\":{\"docs\":{},\"以\":{\"docs\":{},\"指\":{\"docs\":{},\"定\":{\"docs\":{},\"的\":{\"docs\":{},\"精\":{\"docs\":{},\"确\":{\"docs\":{},\"前\":{\"docs\":{},\"缀\":{\"docs\":{},\"开\":{\"docs\":{},\"头\":{\"docs\":{},\"的\":{\"docs\":{},\"值\":{\"docs\":{},\"的\":{\"docs\":{},\"文\":{\"docs\":{},\"档\":{\"docs\":{},\"。\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125}}}}}}}}}}}}}}}}}}}}}},\"多\":{\"docs\":{},\"边\":{\"docs\":{},\"形\":{\"docs\":{},\"内\":{\"docs\":{},\"地\":{\"docs\":{},\"理\":{\"docs\":{},\"点\":{\"docs\":{},\"的\":{\"docs\":{},\"文\":{\"docs\":{},\"档\":{\"docs\":{},\"。\":{\"docs\":{\"query-dsl/geo-queries.html\":{\"ref\":\"query-dsl/geo-queries.html\",\"tf\":0.004901960784313725}}}}}}}}}}}}}}},\"在\":{\"docs\":{},\"一\":{\"docs\":{},\"个\":{\"docs\":{},\"中\":{\"docs\":{},\"心\":{\"docs\":{},\"点\":{\"docs\":{},\"指\":{\"docs\":{},\"定\":{\"docs\":{},\"范\":{\"docs\":{},\"围\":{\"docs\":{},\"内\":{\"docs\":{},\"的\":{\"docs\":{},\"地\":{\"docs\":{},\"理\":{\"docs\":{},\"点\":{\"docs\":{},\"文\":{\"docs\":{},\"档\":{\"docs\":{},\"。\":{\"docs\":{\"query-dsl/geo-queries.html\":{\"ref\":\"query-dsl/geo-queries.html\",\"tf\":0.004901960784313725}}}}}}}}}}}}}}}}}}}},\"落\":{\"docs\":{},\"入\":{\"docs\":{},\"指\":{\"docs\":{},\"定\":{\"docs\":{},\"的\":{\"docs\":{},\"矩\":{\"docs\":{},\"形\":{\"docs\":{},\"地\":{\"docs\":{},\"理\":{\"docs\":{},\"点\":{\"docs\":{},\"的\":{\"docs\":{},\"文\":{\"docs\":{},\"档\":{\"docs\":{},\"。\":{\"docs\":{\"query-dsl/geo-queries.html\":{\"ref\":\"query-dsl/geo-queries.html\",\"tf\":0.004901960784313725}}}}}}}}}}}}}}}},\"要\":{\"docs\":{},\"么\":{\"docs\":{},\"相\":{\"docs\":{},\"交\":{\"docs\":{},\"，\":{\"docs\":{},\"包\":{\"docs\":{},\"含\":{\"docs\":{},\"的\":{\"docs\":{},\"，\":{\"docs\":{},\"要\":{\"docs\":{},\"么\":{\"docs\":{},\"指\":{\"docs\":{},\"定\":{\"docs\":{},\"形\":{\"docs\":{},\"状\":{\"docs\":{},\"不\":{\"docs\":{},\"相\":{\"docs\":{},\"交\":{\"docs\":{},\"的\":{\"docs\":{},\"地\":{\"docs\":{},\"理\":{\"docs\":{},\"形\":{\"docs\":{},\"状\":{\"docs\":{},\"的\":{\"docs\":{},\"文\":{\"docs\":{},\"档\":{\"docs\":{},\"。\":{\"docs\":{\"query-dsl/geo-queries.html\":{\"ref\":\"query-dsl/geo-queries.html\",\"tf\":0.004901960784313725}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"过\":{\"docs\":{},\"滤\":{\"docs\":{\"search-api.html\":{\"ref\":\"search-api.html\",\"tf\":0.017241379310344827}},\"聚\":{\"docs\":{},\"合\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}},\"—\":{\"docs\":{},\"—\":{\"docs\":{},\"基\":{\"docs\":{},\"于\":{\"docs\":{},\"一\":{\"docs\":{},\"个\":{\"docs\":{},\"条\":{\"docs\":{},\"件\":{\"docs\":{},\"，\":{\"docs\":{},\"来\":{\"docs\":{},\"对\":{\"docs\":{},\"当\":{\"docs\":{},\"前\":{\"docs\":{},\"的\":{\"docs\":{},\"文\":{\"docs\":{},\"档\":{\"docs\":{},\"进\":{\"docs\":{},\"行\":{\"docs\":{},\"过\":{\"docs\":{},\"滤\":{\"docs\":{},\"的\":{\"docs\":{},\"聚\":{\"docs\":{},\"合\":{\"docs\":{},\"。\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"!\":{\"docs\":{},\"=\":{\"docs\":{\"search-api/using-scrolls-in-java.html\":{\"ref\":\"search-api/using-scrolls-in-java.html\",\"tf\":0.00546448087431694}}}},\"[\":{\"0\":{\"docs\":{},\".\":{\"0\":{\"docs\":{},\"]\":{\"docs\":{},\",\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}},\"8\":{\"1\":{\"4\":{\"3\":{\"3\":{\"8\":{\"8\":{\"9\":{\"6\":{\"1\":{\"5\":{\"4\":{\"5\":{\"9\":{\"5\":{\"docs\":{},\"]\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}}}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"7\":{\"6\":{\"1\":{\"9\":{\"1\":{\"2\":{\"4\":{\"5\":{\"5\":{\"8\":{\"2\":{\"1\":{\"3\":{\"0\":{\"2\":{\"docs\":{},\"]\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}}}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}}},\"1\":{\"0\":{\"docs\":{},\".\":{\"0\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}},\"]\":{\"docs\":{},\",\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.001652892561983471}}}}},\"docs\":{}}},\"1\":{\"3\":{\"8\":{\"docs\":{},\"]\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}},\"docs\":{}},\"5\":{\"6\":{\"docs\":{},\"]\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}},\"docs\":{}},\"docs\":{}},\"2\":{\"4\":{\"8\":{\"docs\":{},\"]\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}},\"docs\":{}},\"8\":{\"2\":{\"docs\":{},\"]\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}},\"docs\":{}},\"docs\":{}},\"6\":{\"1\":{\"docs\":{},\"]\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}},\"docs\":{}},\"9\":{\"4\":{\"2\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}},\"]\":{\"docs\":{},\",\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}},\"5\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}},\"]\":{\"docs\":{},\",\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}},\"6\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}},\"]\":{\"docs\":{},\",\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}},\"docs\":{}},\"5\":{\"0\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0049586776859504135}}},\"docs\":{}},\"6\":{\"0\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0049586776859504135}}},\"docs\":{}},\"docs\":{}},\"docs\":{},\".\":{\"0\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}},\"]\":{\"docs\":{},\",\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854},\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.001652892561983471}}}}},\"1\":{\"7\":{\"3\":{\"3\":{\"4\":{\"6\":{\"5\":{\"4\":{\"0\":{\"1\":{\"4\":{\"1\":{\"8\":{\"4\":{\"7\":{\"docs\":{},\"]\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}}}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"2\":{\"4\":{\"docs\":{},\"]\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}}}},\"docs\":{}},\"5\":{\"4\":{\"3\":{\"2\":{\"0\":{\"2\":{\"3\":{\"3\":{\"1\":{\"8\":{\"6\":{\"9\":{\"2\":{\"1\":{\"9\":{\"8\":{\"docs\":{},\"]\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}}}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}},\"]\":{\"docs\":{},\",\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.001652892561983471}}}}},\"9\":{\"1\":{\"docs\":{},\"]\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}}}},\"2\":{\"3\":{\"9\":{\"1\":{\"5\":{\"4\":{\"6\":{\"2\":{\"0\":{\"3\":{\"3\":{\"6\":{\"7\":{\"4\":{\"docs\":{},\"]\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}}}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"]\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.003305785123966942}}}},\"2\":{\"0\":{\"0\":{\"5\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}},\"]\":{\"docs\":{},\",\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}},\"7\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}},\"]\":{\"docs\":{},\",\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}},\"8\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}},\"]\":{\"docs\":{},\",\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}},\"docs\":{}},\"docs\":{},\"]\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}},\"1\":{\"docs\":{},\"]\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}},\"5\":{\"docs\":{},\".\":{\"0\":{\"docs\":{},\"]\":{\"docs\":{},\",\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}}}}},\"docs\":{}}},\"8\":{\"6\":{\"1\":{\"docs\":{},\"]\":{\"docs\":{},\"]\":{\"docs\":{\"search-api/using-scrolls-in-java.html\":{\"ref\":\"search-api/using-scrolls-in-java.html\",\"tf\":0.00546448087431694}}}}},\"docs\":{}},\"docs\":{}},\"9\":{\"docs\":{},\".\":{\"6\":{\"6\":{\"4\":{\"3\":{\"5\":{\"3\":{\"0\":{\"9\":{\"5\":{\"0\":{\"9\":{\"0\":{\"9\":{\"4\":{\"5\":{\"docs\":{},\"]\":{\"docs\":{},\",\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}}}}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}}},\"docs\":{},\".\":{\"2\":{\"2\":{\"7\":{\"3\":{\"6\":{\"4\":{\"4\":{\"9\":{\"0\":{\"8\":{\"5\":{\"3\":{\"5\":{\"3\":{\"3\":{\"5\":{\"docs\":{},\"]\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}}}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{},\"]\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}}}},\"8\":{\"4\":{\"9\":{\"8\":{\"9\":{\"3\":{\"3\":{\"9\":{\"1\":{\"0\":{\"8\":{\"2\":{\"7\":{\"9\":{\"docs\":{},\"]\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}}}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"]\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}},\"3\":{\"7\":{\"docs\":{},\"]\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.001652892561983471}}}},\"docs\":{},\".\":{\"0\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}},\"]\":{\"docs\":{},\",\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.001652892561983471}}}}},\"docs\":{}},\"]\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}},\"4\":{\"0\":{\"docs\":{},\".\":{\"7\":{\"0\":{\"5\":{\"0\":{\"0\":{\"7\":{\"6\":{\"4\":{\"3\":{\"8\":{\"1\":{\"9\":{\"2\":{\"1\":{\"docs\":{},\",\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}}}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}}},\"5\":{\"docs\":{},\".\":{\"0\":{\"8\":{\"7\":{\"8\":{\"9\":{\"0\":{\"6\":{\"2\":{\"5\":{\"docs\":{},\",\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}}},\"6\":{\"0\":{\"docs\":{},\"]\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}},\"docs\":{}},\"7\":{\"docs\":{},\".\":{\"1\":{\"9\":{\"7\":{\"2\":{\"6\":{\"5\":{\"6\":{\"2\":{\"5\":{\"docs\":{},\",\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}}},\"8\":{\"9\":{\"3\":{\"docs\":{},\"]\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}}}},\"docs\":{}},\"docs\":{}},\"9\":{\"2\":{\"5\":{\"docs\":{},\"]\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}},\"docs\":{}},\"8\":{\"2\":{\"docs\":{},\"]\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"5\":{\"0\":{\"0\":{\"docs\":{},\".\":{\"0\":{\"docs\":{},\"]\":{\"docs\":{},\",\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}},\"docs\":{}}},\"1\":{\"8\":{\"docs\":{},\"]\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}},\"docs\":{}},\"docs\":{},\".\":{\"0\":{\"docs\":{},\"]\":{\"docs\":{},\",\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}}}}},\"3\":{\"6\":{\"1\":{\"3\":{\"2\":{\"8\":{\"1\":{\"2\":{\"5\":{\"docs\":{},\",\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"7\":{\"1\":{\"2\":{\"8\":{\"9\":{\"0\":{\"6\":{\"2\":{\"5\":{\"docs\":{},\",\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}}},\"1\":{\"0\":{\"7\":{\"docs\":{},\"]\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}}}},\"docs\":{}},\"docs\":{}},\"3\":{\"docs\":{},\".\":{\"4\":{\"9\":{\"6\":{\"0\":{\"3\":{\"0\":{\"2\":{\"2\":{\"4\":{\"3\":{\"5\":{\"2\":{\"2\":{\"1\":{\"docs\":{},\",\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}}}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}}},\"docs\":{},\".\":{\"0\":{\"docs\":{},\"]\":{\"docs\":{},\",\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}}}}},\"docs\":{}},\"]\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.001652892561983471}}}},\"7\":{\"3\":{\"docs\":{},\".\":{\"9\":{\"3\":{\"3\":{\"5\":{\"3\":{\"1\":{\"3\":{\"4\":{\"6\":{\"1\":{\"8\":{\"6\":{\"8\":{\"docs\":{},\"]\":{\"docs\":{},\",\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}}}}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}}},\"5\":{\"docs\":{},\".\":{\"0\":{\"docs\":{},\"]\":{\"docs\":{},\",\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}}}}},\"docs\":{}}},\"docs\":{}},\"8\":{\"docs\":{},\"]\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.001652892561983471}}}},\"9\":{\"4\":{\"docs\":{},\".\":{\"4\":{\"0\":{\"0\":{\"9\":{\"5\":{\"1\":{\"4\":{\"7\":{\"3\":{\"2\":{\"7\":{\"2\":{\"8\":{\"3\":{\"docs\":{},\"]\":{\"docs\":{},\",\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}}}}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}},\"docs\":{}}},\"5\":{\"docs\":{},\".\":{\"0\":{\"docs\":{},\"]\":{\"docs\":{},\",\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}}}}},\"docs\":{}}},\"9\":{\"docs\":{},\".\":{\"0\":{\"docs\":{},\"]\":{\"docs\":{},\",\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}}}}},\"docs\":{}}},\"docs\":{},\"]\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}},\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}},\"a\":{\"docs\":{},\"u\":{\"docs\":{},\"n\":{\"docs\":{},\"z\":{\"docs\":{},\"s\":{\"docs\":{},\"z\":{\"0\":{\"docs\":{},\"w\":{\"9\":{\"docs\":{},\"k\":{\"7\":{\"docs\":{},\"p\":{\"docs\":{},\"k\":{\"docs\":{},\"x\":{\"docs\":{},\"t\":{\"docs\":{},\"q\":{\"0\":{\"4\":{\"docs\":{},\"y\":{\"docs\":{},\"s\":{\"docs\":{},\"]\":{\"docs\":{},\",\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}}}}}}},\"docs\":{}},\"docs\":{}}}}}}},\"docs\":{}}},\"docs\":{}}},\"docs\":{},\"z\":{\"docs\":{},\"e\":{\"9\":{\"docs\":{},\"k\":{\"7\":{\"docs\":{},\"p\":{\"docs\":{},\"k\":{\"docs\":{},\"x\":{\"docs\":{},\"t\":{\"docs\":{},\"q\":{\"0\":{\"4\":{\"docs\":{},\"x\":{\"2\":{\"docs\":{},\"]\":{\"docs\":{},\",\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}}}}},\"docs\":{}}},\"docs\":{}},\"docs\":{}}}}}}},\"docs\":{}}},\"docs\":{}},\"j\":{\"9\":{\"docs\":{},\"k\":{\"7\":{\"docs\":{},\"p\":{\"docs\":{},\"k\":{\"docs\":{},\"x\":{\"docs\":{},\"t\":{\"docs\":{},\"q\":{\"0\":{\"4\":{\"docs\":{},\"x\":{\"4\":{\"docs\":{},\"]\":{\"docs\":{},\",\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}}}}},\"docs\":{}}},\"docs\":{}},\"docs\":{}}}}}}},\"docs\":{}}},\"docs\":{}},\"l\":{\"9\":{\"docs\":{},\"k\":{\"7\":{\"docs\":{},\"p\":{\"docs\":{},\"k\":{\"docs\":{},\"x\":{\"docs\":{},\"t\":{\"docs\":{},\"q\":{\"0\":{\"4\":{\"docs\":{},\"x\":{\"5\":{\"docs\":{},\"]\":{\"docs\":{},\",\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}}}}},\"docs\":{}}},\"docs\":{}},\"docs\":{}}}}}}},\"docs\":{}}},\"docs\":{}},\"m\":{\"9\":{\"docs\":{},\"k\":{\"7\":{\"docs\":{},\"p\":{\"docs\":{},\"k\":{\"docs\":{},\"x\":{\"docs\":{},\"t\":{\"docs\":{},\"q\":{\"0\":{\"4\":{\"docs\":{},\"x\":{\"docs\":{},\"y\":{\"docs\":{},\"]\":{\"docs\":{},\",\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}}}}}}},\"docs\":{}},\"docs\":{}}}}}}},\"docs\":{}}},\"docs\":{}},\"p\":{\"9\":{\"docs\":{},\"k\":{\"7\":{\"docs\":{},\"p\":{\"docs\":{},\"k\":{\"docs\":{},\"x\":{\"docs\":{},\"t\":{\"docs\":{},\"q\":{\"0\":{\"4\":{\"docs\":{},\"x\":{\"8\":{\"docs\":{},\"]\":{\"docs\":{},\",\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}}}}},\"docs\":{}}},\"docs\":{}},\"docs\":{}}}}}}},\"docs\":{}}},\"docs\":{}}}}}}}}},\"f\":{\"docs\":{},\"e\":{\"docs\":{},\"m\":{\"docs\":{},\"a\":{\"docs\":{},\"l\":{\"docs\":{},\"e\":{\"docs\":{},\"]\":{\"docs\":{},\",\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}}}}}}}}}},\"m\":{\"docs\":{},\"a\":{\"docs\":{},\"l\":{\"docs\":{},\"e\":{\"docs\":{},\"]\":{\"docs\":{},\",\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}}}}}}},\"e\":{\"docs\":{},\"n\":{\"docs\":{},\"]\":{\"docs\":{},\",\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}}}},\"{\":{\"docs\":{},\"\\\"\":{\"docs\":{},\"g\":{\"docs\":{},\"e\":{\"docs\":{},\"n\":{\"docs\":{},\"d\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"\\\"\":{\"docs\":{},\":\":{\"docs\":{},\"\\\"\":{\"docs\":{},\"f\":{\"docs\":{},\"e\":{\"docs\":{},\"m\":{\"docs\":{},\"a\":{\"docs\":{},\"l\":{\"docs\":{},\"e\":{\"docs\":{},\"\\\"\":{\"docs\":{},\",\":{\"docs\":{},\".\":{\"docs\":{},\".\":{\"docs\":{},\".\":{\"docs\":{},\"}\":{\"docs\":{},\"]\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.004379562043795621}}}}}}}}}}}}}}},\"m\":{\"docs\":{},\"a\":{\"docs\":{},\"l\":{\"docs\":{},\"e\":{\"docs\":{},\"\\\"\":{\"docs\":{},\",\":{\"docs\":{},\".\":{\"docs\":{},\".\":{\"docs\":{},\".\":{\"docs\":{},\"}\":{\"docs\":{},\"]\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.004379562043795621}}}}}}}}}}}}}}}}}}}}}}},\"}\":{\"docs\":{},\"]\":{\"docs\":{},\"\\\"\":{\"docs\":{},\",\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00583941605839416},\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.006611570247933884}}}},\",\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00583941605839416},\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.014049586776859505}}}}}},\"*\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.003305785123966942}}},\"g\":{\"docs\":{},\"b\":{\"docs\":{},\"q\":{\"docs\":{},\"u\":{\"docs\":{},\"]\":{\"docs\":{},\",\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}}},\"v\":{\"docs\":{},\"n\":{\"docs\":{},\"]\":{\"docs\":{},\",\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}}}}},\"i\":{\"docs\":{},\"n\":{\"docs\":{},\"f\":{\"docs\":{},\"i\":{\"docs\":{},\"n\":{\"docs\":{},\"i\":{\"docs\":{},\"t\":{\"docs\":{},\"y\":{\"docs\":{},\"]\":{\"docs\":{},\",\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}}}}}}}}},\"n\":{\"docs\":{},\"u\":{\"docs\":{},\"l\":{\"docs\":{},\"l\":{\"docs\":{},\"]\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125}},\",\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.003305785123966942}}}}}}}},\"u\":{\"0\":{\"docs\":{},\"j\":{\"2\":{\"docs\":{},\"]\":{\"docs\":{},\",\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}},\"docs\":{}}},\"1\":{\"docs\":{},\"j\":{\"0\":{\"docs\":{},\"]\":{\"docs\":{},\",\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}},\"docs\":{}}},\"docs\":{}},\"w\":{\"docs\":{},\"o\":{\"docs\":{},\"m\":{\"docs\":{},\"e\":{\"docs\":{},\"n\":{\"docs\":{},\"]\":{\"docs\":{},\",\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}}}}}},\"\\\"\":{\"docs\":{},\"y\":{\"docs\":{},\"o\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{},\"a\":{\"docs\":{},\"\\\"\":{\"docs\":{},\",\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125}}},\"]\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125}}}}}}}}}},\"]\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125}}}},\"z\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"o\":{\"docs\":{\"search-api/using-scrolls-in-java.html\":{\"ref\":\"search-api/using-scrolls-in-java.html\",\"tf\":0.00546448087431694},\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125}}}}}},\"发\":{\"docs\":{},\"生\":{\"docs\":{},\"那\":{\"docs\":{},\"一\":{\"docs\":{},\"时\":{\"docs\":{},\"刻\":{\"docs\":{},\"的\":{\"docs\":{},\"索\":{\"docs\":{},\"引\":{\"docs\":{},\"状\":{\"docs\":{},\"态\":{\"docs\":{},\"，\":{\"docs\":{},\"就\":{\"docs\":{},\"像\":{\"docs\":{},\"一\":{\"docs\":{},\"个\":{\"docs\":{},\"快\":{\"docs\":{},\"照\":{\"docs\":{},\"(\":{\"docs\":{},\"t\":{\"docs\":{},\"h\":{\"docs\":{},\"e\":{\"docs\":{\"search-api/using-scrolls-in-java.html\":{\"ref\":\"search-api/using-scrolls-in-java.html\",\"tf\":0.00546448087431694}}}}}}}}}}}}}}}}}}}}}}}},\"清\":{\"docs\":{},\"除\":{\"docs\":{},\"滚\":{\"docs\":{},\"动\":{\"docs\":{},\"i\":{\"docs\":{},\"d\":{\"docs\":{\"search-api/using-scrolls-in-java.html\":{\"ref\":\"search-api/using-scrolls-in-java.html\",\"tf\":0.01092896174863388}}}}}}}},\"虽\":{\"docs\":{},\"然\":{\"docs\":{},\"当\":{\"docs\":{},\"滚\":{\"docs\":{},\"动\":{\"docs\":{},\"有\":{\"docs\":{},\"效\":{\"docs\":{},\"时\":{\"docs\":{},\"间\":{\"docs\":{},\"已\":{\"docs\":{},\"过\":{\"docs\":{},\"，\":{\"docs\":{},\"搜\":{\"docs\":{},\"索\":{\"docs\":{},\"上\":{\"docs\":{},\"下\":{\"docs\":{},\"文\":{\"docs\":{},\"(\":{\"docs\":{},\"s\":{\"docs\":{},\"e\":{\"docs\":{},\"a\":{\"docs\":{},\"r\":{\"docs\":{},\"c\":{\"docs\":{},\"h\":{\"docs\":{\"search-api/using-scrolls-in-java.html\":{\"ref\":\"search-api/using-scrolls-in-java.html\",\"tf\":0.00546448087431694}}}}}}}}}}}}}}}}}}}}}}}},\"全\":{\"docs\":{},\"文\":{\"docs\":{},\"查\":{\"docs\":{},\"询\":{\"docs\":{},\"将\":{\"docs\":{},\"在\":{\"docs\":{},\"执\":{\"docs\":{},\"行\":{\"docs\":{},\"之\":{\"docs\":{},\"前\":{\"docs\":{},\"分\":{\"docs\":{},\"析\":{\"docs\":{},\"查\":{\"docs\":{},\"询\":{\"docs\":{},\"字\":{\"docs\":{},\"符\":{\"docs\":{},\"串\":{\"docs\":{},\"，\":{\"docs\":{},\"但\":{\"docs\":{},\"是\":{\"docs\":{},\"项\":{\"docs\":{},\"级\":{\"docs\":{},\"别\":{\"docs\":{},\"查\":{\"docs\":{},\"询\":{\"docs\":{},\"对\":{\"docs\":{},\"存\":{\"docs\":{},\"储\":{\"docs\":{},\"在\":{\"docs\":{},\"反\":{\"docs\":{},\"向\":{\"docs\":{},\"索\":{\"docs\":{},\"引\":{\"docs\":{},\"中\":{\"docs\":{},\"的\":{\"docs\":{},\"确\":{\"docs\":{},\"切\":{\"docs\":{},\"项\":{\"docs\":{},\"进\":{\"docs\":{},\"行\":{\"docs\":{},\"操\":{\"docs\":{},\"作\":{\"docs\":{},\"。\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"请\":{\"docs\":{},\"求\":{\"docs\":{\"search-api/search-template.html\":{\"ref\":\"search-api/search-template.html\",\"tf\":0.011049723756906077}},\"返\":{\"docs\":{},\"回\":{\"docs\":{},\"的\":{\"docs\":{},\"结\":{\"docs\":{},\"果\":{\"docs\":{},\"只\":{\"docs\":{},\"是\":{\"docs\":{},\"反\":{\"docs\":{},\"映\":{\"docs\":{},\"了\":{\"docs\":{\"search-api/using-scrolls-in-java.html\":{\"ref\":\"search-api/using-scrolls-in-java.html\",\"tf\":0.00546448087431694}}}}}}}}}}}},\"：\":{\"docs\":{\"search-api/search-template.html\":{\"ref\":\"search-api/search-template.html\",\"tf\":0.0055248618784530384}}}},\"参\":{\"docs\":{},\"阅\":{\"docs\":{},\"聚\":{\"docs\":{},\"合\":{\"docs\":{},\"指\":{\"docs\":{},\"南\":{\"docs\":{},\"。\":{\"docs\":{\"aggregations.html\":{\"ref\":\"aggregations.html\",\"tf\":0.038461538461538464}}}}}}}}}},\"需\":{\"docs\":{},\"要\":{\"docs\":{},\"保\":{\"docs\":{},\"持\":{\"docs\":{},\"搜\":{\"docs\":{},\"索\":{\"docs\":{},\"的\":{\"docs\":{},\"上\":{\"docs\":{},\"下\":{\"docs\":{},\"文\":{\"docs\":{},\"环\":{\"docs\":{},\"境\":{\"docs\":{},\"多\":{\"docs\":{},\"长\":{\"docs\":{},\"时\":{\"docs\":{},\"间\":{\"docs\":{},\"（\":{\"docs\":{},\"滚\":{\"docs\":{},\"动\":{\"docs\":{},\"时\":{\"docs\":{},\"间\":{\"docs\":{},\"）\":{\"docs\":{\"search-api/using-scrolls-in-java.html\":{\"ref\":\"search-api/using-scrolls-in-java.html\",\"tf\":0.00546448087431694}}}}}}}}}}}}}}}}}}}}}}}},\"。\":{\"docs\":{\"search-api/multisearch-api.html\":{\"ref\":\"search-api/multisearch-api.html\",\"tf\":0.019230769230769232},\"query-dsl.html\":{\"ref\":\"query-dsl.html\",\"tf\":0.043478260869565216},\"query-dsl/compound-queries.html\":{\"ref\":\"query-dsl/compound-queries.html\",\"tf\":0.005847953216374269},\"query-dsl/specialized-queries.html\":{\"ref\":\"query-dsl/specialized-queries.html\",\"tf\":0.004761904761904762}}},\"聚\":{\"docs\":{},\"合\":{\"docs\":{\"aggregations.html\":{\"ref\":\"aggregations.html\",\"tf\":0.038461538461538464},\"aggregations/structuring-aggregations.html\":{\"ref\":\"aggregations/structuring-aggregations.html\",\"tf\":0.02702702702702703}},\"可\":{\"docs\":{},\"以\":{\"docs\":{},\"被\":{\"docs\":{},\"看\":{\"docs\":{},\"做\":{\"docs\":{},\"是\":{\"docs\":{},\"从\":{\"docs\":{},\"一\":{\"docs\":{},\"组\":{\"docs\":{},\"文\":{\"docs\":{},\"件\":{\"docs\":{},\"中\":{\"docs\":{},\"获\":{\"docs\":{},\"取\":{\"docs\":{},\"分\":{\"docs\":{},\"析\":{\"docs\":{},\"信\":{\"docs\":{},\"息\":{\"docs\":{},\"的\":{\"docs\":{},\"一\":{\"docs\":{},\"系\":{\"docs\":{},\"列\":{\"docs\":{},\"工\":{\"docs\":{},\"作\":{\"docs\":{},\"的\":{\"docs\":{},\"统\":{\"docs\":{},\"称\":{\"docs\":{},\"。\":{\"docs\":{},\"聚\":{\"docs\":{},\"合\":{\"docs\":{},\"的\":{\"docs\":{},\"实\":{\"docs\":{},\"现\":{\"docs\":{},\"过\":{\"docs\":{},\"程\":{\"docs\":{},\"就\":{\"docs\":{},\"是\":{\"docs\":{},\"定\":{\"docs\":{},\"义\":{\"docs\":{},\"这\":{\"docs\":{},\"个\":{\"docs\":{},\"文\":{\"docs\":{},\"档\":{\"docs\":{},\"集\":{\"docs\":{},\"的\":{\"docs\":{},\"过\":{\"docs\":{},\"程\":{\"docs\":{},\"（\":{\"docs\":{},\"例\":{\"docs\":{},\"如\":{\"docs\":{},\"，\":{\"docs\":{},\"在\":{\"docs\":{},\"搜\":{\"docs\":{},\"索\":{\"docs\":{},\"请\":{\"docs\":{},\"求\":{\"docs\":{},\"的\":{\"docs\":{},\"基\":{\"docs\":{},\"础\":{\"docs\":{},\"上\":{\"docs\":{},\"，\":{\"docs\":{},\"执\":{\"docs\":{},\"行\":{\"docs\":{},\"查\":{\"docs\":{},\"询\":{\"docs\":{},\"/\":{\"docs\":{},\"过\":{\"docs\":{},\"滤\":{\"docs\":{},\"，\":{\"docs\":{},\"才\":{\"docs\":{},\"能\":{\"docs\":{},\"得\":{\"docs\":{},\"到\":{\"docs\":{},\"高\":{\"docs\":{},\"水\":{\"docs\":{},\"平\":{\"docs\":{},\"的\":{\"docs\":{},\"聚\":{\"docs\":{},\"合\":{\"docs\":{},\"结\":{\"docs\":{},\"果\":{\"docs\":{},\"）\":{\"docs\":{},\"。\":{\"docs\":{\"search-api/using-aggregations.html\":{\"ref\":\"search-api/using-aggregations.html\",\"tf\":0.029411764705882353}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"能\":{\"docs\":{},\"是\":{\"docs\":{\"aggregations/structuring-aggregations.html\":{\"ref\":\"aggregations/structuring-aggregations.html\",\"tf\":0.02702702702702703}}}}},\"框\":{\"docs\":{},\"架\":{\"docs\":{},\"有\":{\"docs\":{},\"助\":{\"docs\":{},\"于\":{\"docs\":{},\"根\":{\"docs\":{},\"据\":{\"docs\":{},\"搜\":{\"docs\":{},\"索\":{\"docs\":{},\"查\":{\"docs\":{},\"询\":{\"docs\":{},\"提\":{\"docs\":{},\"供\":{\"docs\":{},\"聚\":{\"docs\":{},\"合\":{\"docs\":{},\"数\":{\"docs\":{},\"据\":{\"docs\":{},\"。\":{\"docs\":{},\"它\":{\"docs\":{},\"是\":{\"docs\":{},\"基\":{\"docs\":{},\"于\":{\"docs\":{},\"简\":{\"docs\":{},\"单\":{\"docs\":{},\"的\":{\"docs\":{},\"构\":{\"docs\":{},\"建\":{\"docs\":{},\"块\":{\"docs\":{},\"也\":{\"docs\":{},\"称\":{\"docs\":{},\"为\":{\"docs\":{},\"整\":{\"docs\":{},\"合\":{\"docs\":{},\"，\":{\"docs\":{},\"整\":{\"docs\":{},\"合\":{\"docs\":{},\"就\":{\"docs\":{},\"是\":{\"docs\":{},\"将\":{\"docs\":{},\"复\":{\"docs\":{},\"杂\":{\"docs\":{},\"的\":{\"docs\":{},\"数\":{\"docs\":{},\"据\":{\"docs\":{},\"摘\":{\"docs\":{},\"要\":{\"docs\":{},\"有\":{\"docs\":{},\"序\":{\"docs\":{},\"的\":{\"docs\":{},\"放\":{\"docs\":{},\"在\":{\"docs\":{},\"一\":{\"docs\":{},\"块\":{\"docs\":{},\"。\":{\"docs\":{\"search-api/using-aggregations.html\":{\"ref\":\"search-api/using-aggregations.html\",\"tf\":0.029411764705882353}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"(\":{\"docs\":{},\"一\":{\"docs\":{},\"个\":{\"docs\":{},\"跟\":{\"docs\":{},\"踪\":{\"docs\":{},\"和\":{\"docs\":{},\"计\":{\"docs\":{},\"算\":{\"docs\":{},\"指\":{\"docs\":{},\"标\":{\"docs\":{},\"的\":{\"docs\":{},\"聚\":{\"docs\":{},\"合\":{\"docs\":{},\")\":{\"docs\":{},\"或\":{\"docs\":{},\"者\":{\"docs\":{\"aggregations/structuring-aggregations.html\":{\"ref\":\"aggregations/structuring-aggregations.html\",\"tf\":0.02702702702702703}}}}}}}}}}}}}}}}}},\"联\":{\"docs\":{},\"合\":{\"docs\":{},\"使\":{\"docs\":{},\"用\":{\"docs\":{},\"，\":{\"docs\":{},\"比\":{\"docs\":{},\"如\":{\"docs\":{},\"在\":{\"docs\":{},\"计\":{\"docs\":{},\"算\":{\"docs\":{},\"一\":{\"docs\":{},\"个\":{\"docs\":{},\"字\":{\"docs\":{},\"段\":{\"docs\":{},\"的\":{\"docs\":{},\"平\":{\"docs\":{},\"均\":{\"docs\":{},\"值\":{\"docs\":{},\"的\":{\"docs\":{},\"时\":{\"docs\":{},\"候\":{\"docs\":{},\"，\":{\"docs\":{},\"可\":{\"docs\":{},\"能\":{\"docs\":{},\"还\":{\"docs\":{},\"会\":{\"docs\":{},\"关\":{\"docs\":{},\"注\":{\"docs\":{},\"这\":{\"docs\":{},\"个\":{\"docs\":{},\"平\":{\"docs\":{},\"均\":{\"docs\":{},\"值\":{\"docs\":{},\"是\":{\"docs\":{},\"由\":{\"docs\":{},\"多\":{\"docs\":{},\"少\":{\"docs\":{},\"个\":{\"docs\":{},\"值\":{\"docs\":{},\"计\":{\"docs\":{},\"算\":{\"docs\":{},\"而\":{\"docs\":{},\"来\":{\"docs\":{},\"。\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"必\":{\"docs\":{},\"须\":{\"docs\":{},\"定\":{\"docs\":{},\"义\":{\"docs\":{},\"在\":{\"docs\":{},\"n\":{\"docs\":{},\"e\":{\"docs\":{},\"s\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"d\":{\"docs\":{},\"之\":{\"docs\":{},\"中\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}}}}}}}}}}}}}},\"判\":{\"docs\":{},\"断\":{\"docs\":{},\"返\":{\"docs\":{},\"回\":{\"docs\":{},\"文\":{\"docs\":{},\"档\":{\"docs\":{},\"是\":{\"docs\":{},\"否\":{\"docs\":{},\"达\":{\"docs\":{},\"到\":{\"docs\":{},\"设\":{\"docs\":{},\"置\":{\"docs\":{},\"的\":{\"docs\":{},\"数\":{\"docs\":{},\"量\":{\"docs\":{},\"：\":{\"docs\":{\"search-api/terminate-after.html\":{\"ref\":\"search-api/terminate-after.html\",\"tf\":0.0625}}}}}}}}}}}}}}}}}},\"获\":{\"docs\":{},\"取\":{\"docs\":{},\"文\":{\"docs\":{},\"档\":{\"docs\":{},\"的\":{\"docs\":{},\"最\":{\"docs\":{},\"大\":{\"docs\":{},\"数\":{\"docs\":{},\"量\":{\"docs\":{},\"，\":{\"docs\":{},\"如\":{\"docs\":{},\"果\":{\"docs\":{},\"设\":{\"docs\":{},\"置\":{\"docs\":{},\"了\":{\"docs\":{},\"，\":{\"docs\":{},\"需\":{\"docs\":{},\"要\":{\"docs\":{},\"通\":{\"docs\":{},\"过\":{\"docs\":{},\"s\":{\"docs\":{},\"e\":{\"docs\":{},\"a\":{\"docs\":{},\"r\":{\"docs\":{},\"c\":{\"docs\":{},\"h\":{\"docs\":{},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"s\":{\"docs\":{},\"p\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{},\"s\":{\"docs\":{},\"e\":{\"docs\":{},\"对\":{\"docs\":{},\"象\":{\"docs\":{},\"里\":{\"docs\":{},\"的\":{\"docs\":{},\"i\":{\"docs\":{},\"s\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"m\":{\"docs\":{},\"i\":{\"docs\":{},\"n\":{\"docs\":{},\"a\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"d\":{\"docs\":{},\"e\":{\"docs\":{},\"a\":{\"docs\":{},\"r\":{\"docs\":{},\"l\":{\"docs\":{},\"y\":{\"docs\":{},\"(\":{\"docs\":{},\")\":{\"docs\":{\"search-api/terminate-after.html\":{\"ref\":\"search-api/terminate-after.html\",\"tf\":0.0625}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"《\":{\"docs\":{},\"为\":{\"docs\":{},\"什\":{\"docs\":{},\"么\":{\"docs\":{},\"e\":{\"docs\":{},\"l\":{\"docs\":{},\"a\":{\"docs\":{},\"s\":{\"docs\":{},\"t\":{\"docs\":{},\"i\":{\"docs\":{},\"c\":{\"docs\":{},\"s\":{\"docs\":{},\"e\":{\"docs\":{},\"a\":{\"docs\":{},\"r\":{\"docs\":{},\"c\":{\"docs\":{},\"h\":{\"docs\":{},\"应\":{\"docs\":{},\"用\":{\"docs\":{},\"开\":{\"docs\":{},\"发\":{\"docs\":{},\"者\":{\"docs\":{},\"需\":{\"docs\":{},\"要\":{\"docs\":{},\"了\":{\"docs\":{},\"解\":{\"docs\":{},\"c\":{\"docs\":{},\"l\":{\"docs\":{},\"u\":{\"docs\":{},\"s\":{\"docs\":{},\"t\":{\"docs\":{\"search-api/search-template.html\":{\"ref\":\"search-api/search-template.html\",\"tf\":0.0055248618784530384}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"上\":{\"docs\":{\"search-api/search-template.html\":{\"ref\":\"search-api/search-template.html\",\"tf\":0.0055248618784530384}},\"面\":{\"docs\":{},\"代\":{\"docs\":{},\"码\":{\"docs\":{},\"中\":{\"docs\":{},\"的\":{\"docs\":{},\"查\":{\"docs\":{},\"询\":{\"docs\":{},\"语\":{\"docs\":{},\"句\":{\"docs\":{},\"与\":{\"docs\":{},\"下\":{\"docs\":{},\"面\":{\"docs\":{},\"的\":{\"docs\":{},\"是\":{\"docs\":{},\"等\":{\"docs\":{},\"价\":{\"docs\":{},\"的\":{\"docs\":{},\"：\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125}}}}}}}}}}}}}}}}}}}}},\"中\":{\"docs\":{},\":\":{\"docs\":{\"search-api/search-template.html\":{\"ref\":\"search-api/search-template.html\",\"tf\":0.0055248618784530384}}},\"所\":{\"docs\":{},\"述\":{\"docs\":{},\"，\":{\"docs\":{},\"可\":{\"docs\":{},\"以\":{\"docs\":{},\"在\":{\"docs\":{},\"聚\":{\"docs\":{},\"合\":{\"docs\":{},\"中\":{\"docs\":{},\"定\":{\"docs\":{},\"义\":{\"docs\":{},\"子\":{\"docs\":{},\"聚\":{\"docs\":{},\"合\":{\"docs\":{},\"。\":{\"docs\":{\"aggregations/structuring-aggregations.html\":{\"ref\":\"aggregations/structuring-aggregations.html\",\"tf\":0.02702702702702703}}}}}}}}}}}}}}}}},\"才\":{\"docs\":{},\"能\":{\"docs\":{},\"使\":{\"docs\":{},\"用\":{\"docs\":{},\"此\":{\"docs\":{},\"类\":{\"docs\":{},\"型\":{\"docs\":{},\"：\":{\"docs\":{\"query-dsl/geo-queries.html\":{\"ref\":\"query-dsl/geo-queries.html\",\"tf\":0.004901960784313725}}}}}}}}}}},\"也\":{\"docs\":{},\"可\":{\"docs\":{},\"以\":{\"docs\":{},\"执\":{\"docs\":{},\"行\":{\"docs\":{\"search-api/search-template.html\":{\"ref\":\"search-api/search-template.html\",\"tf\":0.0055248618784530384}}}}}}},\"位\":{\"docs\":{},\"置\":{\"docs\":{},\",\":{\"docs\":{\"search-api/search-template.html\":{\"ref\":\"search-api/search-template.html\",\"tf\":0.0055248618784530384}}}},\"于\":{\"docs\":{},\"由\":{\"docs\":{},\"其\":{\"docs\":{},\"他\":{\"docs\":{},\"s\":{\"docs\":{},\"p\":{\"docs\":{},\"a\":{\"docs\":{},\"n\":{\"docs\":{},\"查\":{\"docs\":{},\"询\":{\"docs\":{},\"列\":{\"docs\":{},\"表\":{\"docs\":{},\"返\":{\"docs\":{},\"回\":{\"docs\":{},\"的\":{\"docs\":{},\"范\":{\"docs\":{},\"围\":{\"docs\":{},\"内\":{\"docs\":{},\"，\":{\"docs\":{},\"就\":{\"docs\":{},\"会\":{\"docs\":{},\"返\":{\"docs\":{},\"回\":{\"docs\":{},\"单\":{\"docs\":{},\"个\":{\"docs\":{},\"s\":{\"docs\":{},\"p\":{\"docs\":{},\"a\":{\"docs\":{},\"n\":{\"docs\":{},\"查\":{\"docs\":{},\"询\":{\"docs\":{},\"的\":{\"docs\":{},\"结\":{\"docs\":{},\"果\":{\"docs\":{},\"，\":{\"docs\":{\"query-dsl/span-queries.html\":{\"ref\":\"query-dsl/span-queries.html\",\"tf\":0.005555555555555556}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"例\":{\"docs\":{},\"如\":{\"docs\":{},\"，\":{\"docs\":{},\"有\":{\"docs\":{},\"一\":{\"docs\":{},\"个\":{\"docs\":{},\"名\":{\"docs\":{},\"为\":{\"docs\":{\"search-api/search-template.html\":{\"ref\":\"search-api/search-template.html\",\"tf\":0.0055248618784530384}}}}}}},\"这\":{\"docs\":{},\"里\":{\"docs\":{},\"是\":{\"docs\":{},\"一\":{\"docs\":{},\"个\":{\"3\":{\"docs\":{},\"级\":{\"docs\":{},\"聚\":{\"docs\":{},\"合\":{\"docs\":{},\"组\":{\"docs\":{},\"成\":{\"docs\":{},\"的\":{\"docs\":{},\"聚\":{\"docs\":{},\"合\":{\"docs\":{},\"：\":{\"docs\":{\"aggregations/structuring-aggregations.html\":{\"ref\":\"aggregations/structuring-aggregations.html\",\"tf\":0.02702702702702703}}}}}}}}}}}},\"docs\":{}}}}}}}}},\"内\":{\"docs\":{},\"联\":{\"docs\":{},\"(\":{\"docs\":{},\"i\":{\"docs\":{},\"n\":{\"docs\":{},\"l\":{\"docs\":{},\"i\":{\"docs\":{},\"n\":{\"docs\":{},\"e\":{\"docs\":{},\")\":{\"docs\":{\"search-api/search-template.html\":{\"ref\":\"search-api/search-template.html\",\"tf\":0.0055248618784530384}}}}}}}}}}},\"的\":{\"docs\":{},\"每\":{\"docs\":{},\"一\":{\"docs\":{},\"个\":{\"docs\":{},\"【\":{\"docs\":{},\"唯\":{\"docs\":{},\"一\":{\"docs\":{},\"词\":{\"docs\":{},\"元\":{\"docs\":{},\"】\":{\"docs\":{},\"为\":{\"docs\":{},\"一\":{\"docs\":{},\"个\":{\"docs\":{},\"桶\":{\"docs\":{},\"，\":{\"docs\":{},\"并\":{\"docs\":{},\"计\":{\"docs\":{},\"算\":{\"docs\":{},\"每\":{\"docs\":{},\"个\":{\"docs\":{},\"桶\":{\"docs\":{},\"内\":{\"docs\":{},\"文\":{\"docs\":{},\"档\":{\"docs\":{},\"个\":{\"docs\":{},\"数\":{\"docs\":{},\"。\":{\"docs\":{},\"默\":{\"docs\":{},\"认\":{\"docs\":{},\"返\":{\"docs\":{},\"回\":{\"docs\":{},\"顺\":{\"docs\":{},\"序\":{\"docs\":{},\"是\":{\"docs\":{},\"按\":{\"docs\":{},\"照\":{\"docs\":{},\"文\":{\"docs\":{},\"档\":{\"docs\":{},\"个\":{\"docs\":{},\"数\":{\"docs\":{},\"多\":{\"docs\":{},\"少\":{\"docs\":{},\"排\":{\"docs\":{},\"序\":{\"docs\":{},\"。\":{\"docs\":{},\"当\":{\"docs\":{},\"不\":{\"docs\":{},\"返\":{\"docs\":{},\"回\":{\"docs\":{},\"所\":{\"docs\":{},\"有\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"包\":{\"docs\":{},\"含\":{\"docs\":{},\"了\":{\"docs\":{},\"整\":{\"docs\":{},\"个\":{\"docs\":{},\"群\":{\"docs\":{},\"集\":{\"docs\":{},\"中\":{\"docs\":{},\"所\":{\"docs\":{},\"有\":{\"docs\":{},\"分\":{\"docs\":{},\"片\":{\"docs\":{},\"的\":{\"docs\":{},\"元\":{\"docs\":{},\"信\":{\"docs\":{},\"息\":{\"docs\":{},\"(\":{\"docs\":{},\"规\":{\"docs\":{},\"则\":{\"docs\":{},\",\":{\"docs\":{\"search-api/search-template.html\":{\"ref\":\"search-api/search-template.html\",\"tf\":0.0055248618784530384}}}}}}}}}}}}}}}}}}}},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"m\":{\"docs\":{},\",\":{\"docs\":{\"query-dsl/span-queries.html\":{\"ref\":\"query-dsl/span-queries.html\",\"tf\":0.005555555555555556}}}}}}}},\"装\":{\"docs\":{},\"另\":{\"docs\":{},\"一\":{\"docs\":{},\"个\":{\"docs\":{},\"s\":{\"docs\":{},\"p\":{\"docs\":{},\"a\":{\"docs\":{},\"n\":{\"docs\":{},\"查\":{\"docs\":{},\"询\":{\"docs\":{},\"，\":{\"docs\":{},\"并\":{\"docs\":{},\"排\":{\"docs\":{},\"除\":{\"docs\":{},\"与\":{\"docs\":{},\"该\":{\"docs\":{},\"查\":{\"docs\":{},\"询\":{\"docs\":{},\"匹\":{\"docs\":{},\"配\":{\"docs\":{},\"的\":{\"docs\":{},\"所\":{\"docs\":{},\"有\":{\"docs\":{},\"文\":{\"docs\":{},\"档\":{\"docs\":{},\"。\":{\"docs\":{\"query-dsl/span-queries.html\":{\"ref\":\"query-dsl/span-queries.html\",\"tf\":0.005555555555555556}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"名\":{\"docs\":{\"search-api/search-template.html\":{\"ref\":\"search-api/search-template.html\",\"tf\":0.016574585635359115}}},\"大\":{\"docs\":{},\"小\":{\"docs\":{},\"等\":{\"docs\":{},\"信\":{\"docs\":{},\"息\":{\"docs\":{},\")\":{\"docs\":{},\",\":{\"docs\":{\"search-api/search-template.html\":{\"ref\":\"search-api/search-template.html\",\"tf\":0.0055248618784530384}}}}}}}},\"多\":{\"docs\":{},\"数\":{\"docs\":{},\"标\":{\"docs\":{},\"准\":{\"docs\":{},\"的\":{\"docs\":{},\"搜\":{\"docs\":{},\"索\":{\"docs\":{},\"选\":{\"docs\":{},\"项\":{\"docs\":{},\"可\":{\"docs\":{},\"以\":{\"docs\":{},\"使\":{\"docs\":{},\"用\":{\"docs\":{},\"，\":{\"docs\":{},\"比\":{\"docs\":{},\"如\":{\"docs\":{},\"：\":{\"docs\":{},\"f\":{\"docs\":{},\"r\":{\"docs\":{},\"o\":{\"docs\":{},\"m\":{\"docs\":{},\",\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}}}}}}}}}}}}}}}}}}}}}}}},\"概\":{\"docs\":{},\"会\":{\"docs\":{},\"输\":{\"docs\":{},\"出\":{\"docs\":{},\"：\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00291970802919708}}}}}},\"输\":{\"docs\":{},\"出\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}},\"：\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00291970802919708}}}}}}},\"将\":{\"docs\":{},\"模\":{\"docs\":{},\"板\":{\"docs\":{},\"参\":{\"docs\":{},\"数\":{\"docs\":{},\"定\":{\"docs\":{},\"义\":{\"docs\":{},\"为\":{\"docs\":{\"search-api/search-template.html\":{\"ref\":\"search-api/search-template.html\",\"tf\":0.0055248618784530384}}}}}}}}}},\"并\":{\"docs\":{},\"保\":{\"docs\":{},\"持\":{\"docs\":{},\"每\":{\"docs\":{},\"个\":{\"docs\":{},\"每\":{\"docs\":{},\"节\":{\"docs\":{},\"的\":{\"docs\":{},\"信\":{\"docs\":{},\"息\":{\"docs\":{},\"同\":{\"docs\":{},\"步\":{\"docs\":{},\"。\":{\"docs\":{\"search-api/search-template.html\":{\"ref\":\"search-api/search-template.html\",\"tf\":0.0055248618784530384}}}}}}}}}}}}}}},\"执\":{\"docs\":{},\"行\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.01078167115902965}},\"一\":{\"docs\":{},\"个\":{\"docs\":{},\"存\":{\"docs\":{},\"储\":{\"docs\":{},\"的\":{\"docs\":{\"search-api/search-template.html\":{\"ref\":\"search-api/search-template.html\",\"tf\":0.0055248618784530384}}}}}}}}},\"的\":{\"docs\":{\"query-dsl/span-queries.html\":{\"ref\":\"query-dsl/span-queries.html\",\"tf\":0.005555555555555556}},\"文\":{\"docs\":{},\"件\":{\"docs\":{},\"，\":{\"docs\":{},\"其\":{\"docs\":{},\"中\":{\"docs\":{},\"包\":{\"docs\":{},\"含\":{\"docs\":{},\"：\":{\"docs\":{\"search-api/search-template.html\":{\"ref\":\"search-api/search-template.html\",\"tf\":0.0055248618784530384}}}}}}}}},\"档\":{\"docs\":{},\"。\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125}}}}},\"值\":{\"docs\":{},\"。\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}},\"，\":{\"docs\":{},\"不\":{\"docs\":{},\"包\":{\"docs\":{},\"括\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}}}},\"情\":{\"docs\":{},\"况\":{\"docs\":{},\"，\":{\"docs\":{},\"文\":{\"docs\":{},\"档\":{\"docs\":{},\"个\":{\"docs\":{},\"数\":{\"docs\":{},\"可\":{\"docs\":{},\"能\":{\"docs\":{},\"不\":{\"docs\":{},\"准\":{\"docs\":{},\"确\":{\"docs\":{},\"。\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}}}}}}}}}}}},\"完\":{\"docs\":{},\"整\":{\"docs\":{},\"的\":{\"docs\":{},\"查\":{\"docs\":{},\"询\":{\"docs\":{\"query-dsl.html\":{\"ref\":\"query-dsl.html\",\"tf\":0.043478260869565216}}}}}}},\"方\":{\"docs\":{},\"式\":{\"docs\":{},\"提\":{\"docs\":{},\"供\":{\"docs\":{},\"完\":{\"docs\":{},\"整\":{\"docs\":{},\"的\":{\"docs\":{},\"j\":{\"docs\":{},\"a\":{\"docs\":{},\"v\":{\"docs\":{},\"a\":{\"docs\":{},\"查\":{\"docs\":{},\"询\":{\"docs\":{},\"d\":{\"docs\":{},\"s\":{\"docs\":{},\"l\":{\"docs\":{},\"。\":{\"docs\":{\"query-dsl.html\":{\"ref\":\"query-dsl.html\",\"tf\":0.043478260869565216}}}}}}}}}}}}}}}}}}},\"脚\":{\"docs\":{},\"本\":{\"docs\":{},\"，\":{\"docs\":{},\"请\":{\"docs\":{},\"执\":{\"docs\":{},\"行\":{\"docs\":{},\"以\":{\"docs\":{},\"下\":{\"docs\":{},\"操\":{\"docs\":{},\"作\":{\"docs\":{},\"：\":{\"docs\":{\"query-dsl/specialized-queries.html\":{\"ref\":\"query-dsl/specialized-queries.html\",\"tf\":0.004761904761904762}}}}}}}}}}}}}},\"磁\":{\"docs\":{},\"盘\":{\"docs\":{},\"上\":{\"docs\":{\"search-api/search-template.html\":{\"ref\":\"search-api/search-template.html\",\"tf\":0.0055248618784530384}}}}},\"语\":{\"docs\":{},\"言\":{\"docs\":{},\"预\":{\"docs\":{},\"先\":{\"docs\":{},\"呈\":{\"docs\":{},\"现\":{\"docs\":{},\"搜\":{\"docs\":{},\"索\":{\"docs\":{},\"请\":{\"docs\":{},\"求\":{\"docs\":{},\"。\":{\"docs\":{\"search-api/search-template.html\":{\"ref\":\"search-api/search-template.html\",\"tf\":0.0055248618784530384}}}}}}}}}}}}},\"还\":{\"docs\":{},\"可\":{\"docs\":{},\"以\":{\"docs\":{},\"将\":{\"docs\":{\"search-api/search-template.html\":{\"ref\":\"search-api/search-template.html\",\"tf\":0.0055248618784530384}}}}}},\"构\":{\"docs\":{},\"建\":{\"docs\":{},\"对\":{\"docs\":{},\"象\":{\"docs\":{},\"，\":{\"docs\":{},\"增\":{\"docs\":{},\"加\":{\"docs\":{},\"到\":{\"docs\":{},\"搜\":{\"docs\":{},\"索\":{\"docs\":{},\"请\":{\"docs\":{},\"求\":{\"docs\":{},\"中\":{\"docs\":{},\":\":{\"docs\":{\"aggregations.html\":{\"ref\":\"aggregations.html\",\"tf\":0.038461538461538464}}}}}}}}}}}}}}}},\"结\":{\"docs\":{},\"构\":{\"docs\":{},\"化\":{\"docs\":{},\"聚\":{\"docs\":{},\"合\":{\"docs\":{\"aggregations/structuring-aggregations.html\":{\"ref\":\"aggregations/structuring-aggregations.html\",\"tf\":0.02702702702702703}}}}}},\"束\":{\"docs\":{},\"值\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125}}}}},\">\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.010218978102189781},\"query-dsl/specialized-queries.html\":{\"ref\":\"query-dsl/specialized-queries.html\",\"tf\":0.009523809523809525}}},\"k\":{\"docs\":{},\"e\":{\"docs\":{},\"y\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00583941605839416},\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.03471074380165289}},\",\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854},\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.005785123966942148}}},\".\":{\"docs\":{},\"g\":{\"docs\":{},\"e\":{\"docs\":{},\"t\":{\"docs\":{},\"y\":{\"docs\":{},\"e\":{\"docs\":{},\"a\":{\"docs\":{},\"r\":{\"docs\":{},\"(\":{\"docs\":{},\")\":{\"docs\":{},\",\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}}}}}}}}}},\"a\":{\"docs\":{},\"s\":{\"docs\":{},\"s\":{\"docs\":{},\"t\":{\"docs\":{},\"r\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.001652892561983471}},\"i\":{\"docs\":{},\"n\":{\"docs\":{},\"g\":{\"docs\":{},\",\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.001652892561983471}}}}}}}}}}}}}},\"…\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}}},\"值\":{\"docs\":{},\"计\":{\"docs\":{},\"数\":{\"docs\":{},\"聚\":{\"docs\":{},\"合\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}},\"—\":{\"docs\":{},\"—\":{\"docs\":{},\"计\":{\"docs\":{},\"算\":{\"docs\":{},\"聚\":{\"docs\":{},\"合\":{\"docs\":{},\"文\":{\"docs\":{},\"档\":{\"docs\":{},\"中\":{\"docs\":{},\"某\":{\"docs\":{},\"个\":{\"docs\":{},\"值\":{\"docs\":{},\"的\":{\"docs\":{},\"个\":{\"docs\":{},\"数\":{\"docs\":{},\",\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}}}}}}}}}}}}}}}}}}}}}},\"（\":{\"docs\":{},\"区\":{\"docs\":{},\"间\":{\"docs\":{},\"前\":{\"docs\":{},\"闭\":{\"docs\":{},\"后\":{\"docs\":{},\"开\":{\"docs\":{},\"）\":{\"docs\":{},\"。\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}}}}}}}},\"，\":{\"docs\":{},\"不\":{\"docs\":{},\"包\":{\"docs\":{},\"括\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}}}},\"准\":{\"docs\":{},\"备\":{\"docs\":{},\"聚\":{\"docs\":{},\"合\":{\"docs\":{},\"请\":{\"docs\":{},\"求\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.017518248175182483},\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.013223140495867768}}}}}}}},\"地\":{\"docs\":{},\"理\":{\"docs\":{},\"边\":{\"docs\":{},\"界\":{\"docs\":{},\"聚\":{\"docs\":{},\"合\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}},\"—\":{\"docs\":{},\"—\":{\"docs\":{},\"基\":{\"docs\":{},\"于\":{\"docs\":{},\"文\":{\"docs\":{},\"档\":{\"docs\":{},\"的\":{\"docs\":{},\"某\":{\"docs\":{},\"个\":{\"docs\":{},\"字\":{\"docs\":{},\"段\":{\"docs\":{},\"（\":{\"docs\":{},\"g\":{\"docs\":{},\"e\":{\"docs\":{},\"o\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}}}}}}}}}}}}}}}}}}}}},\"距\":{\"docs\":{},\"离\":{\"docs\":{},\"聚\":{\"docs\":{},\"合\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}}},\"位\":{\"docs\":{},\"置\":{\"docs\":{},\"查\":{\"docs\":{},\"询\":{\"docs\":{\"query-dsl/geo-queries.html\":{\"ref\":\"query-dsl/geo-queries.html\",\"tf\":0.004901960784313725}}}}}}}},\"基\":{\"docs\":{},\"于\":{\"docs\":{},\"文\":{\"docs\":{},\"档\":{\"docs\":{},\"的\":{\"docs\":{},\"某\":{\"docs\":{},\"个\":{\"docs\":{},\"值\":{\"docs\":{},\"，\":{\"docs\":{},\"计\":{\"docs\":{},\"算\":{\"docs\":{},\"文\":{\"docs\":{},\"档\":{\"docs\":{},\"非\":{\"docs\":{},\"重\":{\"docs\":{},\"复\":{\"docs\":{},\"的\":{\"docs\":{},\"个\":{\"docs\":{},\"数\":{\"docs\":{},\"（\":{\"docs\":{},\"去\":{\"docs\":{},\"重\":{\"docs\":{},\"计\":{\"docs\":{},\"数\":{\"docs\":{},\"）\":{\"docs\":{},\"。\":{\"docs\":{},\"。\":{\"docs\":{},\"这\":{\"docs\":{},\"些\":{\"docs\":{},\"值\":{\"docs\":{},\"可\":{\"docs\":{},\"以\":{\"docs\":{},\"从\":{\"docs\":{},\"特\":{\"docs\":{},\"定\":{\"docs\":{},\"数\":{\"docs\":{},\"值\":{\"docs\":{},\"字\":{\"docs\":{},\"段\":{\"docs\":{},\"中\":{\"docs\":{},\"提\":{\"docs\":{},\"取\":{\"docs\":{},\"，\":{\"docs\":{},\"也\":{\"docs\":{},\"可\":{\"docs\":{},\"以\":{\"docs\":{},\"由\":{\"docs\":{},\"提\":{\"docs\":{},\"供\":{\"docs\":{},\"的\":{\"docs\":{},\"脚\":{\"docs\":{},\"本\":{\"docs\":{},\"生\":{\"docs\":{},\"成\":{\"docs\":{},\"。\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"中\":{\"docs\":{},\"的\":{\"docs\":{},\"某\":{\"docs\":{},\"个\":{\"docs\":{},\"【\":{\"docs\":{},\"数\":{\"docs\":{},\"值\":{\"docs\":{},\"类\":{\"docs\":{},\"型\":{\"docs\":{},\"】\":{\"docs\":{},\"字\":{\"docs\":{},\"段\":{\"docs\":{},\"，\":{\"docs\":{},\"通\":{\"docs\":{},\"过\":{\"docs\":{},\"计\":{\"docs\":{},\"算\":{\"docs\":{},\"来\":{\"docs\":{},\"动\":{\"docs\":{},\"态\":{\"docs\":{},\"的\":{\"docs\":{},\"分\":{\"docs\":{},\"桶\":{\"docs\":{},\"。\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"字\":{\"docs\":{},\"段\":{\"docs\":{},\"数\":{\"docs\":{},\"据\":{\"docs\":{},\"的\":{\"docs\":{},\"单\":{\"docs\":{},\"桶\":{\"docs\":{},\"聚\":{\"docs\":{},\"合\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}},\"，\":{\"docs\":{},\"创\":{\"docs\":{},\"建\":{\"docs\":{},\"当\":{\"docs\":{},\"前\":{\"docs\":{},\"文\":{\"docs\":{},\"档\":{\"docs\":{},\"集\":{\"docs\":{},\"上\":{\"docs\":{},\"下\":{\"docs\":{},\"文\":{\"docs\":{},\"中\":{\"docs\":{},\"缺\":{\"docs\":{},\"少\":{\"docs\":{},\"字\":{\"docs\":{},\"段\":{\"docs\":{},\"值\":{\"docs\":{},\"的\":{\"docs\":{},\"所\":{\"docs\":{},\"有\":{\"docs\":{},\"文\":{\"docs\":{},\"档\":{\"docs\":{},\"的\":{\"docs\":{},\"b\":{\"docs\":{},\"u\":{\"docs\":{},\"c\":{\"docs\":{},\"k\":{\"docs\":{},\"e\":{\"docs\":{},\"t\":{\"docs\":{},\"（\":{\"docs\":{},\"桶\":{\"docs\":{},\"）\":{\"docs\":{},\"（\":{\"docs\":{},\"有\":{\"docs\":{},\"效\":{\"docs\":{},\"地\":{\"docs\":{},\"，\":{\"docs\":{},\"丢\":{\"docs\":{},\"失\":{\"docs\":{},\"了\":{\"docs\":{},\"一\":{\"docs\":{},\"个\":{\"docs\":{},\"字\":{\"docs\":{},\"段\":{\"docs\":{},\"或\":{\"docs\":{},\"配\":{\"docs\":{},\"置\":{\"docs\":{},\"了\":{\"docs\":{},\"n\":{\"docs\":{},\"u\":{\"docs\":{},\"l\":{\"docs\":{},\"l\":{\"docs\":{},\"值\":{\"docs\":{},\"集\":{\"docs\":{},\"）\":{\"docs\":{},\"，\":{\"docs\":{},\"此\":{\"docs\":{},\"聚\":{\"docs\":{},\"合\":{\"docs\":{},\"器\":{\"docs\":{},\"通\":{\"docs\":{},\"常\":{\"docs\":{},\"与\":{\"docs\":{},\"其\":{\"docs\":{},\"他\":{\"docs\":{},\"字\":{\"docs\":{},\"段\":{\"docs\":{},\"数\":{\"docs\":{},\"据\":{\"docs\":{},\"桶\":{\"docs\":{},\"聚\":{\"docs\":{},\"合\":{\"docs\":{},\"器\":{\"docs\":{},\"（\":{\"docs\":{},\"例\":{\"docs\":{},\"如\":{\"docs\":{},\"范\":{\"docs\":{},\"围\":{\"docs\":{},\"）\":{\"docs\":{},\"结\":{\"docs\":{},\"合\":{\"docs\":{},\"使\":{\"docs\":{},\"用\":{\"docs\":{},\"，\":{\"docs\":{},\"以\":{\"docs\":{},\"返\":{\"docs\":{},\"回\":{\"docs\":{},\"由\":{\"docs\":{},\"于\":{\"docs\":{},\"缺\":{\"docs\":{},\"少\":{\"docs\":{},\"字\":{\"docs\":{},\"段\":{\"docs\":{},\"数\":{\"docs\":{},\"据\":{\"docs\":{},\"值\":{\"docs\":{},\"而\":{\"docs\":{},\"无\":{\"docs\":{},\"法\":{\"docs\":{},\"放\":{\"docs\":{},\"置\":{\"docs\":{},\"在\":{\"docs\":{},\"任\":{\"docs\":{},\"何\":{\"docs\":{},\"其\":{\"docs\":{},\"他\":{\"docs\":{},\"存\":{\"docs\":{},\"储\":{\"docs\":{},\"区\":{\"docs\":{},\"中\":{\"docs\":{},\"的\":{\"docs\":{},\"所\":{\"docs\":{},\"有\":{\"docs\":{},\"文\":{\"docs\":{},\"档\":{\"docs\":{},\"的\":{\"docs\":{},\"信\":{\"docs\":{},\"息\":{\"docs\":{},\"。\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"嵌\":{\"docs\":{},\"套\":{\"docs\":{},\"（\":{\"docs\":{},\"n\":{\"docs\":{},\"e\":{\"docs\":{},\"s\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"d\":{\"docs\":{},\"）\":{\"docs\":{},\"数\":{\"docs\":{},\"据\":{\"docs\":{},\"类\":{\"docs\":{},\"型\":{\"docs\":{},\"，\":{\"docs\":{},\"把\":{\"docs\":{},\"该\":{\"docs\":{},\"【\":{\"docs\":{},\"嵌\":{\"docs\":{},\"套\":{\"docs\":{},\"类\":{\"docs\":{},\"型\":{\"docs\":{},\"的\":{\"docs\":{},\"信\":{\"docs\":{},\"息\":{\"docs\":{},\"】\":{\"docs\":{},\"聚\":{\"docs\":{},\"合\":{\"docs\":{},\"到\":{\"docs\":{},\"单\":{\"docs\":{},\"个\":{\"docs\":{},\"桶\":{\"docs\":{},\"里\":{\"docs\":{},\"，\":{\"docs\":{},\"然\":{\"docs\":{},\"后\":{\"docs\":{},\"就\":{\"docs\":{},\"可\":{\"docs\":{},\"以\":{\"docs\":{},\"对\":{\"docs\":{},\"嵌\":{\"docs\":{},\"套\":{\"docs\":{},\"类\":{\"docs\":{},\"型\":{\"docs\":{},\"做\":{\"docs\":{},\"进\":{\"docs\":{},\"一\":{\"docs\":{},\"步\":{\"docs\":{},\"的\":{\"docs\":{},\"聚\":{\"docs\":{},\"合\":{\"docs\":{},\"操\":{\"docs\":{},\"作\":{\"docs\":{},\"。\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"某\":{\"docs\":{},\"个\":{\"docs\":{},\"f\":{\"docs\":{},\"i\":{\"docs\":{},\"e\":{\"docs\":{},\"l\":{\"docs\":{},\"d\":{\"docs\":{},\"，\":{\"docs\":{},\"该\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}}}}}},\"值\":{\"docs\":{},\"（\":{\"docs\":{},\"可\":{\"docs\":{},\"以\":{\"docs\":{},\"是\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}}}}}}},\"数\":{\"docs\":{},\"聚\":{\"docs\":{},\"合\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}}}}}},\"平\":{\"docs\":{},\"均\":{\"docs\":{},\"值\":{\"docs\":{},\"聚\":{\"docs\":{},\"合\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}}}}}}},\"扩\":{\"docs\":{},\"展\":{\"docs\":{\"query-dsl/span-queries.html\":{\"ref\":\"query-dsl/span-queries.html\",\"tf\":0.005555555555555556}},\"统\":{\"docs\":{},\"计\":{\"docs\":{},\"聚\":{\"docs\":{},\"合\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}},\"—\":{\"docs\":{},\"—\":{\"docs\":{},\"基\":{\"docs\":{},\"于\":{\"docs\":{},\"文\":{\"docs\":{},\"档\":{\"docs\":{},\"的\":{\"docs\":{},\"某\":{\"docs\":{},\"个\":{\"docs\":{},\"值\":{\"docs\":{},\"，\":{\"docs\":{},\"计\":{\"docs\":{},\"算\":{\"docs\":{},\"出\":{\"docs\":{},\"一\":{\"docs\":{},\"些\":{\"docs\":{},\"统\":{\"docs\":{},\"计\":{\"docs\":{},\"信\":{\"docs\":{},\"息\":{\"docs\":{},\"（\":{\"docs\":{},\"比\":{\"docs\":{},\"普\":{\"docs\":{},\"通\":{\"docs\":{},\"的\":{\"docs\":{},\"s\":{\"docs\":{},\"t\":{\"docs\":{},\"a\":{\"docs\":{},\"t\":{\"docs\":{},\"s\":{\"docs\":{},\"聚\":{\"docs\":{},\"合\":{\"docs\":{},\"多\":{\"docs\":{},\"了\":{\"docs\":{},\"s\":{\"docs\":{},\"u\":{\"docs\":{},\"m\":{\"docs\":{},\"_\":{\"docs\":{},\"o\":{\"docs\":{},\"f\":{\"docs\":{},\"_\":{\"docs\":{},\"s\":{\"docs\":{},\"q\":{\"docs\":{},\"u\":{\"docs\":{},\"a\":{\"docs\":{},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"s\":{\"docs\":{},\"、\":{\"docs\":{},\"v\":{\"docs\":{},\"a\":{\"docs\":{},\"r\":{\"docs\":{},\"i\":{\"docs\":{},\"a\":{\"docs\":{},\"n\":{\"docs\":{},\"c\":{\"docs\":{},\"e\":{\"docs\":{},\"、\":{\"docs\":{},\"s\":{\"docs\":{},\"t\":{\"docs\":{},\"d\":{\"docs\":{},\"_\":{\"docs\":{},\"d\":{\"docs\":{},\"e\":{\"docs\":{},\"v\":{\"docs\":{},\"i\":{\"docs\":{},\"a\":{\"docs\":{},\"t\":{\"docs\":{},\"i\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{},\"、\":{\"docs\":{},\"s\":{\"docs\":{},\"t\":{\"docs\":{},\"d\":{\"docs\":{},\"_\":{\"docs\":{},\"d\":{\"docs\":{},\"e\":{\"docs\":{},\"v\":{\"docs\":{},\"i\":{\"docs\":{},\"a\":{\"docs\":{},\"t\":{\"docs\":{},\"i\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{},\"_\":{\"docs\":{},\"b\":{\"docs\":{},\"o\":{\"docs\":{},\"u\":{\"docs\":{},\"n\":{\"docs\":{},\"d\":{\"docs\":{},\"s\":{\"docs\":{},\"）\":{\"docs\":{},\",\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"最\":{\"docs\":{},\"大\":{\"docs\":{},\"值\":{\"docs\":{},\"聚\":{\"docs\":{},\"合\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}}}}}},\"小\":{\"docs\":{},\"值\":{\"docs\":{},\"聚\":{\"docs\":{},\"合\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}}}}}},\"高\":{\"docs\":{},\"匹\":{\"docs\":{},\"配\":{\"docs\":{},\"权\":{\"docs\":{},\"值\":{\"docs\":{},\"聚\":{\"docs\":{},\"合\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}},\"—\":{\"docs\":{},\"—\":{\"docs\":{},\"跟\":{\"docs\":{},\"踪\":{\"docs\":{},\"聚\":{\"docs\":{},\"合\":{\"docs\":{},\"中\":{\"docs\":{},\"相\":{\"docs\":{},\"关\":{\"docs\":{},\"性\":{\"docs\":{},\"最\":{\"docs\":{},\"高\":{\"docs\":{},\"的\":{\"docs\":{},\"文\":{\"docs\":{},\"档\":{\"docs\":{},\"。\":{\"docs\":{},\"该\":{\"docs\":{},\"聚\":{\"docs\":{},\"合\":{\"docs\":{},\"一\":{\"docs\":{},\"般\":{\"docs\":{},\"用\":{\"docs\":{},\"做\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"简\":{\"docs\":{},\"单\":{\"docs\":{},\"的\":{\"docs\":{},\"查\":{\"docs\":{},\"询\":{\"docs\":{},\"，\":{\"docs\":{},\"它\":{\"docs\":{},\"匹\":{\"docs\":{},\"配\":{\"docs\":{},\"所\":{\"docs\":{},\"有\":{\"docs\":{},\"文\":{\"docs\":{},\"档\":{\"docs\":{\"query-dsl/match-all-query.html\":{\"ref\":\"query-dsl/match-all-query.html\",\"tf\":0.1}}}}}}}}}}}}}}}},\"此\":{\"docs\":{},\"功\":{\"docs\":{},\"能\":{\"docs\":{},\"为\":{\"docs\":{},\"实\":{\"docs\":{},\"验\":{\"docs\":{},\"性\":{\"docs\":{},\"的\":{\"docs\":{},\"，\":{\"docs\":{},\"不\":{\"docs\":{},\"建\":{\"docs\":{},\"议\":{\"docs\":{},\"生\":{\"docs\":{},\"产\":{\"docs\":{},\"使\":{\"docs\":{},\"用\":{\"docs\":{},\"，\":{\"docs\":{},\"所\":{\"docs\":{},\"以\":{\"docs\":{},\"也\":{\"docs\":{},\"不\":{\"docs\":{},\"做\":{\"docs\":{},\"过\":{\"docs\":{},\"多\":{\"docs\":{},\"说\":{\"docs\":{},\"明\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"求\":{\"docs\":{},\"和\":{\"docs\":{},\"聚\":{\"docs\":{},\"合\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}}}}}},\"注\":{\"docs\":{},\"意\":{\"docs\":{},\"：\":{\"docs\":{},\"请\":{\"docs\":{},\"参\":{\"docs\":{},\"考\":{\"docs\":{},\"百\":{\"docs\":{},\"分\":{\"docs\":{},\"比\":{\"docs\":{},\"（\":{\"docs\":{},\"通\":{\"docs\":{},\"常\":{\"docs\":{},\"）\":{\"docs\":{},\"近\":{\"docs\":{},\"视\":{\"docs\":{},\"值\":{\"docs\":{},\"（\":{\"docs\":{},\"p\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"c\":{\"docs\":{},\"e\":{\"docs\":{},\"n\":{\"docs\":{},\"t\":{\"docs\":{},\"i\":{\"docs\":{},\"l\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}}}}}}}}}}}}}}}}}}}}}}}}}},\"，\":{\"docs\":{},\"可\":{\"docs\":{},\"以\":{\"docs\":{},\"使\":{\"docs\":{},\"用\":{\"docs\":{},\"q\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"y\":{\"docs\":{},\"b\":{\"docs\":{},\"u\":{\"docs\":{},\"i\":{\"docs\":{},\"l\":{\"docs\":{},\"d\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"对\":{\"docs\":{},\"象\":{\"docs\":{},\"上\":{\"docs\":{},\"的\":{\"docs\":{},\"t\":{\"docs\":{},\"o\":{\"docs\":{},\"s\":{\"docs\":{},\"t\":{\"docs\":{},\"r\":{\"docs\":{},\"i\":{\"docs\":{},\"n\":{\"docs\":{},\"g\":{\"docs\":{},\"（\":{\"docs\":{},\"）\":{\"docs\":{},\"方\":{\"docs\":{},\"法\":{\"docs\":{},\"打\":{\"docs\":{},\"印\":{\"docs\":{},\"。\":{\"docs\":{\"query-dsl.html\":{\"ref\":\"query-dsl.html\",\"tf\":0.043478260869565216}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"用\":{\"docs\":{},\"于\":{\"docs\":{},\"计\":{\"docs\":{},\"算\":{\"docs\":{},\"的\":{\"docs\":{},\"值\":{\"docs\":{},\"可\":{\"docs\":{},\"以\":{\"docs\":{},\"是\":{\"docs\":{},\"特\":{\"docs\":{},\"定\":{\"docs\":{},\"的\":{\"docs\":{},\"数\":{\"docs\":{},\"值\":{\"docs\":{},\"型\":{\"docs\":{},\"字\":{\"docs\":{},\"段\":{\"docs\":{},\"，\":{\"docs\":{},\"也\":{\"docs\":{},\"可\":{\"docs\":{},\"以\":{\"docs\":{},\"通\":{\"docs\":{},\"过\":{\"docs\":{},\"脚\":{\"docs\":{},\"本\":{\"docs\":{},\"计\":{\"docs\":{},\"算\":{\"docs\":{},\"而\":{\"docs\":{},\"来\":{\"docs\":{},\"。\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00583941605839416}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"执\":{\"docs\":{},\"行\":{\"docs\":{},\"全\":{\"docs\":{},\"文\":{\"docs\":{},\"查\":{\"docs\":{},\"询\":{\"docs\":{},\"的\":{\"docs\":{},\"标\":{\"docs\":{},\"准\":{\"docs\":{},\"查\":{\"docs\":{},\"询\":{\"docs\":{},\"，\":{\"docs\":{},\"包\":{\"docs\":{},\"括\":{\"docs\":{},\"模\":{\"docs\":{},\"糊\":{\"docs\":{},\"匹\":{\"docs\":{},\"配\":{\"docs\":{},\"和\":{\"docs\":{},\"词\":{\"docs\":{},\"组\":{\"docs\":{},\"或\":{\"docs\":{},\"邻\":{\"docs\":{},\"近\":{\"docs\":{},\"程\":{\"docs\":{},\"度\":{\"docs\":{},\"的\":{\"docs\":{},\"查\":{\"docs\":{},\"询\":{\"docs\":{\"query-dsl/full-text-queries.html\":{\"ref\":\"query-dsl/full-text-queries.html\",\"tf\":0.011904761904761904}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"百\":{\"docs\":{},\"分\":{\"docs\":{},\"比\":{\"docs\":{},\"等\":{\"docs\":{},\"级\":{\"docs\":{},\"聚\":{\"docs\":{},\"合\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}}}}}}},\"百\":{\"docs\":{},\"聚\":{\"docs\":{},\"合\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}},\"—\":{\"docs\":{},\"—\":{\"docs\":{},\"基\":{\"docs\":{},\"于\":{\"docs\":{},\"聚\":{\"docs\":{},\"合\":{\"docs\":{},\"文\":{\"docs\":{},\"档\":{\"docs\":{},\"中\":{\"docs\":{},\"某\":{\"docs\":{},\"个\":{\"docs\":{},\"数\":{\"docs\":{},\"值\":{\"docs\":{},\"类\":{\"docs\":{},\"型\":{\"docs\":{},\"的\":{\"docs\":{},\"值\":{\"docs\":{},\"，\":{\"docs\":{},\"求\":{\"docs\":{},\"这\":{\"docs\":{},\"些\":{\"docs\":{},\"值\":{\"docs\":{},\"中\":{\"docs\":{},\"的\":{\"docs\":{},\"一\":{\"docs\":{},\"个\":{\"docs\":{},\"或\":{\"docs\":{},\"者\":{\"docs\":{},\"多\":{\"docs\":{},\"个\":{\"docs\":{},\"百\":{\"docs\":{},\"分\":{\"docs\":{},\"比\":{\"docs\":{},\",\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"统\":{\"docs\":{},\"计\":{\"docs\":{},\"聚\":{\"docs\":{},\"合\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}},\"—\":{\"docs\":{},\"—\":{\"docs\":{},\"基\":{\"docs\":{},\"于\":{\"docs\":{},\"文\":{\"docs\":{},\"档\":{\"docs\":{},\"的\":{\"docs\":{},\"某\":{\"docs\":{},\"个\":{\"docs\":{},\"值\":{\"docs\":{},\"，\":{\"docs\":{},\"计\":{\"docs\":{},\"算\":{\"docs\":{},\"出\":{\"docs\":{},\"一\":{\"docs\":{},\"些\":{\"docs\":{},\"统\":{\"docs\":{},\"计\":{\"docs\":{},\"信\":{\"docs\":{},\"息\":{\"docs\":{},\"（\":{\"docs\":{},\"m\":{\"docs\":{},\"i\":{\"docs\":{},\"n\":{\"docs\":{},\"、\":{\"docs\":{},\"m\":{\"docs\":{},\"a\":{\"docs\":{},\"x\":{\"docs\":{},\"、\":{\"docs\":{},\"s\":{\"docs\":{},\"u\":{\"docs\":{},\"m\":{\"docs\":{},\"、\":{\"docs\":{},\"c\":{\"docs\":{},\"o\":{\"docs\":{},\"u\":{\"docs\":{},\"n\":{\"docs\":{},\"t\":{\"docs\":{},\"、\":{\"docs\":{},\"a\":{\"docs\":{},\"v\":{\"docs\":{},\"g\":{\"docs\":{},\"）\":{\"docs\":{},\",\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"计\":{\"docs\":{},\"算\":{\"docs\":{},\"度\":{\"docs\":{},\"量\":{\"docs\":{},\"这\":{\"docs\":{},\"类\":{\"docs\":{},\"的\":{\"docs\":{},\"聚\":{\"docs\":{},\"合\":{\"docs\":{},\"操\":{\"docs\":{},\"作\":{\"docs\":{},\"是\":{\"docs\":{},\"以\":{\"docs\":{},\"使\":{\"docs\":{},\"用\":{\"docs\":{},\"一\":{\"docs\":{},\"种\":{\"docs\":{},\"方\":{\"docs\":{},\"式\":{\"docs\":{},\"或\":{\"docs\":{},\"者\":{\"docs\":{},\"从\":{\"docs\":{},\"文\":{\"docs\":{},\"档\":{\"docs\":{},\"中\":{\"docs\":{},\"提\":{\"docs\":{},\"取\":{\"docs\":{},\"需\":{\"docs\":{},\"要\":{\"docs\":{},\"聚\":{\"docs\":{},\"合\":{\"docs\":{},\"的\":{\"docs\":{},\"值\":{\"docs\":{},\"为\":{\"docs\":{},\"基\":{\"docs\":{},\"础\":{\"docs\":{},\"的\":{\"docs\":{},\"。\":{\"docs\":{},\"这\":{\"docs\":{},\"些\":{\"docs\":{},\"数\":{\"docs\":{},\"据\":{\"docs\":{},\"不\":{\"docs\":{},\"但\":{\"docs\":{},\"可\":{\"docs\":{},\"以\":{\"docs\":{},\"从\":{\"docs\":{},\"文\":{\"docs\":{},\"档\":{\"docs\":{},\"（\":{\"docs\":{},\"使\":{\"docs\":{},\"用\":{\"docs\":{},\"数\":{\"docs\":{},\"据\":{\"docs\":{},\"属\":{\"docs\":{},\"性\":{\"docs\":{},\"）\":{\"docs\":{},\"的\":{\"docs\":{},\"属\":{\"docs\":{},\"性\":{\"docs\":{},\"中\":{\"docs\":{},\"提\":{\"docs\":{},\"取\":{\"docs\":{},\"出\":{\"docs\":{},\"来\":{\"docs\":{},\"，\":{\"docs\":{},\"也\":{\"docs\":{},\"可\":{\"docs\":{},\"以\":{\"docs\":{},\"使\":{\"docs\":{},\"用\":{\"docs\":{},\"脚\":{\"docs\":{},\"本\":{\"docs\":{},\"生\":{\"docs\":{},\"成\":{\"docs\":{},\"。\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"该\":{\"docs\":{},\"聚\":{\"docs\":{},\"合\":{\"docs\":{},\"一\":{\"docs\":{},\"般\":{\"docs\":{},\"域\":{\"docs\":{},\"其\":{\"docs\":{},\"它\":{\"docs\":{\"aggregations/metrics-aggregations.html\":{\"ref\":\"aggregations/metrics-aggregations.html\",\"tf\":0.00145985401459854}}}}}}}}},\"查\":{\"docs\":{},\"询\":{\"docs\":{},\"允\":{\"docs\":{},\"许\":{\"docs\":{},\"脚\":{\"docs\":{},\"本\":{\"docs\":{},\"充\":{\"docs\":{},\"当\":{\"docs\":{},\"过\":{\"docs\":{},\"滤\":{\"docs\":{},\"器\":{\"docs\":{},\"。\":{\"docs\":{\"query-dsl/specialized-queries.html\":{\"ref\":\"query-dsl/specialized-queries.html\",\"tf\":0.004761904761904762}}}}}}}}}}}}}}},\"与\":{\"docs\":{},\"度\":{\"docs\":{},\"量\":{\"docs\":{},\"聚\":{\"docs\":{},\"合\":{\"docs\":{},\"相\":{\"docs\":{},\"比\":{\"docs\":{},\"，\":{\"docs\":{},\"b\":{\"docs\":{},\"u\":{\"docs\":{},\"c\":{\"docs\":{},\"k\":{\"docs\":{},\"e\":{\"docs\":{},\"t\":{\"docs\":{},\"聚\":{\"docs\":{},\"合\":{\"docs\":{},\"可\":{\"docs\":{},\"以\":{\"docs\":{},\"保\":{\"docs\":{},\"存\":{\"docs\":{},\"子\":{\"docs\":{},\"聚\":{\"docs\":{},\"合\":{\"docs\":{},\"，\":{\"docs\":{},\"这\":{\"docs\":{},\"些\":{\"docs\":{},\"子\":{\"docs\":{},\"聚\":{\"docs\":{},\"合\":{\"docs\":{},\"将\":{\"docs\":{},\"针\":{\"docs\":{},\"对\":{\"docs\":{},\"由\":{\"docs\":{},\"其\":{\"docs\":{},\"“\":{\"docs\":{},\"父\":{\"docs\":{},\"”\":{\"docs\":{},\"b\":{\"docs\":{},\"u\":{\"docs\":{},\"c\":{\"docs\":{},\"k\":{\"docs\":{},\"e\":{\"docs\":{},\"t\":{\"docs\":{},\"聚\":{\"docs\":{},\"合\":{\"docs\":{},\"创\":{\"docs\":{},\"建\":{\"docs\":{},\"的\":{\"docs\":{},\"b\":{\"docs\":{},\"u\":{\"docs\":{},\"c\":{\"docs\":{},\"k\":{\"docs\":{},\"e\":{\"docs\":{},\"t\":{\"docs\":{},\"进\":{\"docs\":{},\"行\":{\"docs\":{},\"聚\":{\"docs\":{},\"合\":{\"docs\":{},\"。\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"直\":{\"docs\":{},\"方\":{\"docs\":{},\"图\":{\"docs\":{},\"类\":{\"docs\":{},\"似\":{\"docs\":{},\"的\":{\"docs\":{},\"多\":{\"docs\":{},\"b\":{\"docs\":{},\"u\":{\"docs\":{},\"c\":{\"docs\":{},\"k\":{\"docs\":{},\"e\":{\"docs\":{},\"t\":{\"docs\":{},\"聚\":{\"docs\":{},\"合\":{\"docs\":{},\"，\":{\"docs\":{},\"但\":{\"docs\":{},\"只\":{\"docs\":{},\"能\":{\"docs\":{},\"应\":{\"docs\":{},\"用\":{\"docs\":{},\"于\":{\"docs\":{},\"日\":{\"docs\":{},\"期\":{\"docs\":{},\"值\":{\"docs\":{},\".\":{\"docs\":{},\"。\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"l\":{\"docs\":{},\"u\":{\"docs\":{},\"c\":{\"docs\":{},\"e\":{\"docs\":{},\"n\":{\"docs\":{},\"e\":{\"docs\":{},\"查\":{\"docs\":{},\"询\":{\"docs\":{},\"语\":{\"docs\":{},\"句\":{\"docs\":{},\"的\":{\"docs\":{},\"语\":{\"docs\":{},\"法\":{\"docs\":{},\"结\":{\"docs\":{},\"合\":{\"docs\":{},\"的\":{\"docs\":{},\"更\":{\"docs\":{},\"加\":{\"docs\":{},\"紧\":{\"docs\":{},\"密\":{\"docs\":{},\"的\":{\"docs\":{},\"一\":{\"docs\":{},\"种\":{\"docs\":{},\"查\":{\"docs\":{},\"询\":{\"docs\":{},\"，\":{\"docs\":{},\"允\":{\"docs\":{},\"许\":{\"docs\":{},\"你\":{\"docs\":{},\"在\":{\"docs\":{},\"一\":{\"docs\":{},\"个\":{\"docs\":{},\"查\":{\"docs\":{},\"询\":{\"docs\":{},\"语\":{\"docs\":{},\"句\":{\"docs\":{},\"中\":{\"docs\":{},\"使\":{\"docs\":{},\"用\":{\"docs\":{},\"多\":{\"docs\":{},\"个\":{\"docs\":{\"query-dsl/full-text-queries.html\":{\"ref\":\"query-dsl/full-text-queries.html\",\"tf\":0.011904761904761904}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"一\":{\"docs\":{},\"般\":{\"docs\":{},\"查\":{\"docs\":{},\"询\":{\"docs\":{},\"作\":{\"docs\":{},\"用\":{\"docs\":{},\"一\":{\"docs\":{},\"样\":{\"docs\":{},\"，\":{\"docs\":{},\"只\":{\"docs\":{},\"不\":{\"docs\":{},\"过\":{\"docs\":{},\"不\":{\"docs\":{},\"参\":{\"docs\":{},\"与\":{\"docs\":{},\"评\":{\"docs\":{},\"分\":{\"docs\":{\"query-dsl/compound-queries.html\":{\"ref\":\"query-dsl/compound-queries.html\",\"tf\":0.005847953216374269}}}}}}}}}}}}}}}}}}}},\"同\":{\"docs\":{},\"样\":{\"docs\":{},\"的\":{\"docs\":{},\"，\":{\"docs\":{},\"包\":{\"docs\":{},\"括\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}}}}},\"多\":{\"docs\":{},\"过\":{\"docs\":{},\"滤\":{\"docs\":{},\"聚\":{\"docs\":{},\"合\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}},\"—\":{\"docs\":{},\"—\":{\"docs\":{},\"基\":{\"docs\":{},\"于\":{\"docs\":{},\"多\":{\"docs\":{},\"个\":{\"docs\":{},\"过\":{\"docs\":{},\"滤\":{\"docs\":{},\"条\":{\"docs\":{},\"件\":{\"docs\":{},\"，\":{\"docs\":{},\"来\":{\"docs\":{},\"对\":{\"docs\":{},\"当\":{\"docs\":{},\"前\":{\"docs\":{},\"文\":{\"docs\":{},\"档\":{\"docs\":{},\"进\":{\"docs\":{},\"行\":{\"docs\":{},\"【\":{\"docs\":{},\"过\":{\"docs\":{},\"滤\":{\"docs\":{},\"】\":{\"docs\":{},\"的\":{\"docs\":{},\"聚\":{\"docs\":{},\"合\":{\"docs\":{},\"，\":{\"docs\":{},\"每\":{\"docs\":{},\"个\":{\"docs\":{},\"过\":{\"docs\":{},\"滤\":{\"docs\":{},\"都\":{\"docs\":{},\"包\":{\"docs\":{},\"含\":{\"docs\":{},\"所\":{\"docs\":{},\"有\":{\"docs\":{},\"满\":{\"docs\":{},\"足\":{\"docs\":{},\"它\":{\"docs\":{},\"的\":{\"docs\":{},\"文\":{\"docs\":{},\"档\":{\"docs\":{},\"（\":{\"docs\":{},\"多\":{\"docs\":{},\"个\":{\"docs\":{},\"b\":{\"docs\":{},\"u\":{\"docs\":{},\"c\":{\"docs\":{},\"k\":{\"docs\":{},\"e\":{\"docs\":{},\"t\":{\"docs\":{},\"中\":{\"docs\":{},\"可\":{\"docs\":{},\"能\":{\"docs\":{},\"重\":{\"docs\":{},\"复\":{\"docs\":{},\"）\":{\"docs\":{},\"。\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"个\":{\"docs\":{},\"字\":{\"docs\":{},\"段\":{\"docs\":{\"query-dsl/full-text-queries.html\":{\"ref\":\"query-dsl/full-text-queries.html\",\"tf\":0.011904761904761904}}}}},\"字\":{\"docs\":{},\"段\":{\"docs\":{},\"查\":{\"docs\":{},\"询\":{\"docs\":{},\"（\":{\"docs\":{},\"m\":{\"docs\":{},\"u\":{\"docs\":{},\"l\":{\"docs\":{},\"t\":{\"docs\":{},\"i\":{\"docs\":{},\"_\":{\"docs\":{},\"m\":{\"docs\":{},\"a\":{\"docs\":{},\"t\":{\"docs\":{},\"c\":{\"docs\":{},\"h\":{\"docs\":{\"query-dsl/full-text-queries.html\":{\"ref\":\"query-dsl/full-text-queries.html\",\"tf\":0.011904761904761904}}}}}}}}}}}}}}}}}}},\"子\":{\"docs\":{},\"聚\":{\"docs\":{},\"合\":{\"docs\":{},\"排\":{\"docs\":{},\"列\":{\"docs\":{},\"（\":{\"docs\":{},\"标\":{\"docs\":{},\"示\":{\"docs\":{},\"为\":{\"docs\":{},\"聚\":{\"docs\":{},\"合\":{\"docs\":{},\"名\":{\"docs\":{},\"）\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}}}}}}}}}}},\"句\":{\"docs\":{},\"他\":{\"docs\":{},\"们\":{\"docs\":{},\"的\":{\"docs\":{},\"分\":{\"docs\":{},\"数\":{\"docs\":{},\"相\":{\"docs\":{},\"结\":{\"docs\":{},\"合\":{\"docs\":{\"query-dsl/compound-queries.html\":{\"ref\":\"query-dsl/compound-queries.html\",\"tf\":0.005847953216374269}}}}}}}}}},\"在\":{\"docs\":{},\"过\":{\"docs\":{},\"滤\":{\"docs\":{},\"器\":{\"docs\":{},\"上\":{\"docs\":{},\"下\":{\"docs\":{},\"文\":{\"docs\":{},\"中\":{\"docs\":{},\"执\":{\"docs\":{},\"行\":{\"docs\":{},\"。\":{\"docs\":{\"query-dsl/compound-queries.html\":{\"ref\":\"query-dsl/compound-queries.html\",\"tf\":0.005847953216374269}}}}}}}}}}}}}}},\"定\":{\"docs\":{},\"义\":{\"docs\":{},\"搜\":{\"docs\":{},\"索\":{\"docs\":{},\"执\":{\"docs\":{},\"行\":{\"docs\":{},\"上\":{\"docs\":{},\"下\":{\"docs\":{},\"文\":{\"docs\":{},\"中\":{\"docs\":{},\"的\":{\"docs\":{},\"所\":{\"docs\":{},\"有\":{\"docs\":{},\"文\":{\"docs\":{},\"档\":{\"docs\":{},\"的\":{\"docs\":{},\"单\":{\"docs\":{},\"个\":{\"docs\":{},\"b\":{\"docs\":{},\"u\":{\"docs\":{},\"c\":{\"docs\":{},\"k\":{\"docs\":{},\"e\":{\"docs\":{},\"t\":{\"docs\":{},\"，\":{\"docs\":{},\"这\":{\"docs\":{},\"个\":{\"docs\":{},\"上\":{\"docs\":{},\"下\":{\"docs\":{},\"文\":{\"docs\":{},\"由\":{\"docs\":{},\"索\":{\"docs\":{},\"引\":{\"docs\":{},\"和\":{\"docs\":{},\"您\":{\"docs\":{},\"正\":{\"docs\":{},\"在\":{\"docs\":{},\"搜\":{\"docs\":{},\"索\":{\"docs\":{},\"的\":{\"docs\":{},\"文\":{\"docs\":{},\"档\":{\"docs\":{},\"类\":{\"docs\":{},\"型\":{\"docs\":{},\"定\":{\"docs\":{},\"义\":{\"docs\":{},\"，\":{\"docs\":{},\"但\":{\"docs\":{},\"不\":{\"docs\":{},\"受\":{\"docs\":{},\"搜\":{\"docs\":{},\"索\":{\"docs\":{},\"查\":{\"docs\":{},\"询\":{\"docs\":{},\"本\":{\"docs\":{},\"身\":{\"docs\":{},\"的\":{\"docs\":{},\"影\":{\"docs\":{},\"响\":{\"docs\":{},\"。\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"嵌\":{\"docs\":{},\"套\":{\"docs\":{},\"类\":{\"docs\":{},\"型\":{\"docs\":{},\"聚\":{\"docs\":{},\"合\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}}},\"文\":{\"docs\":{},\"档\":{\"docs\":{},\"的\":{\"docs\":{},\"路\":{\"docs\":{},\"径\":{\"docs\":{\"query-dsl/joining-queries.html\":{\"ref\":\"query-dsl/joining-queries.html\",\"tf\":0.007194244604316547}}}}}}}}},\"按\":{\"docs\":{},\"m\":{\"docs\":{},\"e\":{\"docs\":{},\"t\":{\"docs\":{},\"r\":{\"docs\":{},\"i\":{\"docs\":{},\"c\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}}}}},\"升\":{\"docs\":{},\"序\":{\"docs\":{},\"排\":{\"docs\":{},\"列\":{\"docs\":{},\"：\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}}}},\"字\":{\"docs\":{},\"词\":{\"docs\":{},\"顺\":{\"docs\":{},\"序\":{\"docs\":{},\"，\":{\"docs\":{},\"升\":{\"docs\":{},\"序\":{\"docs\":{},\"排\":{\"docs\":{},\"列\":{\"docs\":{},\"：\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}}}}}}}}}},\"排\":{\"docs\":{},\"序\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}},\"日\":{\"docs\":{},\"期\":{\"docs\":{},\"范\":{\"docs\":{},\"围\":{\"docs\":{},\"可\":{\"docs\":{},\"以\":{\"docs\":{},\"用\":{\"docs\":{},\"各\":{\"docs\":{},\"种\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}}}},\"直\":{\"docs\":{},\"方\":{\"docs\":{},\"图\":{\"docs\":{},\"聚\":{\"docs\":{},\"合\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}}}},\"聚\":{\"docs\":{},\"合\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}},\"—\":{\"docs\":{},\"—\":{\"docs\":{},\"基\":{\"docs\":{},\"于\":{\"docs\":{},\"日\":{\"docs\":{},\"期\":{\"docs\":{},\"类\":{\"docs\":{},\"型\":{\"docs\":{},\"的\":{\"docs\":{},\"值\":{\"docs\":{},\"，\":{\"docs\":{},\"以\":{\"docs\":{},\"【\":{\"docs\":{},\"日\":{\"docs\":{},\"期\":{\"docs\":{},\"范\":{\"docs\":{},\"围\":{\"docs\":{},\"】\":{\"docs\":{},\"来\":{\"docs\":{},\"桶\":{\"docs\":{},\"分\":{\"docs\":{},\"聚\":{\"docs\":{},\"合\":{\"docs\":{},\"。\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"桶\":{\"docs\":{},\"分\":{\"docs\":{},\"聚\":{\"docs\":{},\"合\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}}},\"直\":{\"docs\":{},\"方\":{\"docs\":{},\"图\":{\"docs\":{},\"聚\":{\"docs\":{},\"合\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}}}},\"范\":{\"docs\":{},\"围\":{\"docs\":{},\"聚\":{\"docs\":{},\"合\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}}},\"表\":{\"docs\":{},\"达\":{\"docs\":{},\"式\":{\"docs\":{},\"。\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}},\"示\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.013477088948787063}}}},\"词\":{\"docs\":{},\"元\":{\"docs\":{},\"聚\":{\"docs\":{},\"合\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}}},\"输\":{\"docs\":{},\"出\":{\"docs\":{},\"：\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0049586776859504135}}}}},\"返\":{\"docs\":{},\"回\":{\"docs\":{},\"集\":{\"docs\":{},\"合\":{\"docs\":{},\"中\":{\"docs\":{},\"感\":{\"docs\":{},\"兴\":{\"docs\":{},\"趣\":{\"docs\":{},\"的\":{\"docs\":{},\"或\":{\"docs\":{},\"者\":{\"docs\":{},\"不\":{\"docs\":{},\"常\":{\"docs\":{},\"见\":{\"docs\":{},\"的\":{\"docs\":{},\"词\":{\"docs\":{},\"条\":{\"docs\":{},\"的\":{\"docs\":{},\"聚\":{\"docs\":{},\"合\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}}}}}}}}}}}}}}}}},\"匹\":{\"docs\":{},\"配\":{\"docs\":{\"query-dsl/compound-queries.html\":{\"ref\":\"query-dsl/compound-queries.html\",\"tf\":0.005847953216374269}}}},\"与\":{\"docs\":{},\"任\":{\"docs\":{},\"何\":{\"docs\":{},\"指\":{\"docs\":{},\"定\":{\"docs\":{},\"查\":{\"docs\":{},\"询\":{\"docs\":{},\"匹\":{\"docs\":{},\"配\":{\"docs\":{},\"的\":{\"docs\":{},\"文\":{\"docs\":{},\"档\":{\"docs\":{},\"。\":{\"docs\":{\"query-dsl/span-queries.html\":{\"ref\":\"query-dsl/span-queries.html\",\"tf\":0.005555555555555556}}}}}}}}}}}}}}}}},\"进\":{\"docs\":{},\"行\":{\"docs\":{},\"标\":{\"docs\":{},\"记\":{\"docs\":{},\"。\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}}}},\"那\":{\"docs\":{},\"样\":{\"docs\":{},\"计\":{\"docs\":{},\"算\":{\"docs\":{},\"指\":{\"docs\":{},\"标\":{\"docs\":{},\"，\":{\"docs\":{},\"恰\":{\"docs\":{},\"恰\":{\"docs\":{},\"相\":{\"docs\":{},\"反\":{\"docs\":{},\"，\":{\"docs\":{},\"它\":{\"docs\":{},\"创\":{\"docs\":{},\"建\":{\"docs\":{},\"文\":{\"docs\":{},\"档\":{\"docs\":{},\"的\":{\"docs\":{},\"b\":{\"docs\":{},\"u\":{\"docs\":{},\"c\":{\"docs\":{},\"k\":{\"docs\":{},\"e\":{\"docs\":{},\"t\":{\"docs\":{},\"s\":{\"docs\":{},\"，\":{\"docs\":{},\"每\":{\"docs\":{},\"个\":{\"docs\":{},\"b\":{\"docs\":{},\"u\":{\"docs\":{},\"c\":{\"docs\":{},\"k\":{\"docs\":{},\"e\":{\"docs\":{},\"t\":{\"docs\":{},\"s\":{\"docs\":{},\"与\":{\"docs\":{},\"标\":{\"docs\":{},\"准\":{\"docs\":{},\"（\":{\"docs\":{},\"取\":{\"docs\":{},\"决\":{\"docs\":{},\"于\":{\"docs\":{},\"聚\":{\"docs\":{},\"合\":{\"docs\":{},\"类\":{\"docs\":{},\"型\":{\"docs\":{},\"）\":{\"docs\":{},\"相\":{\"docs\":{},\"关\":{\"docs\":{},\"联\":{\"docs\":{},\"，\":{\"docs\":{},\"它\":{\"docs\":{},\"决\":{\"docs\":{},\"定\":{\"docs\":{},\"了\":{\"docs\":{},\"当\":{\"docs\":{},\"前\":{\"docs\":{},\"上\":{\"docs\":{},\"下\":{\"docs\":{},\"文\":{\"docs\":{},\"中\":{\"docs\":{},\"的\":{\"docs\":{},\"文\":{\"docs\":{},\"档\":{\"docs\":{},\"是\":{\"docs\":{},\"否\":{\"docs\":{},\"会\":{\"docs\":{},\"“\":{\"docs\":{},\"f\":{\"docs\":{},\"a\":{\"docs\":{},\"l\":{\"docs\":{},\"l\":{\"docs\":{},\"s\":{\"docs\":{},\"”\":{\"docs\":{},\"到\":{\"docs\":{},\"它\":{\"docs\":{},\"。\":{\"docs\":{},\"换\":{\"docs\":{},\"句\":{\"docs\":{},\"话\":{\"docs\":{},\"说\":{\"docs\":{},\"，\":{\"docs\":{},\"b\":{\"docs\":{},\"u\":{\"docs\":{},\"c\":{\"docs\":{},\"k\":{\"docs\":{},\"e\":{\"docs\":{},\"t\":{\"docs\":{},\"可\":{\"docs\":{},\"以\":{\"docs\":{},\"有\":{\"docs\":{},\"效\":{\"docs\":{},\"地\":{\"docs\":{},\"定\":{\"docs\":{},\"义\":{\"docs\":{},\"文\":{\"docs\":{},\"档\":{\"docs\":{},\"集\":{\"docs\":{},\"合\":{\"docs\":{},\"。\":{\"docs\":{},\"除\":{\"docs\":{},\"了\":{\"docs\":{},\"b\":{\"docs\":{},\"u\":{\"docs\":{},\"c\":{\"docs\":{},\"k\":{\"docs\":{},\"e\":{\"docs\":{},\"t\":{\"docs\":{},\"s\":{\"docs\":{},\"本\":{\"docs\":{},\"身\":{\"docs\":{},\"，\":{\"docs\":{},\"b\":{\"docs\":{},\"u\":{\"docs\":{},\"c\":{\"docs\":{},\"k\":{\"docs\":{},\"e\":{\"docs\":{},\"t\":{\"docs\":{},\"集\":{\"docs\":{},\"合\":{\"docs\":{},\"还\":{\"docs\":{},\"计\":{\"docs\":{},\"算\":{\"docs\":{},\"并\":{\"docs\":{},\"返\":{\"docs\":{},\"回\":{\"docs\":{},\"“\":{\"docs\":{},\"落\":{\"docs\":{},\"入\":{\"docs\":{},\"”\":{\"docs\":{},\"每\":{\"docs\":{},\"个\":{\"docs\":{},\"b\":{\"docs\":{},\"u\":{\"docs\":{},\"c\":{\"docs\":{},\"k\":{\"docs\":{},\"e\":{\"docs\":{},\"t\":{\"docs\":{},\"的\":{\"docs\":{},\"文\":{\"docs\":{},\"档\":{\"docs\":{},\"数\":{\"docs\":{},\"量\":{\"docs\":{},\"。\":{\"docs\":{\"aggregations/bucket-aggregations.html\":{\"ref\":\"aggregations/bucket-aggregations.html\",\"tf\":0.0008264462809917355}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"来\":{\"docs\":{},\"定\":{\"docs\":{},\"义\":{\"docs\":{},\"查\":{\"docs\":{},\"询\":{\"docs\":{},\"。\":{\"docs\":{\"query-dsl.html\":{\"ref\":\"query-dsl.html\",\"tf\":0.043478260869565216}}}}}}},\"进\":{\"docs\":{},\"行\":{\"docs\":{},\"模\":{\"docs\":{},\"糊\":{\"docs\":{},\"查\":{\"docs\":{},\"询\":{\"docs\":{},\"。\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125}}}}}}}}}},\"要\":{\"docs\":{},\"使\":{\"docs\":{},\"用\":{\"docs\":{},\"q\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"y\":{\"docs\":{},\"b\":{\"docs\":{},\"u\":{\"docs\":{},\"i\":{\"docs\":{},\"l\":{\"docs\":{},\"d\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"，\":{\"docs\":{},\"只\":{\"docs\":{},\"需\":{\"docs\":{},\"将\":{\"docs\":{},\"它\":{\"docs\":{},\"们\":{\"docs\":{},\"导\":{\"docs\":{},\"入\":{\"docs\":{},\"到\":{\"docs\":{},\"类\":{\"docs\":{},\"中\":{\"docs\":{},\"：\":{\"docs\":{\"query-dsl.html\":{\"ref\":\"query-dsl.html\",\"tf\":0.043478260869565216}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"匹\":{\"docs\":{},\"配\":{\"docs\":{},\"查\":{\"docs\":{},\"询\":{\"docs\":{},\"（\":{\"docs\":{},\"m\":{\"docs\":{},\"a\":{\"docs\":{},\"t\":{\"docs\":{},\"c\":{\"docs\":{},\"h\":{\"docs\":{\"query-dsl/full-text-queries.html\":{\"ref\":\"query-dsl/full-text-queries.html\",\"tf\":0.011904761904761904}}}}}}}}}},\"条\":{\"docs\":{},\"件\":{\"docs\":{},\"越\":{\"docs\":{},\"多\":{\"docs\":{},\"，\":{\"docs\":{},\"预\":{\"docs\":{},\"期\":{\"docs\":{},\"越\":{\"docs\":{},\"好\":{\"docs\":{\"query-dsl/compound-queries.html\":{\"ref\":\"query-dsl/compound-queries.html\",\"tf\":0.005847953216374269}}}}}}}}}}}}},\"常\":{\"docs\":{},\"用\":{\"docs\":{},\"术\":{\"docs\":{},\"语\":{\"docs\":{},\"查\":{\"docs\":{},\"询\":{\"docs\":{},\"（\":{\"docs\":{},\"c\":{\"docs\":{},\"o\":{\"docs\":{},\"m\":{\"docs\":{},\"m\":{\"docs\":{},\"o\":{\"docs\":{},\"n\":{\"docs\":{},\"_\":{\"docs\":{},\"t\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"m\":{\"docs\":{\"query-dsl/full-text-queries.html\":{\"ref\":\"query-dsl/full-text-queries.html\",\"tf\":0.011904761904761904}}}}}}}}}}}}}}}}}}}},\"特\":{\"docs\":{},\"殊\":{\"docs\":{},\"条\":{\"docs\":{},\"件\":{\"docs\":{},\"关\":{\"docs\":{},\"键\":{\"docs\":{},\"字\":{\"docs\":{},\"（\":{\"docs\":{},\"如\":{\"docs\":{},\"：\":{\"docs\":{},\"a\":{\"docs\":{},\"n\":{\"docs\":{},\"d\":{\"docs\":{},\"|\":{\"docs\":{},\"o\":{\"docs\":{},\"r\":{\"docs\":{},\"|\":{\"docs\":{},\"n\":{\"docs\":{},\"o\":{\"docs\":{},\"t\":{\"docs\":{\"query-dsl/full-text-queries.html\":{\"ref\":\"query-dsl/full-text-queries.html\",\"tf\":0.011904761904761904}}}}}}}}}}}}}}}}}}}}}},\"简\":{\"docs\":{},\"单\":{\"docs\":{},\"查\":{\"docs\":{},\"询\":{\"docs\":{},\"语\":{\"docs\":{},\"句\":{\"docs\":{},\"（\":{\"docs\":{},\"s\":{\"docs\":{},\"i\":{\"docs\":{},\"m\":{\"docs\":{},\"p\":{\"docs\":{},\"l\":{\"docs\":{},\"e\":{\"docs\":{},\"_\":{\"docs\":{},\"q\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"y\":{\"docs\":{},\"_\":{\"docs\":{},\"s\":{\"docs\":{},\"t\":{\"docs\":{},\"r\":{\"docs\":{},\"i\":{\"docs\":{},\"n\":{\"docs\":{},\"g\":{\"docs\":{},\"）\":{\"docs\":{\"query-dsl/full-text-queries.html\":{\"ref\":\"query-dsl/full-text-queries.html\",\"tf\":0.011904761904761904}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"高\":{\"docs\":{},\"级\":{\"docs\":{},\"别\":{\"docs\":{},\"的\":{\"docs\":{},\"全\":{\"docs\":{},\"文\":{\"docs\":{},\"搜\":{\"docs\":{},\"索\":{\"docs\":{},\"通\":{\"docs\":{},\"常\":{\"docs\":{},\"用\":{\"docs\":{},\"于\":{\"docs\":{},\"在\":{\"docs\":{},\"全\":{\"docs\":{},\"文\":{\"docs\":{},\"字\":{\"docs\":{},\"段\":{\"docs\":{},\"（\":{\"docs\":{},\"例\":{\"docs\":{},\"如\":{\"docs\":{},\"：\":{\"docs\":{},\"一\":{\"docs\":{},\"封\":{\"docs\":{},\"邮\":{\"docs\":{},\"件\":{\"docs\":{},\"的\":{\"docs\":{},\"正\":{\"docs\":{},\"文\":{\"docs\":{},\"）\":{\"docs\":{},\"上\":{\"docs\":{},\"进\":{\"docs\":{},\"行\":{\"docs\":{},\"全\":{\"docs\":{},\"文\":{\"docs\":{},\"搜\":{\"docs\":{},\"索\":{\"docs\":{},\"。\":{\"docs\":{},\"它\":{\"docs\":{},\"们\":{\"docs\":{},\"了\":{\"docs\":{},\"解\":{\"docs\":{},\"如\":{\"docs\":{},\"何\":{\"docs\":{},\"分\":{\"docs\":{},\"析\":{\"docs\":{},\"查\":{\"docs\":{},\"询\":{\"docs\":{},\"的\":{\"docs\":{},\"字\":{\"docs\":{},\"段\":{\"docs\":{},\"，\":{\"docs\":{},\"并\":{\"docs\":{},\"在\":{\"docs\":{},\"执\":{\"docs\":{},\"行\":{\"docs\":{},\"之\":{\"docs\":{},\"前\":{\"docs\":{},\"将\":{\"docs\":{},\"每\":{\"docs\":{},\"个\":{\"docs\":{},\"字\":{\"docs\":{},\"段\":{\"docs\":{},\"的\":{\"docs\":{},\"分\":{\"docs\":{},\"析\":{\"docs\":{},\"器\":{\"docs\":{},\"（\":{\"docs\":{},\"或\":{\"docs\":{},\"搜\":{\"docs\":{},\"索\":{\"docs\":{},\"分\":{\"docs\":{},\"析\":{\"docs\":{},\"器\":{\"docs\":{},\"）\":{\"docs\":{},\"应\":{\"docs\":{},\"用\":{\"docs\":{},\"于\":{\"docs\":{},\"查\":{\"docs\":{},\"询\":{\"docs\":{},\"字\":{\"docs\":{},\"符\":{\"docs\":{},\"串\":{\"docs\":{},\"。\":{\"docs\":{\"query-dsl/full-text-queries.html\":{\"ref\":\"query-dsl/full-text-queries.html\",\"tf\":0.011904761904761904}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"）\":{\"docs\":{},\"对\":{\"docs\":{},\"多\":{\"docs\":{},\"个\":{\"docs\":{},\"字\":{\"docs\":{},\"段\":{\"docs\":{},\"进\":{\"docs\":{},\"行\":{\"docs\":{},\"查\":{\"docs\":{},\"询\":{\"docs\":{},\"，\":{\"docs\":{},\"当\":{\"docs\":{},\"然\":{\"docs\":{},\"这\":{\"docs\":{},\"种\":{\"docs\":{},\"查\":{\"docs\":{},\"询\":{\"docs\":{},\"仅\":{\"docs\":{},\"限\":{\"docs\":{},\"专\":{\"docs\":{},\"家\":{\"docs\":{},\"用\":{\"docs\":{},\"户\":{\"docs\":{},\"去\":{\"docs\":{},\"使\":{\"docs\":{},\"用\":{\"docs\":{},\"。\":{\"docs\":{\"query-dsl/full-text-queries.html\":{\"ref\":\"query-dsl/full-text-queries.html\",\"tf\":0.011904761904761904}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"]\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125}}},\"“\":{\"docs\":{},\"~\":{\"docs\":{},\"”\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125}}}}},\"举\":{\"docs\":{},\"例\":{\"docs\":{},\"说\":{\"docs\":{},\"明\":{\"docs\":{},\"，\":{\"docs\":{},\"下\":{\"docs\":{},\"面\":{\"docs\":{},\"的\":{\"docs\":{},\"几\":{\"docs\":{},\"个\":{\"docs\":{},\"文\":{\"docs\":{},\"档\":{\"docs\":{},\"都\":{\"docs\":{},\"会\":{\"docs\":{},\"得\":{\"docs\":{},\"到\":{\"docs\":{},\"上\":{\"docs\":{},\"面\":{\"docs\":{},\"代\":{\"docs\":{},\"码\":{\"docs\":{},\"的\":{\"docs\":{},\"匹\":{\"docs\":{},\"配\":{\"docs\":{},\"：\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125}}}}}}}}}}}}}}}}}}}}}}}}}},\"术\":{\"docs\":{},\"语\":{\"docs\":{},\"查\":{\"docs\":{},\"询\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125}}}}}},\"第\":{\"docs\":{},\"一\":{\"docs\":{},\"个\":{\"docs\":{},\"是\":{\"docs\":{},\"n\":{\"docs\":{},\"u\":{\"docs\":{},\"l\":{\"docs\":{},\"l\":{\"docs\":{},\"值\":{\"docs\":{},\"。\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125}}}}}}}},\"字\":{\"docs\":{},\"符\":{\"docs\":{},\"串\":{\"docs\":{},\"，\":{\"docs\":{},\"是\":{\"docs\":{},\"一\":{\"docs\":{},\"个\":{\"docs\":{},\"非\":{\"docs\":{},\"n\":{\"docs\":{},\"u\":{\"docs\":{},\"l\":{\"docs\":{},\"l\":{\"docs\":{},\"的\":{\"docs\":{},\"值\":{\"docs\":{},\"。\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125}}}}}}}}}}}}}}}}}}}},\"三\":{\"docs\":{},\"个\":{\"docs\":{},\"使\":{\"docs\":{},\"用\":{\"docs\":{},\"标\":{\"docs\":{},\"准\":{\"docs\":{},\"分\":{\"docs\":{},\"析\":{\"docs\":{},\"器\":{\"docs\":{},\"的\":{\"docs\":{},\"情\":{\"docs\":{},\"况\":{\"docs\":{},\"下\":{\"docs\":{},\"尽\":{\"docs\":{},\"管\":{\"docs\":{},\"不\":{\"docs\":{},\"会\":{\"docs\":{},\"返\":{\"docs\":{},\"回\":{\"docs\":{},\"词\":{\"docs\":{},\"条\":{\"docs\":{},\"，\":{\"docs\":{},\"但\":{\"docs\":{},\"是\":{\"docs\":{},\"原\":{\"docs\":{},\"始\":{\"docs\":{},\"字\":{\"docs\":{},\"段\":{\"docs\":{},\"值\":{\"docs\":{},\"是\":{\"docs\":{},\"非\":{\"docs\":{},\"n\":{\"docs\":{},\"u\":{\"docs\":{},\"l\":{\"docs\":{},\"l\":{\"docs\":{},\"的\":{\"docs\":{},\"（\":{\"docs\":{},\"e\":{\"docs\":{},\"v\":{\"docs\":{},\"e\":{\"docs\":{},\"n\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"只\":{\"docs\":{},\"有\":{\"docs\":{},\"n\":{\"docs\":{},\"u\":{\"docs\":{},\"l\":{\"docs\":{},\"l\":{\"docs\":{},\"值\":{\"docs\":{},\"，\":{\"docs\":{},\"至\":{\"docs\":{},\"少\":{\"docs\":{},\"需\":{\"docs\":{},\"要\":{\"docs\":{},\"一\":{\"docs\":{},\"个\":{\"docs\":{},\"非\":{\"docs\":{},\"n\":{\"docs\":{},\"u\":{\"docs\":{},\"l\":{\"docs\":{},\"l\":{\"docs\":{},\"值\":{\"docs\":{},\"。\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125}}}}}}}}}}}}}}}}}}}}}}}}},\"二\":{\"docs\":{},\"个\":{\"docs\":{},\"是\":{\"docs\":{},\"空\":{\"docs\":{},\"字\":{\"docs\":{},\"符\":{\"docs\":{},\"串\":{\"docs\":{},\"，\":{\"docs\":{},\"也\":{\"docs\":{},\"是\":{\"docs\":{},\"非\":{\"docs\":{},\"n\":{\"docs\":{},\"u\":{\"docs\":{},\"l\":{\"docs\":{},\"l\":{\"docs\":{},\"。\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125}}}}}}}}}}}}}}}},\"没\":{\"docs\":{},\"有\":{\"docs\":{},\"值\":{\"docs\":{},\"。\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125}}}}}}}},\"五\":{\"docs\":{},\"个\":{\"docs\":{},\"中\":{\"docs\":{},\"至\":{\"docs\":{},\"少\":{\"docs\":{},\"有\":{\"docs\":{},\"一\":{\"docs\":{},\"个\":{\"docs\":{},\"是\":{\"docs\":{},\"非\":{\"docs\":{},\"n\":{\"docs\":{},\"u\":{\"docs\":{},\"l\":{\"docs\":{},\"l\":{\"docs\":{},\"值\":{\"docs\":{},\"。\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125}}}}}}}}}}}}}}}}}},\"四\":{\"docs\":{},\"个\":{\"docs\":{},\"与\":{\"docs\":{},\"指\":{\"docs\":{},\"定\":{\"docs\":{},\"字\":{\"docs\":{},\"段\":{\"docs\":{},\"不\":{\"docs\":{},\"匹\":{\"docs\":{},\"配\":{\"docs\":{},\"。\":{\"docs\":{\"query-dsl/term-level-queries.html\":{\"ref\":\"query-dsl/term-level-queries.html\",\"tf\":0.0026954177897574125}}}}}}}}}}}}}},\"以\":{\"docs\":{},\"及\":{\"docs\":{\"query-dsl/compound-queries.html\":{\"ref\":\"query-dsl/compound-queries.html\",\"tf\":0.005847953216374269}}}},\"复\":{\"docs\":{},\"合\":{\"docs\":{},\"查\":{\"docs\":{},\"询\":{\"docs\":{},\"用\":{\"docs\":{},\"来\":{\"docs\":{},\"包\":{\"docs\":{},\"装\":{\"docs\":{},\"其\":{\"docs\":{},\"他\":{\"docs\":{},\"复\":{\"docs\":{},\"合\":{\"docs\":{},\"或\":{\"docs\":{},\"者\":{\"docs\":{},\"叶\":{\"docs\":{},\"子\":{\"docs\":{},\"查\":{\"docs\":{},\"询\":{\"docs\":{},\"，\":{\"docs\":{},\"一\":{\"docs\":{},\"方\":{\"docs\":{},\"面\":{\"docs\":{},\"可\":{\"docs\":{},\"综\":{\"docs\":{},\"合\":{\"docs\":{},\"其\":{\"docs\":{},\"结\":{\"docs\":{},\"果\":{\"docs\":{},\"和\":{\"docs\":{},\"分\":{\"docs\":{},\"数\":{\"docs\":{},\"，\":{\"docs\":{},\"从\":{\"docs\":{},\"而\":{\"docs\":{},\"改\":{\"docs\":{},\"变\":{\"docs\":{},\"它\":{\"docs\":{},\"的\":{\"docs\":{},\"行\":{\"docs\":{},\"为\":{\"docs\":{},\"，\":{\"docs\":{},\"另\":{\"docs\":{},\"一\":{\"docs\":{},\"方\":{\"docs\":{},\"面\":{\"docs\":{},\"可\":{\"docs\":{},\"从\":{\"docs\":{},\"查\":{\"docs\":{},\"询\":{\"docs\":{},\"切\":{\"docs\":{},\"换\":{\"docs\":{},\"到\":{\"docs\":{},\"过\":{\"docs\":{},\"滤\":{\"docs\":{},\"器\":{\"docs\":{},\"上\":{\"docs\":{},\"下\":{\"docs\":{},\"文\":{\"docs\":{},\"。\":{\"docs\":{},\"此\":{\"docs\":{},\"类\":{\"docs\":{},\"查\":{\"docs\":{},\"询\":{\"docs\":{},\"包\":{\"docs\":{},\"含\":{\"docs\":{},\"：\":{\"docs\":{\"query-dsl/compound-queries.html\":{\"ref\":\"query-dsl/compound-queries.html\",\"tf\":0.005847953216374269}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"支\":{\"docs\":{},\"持\":{\"docs\":{},\"多\":{\"docs\":{},\"并\":{\"docs\":{},\"发\":{\"docs\":{},\"查\":{\"docs\":{},\"询\":{\"docs\":{},\"的\":{\"docs\":{},\"查\":{\"docs\":{},\"询\":{\"docs\":{},\"，\":{\"docs\":{},\"并\":{\"docs\":{},\"可\":{\"docs\":{},\"返\":{\"docs\":{},\"回\":{\"docs\":{},\"与\":{\"docs\":{},\"任\":{\"docs\":{},\"意\":{\"docs\":{},\"查\":{\"docs\":{},\"询\":{\"docs\":{},\"条\":{\"docs\":{},\"件\":{\"docs\":{},\"子\":{\"docs\":{},\"句\":{\"docs\":{},\"匹\":{\"docs\":{},\"配\":{\"docs\":{},\"的\":{\"docs\":{},\"任\":{\"docs\":{},\"何\":{\"docs\":{},\"文\":{\"docs\":{},\"档\":{\"docs\":{},\"类\":{\"docs\":{},\"型\":{\"docs\":{},\"。\":{\"docs\":{},\"与\":{\"docs\":{\"query-dsl/compound-queries.html\":{\"ref\":\"query-dsl/compound-queries.html\",\"tf\":0.005847953216374269}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"条\":{\"docs\":{},\"件\":{\"docs\":{},\"。\":{\"docs\":{\"query-dsl/compound-queries.html\":{\"ref\":\"query-dsl/compound-queries.html\",\"tf\":0.005847953216374269}}}}},\"组\":{\"docs\":{},\"合\":{\"docs\":{},\"多\":{\"docs\":{},\"个\":{\"docs\":{},\"叶\":{\"docs\":{},\"子\":{\"docs\":{},\"并\":{\"docs\":{},\"发\":{\"docs\":{},\"查\":{\"docs\":{},\"询\":{\"docs\":{},\"或\":{\"docs\":{},\"复\":{\"docs\":{},\"合\":{\"docs\":{},\"查\":{\"docs\":{},\"询\":{\"docs\":{},\"条\":{\"docs\":{},\"件\":{\"docs\":{},\"的\":{\"docs\":{},\"默\":{\"docs\":{},\"认\":{\"docs\":{},\"查\":{\"docs\":{},\"询\":{\"docs\":{},\"类\":{\"docs\":{},\"型\":{\"docs\":{},\"，\":{\"docs\":{},\"例\":{\"docs\":{},\"如\":{\"docs\":{},\"m\":{\"docs\":{},\"u\":{\"docs\":{},\"s\":{\"docs\":{},\"t\":{\"docs\":{},\",\":{\"docs\":{\"query-dsl/compound-queries.html\":{\"ref\":\"query-dsl/compound-queries.html\",\"tf\":0.005847953216374269}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"s\":{\"docs\":{},\"p\":{\"docs\":{},\"a\":{\"docs\":{},\"n\":{\"docs\":{},\"查\":{\"docs\":{},\"询\":{\"docs\":{\"query-dsl/span-queries.html\":{\"ref\":\"query-dsl/span-queries.html\",\"tf\":0.005555555555555556}}}}}}}}}}}},\"而\":{\"docs\":{\"query-dsl/compound-queries.html\":{\"ref\":\"query-dsl/compound-queries.html\",\"tf\":0.005847953216374269}}},\"传\":{\"docs\":{},\"给\":{\"docs\":{},\"子\":{\"docs\":{\"query-dsl/joining-queries.html\":{\"ref\":\"query-dsl/joining-queries.html\",\"tf\":0.007194244604316547}}}}},\"则\":{\"docs\":{},\"返\":{\"docs\":{},\"回\":{\"docs\":{},\"其\":{\"docs\":{},\"父\":{\"docs\":{},\"文\":{\"docs\":{},\"档\":{\"docs\":{},\"能\":{\"docs\":{},\"满\":{\"docs\":{},\"足\":{\"docs\":{},\"特\":{\"docs\":{},\"定\":{\"docs\":{},\"查\":{\"docs\":{},\"询\":{\"docs\":{},\"的\":{\"docs\":{},\"子\":{\"docs\":{},\"文\":{\"docs\":{},\"档\":{\"docs\":{\"query-dsl/joining-queries.html\":{\"ref\":\"query-dsl/joining-queries.html\",\"tf\":0.007194244604316547}}}}}}}}}}}}}}}}}}}},\"否\":{\"docs\":{},\"则\":{\"docs\":{},\"，\":{\"docs\":{},\"p\":{\"docs\":{},\"a\":{\"docs\":{},\"r\":{\"docs\":{},\"e\":{\"docs\":{},\"n\":{\"docs\":{},\"t\":{\"docs\":{\"query-dsl/joining-queries.html\":{\"ref\":\"query-dsl/joining-queries.html\",\"tf\":0.014388489208633094}}}}}}}}}}},\"模\":{\"docs\":{},\"块\":{\"docs\":{},\"不\":{\"docs\":{},\"会\":{\"docs\":{},\"被\":{\"docs\":{},\"加\":{\"docs\":{},\"载\":{\"docs\":{},\"，\":{\"docs\":{},\"并\":{\"docs\":{},\"且\":{\"docs\":{},\"不\":{\"docs\":{},\"能\":{\"docs\":{},\"从\":{\"docs\":{},\"t\":{\"docs\":{},\"r\":{\"docs\":{},\"a\":{\"docs\":{},\"n\":{\"docs\":{},\"s\":{\"docs\":{},\"p\":{\"docs\":{},\"o\":{\"docs\":{},\"r\":{\"docs\":{},\"t\":{\"docs\":{\"query-dsl/joining-queries.html\":{\"ref\":\"query-dsl/joining-queries.html\",\"tf\":0.014388489208633094}}}}}}}}}}}}}}}}}}}}}}},\"型\":{\"docs\":{\"query-dsl/joining-queries.html\":{\"ref\":\"query-dsl/joining-queries.html\",\"tf\":0.014388489208633094}}}},\"风\":{\"docs\":{},\"格\":{\"docs\":{},\"的\":{\"docs\":{},\"连\":{\"docs\":{},\"接\":{\"docs\":{},\"查\":{\"docs\":{},\"询\":{\"docs\":{},\"代\":{\"docs\":{},\"价\":{\"docs\":{},\"昂\":{\"docs\":{},\"贵\":{\"docs\":{},\"，\":{\"docs\":{},\"是\":{\"docs\":{},\"不\":{\"docs\":{},\"可\":{\"docs\":{},\"行\":{\"docs\":{},\"的\":{\"docs\":{},\"。\":{\"docs\":{},\"相\":{\"docs\":{},\"应\":{\"docs\":{},\"地\":{\"docs\":{},\"，\":{\"docs\":{},\"为\":{\"docs\":{},\"了\":{\"docs\":{},\"实\":{\"docs\":{},\"现\":{\"docs\":{},\"水\":{\"docs\":{},\"平\":{\"docs\":{},\"规\":{\"docs\":{},\"模\":{\"docs\":{},\"地\":{\"docs\":{},\"扩\":{\"docs\":{},\"展\":{\"docs\":{},\"，\":{\"docs\":{},\"e\":{\"docs\":{},\"l\":{\"docs\":{},\"a\":{\"docs\":{},\"s\":{\"docs\":{},\"t\":{\"docs\":{},\"i\":{\"docs\":{},\"c\":{\"docs\":{},\"s\":{\"docs\":{},\"e\":{\"docs\":{},\"a\":{\"docs\":{},\"r\":{\"docs\":{},\"c\":{\"docs\":{},\"h\":{\"docs\":{\"query-dsl/joining-queries.html\":{\"ref\":\"query-dsl/joining-queries.html\",\"tf\":0.007194244604316547}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"因\":{\"docs\":{},\"此\":{\"docs\":{},\"，\":{\"docs\":{},\"必\":{\"docs\":{},\"须\":{\"docs\":{},\"将\":{\"docs\":{\"query-dsl/geo-queries.html\":{\"ref\":\"query-dsl/geo-queries.html\",\"tf\":0.004901960784313725}}}}}}}},\"添\":{\"docs\":{},\"加\":{\"docs\":{},\"到\":{\"docs\":{\"query-dsl/geo-queries.html\":{\"ref\":\"query-dsl/geo-queries.html\",\"tf\":0.004901960784313725}}}}},\"'\":{\"docs\":{},\"q\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"y\":{\"docs\":{},\"'\":{\"docs\":{},\":\":{\"docs\":{\"query-dsl/specialized-queries.html\":{\"ref\":\"query-dsl/specialized-queries.html\",\"tf\":0.004761904761904762}}}}}}}}}},\"另\":{\"docs\":{},\"请\":{\"docs\":{},\"参\":{\"docs\":{},\"阅\":{\"docs\":{\"query-dsl/specialized-queries.html\":{\"ref\":\"query-dsl/specialized-queries.html\",\"tf\":0.004761904761904762}}}}}},\"脚\":{\"docs\":{},\"本\":{\"docs\":{},\"名\":{\"docs\":{\"query-dsl/specialized-queries.html\":{\"ref\":\"query-dsl/specialized-queries.html\",\"tf\":0.004761904761904762}}},\"引\":{\"docs\":{},\"擎\":{\"docs\":{\"query-dsl/specialized-queries.html\":{\"ref\":\"query-dsl/specialized-queries.html\",\"tf\":0.004761904761904762}}}}}},\"只\":{\"docs\":{},\"要\":{\"docs\":{},\"其\":{\"docs\":{\"query-dsl/span-queries.html\":{\"ref\":\"query-dsl/span-queries.html\",\"tf\":0.005555555555555556}}}}},\"接\":{\"docs\":{},\"受\":{\"docs\":{},\"s\":{\"docs\":{},\"p\":{\"docs\":{},\"a\":{\"docs\":{},\"n\":{\"docs\":{},\"查\":{\"docs\":{},\"询\":{\"docs\":{},\"的\":{\"docs\":{},\"列\":{\"docs\":{},\"表\":{\"docs\":{},\"，\":{\"docs\":{},\"但\":{\"docs\":{},\"仅\":{\"docs\":{},\"返\":{\"docs\":{},\"回\":{\"docs\":{},\"与\":{\"docs\":{},\"第\":{\"docs\":{},\"二\":{\"docs\":{},\"个\":{\"docs\":{},\"s\":{\"docs\":{},\"p\":{\"docs\":{},\"a\":{\"docs\":{},\"n\":{\"docs\":{},\"s\":{\"docs\":{},\"查\":{\"docs\":{},\"询\":{\"docs\":{},\"匹\":{\"docs\":{},\"配\":{\"docs\":{},\"的\":{\"docs\":{},\"s\":{\"docs\":{},\"p\":{\"docs\":{},\"a\":{\"docs\":{},\"n\":{\"docs\":{},\"。\":{\"docs\":{\"query-dsl/span-queries.html\":{\"ref\":\"query-dsl/span-queries.html\",\"tf\":0.005555555555555556}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"另\":{\"docs\":{},\"一\":{\"docs\":{},\"个\":{\"docs\":{},\"s\":{\"docs\":{},\"p\":{\"docs\":{},\"a\":{\"docs\":{},\"n\":{\"docs\":{},\"查\":{\"docs\":{},\"询\":{\"docs\":{},\"，\":{\"docs\":{},\"其\":{\"docs\":{},\"匹\":{\"docs\":{},\"配\":{\"docs\":{},\"必\":{\"docs\":{},\"须\":{\"docs\":{},\"出\":{\"docs\":{},\"现\":{\"docs\":{},\"在\":{\"docs\":{},\"字\":{\"docs\":{},\"段\":{\"docs\":{},\"的\":{\"docs\":{},\"前\":{\"docs\":{},\"n\":{\"docs\":{},\"个\":{\"docs\":{},\"位\":{\"docs\":{},\"置\":{\"docs\":{},\"。\":{\"docs\":{\"query-dsl/span-queries.html\":{\"ref\":\"query-dsl/span-queries.html\",\"tf\":0.005555555555555556}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"多\":{\"docs\":{},\"个\":{\"docs\":{},\"s\":{\"docs\":{},\"p\":{\"docs\":{},\"a\":{\"docs\":{},\"n\":{\"docs\":{},\"查\":{\"docs\":{},\"询\":{\"docs\":{},\"，\":{\"docs\":{},\"其\":{\"docs\":{},\"匹\":{\"docs\":{},\"配\":{\"docs\":{},\"必\":{\"docs\":{},\"须\":{\"docs\":{},\"在\":{\"docs\":{},\"彼\":{\"docs\":{},\"此\":{\"docs\":{},\"的\":{\"docs\":{},\"指\":{\"docs\":{},\"定\":{\"docs\":{},\"距\":{\"docs\":{},\"离\":{\"docs\":{},\"内\":{\"docs\":{},\"，\":{\"docs\":{},\"并\":{\"docs\":{},\"且\":{\"docs\":{},\"可\":{\"docs\":{},\"能\":{\"docs\":{},\"顺\":{\"docs\":{},\"序\":{\"docs\":{},\"相\":{\"docs\":{},\"同\":{\"docs\":{},\"。\":{\"docs\":{\"query-dsl/span-queries.html\":{\"ref\":\"query-dsl/span-queries.html\",\"tf\":0.005555555555555556}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},\"比\":{\"docs\":{},\"如\":{\"docs\":{},\"：\":{\"docs\":{},\"f\":{\"docs\":{},\"u\":{\"docs\":{},\"z\":{\"docs\":{},\"z\":{\"docs\":{},\"y\":{\"docs\":{},\"q\":{\"docs\":{},\"u\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\"y\":{\"docs\":{},\"b\":{\"docs\":{},\"u\":{\"docs\":{},\"i\":{\"docs\":{},\"l\":{\"docs\":{},\"d\":{\"docs\":{},\"e\":{\"docs\":{},\"r\":{\"docs\":{},\",\":{\"docs\":{\"query-dsl/span-queries.html\":{\"ref\":\"query-dsl/span-queries.html\",\"tf\":0.005555555555555556}}}}}}}}}}}}}}}}}}}}}}},\"等\":{\"docs\":{},\"同\":{\"docs\":{},\"于\":{\"docs\":{\"query-dsl/span-queries.html\":{\"ref\":\"query-dsl/span-queries.html\",\"tf\":0.005555555555555556}}}}}},\"length\":2580},\"corpusTokens\":[\"!=\",\"\\\"\",\"\\\"\\\"\",\"\\\"(西班|葡萄)牙\\\");\",\"\\\"1\\\")\",\"\\\"1\\\").get();\",\"\\\"1\\\").source(/*\",\"\\\"100\\\");\",\"\\\"192.168.2.0\\\")\",\"\\\"1960\\\")\",\"\\\"2\\\")\",\"\\\"2\\\"));\",\"\\\"2\\\",\",\"\\\"3\\\",\",\"\\\"4\\\")\",\"\\\"4\\\",\",\"\\\"\\\\\\\"message\\\\\\\":\\\\\\\"hel\",\"\\\"\\\\\\\"message\\\\\\\":\\\\\\\"tri\",\"\\\"\\\\\\\"postdate\\\\\\\":\\\\\\\"2013\",\"\\\"\\\\\\\"user\\\\\\\":\\\\\\\"fendo\\\\\\\",\\\"\",\"\\\"\\\\\\\"user\\\\\\\":\\\\\\\"kimchy\\\\\\\",\\\"\",\"\\\"amazing\\\");\",\"\\\"anoth\",\"\\\"bar\\\"\",\"\\\"bar\\\"),\",\"\\\"baz\\\"))\",\"\\\"blog\\\",\",\"\\\"blog_tag\\\",\",\"\\\"blue\\\"))\",\"\\\"blue\\\",\",\"\\\"brand\\\",\",\"\\\"ccse\\\")\",\"\\\"content\\\",\",\"\\\"countries\\\")\",\"\\\"deu\\\",\",\"\\\"doc\\\",\",\"\\\"docs\\\",\",\"\\\"elasticsearch\\\"))\",\"\\\"elasticsearch\\\").build();\",\"\\\"female\\\")));\",\"\\\"fendodata\\\").setsource(builder).get();\",\"\\\"fendodate\\\")\",\"\\\"foo\\\")\",\"\\\"foo\\\"));\",\"\\\"gender\\\"\",\"\\\"gender\\\":\",\"\\\"heine\\\"\",\"\\\"index1\\\",\",\"\\\"index2\\\"\",\"\\\"index2\\\")\",\"\\\"joe\",\"\\\"k?mc*\\\");\",\"\\\"ki\\\")\",\"\\\"kimchi\",\"\\\"kimchy\\\"\",\"\\\"kimchy\\\")\",\"\\\"kimchy\\\"))\",\"\\\"kimchy\\\")).setsize(1);\",\"\\\"kimchy\\\"),\",\"\\\"kimchy\\\");\",\"\\\"kimzhy\\\"\",\"\\\"kow\\\"));\",\"\\\"male\\\"\",\"\\\"male\\\")\",\"\\\"male\\\"))\",\"\\\"male\\\")),\",\"\\\"male\\\"));\",\"\\\"male\\\");\",\"\\\"match\\\"\",\"\\\"message\\\"\",\"\\\"mi\",\"\\\"myclustername\\\").build();\",\"\\\"mydesignatedqueryname\\\")\",\"\\\"myscript\\\",\",\"\\\"name\\\"\",\"\\\"name\\\",\",\"\\\"name\\\":\",\"\\\"name.first\\\",\",\"\\\"name.last\\\"};\",\"\\\"obj1\\\",\",\"\\\"painless\\\",\",\"\\\"pill\\\");\",\"\\\"pin.location\\\",\",\"\\\"query\\\"\",\"\\\"query\\\",\",\"\\\"reseller\\\");\",\"\\\"resellers\\\")\",\"\\\"resellers\\\");\",\"\\\"s.*y\\\");\",\"\\\"test\\\"))\",\"\\\"test\\\");\",\"\\\"test1\\\"))\",\"\\\"test2\\\"))\",\"\\\"test3\\\"))\",\"\\\"test4\\\"))\",\"\\\"test5//\",\"\\\"thi\",\"\\\"tri\",\"\\\"tweet\\\",\",\"\\\"type\\\",\",\"\\\"type2\\\")\",\"\\\"type=percolator\\\")\",\"\\\"type=text\\\")\",\"\\\"user\\\",\",\"\\\"user\\\":\",\"\\\"wow\\\"),\",\"\\\"xxx\\\")\",\"\\\"xxx:xxx\\\")\",\"\\\"yoona\\\"\",\"\\\"{\\\"\",\"\\\"{\\\\n\\\"\",\"\\\"}\\\")\",\"\\\"}\\\")).get();\",\"\\\"}\\\";\",\"\\\"西*牙\\\");\",\"'query':\",\"(bucket)\",\"(bulkresponse.hasfailures())\",\"(datetime)\",\"(excluded)\",\"(filters.bucket\",\"(gener\",\"(geohashgrid.bucket\",\"(geopoint)\",\"(histogram.bucket\",\"(if\",\"(match\",\"(metric)\",\"(multigetitemrespons\",\"(multisearchresponse.item\",\"(number)\",\"(percentil\",\"(range.bucket\",\"(response.isexists())\",\"(searchhit\",\"(significantterms.bucket\",\"(sr.isterminatedearly())\",\"(terms.bucket\",\"(unknownhostexcept\",\"(usual\",\"(嵌套查询)\",\"(有子查询)\",\"(有父查询)\",\"(构建桶聚合)\",\")\",\").nomatchquery(\\\"all\\\");\",\").nomatchquery(termquery(\\\"tag\\\",\",\");\",\"*\",\"*/\",\"*/));\",\"*/);\",\"*],\",\"+\",\"+/\",\"+=\",\"+infin\",\",scriptservice.scripttype.inline,\",\"...\",\".add(\\\"another\\\",\",\".add(\\\"twitter\\\",\",\".add(srb1)\",\".add(srb2)\",\".add(termquery(\\\"name\\\",\",\".addaggregation(\",\".addaggregation(aggregation)\",\".addclause(spantermquery(\\\"field\\\",\\\"value2\\\"))\",\".addclause(spantermquery(\\\"field\\\",\\\"value3\\\"))\",\".addclause(spantermquery(\\\"field\\\",\\\"value3\\\"));\",\".addclause(spantermquery(\\\"field1\\\",\",\".addclause(spantermquery(\\\"field1\\\",\\\"baz\\\"))\",\".addids(\\\"1\\\",\",\".addmapping(\\\"docs\\\",\",\".addmapping(\\\"query\\\",\",\".addrange(\\\"192.168.1.0\\\",\",\".addrange(\\\"1950\\\",\",\".addrange(1.0f,\",\".addrange(10.0,\",\".addrange(3.0,\",\".addsort(fieldsortbuilder.doc_field_name,\",\".addtransportaddress(new\",\".addunboundedfrom(\\\"192.168.2.0\\\");\",\".addunboundedfrom(\\\"1960\\\");\",\".addunboundedfrom(1.5f);\",\".addunboundedto(\\\"192.168.1.0\\\")\",\".addunboundedto(\\\"1950\\\")\",\".addunboundedto(1.0f)\",\".addunboundedto(3.0)\",\".avg(\\\"agg\\\")\",\".boost(1.2f)\",\".boost(2.0f);\",\".build();\",\".cardinality(\\\"agg\\\")\",\".children(\\\"agg\\\",\",\".count(\\\"agg\\\")\",\".datehistogram(\\\"agg\\\")\",\".datehistograminterval(datehistograminterval.days(10));\",\".datehistograminterval(datehistograminterval.year)\",\".datehistograminterval(datehistograminterval.year);\",\".daterange(\\\"agg\\\")\",\".distance(200,\",\".doc(jsonbuilder()\",\".endobject()\",\".endobject())\",\".endobject());\",\".endobject();\",\".execute().actionget();\",\".execute(new\",\".explain(true)\",\".extendedstats(\\\"agg\\\")\",\".field(\\\"address.country\\\");\",\".field(\\\"address.location\\\")\",\".field(\\\"birth\\\")\",\".field(\\\"dateofbirth\\\")\",\".field(\\\"gender\\\")\",\".field(\\\"gender\\\");\",\".field(\\\"gender\\\",\",\".field(\\\"height\\\")\",\".field(\\\"height\\\");\",\".field(\\\"ip\\\")\",\".field(\\\"message\\\",\",\".field(\\\"name\\\",\",\".field(\\\"postdate\\\",\",\".field(\\\"query\\\",\",\".field(\\\"tags\\\");\",\".field(\\\"user\\\",\",\".filter(\\\"agg\\\",\",\".filter(querybuilders.matchquery(\\\"gender\\\",\",\".filter(termquery(\\\"content\\\",\",\".filters(\\\"agg\\\",\",\".format(\\\"yyyy\\\")\",\".from(10)\",\".from(5)\",\".geobounds(\\\"agg\\\")\",\".geodistance(\\\"agg\\\",\",\".geohashgrid(\\\"agg\\\")\",\".get()\",\".get();\",\".getresponse();\",\".global(\\\"agg\\\")\",\".histogram(\\\"agg\\\")\",\".includelower(true)\",\".includeupper(false);\",\".indexedshapeindex(\\\"shapes\\\")\",\".indexedshapepath(\\\"location\\\");\",\".inorder(false);\",\".inorder(true),\",\".interval(1);\",\".iprange(\\\"agg\\\")\",\".max(\\\"agg\\\")\",\".maxqueryterms(12);\",\".min(\\\"agg\\\")\",\".mintermfreq(1)\",\".must(matchquery(\\\"obj1.name\\\",\",\".must(rangequery(\\\"obj1.count\\\").gt(5)),\",\".must(termquery(\\\"content\\\",\",\".mustnot(termquery(\\\"content\\\",\",\".negativeboost(0.2f);\",\".nested(\\\"agg\\\",\",\".order(terms.order.aggregation(\\\"avg_height\\\",\",\".order(terms.order.count(true))\",\".order(terms.order.term(true))\",\".percentiles(\\\"agg\\\")\",\".percentiles(1.0,\",\".point(40,\",\".precision(4);\",\".preparesearch().setquery(querybuilders.matchquery(\\\"name\\\",\",\".preparesearch().setquery(querybuilders.querystringquery(\\\"elasticsearch\\\")).setsize(1);\",\".put(\\\"client.transport.sniff\\\",\",\".put(\\\"cluster.name\\\",\",\".put(\\\"xpack.security.transport.ssl.enabled\\\",\",\".put(\\\"xpack.security.user\\\",\",\".range(\\\"agg\\\")\",\".relation(shaperelation.within))\",\".relation(shaperelation.within);\",\".reversenested(\\\"reseller_to_product\\\")\",\".script(new\",\".setbackoffpolicy(\",\".setbulkactions(10000)\",\".setbulksize(new\",\".setconcurrentrequests(0)\",\".setconcurrentrequests(1)\",\".setcorners(40.73,\",\".setdoc(jsonbuilder()\",\".setflushinterval(timevalue.timevalueseconds(5))\",\".setfrom(0).setsize(60).setexplain(true)\",\".setid(\\\"template_gender\\\")\",\".setoperationthreaded(false)\",\".setpostfilter(querybuilders.rangequery(\\\"age\\\").from(12).to(18))\",\".setquery(\",\".setquery(percolatequery))\",\".setquery(qb)\",\".setquery(querybuilders.matchallquery())\",\".setquery(querybuilders.termquery(\\\"gender\\\",\",\".setquery(querybuilders.termquery(\\\"multi\\\",\",\".setrefreshpolicy(refreshpolicy.immediate)\",\".setrequest(new\",\".setscript(\\\"template_gender\\\")\",\".setscript(\\\"{\\\\n\\\"\",\".setscript(new\",\".setscriptlang(\\\"mustache\\\")\",\".setscriptparams(template_params)\",\".setscripttype(scriptservice.scripttype.file)\",\".setscripttype(scripttype.inline)\",\".setscripttype(scripttype.stored)\",\".setscroll(new\",\".setsearchtype(searchtype.dfs_query_then_fetch)\",\".setsize(100).get();\",\".setsource(json)\",\".setsource(jsonbuilder()\",\".setsource(new\",\".setterminateafter(1000)\",\".settypes(\\\"type1\\\",\",\".should(termquery(\\\"content\\\",\",\".significantterms(\\\"significant_countries\\\")\",\".size(1)\",\".source(\\\"persons\\\")\",\".source(jsonbuilder()\",\".startobject()\",\".stats(\\\"agg\\\")\",\".subaggregation(\",\".subaggregation(aggregationbuilders.avg(\\\"avg_children\\\").field(\\\"children\\\"))\",\".subaggregation(aggregationbuilders.datehistogram(\\\"by_year\\\")\",\".subaggregation(aggregationbuilders.terms(\\\"genders\\\").field(\\\"gender\\\"));\",\".sum(\\\"agg\\\")\",\".terms(\\\"agg\\\").field(\\\"gender\\\")\",\".terms(\\\"genders\\\")\",\".terms(\\\"name\\\").field(\\\"resellers.name\\\")\",\".tiebreaker(0.7f);\",\".to(10)\",\".unit(distanceunit.kilometers)\",\".upsert(indexrequest);\",\".wraplongitude(true);\",\"/\",\"/*\",\"/**\",\"//\",\"//_sourc\",\"//add\",\"//big\",\"//boost\",\"//bound\",\"//build\",\"//center\",\"//distanc\",\"//end\",\"//field\",\"//handl\",\"//ignor\",\"//index\",\"//index(索引名)\",\"//initialis\",\"//inlin\",\"//iter\",\"//littl\",\"//max\",\"//must\",\"//name\",\"//nest\",\"//paramet\",\"//ping一个节点的响应时间\",\"//prefix\",\"//queri\",\"//rangequerybuild\",\"//regexp\",\"//relat\",\"//sample/p\",\"//score\",\"//script\",\"//scroll\",\"//shape\",\"//slop\",\"//span\",\"//templat\",\"//text\",\"//the\",\"//thi\",\"//tie\",\"//true:表示\",\"//type\",\"//valu\",\"//whether\",\"//一个id的方式\",\"//为了使用\",\"//分数\",\"//创建client\",\"//删除文档的数量\",\"//判断是否存在\",\"//参数\",\"//可以从另外一个索引获取\",\"//可以是multitermquerybuild\",\"//合并到现有文档\",\"//回调监听\",\"//增加elasticsearch客户端\",\"//多个id的方式\",\"//如果不存在此文档\",\"//如果达到这个数量，提前终止\",\"//开始值，与includelower()和includeupper()函数配套使用\",\"//执行\",\"//执行获取templat\",\"//拆成5mb一块\",\"//无论请求数量多少，每5秒钟请求一次。\",\"//是否从父hit的scor\",\"//查询\",\"//查询条件\",\"//查询语句\",\"//根据年龄字段添加另一个function\",\"//根据查询添加第一个function\",\"//根据给定的种子随机分数\",\"//此步骤添加ip，至少一个，其实一个就够了，因为添加了自动嗅探配置\",\"//此步骤添加ip，至少一个，如果设置了\\\"client.transport.sniff\\\"=\",\"//每次10000请求\",\"//结束值，与includelower()和includeupper()函数配套使用\",\"//脚本类型\",\"//自动嗅探整个集群的状态，把集群中其他es节点的ip添加到本地的客户端列表中\",\"//要查询的子类型\",\"//设置\",\"//设置es实例的名称\",\"//设置并发请求的数量。值为0意味着只允许执行一个请求。值为1意味着允许1并发请求。\",\"//设置执行的context（ie:\",\"//设置集群名称\",\"//调用bulk之前执行\",\"//调用bulk之后执行\",\"//调用失败抛\",\"//迭代返回值\",\"/_search/templ\",\"0));\",\"0);\",\"0.6\",\"01\",\"01t00:00:00.000z],\",\"0;\",\"0l,\",\"1\",\"1\\\")\",\"1)\",\"1.0\",\"1.0],\",\"1.13\",\"1.5\",\"1.58203125],\",\"1.5],\",\"1.5f)\",\"10));\",\"10.0)\",\"10.0,\",\"10.0],\",\"100\",\"1000\",\"12)\",\"13.952946866893775],\",\"192.168.1.0\",\"192.168.2.0\",\"1950\",\"1950],\",\"1960\",\"1960],\",\"1l))\",\"20.0,\",\"3\",\"3))//设置自定义重复请求机制，最开始等待100毫秒，之后成倍更加，重试3次，当一次或多次重复请求失败后因为计算资源不够抛出\",\"3.0],\",\"30\\\");\",\"30.0,\",\"30\\\\\\\",\\\"\",\"4.04296875],\",\"4.190029308156676]\",\"40.717,\",\"5)\",\"5))\",\"5.0,\",\"5.0.1\",\"5.6.3\",\"500.0);\",\"500.0],\",\"5mb\",\"7.20703125],\",\"7.55859375],\",\"70)\",\"70));\",\"73.99);\",\"74.1,\",\"75.0,\",\"80));\",\"8次，等待50毫秒\",\"90));\",\"9300))\",\"9300)));\",\"9300));\",\"95.0,\",\"99.0);\",\":\",\":范围查询将匹配字段值大于或等于此参数值的文档。\",\":范围查询将匹配字段值大于此参数值的文档。\",\":范围查询将匹配字段值小于或等于此参数值的文档。\",\":范围查询将匹配字段值小于此参数值的文档。\",\"=\",\">\",\"@befor\",\"@overrid\",\"@param\",\"@return\",\"@test\",\"@throw\",\"[\",\"[\\\"yoona\\\",\",\"[\\\"yoona\\\"]\",\"[*\",\"[0.0],\",\"[0.814338896154595]\",\"[0.8761912455821302]\",\"[1.0\",\"[1.0],\",\"[1.173346540141847]\",\"[1.24]\",\"[1.5\",\"[1.5432023318692198]\",\"[1.5],\",\"[1.91]\",\"[1.923915462033674]\",\"[10.0\",\"[10.0],\",\"[1138]\",\"[1156]\",\"[1248]\",\"[1282]\",\"[161]\",\"[1942\",\"[1942],\",\"[1945\",\"[1945],\",\"[1946\",\"[1946],\",\"[1950\",\"[1960\",\"[1]\",\"[2.2273644908535335]\",\"[2.22]\",\"[2.284989339108279]\",\"[2005\",\"[2005],\",\"[2007\",\"[2007],\",\"[2008\",\"[2008],\",\"[20]\",\"[21]\",\"[25.0],\",\"[2861]]\",\"[29.664353095090945],\",\"[2]\",\"[3.0\",\"[3.0],\",\"[37]\",\"[3]\",\"[40.70500764381921,\",\"[45.087890625,\",\"[460]\",\"[47.197265625,\",\"[4893]\",\"[4925]\",\"[4982]\",\"[5.0],\",\"[50.0],\",\"[50.361328125,\",\"[50.712890625,\",\"[500.0],\",\"[5018]\",\"[5107]\",\"[53.49603022435221,\",\"[5]\",\"[73.9335313461868],\",\"[75.0],\",\"[8]\",\"[94.40095147327283],\",\"[95.0],\",\"[99.0],\",\"[9]\",\"[]\",\"[aunzsz0w9k7pkxtq04ys],\",\"[aunzszze9k7pkxtq04x2],\",\"[aunzszzj9k7pkxtq04x4],\",\"[aunzszzl9k7pkxtq04x5],\",\"[aunzszzm9k7pkxtq04xy],\",\"[aunzszzp9k7pkxtq04x8],\",\"[female],\",\"[gbqu],\",\"[gbvn],\",\"[infinity],\",\"[male],\",\"[men],\",\"[null]\",\"[null],\",\"[u0j2],\",\"[u1j0],\",\"[women],\",\"[{\\\"gender\\\":\\\"female\\\",...}]\",\"[{\\\"gender\\\":\\\"male\\\",...}]\",\"[{}]\\\",\",\"[{}],\",\"\\\\\\\"\\\\\\\"\\\\n\\\"\",\"\\\\\\\"gender\\\\\\\"\",\"\\\\\\\"male\\\\\\\"\\\"\",\"\\\\\\\"male\\\\\\\"\\\"));\",\"\\\\\\\"match\\\\\\\"\",\"\\\\\\\"query\\\\\\\"\",\"]\",\"_id\",\"_index\",\"_msearch\",\"_score\",\"_sourc\",\"_type\",\"_version\",\"```\",\"`indexrequest`\",\"`myscript.painless\",\"actionlistener()\",\"add\",\"address\",\"administr\",\"afterbulk(long\",\"against\",\"agg\",\"agg)\",\"agg.bottomright();\",\"agg.getaggregations().get(\\\"name\\\");\",\"agg.getavg();\",\"agg.getbuckets())\",\"agg.getcount();\",\"agg.getdoccount();\",\"agg.getmax();\",\"agg.getmin();\",\"agg.getstddeviation();\",\"agg.getsum();\",\"agg.getsumofsquares();\",\"agg.getvalue();\",\"agg.getvariance();\",\"agg.topleft();\",\"agg1\",\"agg2\",\"aggreg\",\"aggregation\",\"aggregationbuild\",\"aggregationbuilders.avg(\\\"avg_height\\\").field(\\\"height\\\")\",\"aggregationbuilders.datehistogram(\\\"agg2\\\")\",\"aggregationbuilders.missing(\\\"agg\\\").field(\\\"gender\\\");\",\"aggregationbuilders.terms(\\\"agg1\\\").field(\\\"field\\\")\",\"aggregationbuilders.terms(\\\"by_country\\\").field(\\\"country\\\")\",\"aggregationbuilders.tophits(\\\"top\\\")\",\"aggregations）\",\"aggregation。这两种不同的聚合操作只有在桶聚合的子聚合操作中才会有不同的表现（有些桶聚合可以基于每个的数值计量来对返回的桶进行排序）。\",\"aggregation）\",\"aggregation，以此来聚合每个桶中的最高匹配的文档。\",\"aggregation，其他产生多个计量数值（例如\",\"aggregatorbuild\",\"all)\",\"amazing!\\\");\",\"amount\",\"analyz\",\"analyzed）\",\"analyzed）。正则表达式查询的性能取决于所选的正则表达式。如果我们的正则表达式匹配许多词条，查询将很慢。一般规则是，正则表达式匹配的词条数越高，查询越慢。\",\"anoth\",\"anymor\",\"apachecn（apache中文网\",\"api\",\"api)\",\"api之termqueri\",\"api允许我们做一个初始阶段搜索并且持续批量从elasticsearch里拉取结果直到没有结果剩下。这有点像传统数据库里的cursors（游标）。\",\"api包已经上传到\",\"api可以允许我们检索大量数据（甚至全部数据）。scrol\",\"api可以批量插入：\",\"api可以通过id查看文档：\",\"api操作\",\"api来使用聚合。\",\"api的创建并不是为了实时的用户响应，而是为了处理大量的数据（scrol\",\"api进行清除。\",\"api默认提供query_and_fetch\",\"application\\\").build();//\",\"approximate)）和压缩（compression）以获得关于近视值的建议和内存使用的百分比排位聚合。百分比排位展示那些在某一值之下的观测值的百分比。例如，假如某一直大于等于被观测值的95%，则称其为第95百分位数。假设你的数据由网页加载时间组成。你可能有一个服务协议，95%页面需要在15ms加载完全，99%页面在30ms加载完全。\",\"arraylist();\",\"ask\",\"avail\",\"averag\",\"avg\",\"avgaggregationbuild\",\"backoffpolici\",\"backoffpolicy.exponentialbackoff(timevalue.timevaluemillis(100),\",\"base\",\"beforebulk(long\",\"bool\",\"boolean\",\"boolquery()\",\"boost\",\"boostingquery(\",\"boot\",\"bottom\",\"bottomright\",\"bottomright,\",\"bound\",\"box\",\"breaker\",\"bucket\",\"bucket.getaggregations().get(\\\"reseller_to_product\\\");\",\"build\",\"builder\",\"bulk\",\"bulkact\",\"bulkbyscrollrespons\",\"bulkprocessor\",\"bulkprocessor.add(/*\",\"bulkprocessor.add(new\",\"bulkprocessor.awaitclose(10,\",\"bulkprocessor.builder(\",\"bulkprocessor.builder(client,\",\"bulkprocessor.close();\",\"bulkprocessor.flush();\",\"bulkprocessor.listener()\",\"bulkrequest\",\"bulkrequest.add(client.prepareindex(\\\"twitter\\\",\",\"bulkrequest.get();\",\"bulkrequestbuild\",\"bulkrespons\",\"bulksiz\",\"by:\",\"byte[]\",\"bytesarray(\",\"bytesizeunit.mb))\",\"bytesizevalue(5,\",\"cardin\",\"cardinalityaggregationbuild\",\"catch\",\"caus\",\"center\",\"central\",\"check\",\"child\",\"children\",\"class\",\"classpath\",\"clearscroll(cli\",\"clearscrollrequestbuild\",\"clearscrollrequestbuilder.addscrollid(scrollid);\",\"clearscrollrequestbuilder.get();\",\"clearscrollrequestbuilder.setscrollids(scrollidlist);\",\"clearscrollrespons\",\"client\",\"client#prepare,\",\"client().preparesearch(\\\"myindexname\\\")\",\"client,\",\"client...\",\"client.addtransportaddress(new\",\"client.admin().cluster().prepareputstoredscript()\",\"client.admin().indices().preparecreate(\\\"myindexname\\\")\",\"client.admin().indices().preparerefresh().get();\",\"client.close();\",\"client.preparebulk();\",\"client.prepareclearscroll();\",\"client.preparedelete(\\\"twitter\\\",\",\"client.prepareget(\\\"twitter\\\",\",\"client.prepareindex(\\\"fendo\\\",\",\"client.prepareindex(\\\"myindexname\\\",\",\"client.preparemultiget()\",\"client.preparemultisearch()\",\"client.preparesearch(\\\"index1\\\",\",\"client.preparesearch()\",\"client.preparesearch().get();\",\"client.preparesearch(index)\",\"client.preparesearch(index);\",\"client.preparesearch(test)\",\"client.preparesearchscroll(scrollresp.getscrollid()).setscroll(new\",\"client.prepareupdate(\\\"ttl\\\",\",\"client.transport.ignore_cluster_nam\",\"client.transport.nodes_sampler_interv\",\"client.transport.ping_timeout\",\"client.update(updaterequest).get();\",\"client;\",\"client，有两种形式，一个是transportclient，一个是nodeclient。两个的区别为：\",\"client，这个点很重要：\",\"close\",\"cluster\",\"clustername)\",\"collections.singletonmap(\\\"param1\\\",\",\"com.fasterxml.jackson.core.jsonprocessingexception;\",\"com.fasterxml.jackson.databind.*;\",\"com.fasterxml.jackson.databind.objectmapper;\",\"com.vividsolut\",\"commontermsquery(\\\"name\\\",\",\"compound\",\"concurrentrequest\",\"config/scripts/template_gender.mustach\",\"constant_scor\",\"constantscorequery(\",\"contain\",\"context\",\"context)会自动被清除，但是一值保持滚动代价也是很大的，所以当我们不在使用滚动时要尽快使用clear\",\"coordinate(0,\",\"coordinate(10,\",\"count\",\"creat\",\"createindex\",\"createjackson()\",\"createjson(){\",\"createlist(){\",\"createxcontentbuilder()\",\"csdn.setauthor(\\\"fendo\\\");\",\"csdn.setcontent(\\\"这是java书籍\\\");\",\"csdn.setdate(new\",\"csdn.settag(\\\"c\\\");\",\"csdn.settitile(\\\"编程\\\");\",\"csdn.setview(\\\"100\\\");\",\"csdn=new\",\"csdnblog\",\"csdnblog();\",\"current\",\"dalton\\\",\",\"data）。从\",\"date\",\"date())\",\"date());\",\"date().tostring());\",\"datetim\",\"dayu\",\"default\",\"delet\",\"deletebyqueryaction.instance.newrequestbuilder(client)\",\"deleterequest(\\\"twitter\\\",\",\"deleterespons\",\"depend\",\"dfs_query_and_fetch\",\"directli\",\"dis_max\",\"dismaxquery()\",\"distanc\",\"distanceunit.kilometers);\",\"doc\",\"doc['num1'].valu\",\"doc_count\",\"docbuild\",\"docbuilder.bytes());\",\"docbuilder.endobject();\",\"docbuilder.field(\\\"content\\\",\",\"doccount\",\"doccount);\",\"document\",\"document,\",\"documents)\",\"don't\",\"doubl\",\"dsl\",\"dsl:\",\"e)\",\"e.printstacktrace();\",\"each\",\"earli\",\"edit\",\"elast\",\"elasticsearch\",\"elasticsearch\\\"\",\"elasticsearch\\\")\",\"elasticsearch\\\");\",\"elasticsearch\\\",\",\"elasticsearch\\\\\\\"\\\"\",\"elasticsearch以类似于rest\",\"elasticsearch已经使用了jackson，可以直接使用它把javabean转为json.\",\"elasticsearch性能调优\",\"elasticsearch提供了一个内置的帮助类xcontentbuilder来产生json文档\",\"elasticsearch提供完整的java\",\"elasticsearch支持两种类型的地理数据：geo_point类型支持成对的纬度/经度，geo_shape类型支持点、线、圆、多边形、多个多边形等。\",\"emit\",\"end\",\"endpoint\",\"engin\",\"entri\",\"entry.getaggregations().get(\\\"top\\\");\",\"entry.getdoccount();\",\"entry.getfrom();\",\"entry.getfromasstring();\",\"entry.getkey();\",\"entry.getkeyasstring();\",\"entry.getpercent();\",\"entry.getto();\",\"entry.gettoasstring();\",\"entry.getvalue();\",\"esport));\",\"esrejectedexecutionexcept\",\"esset\",\"except\",\"exception{\",\"execut\",\"executionid,\",\"exist\",\"existsquery(\\\"name\\\");\",\"existsquerybuild\",\"explain\",\"exponentialdecayfunction(\\\"age\\\",\",\"extend\",\"extendedstat\",\"extendedstatsaggregationbuild\",\"facet\",\"factor\",\"factor:\",\"failur\",\"failure)\",\"fall\",\"fals\",\"false)\",\"false))\",\"false:表示\",\"fendo\",\"field\",\"fields,\",\"fields）。此查询很占用cpu资源，但当需要模糊匹配时它很有用，例如，当用户拼写错误时。另外我们可以在搜索词的尾部加上字符\",\"filter\",\"filterfunctionbuilder[]\",\"filtersaggregator.keyedfilter(\\\"men\\\",\",\"filtersaggregator.keyedfilter(\\\"women\\\",\",\"finish\",\"first\",\"flush\",\"for(searchhit\",\"found\",\"from()\",\"from,\",\"fromasd\",\"fromasdate,\",\"fromasstr\",\"fromasstring,\",\"full\",\"function\",\"function_scor\",\"functionscorequerybuilder.filterfunctionbuilder(\",\"fuzzi\",\"fuzzyquery(\",\"gender\",\"gender_template.mustach\",\"genders.getbuckets())\",\"gener\",\"geo\",\"geo_bounding_box\",\"geo_dist\",\"geo_polygon\",\"geo_shap\",\"geo_shape查询\",\"geobound\",\"geoboundingboxquery(\\\"pin.location\\\")\",\"geoboundsaggregationbuild\",\"geoboundsbuild\",\"geodistancequery(\\\"pin.location\\\")\",\"geohash\",\"geohashgrid\",\"geohash网格聚合\",\"geopoint\",\"geopoint(20,\",\"geopoint(30,\",\"geopoint(40,\",\"geopoint(48.84237171118314,2.33320027692004))\",\"geopolygonquery(\\\"pin.location\\\",\",\"geoshapequery(\",\"get:\",\"getclient()\",\"getrespons\",\"github地址：https://github.com/quanke/elasticsearch\",\"global\",\"grid\",\"gt()\",\"gte()\",\"guid\",\"handl\",\"has_child\",\"has_par\",\"hash\",\"hashmap();\",\"hashmap();\",\"here\",\"highlight,\",\"histogram\",\"hit\",\"hit...\",\"hit.getid(),\",\"hit.getsourceasstring());\",\"https://artifacts.elastic.co/maven\",\"id\",\"idsquery(\\\"my_type\\\",\",\"idsquery()\",\"immedi\",\"import\",\"includelower(false)\",\"includelower(true)\",\"includeupper(false)\",\"includeupper(true)\",\"index\",\"index/delet\",\"index/type/1\",\"indexrequest\",\"indexrequest(\\\"index\\\",\",\"indexrequest(\\\"twitter\\\",\",\"indexrespons\",\"indic\",\"indicesquery(\",\"individu\",\"inetsocketaddress(inetaddresses.forstring(\\\"127.0.0.1\\\"),\",\"inetsockettransportaddress(inetaddress.getbyname(\\\"127.0.0.1\\\"),\",\"inetsockettransportaddress(inetaddress.getbyname(\\\"host1\\\"),\",\"inetsockettransportaddress(inetaddress.getbyname(\\\"host2\\\"),\",\"inetsockettransportaddress(inetaddress.getbyname(\\\"xxx.xxx.xxx.xxx\\\"),\",\"inetsockettransportaddress(inetaddress.getbyname(ip),\",\"inetsockettransportaddress(new\",\"infin\",\"infinity],\",\"initi\",\"instanc\",\"intend\",\"interven\",\"introduct\",\"ioexcept\",\"ioexception{\",\"ip\",\"ip范围聚合\",\"is.\",\"it'\",\"item\",\"item.getresponse();\",\"item[]\",\"itemrespons\",\"itemresponse.getresponse();\",\"items)\",\"iter\",\"java\",\"java.io.ioexception;\",\"java.lang.thread.run(thread.java:745)\",\"java.net.inetaddress;\",\"java.net.unknownhostexception;\",\"java.util.concurrent.threadpoolexecutor$worker.run(threadpoolexecutor.java:617)\",\"java.util.concurrent.threadpoolexecutor.runworker(threadpoolexecutor.java:1142)\",\"java.util.date;\",\"java.util.hashmap;\",\"java.util.map;\",\"join\",\"joinquerybuilders.haschildquery(\",\"joinquerybuilders.hasparentquery(\",\"join。\",\"json\",\"json.put(\\\"message\\\",\\\"tri\",\"json.put(\\\"postdate\\\",\\\"2013\",\"json.put(\\\"postdate\\\",new\",\"json.put(\\\"user\\\",\\\"kimchy\\\");\",\"jt\",\"key\",\"key,\",\"key.getyear(),\",\"keyasstr\",\"keyasstring,\",\"languag\",\"larg\",\"left\",\"level\",\"levenshtein\",\"levenshtein。\",\"list\",\"listen\",\"logger.info(\\\"\",\"logger.info(\\\"bottomright\",\"logger.info(\\\"key\",\"logger.info(\\\"perc\",\"long\",\"lookup\",\"loop.\",\"lt()\",\"lte()\",\"made,\",\"main\",\"map\",\"mapper\",\"mapper.writevalueasbytes(csdn);\",\"mapper.writevalueasbytes(yourbeaninstance);\",\"map方式\",\"map是key:value数据类型，可以代表json结构.\",\"margin\",\"mark\",\"match\",\"matchal\",\"matchallquery();\",\"matchquery(\",\"matchquery(\\\"name\\\",\",\"math\",\"maven\",\"max\",\"maxaggregationbuild\",\"maximum\",\"mechan\",\"men\",\"merg\",\"method\",\"metric\",\"min\",\"minaggregationbuild\",\"miss\",\"more_like_thi\",\"morelikethisquery(fields,\",\"multi\",\"multigetitemrespons\",\"multigetitemresponses)\",\"multigetrespons\",\"multimatchquery(\",\"multisearch\",\"multisearchrespons\",\"multisearchresponse#getresponses()\",\"must_not\",\"must_not,\",\"mustach\",\"mydesignatedquerynam\",\"name\",\"name.getbuckets())\",\"nbhit\",\"near\",\"need\",\"neg\",\"nest\",\"nestedquery(\",\"new\",\"node.client().preparesearch()\",\"nodeclient顾名思义，是作为es集群的一个节点，它是es中的一环，其他的节点对它是感知的，不像transportclient那样，es集群对它一无所知。nodeclient通信的性能会更好，但是因为是es的一环，所以它出问题，也会给es集群带来问题。nodeclient可以设置不作为数据节点，在elasticsearch.yml中设置，这样就不会在此节点上分配数据。\",\"non\",\"none\",\"not)\",\"now\",\"null\",\"null))//脚本可以是本地文件存储的，如果使用文件存储的脚本，需要设置\",\"null,\",\"null;\",\"null的值就会返回该文档。\",\"null）。\",\"num\",\"number\",\"numer\",\"object\",\"objectmapp\",\"objectmapper();\",\"on\",\"once,\",\"one\\\"};\",\"onfailure(except\",\"onresponse(bulkbyscrollrespons\",\"operationthread\",\"option\",\"order\",\"org.elasticsearch.action.bulk.backoffpolicy;\",\"org.elasticsearch.action.bulk.bulkprocessor;\",\"org.elasticsearch.action.index.indexresponse;\",\"org.elasticsearch.action.search.searchresponse;\",\"org.elasticsearch.action.search.searchtype;\",\"org.elasticsearch.cli\",\"org.elasticsearch.client.transport.transportclient;\",\"org.elasticsearch.common.geo.builders.shapebuilder;\",\"org.elasticsearch.common.geo.shaperelation;\",\"org.elasticsearch.common.settings.settings;\",\"org.elasticsearch.common.transport.inetsockettransportaddress;\",\"org.elasticsearch.common.unit.bytesizeunit;\",\"org.elasticsearch.common.unit.bytesizevalue;\",\"org.elasticsearch.common.unit.timevalue;\",\"org.elasticsearch.common.util.concurrent.abstractrunnable.run(abstractrunnable.java:37)\",\"org.elasticsearch.common.xcontent.xcontentbuilder;\",\"org.elasticsearch.common.xcontent.xcontentfactory.*;\",\"org.elasticsearch.common.xcontent.xcontentfactory;\",\"org.elasticsearch.index.query.functionscore.scorefunctionbuilders.*;\",\"org.elasticsearch.index.query.querybuilders.*;\",\"org.elasticsearch.join.aggregations.children;\",\"org.elasticsearch.search.action.searchservicetransportaction$searchqueryscrolltransporthandler.messagereceived(searchservicetransportaction.java:381)\",\"org.elasticsearch.search.action.searchservicetransportaction$searchqueryscrolltransporthandler.messagereceived(searchservicetransportaction.java:384)\",\"org.elasticsearch.search.aggregations.aggregationbuilders;\",\"org.elasticsearch.search.aggregations.bucket.filter.filter;\",\"org.elasticsearch.search.aggregations.bucket.filters.filters;\",\"org.elasticsearch.search.aggregations.bucket.geogrid.geohashgrid;\",\"org.elasticsearch.search.aggregations.bucket.global.global;\",\"org.elasticsearch.search.aggregations.bucket.histogram.histogram;\",\"org.elasticsearch.search.aggregations.bucket.missing.missing;\",\"org.elasticsearch.search.aggregations.bucket.nested.nested;\",\"org.elasticsearch.search.aggregations.bucket.nested.reversenested;\",\"org.elasticsearch.search.aggregations.bucket.range.range;\",\"org.elasticsearch.search.aggregations.bucket.significant.significantterms;\",\"org.elasticsearch.search.aggregations.bucket.terms.terms;\",\"org.elasticsearch.search.aggregations.metrics.avg.avg;\",\"org.elasticsearch.search.aggregations.metrics.cardinality.cardinality;\",\"org.elasticsearch.search.aggregations.metrics.geobounds.geobounds;\",\"org.elasticsearch.search.aggregations.metrics.max.max;\",\"org.elasticsearch.search.aggregations.metrics.min.min;\",\"org.elasticsearch.search.aggregations.metrics.percentiles.percentile;\",\"org.elasticsearch.search.aggregations.metrics.percentiles.percentileranks;\",\"org.elasticsearch.search.aggregations.metrics.percentiles.percentiles;\",\"org.elasticsearch.search.aggregations.metrics.stats.extended.extendedstats;\",\"org.elasticsearch.search.aggregations.metrics.stats.stats;\",\"org.elasticsearch.search.aggregations.metrics.sum.sum;\",\"org.elasticsearch.search.aggregations.metrics.tophits.tophits;\",\"org.elasticsearch.search.aggregations.metrics.valuecount.valuecount;\",\"org.elasticsearch.search.searchservice.executequeryphase(searchservice.java:403)\",\"org.elasticsearch.search.searchservice.findcontext(searchservice.java:613)\",\"org.elasticsearch.transport.client.prebuilttransportclient;\",\"org.elasticsearch.transport.requesthandlerregistry.processmessagereceived(requesthandlerregistry.java:75)\",\"org.elasticsearch.transport.transportrequesthandler.messagereceived(transportrequesthandler.java:33)\",\"org.elasticsearch.transport.transportservice$4.dorun(transportservice.java:376)\",\"org.junit.before;\",\"org.junit.test;\",\"org.locationtech.spatial4j\",\"origin\",\"out\",\"over\",\"overlap\",\"pack\",\"params.param1\",\"parent\",\"part\",\"path\",\"percent\",\"percent,\",\"percentil\",\"percentilerank\",\"percentilesaggregationbuild\",\"percol\",\"percolate,\",\"percolatequeri\",\"percolatequerybuild\",\"percolatequerybuilder(\\\"query\\\",\",\"point\",\"points);\",\"points.add(new\",\"point类型字段），计算出该字段所有地理坐标点的边界（左上角/右下角坐标点）。\",\"polygon\",\"posit\",\"post\\\")\",\"pre\",\"prebuilttransportclient(essettings);//初始化client较老版本发生了变化，此方法有几个重载方法，初始化插件等。\",\"prebuilttransportclient(settings)\",\"prebuilttransportclient(settings);\",\"prebuilttransportclient(settings.empty)\",\"prebuiltxpacktransportclient(settings)\",\"prefix\",\"prefix,\",\"prefixquery(\",\"prefixquery(\\\"user\\\",\",\"prefixquerybuilder,\",\"prepareupdate()\",\"privat\",\"process\",\"processor\",\"public\",\"qb\",\"qb)\",\"qualified）。\",\"queri\",\"query(相似度查询)\",\"querybuild\",\"querybuilders.existsquery(\\\"name\\\");\",\"querybuilders.functionscorequery(functions);\",\"querybuilders.rangequery(\\\"age\\\").gte(19).lte(21);\",\"querybuilders.rangequery(\\\"age\\\");\",\"querybuilders.regexpquery(\\\"country\\\",\",\"querybuilders.termquery(\\\"gender\\\",\",\"querybuilders.wildcardquery(\\\"country\\\",\",\"querybuilders。\",\"querybuilder可以用于接受任何查询api，如count和search。\",\"querystringquery(\\\"+kimchi\",\"query（id查询）\",\"query（前缀查询）\",\"query（多项查询）\",\"query（存在查询）\",\"query（模糊查询）\",\"query（正则表达式查询）\",\"query（类型查询）\",\"query（范围查询）\",\"query（通配符查询）\",\"query（项查询）\",\"query）\",\"randomfunction(\\\"abcdef\\\")),\",\"rang\",\"range,\",\"rangequery(\\\"price\\\")\",\"rangequerybuild\",\"rangequerybuilder,\",\"rangequerybuilder.from(19);\",\"rangequerybuilder.includelower(true);\",\"rangequerybuilder.includeupper(true);\",\"rangequerybuilder.to(21);\",\"rank\",\"real\",\"reflect\",\"refresh\",\"regexp\",\"regexpquery(\",\"regexpquerybuild\",\"regist\",\"releas\",\"remain\",\"repositori\",\"request\",\"request)\",\"request,\",\"requests#\",\"requests,\",\"requir\",\"resellertoproduct\",\"resellertoproduct.getdoccount();\",\"respons\",\"response)\",\"response.getdeleted();\",\"response.gethits())\",\"response.gethits().gettotalhits();\",\"response.getid();\",\"response.getindex();\",\"response.getsourceasstring();\",\"response.gettype();\",\"response.getversion();\",\"response.issucceeded();\",\"response.status();\",\"rest\",\"reststatu\",\"result\",\"return\",\"reus\",\"revers\",\"reverse_nest\",\"reversenest\",\"right\",\"root\",\"score\",\"scoremode.avg\",\"scoremode.avg,\",\"scoremode.max,\",\"scoremode.min,\",\"scoremode.non\",\"scoremode.tot\",\"scoremode.total,\",\"script\",\"script(\",\"script(\\\"ctx._source.gend\",\"script(\\\"doc['num1'].valu\",\"scriptquery(\",\"scriptservice.scripttype.fil\",\"scripttype.file,\",\"scripttype.index\",\"scripttype.inline，\",\"script），以【字段范围】来桶分聚合。范围聚合包括\",\"scroll\",\"scrollid\",\"scrollid){\",\"scrollidlist\",\"scrollidlist){\",\"scrollresp\",\"scrollresp.gethits().gethits())\",\"scroll，初始搜索请求应该在查询中指定\",\"search\",\"searchcontextmissingexception[no\",\"searching!\",\"searchrequest())\",\"searchrequestbuild\",\"searchrequestbuilder.execute().actionget();\",\"searchrequestbuilder.get();\",\"searchrequestbuilder.setquery(existsquerybuilder);\",\"searchrequestbuilder.setquery(rangequerybuilder);\",\"searchrequestbuilder.setquery(regexpquerybuilder);\",\"searchrequestbuilder.setquery(wildcardquerybuilder);\",\"searchrequestbuilder.settypes(type);\",\"searchrespons\",\"searchtemplaterequestbuilder(client)\",\"set\",\"settings.builder()\",\"settings.builder().put(\\\"cluster.name\\\",\",\"shall\",\"shape\",\"shape.\",\"shapebuild\",\"shapebuilders.newmultipoint(points)\",\"shaperel\",\"shaperelation.contains,\",\"shaperelation.disjoint\",\"shaperelation.intersect\",\"shaperelation.within,\",\"shapes.\",\"should,\",\"shutdown\",\"signific\",\"significantterm\",\"similar\",\"simplequerystringquery(\\\"+kimchi\",\"singl\",\"size,\",\"smith\\\")\",\"smith\\\",\",\"snapshot\",\"someth\",\"sort,\",\"sortorder.asc)\",\"span\",\"span_contain\",\"span_first查询\",\"span_multi查询\",\"span_near查询\",\"span_not查询\",\"span_or查询\",\"span_term查询\",\"span_within查询\",\"spancontainingquery(\",\"spanfirstquery(\",\"spanmultitermquerybuilder(\",\"spannearquery(\",\"spannearquery(spantermquery(\\\"field1\\\",\",\"spannearquery(spantermquery(\\\"field1\\\",\\\"bar\\\"),\",\"spannotquery(\",\"spanorquery(\",\"spantermquery(\",\"spantermquery(\\\"field\\\",\\\"value1\\\"))\",\"spantermquery(\\\"field\\\",\\\"value1\\\"),\",\"spantermquery(\\\"field\\\",\\\"value2\\\"));\",\"spantermquery(\\\"field1\\\",\",\"spantermquery(\\\"field1\\\",\\\"foo\\\"));\",\"spantermquery(\\\"user\\\",\",\"spanwithinquery(\",\"spatial4j\",\"special\",\"specifi\",\"spring\",\"sql\",\"sr\",\"sr.getaggregations().get(\\\"agg\\\");\",\"sr.getaggregations().get(\\\"agg1\\\");\",\"sr.getaggregations().get(\\\"agg2\\\");\",\"sr.getaggregations().get(\\\"genders\\\");\",\"sr.getaggregations().get(\\\"significant_countries\\\");\",\"sr.getresponses())\",\"srb1\",\"srb2\",\"standard\",\"start\",\"starter\",\"startup\",\"stat\",\"state\",\"statement.\",\"state》\",\"state是全局性信息,\",\"static\",\"statsaggregationbuild\",\"stats）的称作\",\"statu\",\"stddeviat\",\"store\",\"string\",\"string[]\",\"structur\",\"sub\",\"sum\",\"sumaggregationbuild\",\"sumofsquar\",\"system.out.println(\\\"创建成功!\\\");\",\"system.out.println(response.getresult());\",\"templat\",\"template_param\",\"template_params.put(\\\"param_gender\\\",\",\"templates:\",\"templates。\",\"templates：\",\"term\",\"termin\",\"termquery(\",\"termquery(\\\"content\\\",\",\"termquery(\\\"multi\\\",\",\"termquery(\\\"name\\\",\\\"dadoonet\\\"))\",\"termquery(\\\"name\\\",\\\"kimchy\\\")\",\"termquery(\\\"name\\\",\\\"kimchy\\\"),\",\"termquery(\\\"tag\\\",\",\"termquery(\\\"tag\\\",\\\"something\\\"),\",\"termsquery(\\\"tags\\\",\",\"text\",\"texts,\",\"those\",\"though\",\"threshold\",\"through\",\"throw\",\"throwabl\",\"time\",\"time)。后续的对文档的改动（索引、更新或者删除）都只会影响后面的搜索请求。\",\"timeunit.minutes);\",\"timevalue(60000))\",\"timevalue(60000)).execute().actionget();\",\"to()\",\"to,\",\"toasdat\",\"toasdate,\",\"toasstr\",\"toasstring,\",\"tokens,\",\"top\",\"top_hit\",\"tophit\",\"tophits.gethits().gethits())\",\"topleft\",\"topleft);\",\"transport\",\"transportcli\",\"transportclient作为一个外部访问者，通过http去请求es的集群，对于集群而言，它是一个外部因素。\",\"tri\",\"true\",\"true)\",\"true).build();\",\"true:\",\"type\",\"typequery(\\\"my_type\\\");\",\"type，可以使用\",\"unmatch\",\"until\",\"updat\",\"updaterequest\",\"updaterequest(\\\"index\\\",\",\"updaterequest(\\\"ttl\\\",\",\"updaterequest();\",\"updaterequest,通过client发送；\",\"updaterequest.doc(jsonbuilder()\",\"updaterequest.id(\\\"1\\\");\",\"updaterequest.index(\\\"index\\\");\",\"updaterequest.type(\\\"type\\\");\",\"upsert\",\"us\",\"user\",\"valu\",\"value);\",\"valuecount\",\"valuecountaggregationbuild\",\"value指标聚合，它通过从聚合文档中提取数值来计算一个或多个百分比。这些值可以从特定数值字段中提取，也可以由提供的脚本生成。\",\"varianc\",\"version\",\"void\",\"we'r\",\"while(scrollresp.gethits().gethits().length\",\"whole\",\"whose\",\"wildcard\",\"wildcard,\",\"wildcardquery(\\\"user\\\",\",\"wildcardquerybuild\",\"wildcardquerybuilder。\",\"within\",\"word\\\\\\\"\\\"\",\"x\",\"xcontentbuild\",\"xcontentbuilder帮助类方式\",\"xcontentfactory.jsonbuilder()\",\"xcontentfactory.jsonbuilder().startobject();\",\"xerc\",\"xercesimpl\",\"xpack\",\"xpacktransportcli\",\"zero\",\"{\",\"{\\\"name.first\\\",\",\"{\\\"text\",\"{\\\\n\\\"\",\"{}\\\",\",\"{},\",\"}\",\"})\",\"});\",\"};\",\"}\\\\n\\\"\",\"“~”\",\"…\",\"。\",\"《为什么elasticsearch应用开发者需要了解clust\",\"一个multi\",\"一个就够了，因为添加了自动嗅探配置\",\"一个特殊的单桶聚合，可以从嵌套文档中聚合父文档。实际上，这种聚合可以从嵌套的块结构中跳出来，并链接到其他嵌套的结构或根文档.这允许嵌套不是嵌套对象的一部分的其他聚合在嵌套聚合中。\",\"一定要修改默认仓库地址为https://artifacts.elastic.co/maven\",\"一旦的查询准备就绪，就可以使用search\",\"一次获取多个文档\",\"一种特殊的单桶聚合，可以将父文档类型上的桶聚合到子文档上。\",\"一类父子关系可以存在单个的索引的两个类型的文档之间。has_child\",\"一般搜索请求都是返回一\\\"页\\\"数据，无论数据量多大都一起返回给用户，scroll\",\"上\",\"上面代码中的查询语句与下面的是等价的：\",\"下载地址：https://www.gitbook.com/book/quanke/elasticsearch\",\"下面几个文档不会得到上面代码的匹配：\",\"下面是如何使用\",\"下面是如何创建聚合请求的是示例：\",\"下面是如何用java\",\"下面的代码演示了如何在搜索中添加两个聚合：\",\"下面的例子是operationthread\",\"不像\",\"不设置flushinterv\",\"不设置集群名称\",\"与lucene查询语句的语法结合的更加紧密的一种查询，允许你在一个查询语句中使用多个\",\"与一般查询作用一样，只不过不参与评分\",\"与度量聚合相比，bucket聚合可以保存子聚合，这些子聚合将针对由其“父”bucket聚合创建的bucket进行聚合。\",\"与直方图类似的多bucket聚合，但只能应用于日期值.。\",\"两种\",\"中:\",\"中所述，可以在聚合中定义子聚合。\",\"中才能使用此类型：\",\"为\",\"为了检查文档注册查询,使用这个代码:\",\"为我们自动生成一个。\",\"举例说明，下面的几个文档都会得到上面代码的匹配：\",\"之\",\"也可以执行\",\"以及\",\"传给子\",\"位于由其他span查询列表返回的范围内，就会返回单个span查询的结果，\",\"位置,\",\"作为查询条件，下面是例子：\",\"你还可以通过startarray(string)和endarray()方法添加数组。.field()方法可以接受多种对象类型。你可以给它传递数字、日期、甚至其他xcontentbuilder对象。\",\"使用\",\"使用children\",\"使用date\",\"使用elasticsearch\",\"使用geo\",\"使用has_child查询。\",\"使用has_parent查询时，必须使用prebuilttransportclient而不是常规\",\"使用histogram\",\"使用ip\",\"使用jackson序列化\",\"使用map方式，会自动转换成与之等价的json\",\"使用maven管理项目，把下面代码增加到pom.xml;\",\"使用rang\",\"使用revers\",\"使用scriptservice.scripttype.stor\",\"使用signific\",\"使用term\",\"使用updaterequest\",\"使用值计数聚合\",\"使用全局聚合\",\"使用内置的帮助类\",\"使用函数修改主查询返回的分数，以考虑诸如流行度，新近度，距离或使用脚本实现的自定义算法等因素。\",\"使用地理边界聚合\",\"使用基于字段数据的单桶聚合\",\"使用基数聚合\",\"使用多过滤聚合\",\"使用嵌套类型聚合\",\"使用平均值聚合\",\"使用扩展统计聚合\",\"使用最大值聚合\",\"使用最小值聚合\",\"使用最高匹配权值聚合\",\"使用求和聚合\",\"使用百分比等级聚合\",\"使用百分百聚合\",\"使用第三方库来序列化beans，如jackson\",\"使用统计聚合\",\"使用聚合请求\",\"使用脚本更新文档\",\"使用过滤聚合\",\"使用集合\",\"例如，有一个名为\",\"例如，这里是一个3级聚合组成的聚合：\",\"值计数聚合\",\"值计数聚合——计算聚合文档中某个值的个数,\",\"值（区间前闭后开）。\",\"值，不包括\",\"允许在同一api中执行多个搜索请求。它的端点（endpoint）是\",\"允许我们在执行搜索请求和使用模板参数填充现有模板之前，能够使用\",\"允许我们存储一个json格式的文档，使数据可以被搜索。文档通过index、type、id唯一确定。我们可以自己提供一个id，或者也使用index\",\"全局聚合\",\"全局聚合器只能作为顶层聚合器放置，因为将全局聚合器嵌入到另一个分组聚合器中是没有意义的。\",\"全文搜索\",\"全科\",\"关闭\",\"关闭client\",\"其他配置\",\"内的每一个【唯一词元】为一个桶，并计算每个桶内文档个数。默认返回顺序是按照文档个数多少排序。当不返回所有\",\"内联(inline)\",\"准备聚合请求\",\"则返回其父文档能满足特定查询的子文档\",\"创建\",\"创建bulkprocessor实例\",\"创建search\",\"判断返回文档是否达到设置的数量：\",\"包含term,\",\"包含了整个群集中所有分片的元信息(规则,\",\"包装另一个span查询，并排除与该查询匹配的所有文档。\",\"匹配条件越多，预期越好\",\"匹配查询（match\",\"参数，告诉\",\"参考\",\"参考：\",\"发生那一时刻的索引状态，就像一个快照(the\",\"另请参阅\",\"只要其\",\"可以使用星号代替0个或多个字符，使用问号代替一个字符。星号表示匹配的数量不受限制，而后者的匹配字符数则受到限制。这个技巧主要用于英文搜索中，如输入““computer*”，就可以找到“computer、computers、computerised、computerized”等单词，而输入“comp?ter”，则只能找到“computer、compater、competer”等单词。注意的是通配符查询不太注重性能，在可能时尽量避免，特别是要避免前缀通配符（以通配符开始的词条）。\",\"可以在config/scripts中使用存储的\",\"可以对一些比较专业的偏门词语进行的更加专业的查询\",\"可以执行同步方法\",\"可以提供百分位数，而不是使用默认值：\",\"可以是\",\"可以用来对多个字段的版本进行匹配查询\",\"合并文档\",\"同样的，包括\",\"名\",\"否则，parent\",\"和\",\"和前缀查询一样，正则表达式查询指定字段是未分析的（not\",\"因此，必须将\",\"在\",\"在5.0.0中已弃用。用搜索\",\"在geo_point字段上工作的多bucket聚合和概念上的工作非常类似于range(范围)聚合.用户可以定义原点的点和距离范围的集合。聚合计算每个文档值与原点的距离，并根据范围确定其所属的bucket(桶)（如果文档和原点之间的距离落在bucket(桶)的距离范围内，则文档属于bucket(桶)\",\"在geo_point字段和组上工作的多bucket聚合将指向网格中表示单元格的bucket。生成的网格可以是稀疏的，并且只包含具有匹配数据的单元格。每个单元格使用具有用户可定义精度的\",\"在pom.xml文件中增加：\",\"在上面的index中query名为\",\"在像\",\"在可以使用percolate查询之前，应该添加percolator映射，并且应该对包含percolator查询的文档建立索引：\",\"在测试用使用bulk\",\"在这组的查询中：\",\"地理位置查询\",\"地理距离聚合\",\"地理边界聚合\",\"地理边界聚合——基于文档的某个字段（geo\",\"基于字段数据的单桶聚合\",\"基于字段数据的单桶聚合，创建当前文档集上下文中缺少字段值的所有文档的bucket（桶）（有效地，丢失了一个字段或配置了null值集），此聚合器通常与其他字段数据桶聚合器（例如范围）结合使用，以返回由于缺少字段数据值而无法放置在任何其他存储区中的所有文档的信息。\",\"基于嵌套（nested）数据类型，把该【嵌套类型的信息】聚合到单个桶里，然后就可以对嵌套类型做进一步的聚合操作。\",\"基于文档中的某个【数值类型】字段，通过计算来动态的分桶。\",\"基于文档的某个值，计算文档非重复的个数（去重计数）。。这些值可以从特定数值字段中提取，也可以由提供的脚本生成。\",\"基于某个field，该\",\"基于某个值（可以是\",\"基数聚合\",\"增加request\",\"增加自动嗅探配置\",\"复合查询用来包装其他复合或者叶子查询，一方面可综合其结果和分数，从而改变它的行为，另一方面可从查询切换到过滤器上下文。此类查询包含：\",\"多个字段\",\"多字段查询（multi_match\",\"多过滤聚合\",\"多过滤聚合——基于多个过滤条件，来对当前文档进行【过滤】的聚合，每个过滤都包含所有满足它的文档（多个bucket中可能重复）。\",\"大多数标准的搜索选项可以使用，比如：from,\",\"大小等信息),\",\"大概会输出：\",\"大概输出\",\"大概输出：\",\"如\",\"如果\",\"如果不存在，会插入新的文档：\",\"如果已经在每个数据节点上存储名为\",\"如果指定的字段是string类型，模糊查询是基于编辑距离算法来匹配文档。编辑距离的计算基于我们提供的查询词条和被搜索文档。如果指定的字段是数值类型或者日期类型，模糊查询基于在字段值上进行加减操作来匹配文档（th\",\"如果用es的节点，大家仁者见仁智者见智，各按所需。\",\"如果超过滚动时间，继续使用该滚动id搜索数据，则会报错：\",\"如果需要执行的时间比较长，可以使用异步的方式处理,结果在回调里面获取\",\"子句他们的分数相结合\",\"子句在过滤器上下文中执行。\",\"子聚合排列（标示为聚合名）\",\"字段\",\"字段来代替\",\"存储在\",\"存在，类似下面的文档：\",\"安装\",\"官方文档\",\"定义搜索执行上下文中的所有文档的单个bucket，这个上下文由索引和您正在搜索的文档类型定义，但不受搜索查询本身的影响。\",\"实例\",\"对于e\",\"对指定的索引执行一个查询，对其他索引执行另一个查询。\",\"将模板参数定义为\",\"尽管java\",\"嵌套文档的路径\",\"嵌套类型聚合\",\"帮助类\",\"常用术语查询（common_term\",\"平均值聚合\",\"并保持每个每节的信息同步。\",\"序列化方式\",\"开始值\",\"开源项目\",\"异常，可以通过backoffpolicy.nobackoff()方法关闭重试机制\",\"当所有文档都处理完成，使用awaitclos\",\"或\",\"或者\",\"或者多个index\",\"或者把时间间隔设置为10天\",\"所有的参数都是可选的，下面是最小调用：\",\"手册\",\"手动方式\",\"手动方式，使用原生的byte[]或者str\",\"手动生成json\",\"执行\",\"执行一个存储的\",\"扩展\",\"扩展统计聚合\",\"扩展统计聚合——基于文档的某个值，计算出一些统计信息（比普通的stats聚合多了sum_of_squares、variance、std_deviation、std_deviation_bounds）,\",\"按metric\",\"按升序排列：\",\"按字词顺序，升序排列：\",\"排序\",\"接受span查询的列表，但仅返回与第二个spans查询匹配的span。\",\"接受另一个span查询，其匹配必须出现在字段的前n个位置。\",\"接受多个span查询，其匹配必须在彼此的指定距离内，并且可能顺序相同。\",\"提供了一个基于\",\"提供了一个简单的接口，在给定的大小数量上定时批量自动请求\",\"提供了两种形式的\",\"插件，需要prebuiltxpacktransportclient实例才能访问\",\"搜索api可以支持搜索查询，返回查询匹配的结果，它可以搜索一个index\",\"支持多并发查询的查询，并可返回与任意查询条件子句匹配的任何文档类型。与\",\"数值计量聚合操作是能够产生具体的数值的一种计量聚合操作。一些聚合操作输出单个的计量数值（例如avg），并且被称作singl\",\"数据格式\",\"文档\",\"文档中可能包含嵌套类型的字段，这些字段用来索引一些数组对象，每个对象都可以作为一条独立的文档被查询出来(用嵌套查询)\",\"方法\",\"方法关闭bulkprocessor:\",\"方法：\",\"方法；\",\"日期范围可以用各种\",\"日期范围直方图聚合\",\"日期范围聚合\",\"日期范围聚合——基于日期类型的值，以【日期范围】来桶分聚合。\",\"是一种适合直接暴露给用户的简单的且具有非常完善的查询语法的查询语句\",\"是内联传递的\",\"是可选择的，可以不写\",\"是在不同的线程里执行此次操作\",\"是子类型\",\"是聚合名，resel\",\"更多请关注我的微信公众号：\",\"更多请查看\",\"更多请浏览\",\"更多请浏览rest\",\"更多请移步\",\"更新插入,如果存在文档就更新，如果不存在就插入\",\"更新索引\",\"最大值聚合\",\"最小值聚合\",\"最简单的查询，它匹配所有文档\",\"最高匹配权值聚合\",\"最高匹配权值聚合——跟踪聚合中相关性最高的文档。该聚合一般用做\",\"有不同的bucket聚合器，每个具有不同的“bucketing”策略,一些定义一个单独的bucket，一些定义多个bucket的固定数量，另一些定义在聚合过程中动态创建bucket\",\"有两种方式更新索引：\",\"有兴趣可以自己参考\",\"服务安装了\",\"本书由\",\"术语查询\",\"条件。\",\"来定义查询。\",\"来进行模糊查询。\",\"构建对象，增加到搜索请求中:\",\"查找在一个中心点指定范围内的地理点文档。\",\"查找指定多边形内地理点的文档。\",\"查找指定字段包含以指定的精确前缀开头的值的文档。\",\"查找落入指定的矩形地理点的文档。\",\"查找要么相交，包含的，要么指定形状不相交的地理形状的文档。\",\"查看\",\"查看bool\",\"查看boost\",\"查看common\",\"查看constant\",\"查看di\",\"查看exist\",\"查看function\",\"查看fuzzi\",\"查看geo\",\"查看ha\",\"查看id\",\"查看indic\",\"查看more\",\"查看nest\",\"查看percol\",\"查看prefix\",\"查看queri\",\"查看rang\",\"查看regexp\",\"查看script\",\"查看simpl\",\"查看span\",\"查看term\",\"查看type\",\"查看wildcard\",\"查询\",\"查询。\",\"查询中引用的任何字段都必须使用完整路径（fulli\",\"查询中的term\",\"查询具有指定类型和\",\"查询包含任意一个在指定字段中指定的多个确切值的文档。\",\"查询包含在指定字段中指定的确切值的文档。\",\"查询只使用最佳匹配查询条件的分数。\",\"查询可以将所有匹配查询的分数相结合使用的方式不同的是，dis_max\",\"查询将匹配字段值大于或等于此参数值的文档;\",\"查询将匹配字段值大于或等于此参数值的文档。\",\"查询将匹配字段值大于此参数值的文档。\",\"查询将匹配字段值小于或等于此参数值的文档;\",\"查询将匹配字段值小于或等于此参数值的文档。\",\"查询将匹配字段值小于此参数值的文档。\",\"查询将返回其子文档能满足特定的查询的父文档，而\",\"查询指定字段包含与指定术语模糊相似的术语的文档。模糊性测量为1或2的\",\"查询指定字段包含与指定模式匹配的值的文档，其中该模式支持单字符通配符（？）和多字符通配符（*）,和前缀查询一样，通配符查询指定字段是未分析的（not\",\"查询指定字段包含指定范围内的值（日期，数字或字符串）的文档。\",\"查询指定的字段包含与指定的正则表达式匹配的值的文档。\",\"查询指定的字段包含任何非空值的文档,如果指定字段上至少存在一个no\",\"查询指定类型的文档。\",\"查询时，必须使用prebuilttransportclient而不是常规\",\"查询条件\",\"查询构建器的工厂是\",\"查询的文档，并且当减少文档的分数时其结果也匹配\",\"查询语句查询（query_str\",\"根据id删除：\",\"桶分聚合\",\"模块不会被加载，并且不能从transport\",\"模型\",\"此功能为实验性的，不建议生产使用，所以也不做过多说明\",\"比如：fuzzyquerybuilder,\",\"求和聚合\",\"注意，可以使用querybuilder对象上的tostring（）方法打印。\",\"注意：请参考百分比（通常）近视值（percentil\",\"添加到\",\"清除滚动id\",\"滚动搜索(scroll\",\"然后使用：\",\"然后增加requests到bulkprocessor\",\"版本号选择自己合适的。\",\"特殊条件关键字（如：and|or|not\",\"用于执行全文查询的标准查询，包括模糊匹配和词组或邻近程度的查询\",\"用于计算的值可以是特定的数值型字段，也可以通过脚本计算而来。\",\"百分比等级聚合\",\"百分百聚合\",\"百分百聚合——基于聚合文档中某个数值类型的值，求这些值中的一个或者多个百分比,\",\"的\",\"的值。\",\"的值，不包括\",\"的完整的查询\",\"的情况，文档个数可能不准确。\",\"的文件，其中包含：\",\"的文档。\",\"的方式提供完整的java查询dsl。\",\"的脚本，请执行以下操作：\",\"直方图聚合\",\"磁盘上\",\"第一个是null值。\",\"第一个是字符串，是一个非null的值。\",\"第三个使用标准分析器的情况下尽管不会返回词条，但是原始字段值是非null的（even\",\"第三个只有null值，至少需要一个非null值。\",\"第二个是空字符串，也是非null。\",\"第二个没有值。\",\"第五个中至少有一个是非null值。\",\"第四个与指定字段不匹配。\",\"等同于\",\"简单查询语句（simple_query_string）\",\"类型使用\",\"类目\",\"组合多个span查询\",\"组合多个叶子并发查询或复合查询条件的默认查询类型，例如must,\",\"结束值\",\"结构化聚合\",\"统计聚合\",\"统计聚合——基于文档的某个值，计算出一些统计信息（min、max、sum、count、avg）,\",\"综合实例\",\"编辑整理辛苦，还望大神们点一下star\",\"编辑：http://quanke.nam\",\"翻译，并且整理成电子书，支持pdf,epub,mobi格式，方便大家下载阅读。\",\"而\",\"聚合\",\"聚合(一个跟踪和计算指标的聚合)或者\",\"聚合可以被看做是从一组文件中获取分析信息的一系列工作的统称。聚合的实现过程就是定义这个文档集的过程（例如，在搜索请求的基础上，执行查询/过滤，才能得到高水平的聚合结果）。\",\"聚合可能是\",\"聚合必须定义在nested之中\",\"聚合框架有助于根据搜索查询提供聚合数据。它是基于简单的构建块也称为整合，整合就是将复杂的数据摘要有序的放在一块。\",\"聚合联合使用，比如在计算一个字段的平均值的时候，可能还会关注这个平均值是由多少个值计算而来。\",\"脚本名\",\"脚本引擎\",\"节点的时间间隔，默认是5\",\"范围聚合\",\"获取文档的最大数量，如果设置了，需要通过searchresponse对象里的isterminatedearly()\",\"虽然全文查询将在执行之前分析查询字符串，但是项级别查询对存储在反向索引中的确切项进行操作。\",\"虽然当滚动有效时间已过，搜索上下文(search\",\"表示\",\"表达式。\",\"要使用querybuilder，只需将它们导入到类中：\",\"计算度量这类的聚合操作是以使用一种方式或者从文档中提取需要聚合的值为基础的。这些数据不但可以从文档（使用数据属性）的属性中提取出来，也可以使用脚本生成。\",\"设置为\",\"设置集群名称\",\"词元聚合\",\"该查询允许脚本充当过滤器。\",\"该聚合一般域其它\",\"详细文档请看\",\"详解2（metric\",\"详解3（bucket\",\"语言预先呈现搜索请求。\",\"请参阅聚合指南。\",\"请求\",\"请求返回的结果只是反映了\",\"请求：\",\"输出：\",\"过滤\",\"过滤聚合\",\"过滤聚合——基于一个条件，来对当前的文档进行过滤的聚合。\",\"返回与任何指定查询匹配的文档。\",\"返回匹配\",\"返回集合中感兴趣的或者不常见的词条的聚合\",\"还可以将\",\"这两个函数与includelower()和includeupper()函数配套使用。\",\"这个查询能检索到与指定文本、文档或者文档集合相似的文档。\",\"这些查询通常用于结构化数据，如数字、日期和枚举，而不是全文字段。或者，在分析过程之前，它允许你绘制低级查询。\",\"这是一个包装其他查询的查询，并且在过滤器上下文中执行。与此查询匹配的所有文件都需要返回相同的“常量”\",\"这样的分布式系统中执行全\",\"这样的查询有以下这些：\",\"这里定义索引名称）\",\"这里有几种不同的方式来产生json格式的文档(document)：\",\"进行标记。\",\"通过\",\"通过查询条件删除\",\"那样计算指标，恰恰相反，它创建文档的buckets，每个buckets与标准（取决于聚合类型）相关联，它决定了当前上下文中的文档是否会“falls”到它。换句话说，bucket可以有效地定义文档集合。除了buckets本身，bucket集合还计算并返回“落入”每个bucket的文档数量。\",\"配置线程\",\"重试\",\"阅读地址：https://es.quanke.nam\",\"集群名\",\"需要保持搜索的上下文环境多长时间（滚动时间）\",\"风格的连接查询代价昂贵，是不可行的。相应地，为了实现水平规模地扩展，elasticsearch\",\"首先创建bulkprocessor实例\",\"首先查看\",\"首先请看multisearch\",\"首先需要阅读\",\"高级别的全文搜索通常用于在全文字段（例如：一封邮件的正文）上进行全文搜索。它们了解如何分析查询的字段，并在执行之前将每个字段的分析器（或搜索分析器）应用于查询字符串。\",\"默认5秒\",\"默认设置\",\"）对多个字段进行查询，当然这种查询仅限专家用户去使用。\",\"，\",\"，但与其他span查询一起使用。\",\"，但是这种模式应该由系统选择，用户不要手动指定\",\"，例如你可以通过request.hasfailures()方法知道是否执行失败\",\"，例如你可以通过request.numberofactions()方法知道numberofact\",\"，因为这个库没有上传到maven中央仓库\",\"，它允许你在另一个文档的值中创建一个term\",\"，就增加\",\"，异步执行\",\"，忽略连接节点集群名验证\",\"，抚平我虚荣的心\",\"，这两者都是可选的依赖项。\",\"：\"],\"pipeline\":[\"stopWordFilter\",\"stemmer\"]},\"store\":{\"./\":{\"url\":\"./\",\"title\":\"Introduction\",\"keywords\":\"\",\"body\":\"Elasticsearch Java API 手册\\n\\n本书由 全科 翻译，并且整理成电子书，支持PDF,ePub,Mobi格式，方便大家下载阅读。\\n阅读地址：https://es.quanke.name\\n下载地址：https://www.gitbook.com/book/quanke/elasticsearch-java\\ngithub地址：https://github.com/quanke/elasticsearch-java\\n编辑：http://quanke.name\\n编辑整理辛苦，还望大神们点一下star ，抚平我虚荣的心\\n更多请关注我的微信公众号：\\n\\n参考\\n\\nelasticsearch java API 官方文档\\nelasticsearch性能调优\\nElasticSearch 5.0.1 java API操作\\nfendo Elasticsearch 类目\\nJava API 之 滚动搜索(Scroll API)\\nElastic Elasticsearch - ApacheCN（Apache中文网\\naggregation 详解2（metrics aggregations）\\naggregation 详解3（bucket aggregation）\\nPercentile Ranks Aggregation\\nJava API之TermQuery\\n\\n\"},\"dependency.html\":{\"url\":\"dependency.html\",\"title\":\"Dependency\",\"keywords\":\"\",\"body\":\"安装\\nMaven Repository\\nElasticsearch Java API包已经上传到 Maven Central\\n在pom.xml文件中增加：\\n\\n版本号选择自己合适的。\\n\\n\\n org.elasticsearch.client\\n transport\\n 5.6.3\\n\\n\"},\"client.html\":{\"url\":\"client.html\",\"title\":\"Client\",\"keywords\":\"\",\"body\":\"\"},\"client/transport-client.html\":{\"url\":\"client/transport-client.html\",\"title\":\"Transport Client\",\"keywords\":\"\",\"body\":\"Transport Client\\n不设置集群名称\\n// on startup\\n\\n//此步骤添加IP，至少一个，如果设置了\\\"client.transport.sniff\\\"= true 一个就够了，因为添加了自动嗅探配置\\nTransportClient client = new PreBuiltTransportClient(Settings.EMPTY)\\n .addTransportAddress(new InetSocketTransportAddress(InetAddress.getByName(\\\"host1\\\"), 9300))\\n .addTransportAddress(new InetSocketTransportAddress(InetAddress.getByName(\\\"host2\\\"), 9300));\\n\\n// on shutdown 关闭client\\n\\nclient.close();\\n设置集群名称\\nSettings settings = Settings.builder()\\n .put(\\\"cluster.name\\\", \\\"myClusterName\\\").build(); //设置ES实例的名称\\nTransportClient client = new PreBuiltTransportClient(settings); //自动嗅探整个集群的状态，把集群中其他ES节点的ip添加到本地的客户端列表中\\n//Add transport addresses and do something with the client...\\n增加自动嗅探配置\\nSettings settings = Settings.builder()\\n .put(\\\"client.transport.sniff\\\", true).build();\\nTransportClient client = new PreBuiltTransportClient(settings);\\n其他配置\\nclient.transport.ignore_cluster_name //设置 true ，忽略连接节点集群名验证\\nclient.transport.ping_timeout //ping一个节点的响应时间 默认5秒\\nclient.transport.nodes_sampler_interval //sample/ping 节点的时间间隔，默认是5s\\n\\n对于ES Client，有两种形式，一个是TransportClient，一个是NodeClient。两个的区别为：\\nTransportClient作为一个外部访问者，通过HTTP去请求ES的集群，对于集群而言，它是一个外部因素。\\nNodeClient顾名思义，是作为ES集群的一个节点，它是ES中的一环，其他的节点对它是感知的，不像TransportClient那样，ES集群对它一无所知。NodeClient通信的性能会更好，但是因为是ES的一环，所以它出问题，也会给ES集群带来问题。NodeClient可以设置不作为数据节点，在elasticsearch.yml中设置，这样就不会在此节点上分配数据。\\n\\n如果用ES的节点，大家仁者见仁智者见智，各按所需。\\n实例\\nSettings esSettings = Settings.builder()\\n\\n .put(\\\"cluster.name\\\", clusterName) //设置ES实例的名称\\n\\n .put(\\\"client.transport.sniff\\\", true) //自动嗅探整个集群的状态，把集群中其他ES节点的ip添加到本地的客户端列表中\\n\\n .build();\\n\\n client = new PreBuiltTransportClient(esSettings);//初始化client较老版本发生了变化，此方法有几个重载方法，初始化插件等。\\n\\n //此步骤添加IP，至少一个，其实一个就够了，因为添加了自动嗅探配置\\n\\n client.addTransportAddress(new InetSocketTransportAddress(InetAddress.getByName(ip), esPort));\\n\"},\"client/xpack-transport-client.html\":{\"url\":\"client/xpack-transport-client.html\",\"title\":\"XPack Transport Client\",\"keywords\":\"\",\"body\":\"XPackTransportClient\\n如果 ElasticSearch 服务安装了 x-pack 插件，需要PreBuiltXPackTransportClient实例才能访问\\n使用Maven管理项目，把下面代码增加到pom.xml;\\n\\n一定要修改默认仓库地址为https://artifacts.elastic.co/maven ，因为这个库没有上传到Maven中央仓库\\n\\n\\n\\n \\n \\n \\n elasticsearch-releases\\n https://artifacts.elastic.co/maven\\n \\n true\\n \\n \\n false\\n \\n \\n ...\\n \\n ...\\n\\n \\n \\n \\n org.elasticsearch.client\\n x-pack-transport\\n 5.6.3\\n \\n ...\\n \\n ...\\n\\n \\n实例\\nSettings settings = Settings.builder().put(\\\"cluster.name\\\", \\\"xxx\\\")\\n .put(\\\"xpack.security.transport.ssl.enabled\\\", false)\\n .put(\\\"xpack.security.user\\\", \\\"xxx:xxx\\\")\\n .put(\\\"client.transport.sniff\\\", true).build();\\ntry {\\n client = new PreBuiltXPackTransportClient(settings)\\n .addTransportAddress(new InetSocketTransportAddress(InetAddress.getByName(\\\"xxx.xxx.xxx.xxx\\\"), 9300))\\n .addTransportAddress(new InetSocketTransportAddress(InetAddress.getByName(\\\"xxx.xxx.xxx.xxx\\\"), 9300));\\n} catch (UnknownHostException e) {\\n e.printStackTrace();\\n}\\n更多请浏览 dayu-spring-boot-starter 开源项目\\n\"},\"document-apis.html\":{\"url\":\"document-apis.html\",\"title\":\"Document APIs\",\"keywords\":\"\",\"body\":\"\"},\"document-apis/index-api.html\":{\"url\":\"document-apis/index-api.html\",\"title\":\"Index API\",\"keywords\":\"\",\"body\":\"Index API\\nIndex API 允许我们存储一个JSON格式的文档，使数据可以被搜索。文档通过index、type、id唯一确定。我们可以自己提供一个id，或者也使用Index API 为我们自动生成一个。\\n这里有几种不同的方式来产生JSON格式的文档(document)：\\n\\n手动方式，使用原生的byte[]或者String\\n使用Map方式，会自动转换成与之等价的JSON\\n使用第三方库来序列化beans，如Jackson\\n使用内置的帮助类 XContentFactory.jsonBuilder()\\n\\n手动方式\\n数据格式\\nString json = \\\"{\\\" +\\n \\\"\\\\\\\"user\\\\\\\":\\\\\\\"kimchy\\\\\\\",\\\" +\\n \\\"\\\\\\\"postDate\\\\\\\":\\\\\\\"2013-01-30\\\\\\\",\\\" +\\n \\\"\\\\\\\"message\\\\\\\":\\\\\\\"trying out Elasticsearch\\\\\\\"\\\" +\\n \\\"}\\\";\\n实例\\n/** \\n * 手动生成JSON \\n */ \\n@Test \\npublic void CreateJSON(){ \\n\\n String json = \\\"{\\\" + \\n \\\"\\\\\\\"user\\\\\\\":\\\\\\\"fendo\\\\\\\",\\\" + \\n \\\"\\\\\\\"postDate\\\\\\\":\\\\\\\"2013-01-30\\\\\\\",\\\" + \\n \\\"\\\\\\\"message\\\\\\\":\\\\\\\"Hell word\\\\\\\"\\\" + \\n \\\"}\\\"; \\n\\n IndexResponse response = client.prepareIndex(\\\"fendo\\\", \\\"fendodate\\\") \\n .setSource(json) \\n .get(); \\n System.out.println(response.getResult()); \\n\\n}\\nMap方式\\nMap是key:value数据类型，可以代表json结构.\\nMap json = new HashMap();\\njson.put(\\\"user\\\",\\\"kimchy\\\");\\njson.put(\\\"postDate\\\",new Date());\\njson.put(\\\"message\\\",\\\"trying out Elasticsearch\\\");\\n实例\\n /** \\n * 使用集合 \\n */ \\n@Test \\npublic void CreateList(){ \\n\\n Map json = new HashMap(); \\n json.put(\\\"user\\\",\\\"kimchy\\\"); \\n json.put(\\\"postDate\\\",\\\"2013-01-30\\\"); \\n json.put(\\\"message\\\",\\\"trying out Elasticsearch\\\"); \\n\\n IndexResponse response = client.prepareIndex(\\\"fendo\\\", \\\"fendodate\\\") \\n .setSource(json) \\n .get(); \\n System.out.println(response.getResult()); \\n\\n}\\n序列化方式\\nElasticSearch已经使用了jackson，可以直接使用它把javabean转为json.\\nimport com.fasterxml.jackson.databind.*;\\n\\n// instance a json mapper\\nObjectMapper mapper = new ObjectMapper(); // create once, reuse\\n\\n// generate json\\nbyte[] json = mapper.writeValueAsBytes(yourbeaninstance);\\n实例\\n/** \\n * 使用JACKSON序列化 \\n * @throws Exception \\n */ \\n@Test \\npublic void CreateJACKSON() throws Exception{ \\n\\n CsdnBlog csdn=new CsdnBlog(); \\n csdn.setAuthor(\\\"fendo\\\"); \\n csdn.setContent(\\\"这是JAVA书籍\\\"); \\n csdn.setTag(\\\"C\\\"); \\n csdn.setView(\\\"100\\\"); \\n csdn.setTitile(\\\"编程\\\"); \\n csdn.setDate(new Date().toString()); \\n\\n // instance a json mapper \\n ObjectMapper mapper = new ObjectMapper(); // create once, reuse \\n\\n // generate json \\n byte[] json = mapper.writeValueAsBytes(csdn); \\n\\n IndexResponse response = client.prepareIndex(\\\"fendo\\\", \\\"fendodate\\\") \\n .setSource(json) \\n .get(); \\n System.out.println(response.getResult()); \\n}\\nXContentBuilder帮助类方式\\nElasticSearch提供了一个内置的帮助类XContentBuilder来产生JSON文档\\n// Index name\\nString _index = response.getIndex();\\n// Type name\\nString _type = response.getType();\\n// Document ID (generated or not)\\nString _id = response.getId();\\n// Version (if it's the first time you index this document, you will get: 1)\\nlong _version = response.getVersion();\\n// status has stored current instance statement.\\nRestStatus status = response.status();\\n实例\\n/** \\n * 使用ElasticSearch 帮助类 \\n * @throws IOException \\n */ \\n@Test \\npublic void CreateXContentBuilder() throws IOException{ \\n\\n XContentBuilder builder = XContentFactory.jsonBuilder() \\n .startObject() \\n .field(\\\"user\\\", \\\"ccse\\\") \\n .field(\\\"postDate\\\", new Date()) \\n .field(\\\"message\\\", \\\"this is Elasticsearch\\\") \\n .endObject(); \\n\\n IndexResponse response = client.prepareIndex(\\\"fendo\\\", \\\"fendodata\\\").setSource(builder).get(); \\n System.out.println(\\\"创建成功!\\\"); \\n\\n\\n}\\n综合实例\\n\\nimport java.io.IOException; \\nimport java.net.InetAddress; \\nimport java.net.UnknownHostException; \\nimport java.util.Date; \\nimport java.util.HashMap; \\nimport java.util.Map; \\n\\nimport org.elasticsearch.action.index.IndexResponse; \\nimport org.elasticsearch.client.transport.TransportClient; \\nimport org.elasticsearch.common.settings.Settings; \\nimport org.elasticsearch.common.transport.InetSocketTransportAddress; \\nimport org.elasticsearch.common.xcontent.XContentBuilder; \\nimport org.elasticsearch.common.xcontent.XContentFactory; \\nimport org.elasticsearch.transport.client.PreBuiltTransportClient; \\nimport org.junit.Before; \\nimport org.junit.Test; \\n\\nimport com.fasterxml.jackson.core.JsonProcessingException; \\nimport com.fasterxml.jackson.databind.ObjectMapper; \\n\\npublic class CreateIndex { \\n\\n private TransportClient client; \\n\\n @Before \\n public void getClient() throws Exception{ \\n //设置集群名称 \\n Settings settings = Settings.builder().put(\\\"cluster.name\\\", \\\"my-application\\\").build();// 集群名 \\n //创建client \\n client = new PreBuiltTransportClient(settings) \\n .addTransportAddress(new InetSocketTransportAddress(InetAddress.getByName(\\\"127.0.0.1\\\"), 9300)); \\n } \\n\\n /** \\n * 手动生成JSON \\n */ \\n @Test \\n public void CreateJSON(){ \\n\\n String json = \\\"{\\\" + \\n \\\"\\\\\\\"user\\\\\\\":\\\\\\\"fendo\\\\\\\",\\\" + \\n \\\"\\\\\\\"postDate\\\\\\\":\\\\\\\"2013-01-30\\\\\\\",\\\" + \\n \\\"\\\\\\\"message\\\\\\\":\\\\\\\"Hell word\\\\\\\"\\\" + \\n \\\"}\\\"; \\n\\n IndexResponse response = client.prepareIndex(\\\"fendo\\\", \\\"fendodate\\\") \\n .setSource(json) \\n .get(); \\n System.out.println(response.getResult()); \\n\\n } \\n\\n\\n /** \\n * 使用集合 \\n */ \\n @Test \\n public void CreateList(){ \\n\\n Map json = new HashMap(); \\n json.put(\\\"user\\\",\\\"kimchy\\\"); \\n json.put(\\\"postDate\\\",\\\"2013-01-30\\\"); \\n json.put(\\\"message\\\",\\\"trying out Elasticsearch\\\"); \\n\\n IndexResponse response = client.prepareIndex(\\\"fendo\\\", \\\"fendodate\\\") \\n .setSource(json) \\n .get(); \\n System.out.println(response.getResult()); \\n\\n } \\n\\n /** \\n * 使用JACKSON序列化 \\n * @throws Exception \\n */ \\n @Test \\n public void CreateJACKSON() throws Exception{ \\n\\n CsdnBlog csdn=new CsdnBlog(); \\n csdn.setAuthor(\\\"fendo\\\"); \\n csdn.setContent(\\\"这是JAVA书籍\\\"); \\n csdn.setTag(\\\"C\\\"); \\n csdn.setView(\\\"100\\\"); \\n csdn.setTitile(\\\"编程\\\"); \\n csdn.setDate(new Date().toString()); \\n\\n // instance a json mapper \\n ObjectMapper mapper = new ObjectMapper(); // create once, reuse \\n\\n // generate json \\n byte[] json = mapper.writeValueAsBytes(csdn); \\n\\n IndexResponse response = client.prepareIndex(\\\"fendo\\\", \\\"fendodate\\\") \\n .setSource(json) \\n .get(); \\n System.out.println(response.getResult()); \\n } \\n\\n /** \\n * 使用ElasticSearch 帮助类 \\n * @throws IOException \\n */ \\n @Test \\n public void CreateXContentBuilder() throws IOException{ \\n\\n XContentBuilder builder = XContentFactory.jsonBuilder() \\n .startObject() \\n .field(\\\"user\\\", \\\"ccse\\\") \\n .field(\\\"postDate\\\", new Date()) \\n .field(\\\"message\\\", \\\"this is Elasticsearch\\\") \\n .endObject(); \\n\\n IndexResponse response = client.prepareIndex(\\\"fendo\\\", \\\"fendodata\\\").setSource(builder).get(); \\n System.out.println(\\\"创建成功!\\\"); \\n\\n\\n } \\n\\n}\\n\\n你还可以通过startArray(string)和endArray()方法添加数组。.field()方法可以接受多种对象类型。你可以给它传递数字、日期、甚至其他XContentBuilder对象。\\n\\n\"},\"document-apis/get-api.html\":{\"url\":\"document-apis/get-api.html\",\"title\":\"Get API\",\"keywords\":\"\",\"body\":\"Get API\\nget api可以通过id查看文档：\\nGetResponse response = client.prepareGet(\\\"twitter\\\", \\\"tweet\\\", \\\"1\\\").get();\\n更多请查看 rest get API 文档\\n配置线程\\noperationThreaded 设置为 true 是在不同的线程里执行此次操作\\n下面的例子是operationThreaded 设置为 false ：\\nGetResponse response = client.prepareGet(\\\"twitter\\\", \\\"tweet\\\", \\\"1\\\")\\n .setOperationThreaded(false)\\n .get();\\n\"},\"document-apis/delete-api.html\":{\"url\":\"document-apis/delete-api.html\",\"title\":\"Delete API\",\"keywords\":\"\",\"body\":\"Delete API\\n根据ID删除：\\nDeleteResponse response = client.prepareDelete(\\\"twitter\\\", \\\"tweet\\\", \\\"1\\\").get();\\n更多请查看 delete API 文档\\n配置线程\\noperationThreaded 设置为 true 是在不同的线程里执行此次操作\\n下面的例子是operationThreaded 设置为 false ：\\nGetResponse response = client.prepareGet(\\\"twitter\\\", \\\"tweet\\\", \\\"1\\\")\\n .setOperationThreaded(false)\\n .get();\\nDeleteResponse response = client.prepareDelete(\\\"twitter\\\", \\\"tweet\\\", \\\"1\\\")\\n .setOperationThreaded(false)\\n .get();\\n\"},\"document-apis/delete-by-query-api.html\":{\"url\":\"document-apis/delete-by-query-api.html\",\"title\":\"Delete By Query API\",\"keywords\":\"\",\"body\":\"Delete By Query API\\n通过查询条件删除\\nBulkByScrollResponse response =\\n DeleteByQueryAction.INSTANCE.newRequestBuilder(client)\\n .filter(QueryBuilders.matchQuery(\\\"gender\\\", \\\"male\\\")) //查询条件\\n .source(\\\"persons\\\") //index(索引名)\\n .get(); //执行\\n\\nlong deleted = response.getDeleted(); //删除文档的数量\\n如果需要执行的时间比较长，可以使用异步的方式处理,结果在回调里面获取\\nDeleteByQueryAction.INSTANCE.newRequestBuilder(client)\\n .filter(QueryBuilders.matchQuery(\\\"gender\\\", \\\"male\\\")) //查询 \\n .source(\\\"persons\\\") //index(索引名) \\n .execute(new ActionListener() { //回调监听 \\n @Override\\n public void onResponse(BulkByScrollResponse response) {\\n long deleted = response.getDeleted(); //删除文档的数量 \\n }\\n @Override\\n public void onFailure(Exception e) {\\n // Handle the exception\\n }\\n });\\n\"},\"document-apis/update-api.html\":{\"url\":\"document-apis/update-api.html\",\"title\":\"Update API\",\"keywords\":\"\",\"body\":\"Update API\\n更新索引\\n有两种方式更新索引：\\n\\n创建 UpdateRequest,通过client发送；\\n使用 prepareUpdate() 方法；\\n\\n使用UpdateRequest\\nUpdateRequest updateRequest = new UpdateRequest();\\nupdateRequest.index(\\\"index\\\");\\nupdateRequest.type(\\\"type\\\");\\nupdateRequest.id(\\\"1\\\");\\nupdateRequest.doc(jsonBuilder()\\n .startObject()\\n .field(\\\"gender\\\", \\\"male\\\")\\n .endObject());\\nclient.update(updateRequest).get();\\n使用 prepareUpdate() 方法\\nclient.prepareUpdate(\\\"ttl\\\", \\\"doc\\\", \\\"1\\\")\\n .setScript(new Script(\\\"ctx._source.gender = \\\\\\\"male\\\\\\\"\\\" ,ScriptService.ScriptType.INLINE, null, null))//脚本可以是本地文件存储的，如果使用文件存储的脚本，需要设置 ScriptService.ScriptType.FILE \\n .get();\\n\\nclient.prepareUpdate(\\\"ttl\\\", \\\"doc\\\", \\\"1\\\")\\n .setDoc(jsonBuilder() //合并到现有文档\\n .startObject()\\n .field(\\\"gender\\\", \\\"male\\\")\\n .endObject())\\n .get();\\nUpdate by script\\n使用脚本更新文档\\nUpdateRequest updateRequest = new UpdateRequest(\\\"ttl\\\", \\\"doc\\\", \\\"1\\\")\\n .script(new Script(\\\"ctx._source.gender = \\\\\\\"male\\\\\\\"\\\"));\\nclient.update(updateRequest).get();\\nUpdate by merging documents\\n合并文档\\nUpdateRequest updateRequest = new UpdateRequest(\\\"index\\\", \\\"type\\\", \\\"1\\\")\\n .doc(jsonBuilder()\\n .startObject()\\n .field(\\\"gender\\\", \\\"male\\\")\\n .endObject());\\nclient.update(updateRequest).get();\\nUpsert\\n更新插入,如果存在文档就更新，如果不存在就插入\\nIndexRequest indexRequest = new IndexRequest(\\\"index\\\", \\\"type\\\", \\\"1\\\")\\n .source(jsonBuilder()\\n .startObject()\\n .field(\\\"name\\\", \\\"Joe Smith\\\")\\n .field(\\\"gender\\\", \\\"male\\\")\\n .endObject());\\nUpdateRequest updateRequest = new UpdateRequest(\\\"index\\\", \\\"type\\\", \\\"1\\\")\\n .doc(jsonBuilder()\\n .startObject()\\n .field(\\\"gender\\\", \\\"male\\\")\\n .endObject())\\n .upsert(indexRequest); //如果不存在此文档 ，就增加 `indexRequest`\\nclient.update(updateRequest).get();\\n如果 index/type/1 存在，类似下面的文档：\\n{\\n \\\"name\\\" : \\\"Joe Dalton\\\",\\n \\\"gender\\\": \\\"male\\\" \\n}\\n如果不存在，会插入新的文档：\\n{\\n \\\"name\\\" : \\\"Joe Smith\\\",\\n \\\"gender\\\": \\\"male\\\"\\n}\\n\"},\"document-apis/multi-get-api.html\":{\"url\":\"document-apis/multi-get-api.html\",\"title\":\"Multi Get API\",\"keywords\":\"\",\"body\":\"Multi Get API\\n一次获取多个文档\\nMultiGetResponse multiGetItemResponses = client.prepareMultiGet()\\n .add(\\\"twitter\\\", \\\"tweet\\\", \\\"1\\\") //一个id的方式\\n .add(\\\"twitter\\\", \\\"tweet\\\", \\\"2\\\", \\\"3\\\", \\\"4\\\") //多个id的方式\\n .add(\\\"another\\\", \\\"type\\\", \\\"foo\\\") //可以从另外一个索引获取\\n .get();\\n\\nfor (MultiGetItemResponse itemResponse : multiGetItemResponses) { //迭代返回值\\n GetResponse response = itemResponse.getResponse();\\n if (response.isExists()) { //判断是否存在 \\n String json = response.getSourceAsString(); //_source 字段\\n }\\n}\\n更多请浏览REST multi get 文档\\n\"},\"document-apis/bulk-api.html\":{\"url\":\"document-apis/bulk-api.html\",\"title\":\"Bulk API\",\"keywords\":\"\",\"body\":\"Bulk API\\nBulk API可以批量插入：\\nimport static org.elasticsearch.common.xcontent.XContentFactory.*;\\n\\nBulkRequestBuilder bulkRequest = client.prepareBulk();\\n\\n// either use client#prepare, or use Requests# to directly build index/delete requests\\nbulkRequest.add(client.prepareIndex(\\\"twitter\\\", \\\"tweet\\\", \\\"1\\\")\\n .setSource(jsonBuilder()\\n .startObject()\\n .field(\\\"user\\\", \\\"kimchy\\\")\\n .field(\\\"postDate\\\", new Date())\\n .field(\\\"message\\\", \\\"trying out Elasticsearch\\\")\\n .endObject()\\n )\\n );\\n\\nbulkRequest.add(client.prepareIndex(\\\"twitter\\\", \\\"tweet\\\", \\\"2\\\")\\n .setSource(jsonBuilder()\\n .startObject()\\n .field(\\\"user\\\", \\\"kimchy\\\")\\n .field(\\\"postDate\\\", new Date())\\n .field(\\\"message\\\", \\\"another post\\\")\\n .endObject()\\n )\\n );\\n\\nBulkResponse bulkResponse = bulkRequest.get();\\nif (bulkResponse.hasFailures()) {\\n // process failures by iterating through each bulk response item\\n}\\n\"},\"document-apis/using-bulk-processor.html\":{\"url\":\"document-apis/using-bulk-processor.html\",\"title\":\"Using Bulk Processor\",\"keywords\":\"\",\"body\":\"使用 Bulk Processor\\nBulkProcessor 提供了一个简单的接口，在给定的大小数量上定时批量自动请求\\n创建BulkProcessor实例\\n首先创建BulkProcessor实例\\nimport org.elasticsearch.action.bulk.BackoffPolicy;\\nimport org.elasticsearch.action.bulk.BulkProcessor;\\nimport org.elasticsearch.common.unit.ByteSizeUnit;\\nimport org.elasticsearch.common.unit.ByteSizeValue;\\nimport org.elasticsearch.common.unit.TimeValue;\\n\\nBulkProcessor bulkProcessor = BulkProcessor.builder(\\n client, //增加elasticsearch客户端\\n new BulkProcessor.Listener() {\\n @Override\\n public void beforeBulk(long executionId,\\n BulkRequest request) { ... } //调用bulk之前执行 ，例如你可以通过request.numberOfActions()方法知道numberOfActions\\n\\n @Override\\n public void afterBulk(long executionId,\\n BulkRequest request,\\n BulkResponse response) { ... } //调用bulk之后执行 ，例如你可以通过request.hasFailures()方法知道是否执行失败\\n\\n @Override\\n public void afterBulk(long executionId,\\n BulkRequest request,\\n Throwable failure) { ... } //调用失败抛 Throwable\\n })\\n .setBulkActions(10000) //每次10000请求\\n .setBulkSize(new ByteSizeValue(5, ByteSizeUnit.MB)) //拆成5mb一块\\n .setFlushInterval(TimeValue.timeValueSeconds(5)) //无论请求数量多少，每5秒钟请求一次。\\n .setConcurrentRequests(1) //设置并发请求的数量。值为0意味着只允许执行一个请求。值为1意味着允许1并发请求。\\n .setBackoffPolicy(\\n BackoffPolicy.exponentialBackoff(TimeValue.timeValueMillis(100), 3))//设置自定义重复请求机制，最开始等待100毫秒，之后成倍更加，重试3次，当一次或多次重复请求失败后因为计算资源不够抛出 EsRejectedExecutionException 异常，可以通过BackoffPolicy.noBackoff()方法关闭重试机制\\n .build();\\nBulkProcessor 默认设置\\n\\nbulkActions 1000 \\nbulkSize 5mb\\n不设置flushInterval\\nconcurrentRequests 为 1 ，异步执行\\nbackoffPolicy 重试 8次，等待50毫秒\\n\\n增加requests\\n然后增加requests到BulkProcessor\\nbulkProcessor.add(new IndexRequest(\\\"twitter\\\", \\\"tweet\\\", \\\"1\\\").source(/* your doc here */));\\nbulkProcessor.add(new DeleteRequest(\\\"twitter\\\", \\\"tweet\\\", \\\"2\\\"));\\n关闭 Bulk Processor\\n当所有文档都处理完成，使用awaitClose 或 close 方法关闭BulkProcessor:\\nbulkProcessor.awaitClose(10, TimeUnit.MINUTES);\\n或\\nbulkProcessor.close();\\n在测试用使用Bulk Processor\\n可以执行同步方法\\nBulkProcessor bulkProcessor = BulkProcessor.builder(client, new BulkProcessor.Listener() { /* Listener methods */ })\\n .setBulkActions(10000)\\n .setConcurrentRequests(0)\\n .build();\\n\\n// Add your requests\\nbulkProcessor.add(/* Your requests */);\\n\\n// Flush any remaining requests\\nbulkProcessor.flush();\\n\\n// Or close the bulkProcessor if you don't need it anymore\\nbulkProcessor.close();\\n\\n// Refresh your indices\\nclient.admin().indices().prepareRefresh().get();\\n\\n// Now you can start searching!\\nclient.prepareSearch().get();\\n\"},\"search-api.html\":{\"url\":\"search-api.html\",\"title\":\"Search API\",\"keywords\":\"\",\"body\":\"搜索API可以支持搜索查询，返回查询匹配的结果，它可以搜索一个index / type 或者多个index / type，可以使用 query Java API 作为查询条件，下面是例子：\\nimport org.elasticsearch.action.search.SearchResponse;\\nimport org.elasticsearch.action.search.SearchType;\\nimport org.elasticsearch.index.query.QueryBuilders.*;\\nSearchResponse response = client.prepareSearch(\\\"index1\\\", \\\"index2\\\")\\n .setTypes(\\\"type1\\\", \\\"type2\\\")\\n .setSearchType(SearchType.DFS_QUERY_THEN_FETCH)\\n .setQuery(QueryBuilders.termQuery(\\\"multi\\\", \\\"test\\\")) // Query 查询条件\\n .setPostFilter(QueryBuilders.rangeQuery(\\\"age\\\").from(12).to(18)) // Filter 过滤\\n .setFrom(0).setSize(60).setExplain(true)\\n .get();\\n所有的参数都是可选的，下面是最小调用：\\n// MatchAll on the whole cluster with all default options\\nSearchResponse response = client.prepareSearch().get();\\n\\n尽管Java API默认提供QUERY_AND_FETCH 和 DFS_QUERY_AND_FETCH 两种 search types ，但是这种模式应该由系统选择，用户不要手动指定\\n\\n更多请移步 REST search 文档\\n\"},\"search-api/using-scrolls-in-java.html\":{\"url\":\"search-api/using-scrolls-in-java.html\",\"title\":\"Using scrolls in Java\",\"keywords\":\"\",\"body\":\"Using scrolls in Java\\n首先需要阅读 scroll documentation\\n\\n一般搜索请求都是返回一\\\"页\\\"数据，无论数据量多大都一起返回给用户，Scroll API可以允许我们检索大量数据（甚至全部数据）。Scroll API允许我们做一个初始阶段搜索并且持续批量从Elasticsearch里拉取结果直到没有结果剩下。这有点像传统数据库里的cursors（游标）。\\nScroll API的创建并不是为了实时的用户响应，而是为了处理大量的数据（Scrolling is not intended for real time user requests, but rather for processing large amounts of data）。从 scroll 请求返回的结果只是反映了 search 发生那一时刻的索引状态，就像一个快照(The results that are returned from a scroll request reflect the state of the index at the time that the initial search request was made, like a snapshot in time)。后续的对文档的改动（索引、更新或者删除）都只会影响后面的搜索请求。\\n\\nimport static org.elasticsearch.index.query.QueryBuilders.*;\\n\\nQueryBuilder qb = termQuery(\\\"multi\\\", \\\"test\\\");\\n\\nSearchResponse scrollResp = client.prepareSearch(test)\\n .addSort(FieldSortBuilder.DOC_FIELD_NAME, SortOrder.ASC)\\n .setScroll(new TimeValue(60000)) //为了使用 scroll，初始搜索请求应该在查询中指定 scroll 参数，告诉 Elasticsearch 需要保持搜索的上下文环境多长时间（滚动时间）\\n .setQuery(qb)\\n .setSize(100).get(); //max of 100 hits will be returned for each scroll\\n//Scroll until no hits are returned\\ndo {\\n for (SearchHit hit : scrollResp.getHits().getHits()) {\\n //Handle the hit...\\n }\\n\\n scrollResp = client.prepareSearchScroll(scrollResp.getScrollId()).setScroll(new TimeValue(60000)).execute().actionGet();\\n} while(scrollResp.getHits().getHits().length != 0); // Zero hits mark the end of the scroll and the while loop.\\n\\n如果超过滚动时间，继续使用该滚动ID搜索数据，则会报错：\\n\\nCaused by: SearchContextMissingException[No search context found for id [2861]]\\n at org.elasticsearch.search.SearchService.findContext(SearchService.java:613)\\n at org.elasticsearch.search.SearchService.executeQueryPhase(SearchService.java:403)\\n at org.elasticsearch.search.action.SearchServiceTransportAction$SearchQueryScrollTransportHandler.messageReceived(SearchServiceTransportAction.java:384)\\n at org.elasticsearch.search.action.SearchServiceTransportAction$SearchQueryScrollTransportHandler.messageReceived(SearchServiceTransportAction.java:381)\\n at org.elasticsearch.transport.TransportRequestHandler.messageReceived(TransportRequestHandler.java:33)\\n at org.elasticsearch.transport.RequestHandlerRegistry.processMessageReceived(RequestHandlerRegistry.java:75)\\n at org.elasticsearch.transport.TransportService$4.doRun(TransportService.java:376)\\n at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)\\n at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\\n at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\\n at java.lang.Thread.run(Thread.java:745)\\n\\n虽然当滚动有效时间已过，搜索上下文(Search Context)会自动被清除，但是一值保持滚动代价也是很大的，所以当我们不在使用滚动时要尽快使用Clear-Scroll API进行清除。\\n\\n /**\\n * 清除滚动ID\\n * @param client\\n * @param scrollIdList\\n * @return\\n */\\n public static boolean clearScroll(Client client, List scrollIdList){\\n ClearScrollRequestBuilder clearScrollRequestBuilder = client.prepareClearScroll();\\n clearScrollRequestBuilder.setScrollIds(scrollIdList);\\n ClearScrollResponse response = clearScrollRequestBuilder.get();\\n return response.isSucceeded();\\n }\\n /**\\n * 清除滚动ID\\n * @param client\\n * @param scrollId\\n * @return\\n */\\n public static boolean clearScroll(Client client, String scrollId){\\n ClearScrollRequestBuilder clearScrollRequestBuilder = client.prepareClearScroll();\\n clearScrollRequestBuilder.addScrollId(scrollId);\\n ClearScrollResponse response = clearScrollRequestBuilder.get();\\n return response.isSucceeded();\\n }\\n实例\\n\\n\\n\"},\"search-api/multisearch-api.html\":{\"url\":\"search-api/multisearch-api.html\",\"title\":\"MultiSearch API\",\"keywords\":\"\",\"body\":\"MultiSearch API\\nmulti search API 允许在同一API中执行多个搜索请求。它的端点（endpoint）是 _msearch 。\\n首先请看MultiSearch API Query 文档\\nSearchRequestBuilder srb1 = client\\n .prepareSearch().setQuery(QueryBuilders.queryStringQuery(\\\"elasticsearch\\\")).setSize(1);\\nSearchRequestBuilder srb2 = client\\n .prepareSearch().setQuery(QueryBuilders.matchQuery(\\\"name\\\", \\\"kimchy\\\")).setSize(1);\\n\\nMultiSearchResponse sr = client.prepareMultiSearch()\\n .add(srb1)\\n .add(srb2)\\n .get();\\n\\n// You will get all individual responses from MultiSearchResponse#getResponses()\\nlong nbHits = 0;\\nfor (MultiSearchResponse.Item item : sr.getResponses()) {\\n SearchResponse response = item.getResponse();\\n nbHits += response.getHits().getTotalHits();\\n}\\n实例\\n\\n\\n\"},\"search-api/using-aggregations.html\":{\"url\":\"search-api/using-aggregations.html\",\"title\":\"Using Aggregations\",\"keywords\":\"\",\"body\":\"Using Aggregations\\n下面的代码演示了如何在搜索中添加两个聚合：\\n\\n聚合框架有助于根据搜索查询提供聚合数据。它是基于简单的构建块也称为整合，整合就是将复杂的数据摘要有序的放在一块。 \\n聚合可以被看做是从一组文件中获取分析信息的一系列工作的统称。聚合的实现过程就是定义这个文档集的过程（例如，在搜索请求的基础上，执行查询/过滤，才能得到高水平的聚合结果）。 \\n\\nSearchResponse sr = client.prepareSearch()\\n .setQuery(QueryBuilders.matchAllQuery())\\n .addAggregation(\\n AggregationBuilders.terms(\\\"agg1\\\").field(\\\"field\\\")\\n )\\n .addAggregation(\\n AggregationBuilders.dateHistogram(\\\"agg2\\\")\\n .field(\\\"birth\\\")\\n .dateHistogramInterval(DateHistogramInterval.YEAR)\\n )\\n .get();\\n\\n// Get your facet results\\nTerms agg1 = sr.getAggregations().get(\\\"agg1\\\");\\nHistogram agg2 = sr.getAggregations().get(\\\"agg2\\\");\\n详细文档请看 Aggregations Java API\\n\"},\"search-api/terminate-after.html\":{\"url\":\"search-api/terminate-after.html\",\"title\":\"Terminate After\",\"keywords\":\"\",\"body\":\"Terminate After\\n获取文档的最大数量，如果设置了，需要通过SearchResponse对象里的isTerminatedEarly() 判断返回文档是否达到设置的数量：\\nSearchResponse sr = client.prepareSearch(INDEX)\\n .setTerminateAfter(1000) //如果达到这个数量，提前终止\\n .get();\\n\\nif (sr.isTerminatedEarly()) {\\n // We finished early\\n}\\n\"},\"search-api/search-template.html\":{\"url\":\"search-api/search-template.html\",\"title\":\"Search Template\",\"keywords\":\"\",\"body\":\"Search Template\\n首先查看 Search Template 文档\\n\\n/_search/template endpoint 允许我们在执行搜索请求和使用模板参数填充现有模板之前，能够使用 mustache 语言预先呈现搜索请求。\\n\\n将模板参数定义为 Map ：\\nMap template_params = new HashMap();\\ntemplate_params.put(\\\"param_gender\\\", \\\"male\\\");\\n可以在config/scripts中使用存储的 search templates。 例如，有一个名为 config/scripts/template_gender.mustache 的文件，其中包含：\\n{\\n \\\"query\\\" : {\\n \\\"match\\\" : {\\n \\\"gender\\\" : \\\"\\\"\\n }\\n }\\n}\\n创建search templates 请求：\\nSearchResponse sr = new SearchTemplateRequestBuilder(client)\\n .setScript(\\\"template_gender\\\") //template 名\\n .setScriptType(ScriptService.ScriptType.FILE) //template 存储在 gender_template.mustache 磁盘上\\n .setScriptParams(template_params) //参数\\n .setRequest(new SearchRequest()) //设置执行的context（ie: 这里定义索引名称）\\n .get() \\n .getResponse();\\n还可以将 template 存储在 cluster state 中:\\n\\ncluster state是全局性信息, 包含了整个群集中所有分片的元信息(规则, 位置, 大小等信息), 并保持每个每节的信息同步。 参考： 《为什么ElasticSearch应用开发者需要了解cluster state》\\n\\nclient.admin().cluster().preparePutStoredScript()\\n .setScriptLang(\\\"mustache\\\")\\n .setId(\\\"template_gender\\\")\\n .setSource(new BytesArray(\\n \\\"{\\\\n\\\" +\\n \\\" \\\\\\\"query\\\\\\\" : {\\\\n\\\" +\\n \\\" \\\\\\\"match\\\\\\\" : {\\\\n\\\" +\\n \\\" \\\\\\\"gender\\\\\\\" : \\\\\\\"\\\\\\\"\\\\n\\\" +\\n \\\" }\\\\n\\\" +\\n \\\" }\\\\n\\\" +\\n \\\"}\\\")).get();\\n使用ScriptService.ScriptType.STORED 执行一个存储的 templates:\\nSearchResponse sr = new SearchTemplateRequestBuilder(client)\\n .setScript(\\\"template_gender\\\") //template 名\\n .setScriptType(ScriptType.STORED) //template 存储在 cluster state 上\\n .setScriptParams(template_params) //参数\\n .setRequest(new SearchRequest()) //设置执行的context（ie: 这里定义索引名称）\\n .get() //执行获取template 请求\\n .getResponse();\\n也可以执行 内联(inline) templates：\\nsr = new SearchTemplateRequestBuilder(client)\\n .setScript(\\\"{\\\\n\\\" + //template 名 \\n \\\" \\\\\\\"query\\\\\\\" : {\\\\n\\\" +\\n \\\" \\\\\\\"match\\\\\\\" : {\\\\n\\\" +\\n \\\" \\\\\\\"gender\\\\\\\" : \\\\\\\"\\\\\\\"\\\\n\\\" +\\n \\\" }\\\\n\\\" +\\n \\\" }\\\\n\\\" +\\n \\\"}\\\")\\n .setScriptType(ScriptType.INLINE) //template 是内联传递的\\n .setScriptParams(template_params) //参数 \\n .setRequest(new SearchRequest()) //设置执行的context（ie: 这里定义索引名称） \\n .get() //执行获取template 请求 \\n .getResponse();\\n\"},\"aggregations.html\":{\"url\":\"aggregations.html\",\"title\":\"Aggregations\",\"keywords\":\"\",\"body\":\"Aggregations\\n聚合\\nElasticsearch提供完整的Java API来使用聚合。 请参阅聚合指南。\\n使用 AggregationBuilders 构建对象，增加到搜索请求中:\\nimport org.elasticsearch.search.aggregations.AggregationBuilders;\\nSearchResponse sr = node.client().prepareSearch()\\n .setQuery( /* your query */ )\\n .addAggregation( /* add an aggregation */ )\\n .execute().actionGet();\\n\"},\"aggregations/structuring-aggregations.html\":{\"url\":\"aggregations/structuring-aggregations.html\",\"title\":\"Structuring aggregations\",\"keywords\":\"\",\"body\":\"Structuring aggregations\\n结构化聚合\\n如 Aggregations guide 中所述，可以在聚合中定义子聚合。\\n聚合可能是 Metrics 聚合(一个跟踪和计算指标的聚合)或者 Bucket 聚合 (构建桶聚合)\\n例如，这里是一个3级聚合组成的聚合：\\n\\nTerms aggregation (bucket)\\nDate Histogram aggregation (bucket)\\nAverage aggregation (metric)\\n\\nSearchResponse sr = node.client().prepareSearch()\\n .addAggregation(\\n AggregationBuilders.terms(\\\"by_country\\\").field(\\\"country\\\")\\n .subAggregation(AggregationBuilders.dateHistogram(\\\"by_year\\\")\\n .field(\\\"dateOfBirth\\\")\\n .dateHistogramInterval(DateHistogramInterval.YEAR)\\n .subAggregation(AggregationBuilders.avg(\\\"avg_children\\\").field(\\\"children\\\"))\\n )\\n )\\n .execute().actionGet();\\n\"},\"aggregations/metrics-aggregations.html\":{\"url\":\"aggregations/metrics-aggregations.html\",\"title\":\"Metrics aggregations\",\"keywords\":\"\",\"body\":\"Metrics aggregations\\n\\n计算度量这类的聚合操作是以使用一种方式或者从文档中提取需要聚合的值为基础的。这些数据不但可以从文档（使用数据属性）的属性中提取出来，也可以使用脚本生成。\\n数值计量聚合操作是能够产生具体的数值的一种计量聚合操作。一些聚合操作输出单个的计量数值（例如avg），并且被称作single-value numeric metric aggregation，其他产生多个计量数值（例如 stats）的称作 multi-value numeric metrics aggregation。这两种不同的聚合操作只有在桶聚合的子聚合操作中才会有不同的表现（有些桶聚合可以基于每个的数值计量来对返回的桶进行排序）。\\n\\nMin Aggregatione 最小值聚合\\n下面是如何用Java API 使用最小值聚合\\n准备聚合请求\\n下面是如何创建聚合请求的是示例：\\nMinAggregationBuilder aggregation =\\n AggregationBuilders\\n .min(\\\"agg\\\")\\n .field(\\\"height\\\");\\n使用聚合请求\\nimport org.elasticsearch.search.aggregations.metrics.min.Min;\\n// sr is here your SearchResponse object\\nMin agg = sr.getAggregations().get(\\\"agg\\\");\\ndouble value = agg.getValue();\\nMax Aggregation 最大值聚合\\n下面是如何用Java API 使用最大值聚合\\n准备聚合请求\\n下面是如何创建聚合请求的是示例：\\nMaxAggregationBuilder aggregation =\\n AggregationBuilders\\n .max(\\\"agg\\\")\\n .field(\\\"height\\\");\\n使用聚合请求\\nimport org.elasticsearch.search.aggregations.metrics.max.Max;\\n// sr is here your SearchResponse object\\nMin agg = sr.getAggregations().get(\\\"agg\\\");\\ndouble value = agg.getValue();\\nSum Aggregation 求和聚合\\n下面是如何用Java API 使用求和聚合\\n准备聚合请求\\n下面是如何创建聚合请求的是示例：\\nSumAggregationBuilder aggregation =\\n AggregationBuilders\\n .sum(\\\"agg\\\")\\n .field(\\\"height\\\");\\n使用聚合请求\\nimport org.elasticsearch.search.aggregations.metrics.sum.Sum;\\n// sr is here your SearchResponse object\\nSum agg = sr.getAggregations().get(\\\"agg\\\");\\ndouble value = agg.getValue();\\nAvg Aggregation 平均值聚合\\n下面是如何用Java API 使用平均值聚合\\n准备聚合请求\\n下面是如何创建聚合请求的是示例：\\nAvgAggregationBuilder aggregation =\\n AggregationBuilders\\n .avg(\\\"agg\\\")\\n .field(\\\"height\\\");\\n使用聚合请求\\nimport org.elasticsearch.search.aggregations.metrics.avg.Avg;\\n// sr is here your SearchResponse object\\nAvg agg = sr.getAggregations().get(\\\"agg\\\");\\ndouble value = agg.getValue();\\nStats Aggregation 统计聚合\\n\\n统计聚合——基于文档的某个值，计算出一些统计信息（min、max、sum、count、avg）, 用于计算的值可以是特定的数值型字段，也可以通过脚本计算而来。\\n\\n下面是如何用Java API 使用统计聚合\\n准备聚合请求\\n下面是如何创建聚合请求的是示例：\\nStatsAggregationBuilder aggregation =\\n AggregationBuilders\\n .stats(\\\"agg\\\")\\n .field(\\\"height\\\");\\n使用聚合请求\\nimport org.elasticsearch.search.aggregations.metrics.stats.Stats;\\n// sr is here your SearchResponse object\\nStats agg = sr.getAggregations().get(\\\"agg\\\");\\ndouble min = agg.getMin();\\ndouble max = agg.getMax();\\ndouble avg = agg.getAvg();\\ndouble sum = agg.getSum();\\nlong count = agg.getCount();\\nExtended Stats Aggregation 扩展统计聚合\\n\\n扩展统计聚合——基于文档的某个值，计算出一些统计信息（比普通的stats聚合多了sum_of_squares、variance、std_deviation、std_deviation_bounds）, 用于计算的值可以是特定的数值型字段，也可以通过脚本计算而来。\\n\\n下面是如何用Java API 使用扩展统计聚合\\n准备聚合请求\\n下面是如何创建聚合请求的是示例：\\nExtendedStatsAggregationBuilder aggregation =\\n AggregationBuilders\\n .extendedStats(\\\"agg\\\")\\n .field(\\\"height\\\");\\n使用聚合请求\\nimport org.elasticsearch.search.aggregations.metrics.stats.extended.ExtendedStats;\\n// sr is here your SearchResponse object\\nExtendedStats agg = sr.getAggregations().get(\\\"agg\\\");\\ndouble min = agg.getMin();\\ndouble max = agg.getMax();\\ndouble avg = agg.getAvg();\\ndouble sum = agg.getSum();\\nlong count = agg.getCount();\\ndouble stdDeviation = agg.getStdDeviation();\\ndouble sumOfSquares = agg.getSumOfSquares();\\ndouble variance = agg.getVariance();\\nValue Count Aggregation 值计数聚合\\n\\n值计数聚合——计算聚合文档中某个值的个数, 用于计算的值可以是特定的数值型字段，也可以通过脚本计算而来。\\n该聚合一般域其它 single-value 聚合联合使用，比如在计算一个字段的平均值的时候，可能还会关注这个平均值是由多少个值计算而来。\\n\\n下面是如何用Java API 使用值计数聚合\\n准备聚合请求\\n下面是如何创建聚合请求的是示例：\\nValueCountAggregationBuilder aggregation =\\n AggregationBuilders\\n .count(\\\"agg\\\")\\n .field(\\\"height\\\");\\n使用聚合请求\\nimport org.elasticsearch.search.aggregations.metrics.valuecount.ValueCount;\\n// sr is here your SearchResponse object\\nValueCount agg = sr.getAggregations().get(\\\"agg\\\");\\nlong value = agg.getValue();\\nPercentile Aggregation 百分百聚合\\n\\n百分百聚合——基于聚合文档中某个数值类型的值，求这些值中的一个或者多个百分比, 用于计算的值可以是特定的数值型字段，也可以通过脚本计算而来。\\n\\n下面是如何用Java API 使用百分百聚合\\n准备聚合请求\\n下面是如何创建聚合请求的是示例：\\nPercentilesAggregationBuilder aggregation =\\n AggregationBuilders\\n .percentiles(\\\"agg\\\")\\n .field(\\\"height\\\");\\n可以提供百分位数，而不是使用默认值：\\nPercentilesAggregationBuilder aggregation =\\n AggregationBuilders\\n .percentiles(\\\"agg\\\")\\n .field(\\\"height\\\")\\n .percentiles(1.0, 5.0, 10.0, 20.0, 30.0, 75.0, 95.0, 99.0);\\n使用聚合请求\\nimport org.elasticsearch.search.aggregations.metrics.percentiles.Percentile;\\nimport org.elasticsearch.search.aggregations.metrics.percentiles.Percentiles;\\n// sr is here your SearchResponse object\\nPercentiles agg = sr.getAggregations().get(\\\"agg\\\");\\n// For each entry\\nfor (Percentile entry : agg) {\\n double percent = entry.getPercent(); // Percent\\n double value = entry.getValue(); // Value\\n\\n logger.info(\\\"percent [{}], value [{}]\\\", percent, value);\\n}\\n大概输出：\\npercent [1.0], value [0.814338896154595]\\npercent [5.0], value [0.8761912455821302]\\npercent [25.0], value [1.173346540141847]\\npercent [50.0], value [1.5432023318692198]\\npercent [75.0], value [1.923915462033674]\\npercent [95.0], value [2.2273644908535335]\\npercent [99.0], value [2.284989339108279]\\nPercentile Ranks Aggregation 百分比等级聚合\\n\\n一个multi-value指标聚合，它通过从聚合文档中提取数值来计算一个或多个百分比。这些值可以从特定数值字段中提取，也可以由提供的脚本生成。\\n注意：请参考百分比（通常）近视值（percentiles are (usually approximate)）和压缩（Compression）以获得关于近视值的建议和内存使用的百分比排位聚合。百分比排位展示那些在某一值之下的观测值的百分比。例如，假如某一直大于等于被观测值的95%，则称其为第95百分位数。假设你的数据由网页加载时间组成。你可能有一个服务协议，95%页面需要在15ms加载完全，99%页面在30ms加载完全。\\n\\n下面是如何用Java API 使用百分比等级聚合\\n准备聚合请求\\n下面是如何创建聚合请求的是示例：\\nPercentilesAggregationBuilder aggregation =\\n AggregationBuilders\\n .percentiles(\\\"agg\\\")\\n .field(\\\"height\\\");\\n使用聚合请求\\nimport org.elasticsearch.search.aggregations.metrics.percentiles.Percentile;\\nimport org.elasticsearch.search.aggregations.metrics.percentiles.PercentileRanks;\\n// sr is here your SearchResponse object\\nPercentileRanks agg = sr.getAggregations().get(\\\"agg\\\");\\n// For each entry\\nfor (Percentile entry : agg) {\\n double percent = entry.getPercent(); // Percent\\n double value = entry.getValue(); // Value\\n\\n logger.info(\\\"percent [{}], value [{}]\\\", percent, value);\\n}\\n大概输出：\\npercent [29.664353095090945], value [1.24]\\npercent [73.9335313461868], value [1.91]\\npercent [94.40095147327283], value [2.22]\\nCardinality Aggregation 基数聚合\\n\\n基于文档的某个值，计算文档非重复的个数（去重计数）。。这些值可以从特定数值字段中提取，也可以由提供的脚本生成。\\n\\n下面是如何用Java API 使用基数聚合\\n准备聚合请求\\n下面是如何创建聚合请求的是示例：\\nCardinalityAggregationBuilder aggregation =\\n AggregationBuilders\\n .cardinality(\\\"agg\\\")\\n .field(\\\"tags\\\");\\n使用聚合请求\\nimport org.elasticsearch.search.aggregations.metrics.cardinality.Cardinality;\\n// sr is here your SearchResponse object\\nCardinality agg = sr.getAggregations().get(\\\"agg\\\");\\nlong value = agg.getValue();\\nGeo Bounds Aggregation 地理边界聚合\\n\\n地理边界聚合——基于文档的某个字段（geo-point类型字段），计算出该字段所有地理坐标点的边界（左上角/右下角坐标点）。\\n\\n下面是如何用Java API 使用地理边界聚合\\n准备聚合请求\\n下面是如何创建聚合请求的是示例：\\nGeoBoundsBuilder aggregation =\\n GeoBoundsAggregationBuilder\\n .geoBounds(\\\"agg\\\")\\n .field(\\\"address.location\\\")\\n .wrapLongitude(true);\\n使用聚合请求\\nimport org.elasticsearch.search.aggregations.metrics.geobounds.GeoBounds;\\n// sr is here your SearchResponse object\\nGeoBounds agg = sr.getAggregations().get(\\\"agg\\\");\\nGeoPoint bottomRight = agg.bottomRight();\\nGeoPoint topLeft = agg.topLeft();\\nlogger.info(\\\"bottomRight {}, topLeft {}\\\", bottomRight, topLeft);\\n大概会输出：\\nbottomRight [40.70500764381921, 13.952946866893775], topLeft [53.49603022435221, -4.190029308156676]\\nTop Hits Aggregation 最高匹配权值聚合\\n\\n最高匹配权值聚合——跟踪聚合中相关性最高的文档。该聚合一般用做 sub-aggregation，以此来聚合每个桶中的最高匹配的文档。\\n\\n下面是如何用Java API 使用最高匹配权值聚合\\n准备聚合请求\\n下面是如何创建聚合请求的是示例：\\nAggregationBuilder aggregation =\\n AggregationBuilders\\n .terms(\\\"agg\\\").field(\\\"gender\\\")\\n .subAggregation(\\n AggregationBuilders.topHits(\\\"top\\\")\\n );\\n大多数标准的搜索选项可以使用，比如：from, size, sort, highlight, explain …\\nAggregationBuilder aggregation =\\n AggregationBuilders\\n .terms(\\\"agg\\\").field(\\\"gender\\\")\\n .subAggregation(\\n AggregationBuilders.topHits(\\\"top\\\")\\n .explain(true)\\n .size(1)\\n .from(10)\\n );\\n使用聚合请求\\nimport org.elasticsearch.search.aggregations.bucket.terms.Terms;\\nimport org.elasticsearch.search.aggregations.metrics.tophits.TopHits;\\n// sr is here your SearchResponse object\\nTerms agg = sr.getAggregations().get(\\\"agg\\\");\\n\\n// For each entry\\nfor (Terms.Bucket entry : agg.getBuckets()) {\\n String key = entry.getKey(); // bucket key\\n long docCount = entry.getDocCount(); // Doc count\\n logger.info(\\\"key [{}], doc_count [{}]\\\", key, docCount);\\n\\n // We ask for top_hits for each bucket\\n TopHits topHits = entry.getAggregations().get(\\\"top\\\");\\n for (SearchHit hit : topHits.getHits().getHits()) {\\n logger.info(\\\" -> id [{}], _source [{}]\\\", hit.getId(), hit.getSourceAsString());\\n }\\n}\\n大概会输出：\\nkey [male], doc_count [5107]\\n -> id [AUnzSZze9k7PKXtq04x2], _source [{\\\"gender\\\":\\\"male\\\",...}]\\n -> id [AUnzSZzj9k7PKXtq04x4], _source [{\\\"gender\\\":\\\"male\\\",...}]\\n -> id [AUnzSZzl9k7PKXtq04x5], _source [{\\\"gender\\\":\\\"male\\\",...}]\\nkey [female], doc_count [4893]\\n -> id [AUnzSZzM9k7PKXtq04xy], _source [{\\\"gender\\\":\\\"female\\\",...}]\\n -> id [AUnzSZzp9k7PKXtq04x8], _source [{\\\"gender\\\":\\\"female\\\",...}]\\n -> id [AUnzSZ0W9k7PKXtq04yS], _source [{\\\"gender\\\":\\\"female\\\",...}]\\nScripted Metric Aggregation\\n\\n此功能为实验性的，不建议生产使用，所以也不做过多说明 有兴趣可以自己参考 官方文档\\n\\n\"},\"aggregations/bucket-aggregations.html\":{\"url\":\"aggregations/bucket-aggregations.html\",\"title\":\"Bucket aggregations\",\"keywords\":\"\",\"body\":\"Bucket aggregations 桶分聚合\\n\\nBucket aggregations 不像 metrics aggregations 那样计算指标，恰恰相反，它创建文档的buckets，每个buckets与标准（取决于聚合类型）相关联，它决定了当前上下文中的文档是否会“falls”到它。换句话说，bucket可以有效地定义文档集合。除了buckets本身，bucket集合还计算并返回“落入”每个bucket的文档数量。\\n与度量聚合相比，Bucket聚合可以保存子聚合，这些子聚合将针对由其“父”bucket聚合创建的bucket进行聚合。\\n有不同的bucket聚合器，每个具有不同的“bucketing”策略,一些定义一个单独的bucket，一些定义多个bucket的固定数量，另一些定义在聚合过程中动态创建bucket\\n\\nGlobal Aggregation 全局聚合\\n\\n定义搜索执行上下文中的所有文档的单个bucket，这个上下文由索引和您正在搜索的文档类型定义，但不受搜索查询本身的影响。\\n全局聚合器只能作为顶层聚合器放置，因为将全局聚合器嵌入到另一个分组聚合器中是没有意义的。\\n\\n下面是如何使用 Java API 使用全局聚合\\n准备聚合请求\\n下面是如何创建聚合请求的是示例：\\nAggregationBuilders\\n .global(\\\"agg\\\")\\n .subAggregation(AggregationBuilders.terms(\\\"genders\\\").field(\\\"gender\\\"));\\n使用聚合请求\\nimport org.elasticsearch.search.aggregations.bucket.global.Global;\\n// sr is here your SearchResponse object\\nGlobal agg = sr.getAggregations().get(\\\"agg\\\");\\nagg.getDocCount(); // Doc count\\nFilter Aggregation 过滤聚合\\n\\n过滤聚合——基于一个条件，来对当前的文档进行过滤的聚合。\\n\\n下面是如何使用 Java API 使用过滤聚合\\n准备聚合请求\\n下面是如何创建聚合请求的是示例：\\nAggregationBuilders\\n .filter(\\\"agg\\\", QueryBuilders.termQuery(\\\"gender\\\", \\\"male\\\"));\\n使用聚合请求\\nimport org.elasticsearch.search.aggregations.bucket.filter.Filter;\\n// sr is here your SearchResponse object\\nFilter agg = sr.getAggregations().get(\\\"agg\\\");\\nagg.getDocCount(); // Doc count\\nFilters Aggregation 多过滤聚合\\n\\n多过滤聚合——基于多个过滤条件，来对当前文档进行【过滤】的聚合，每个过滤都包含所有满足它的文档（多个bucket中可能重复）。\\n\\n下面是如何使用 Java API 使用多过滤聚合\\n准备聚合请求\\n下面是如何创建聚合请求的是示例：\\nAggregationBuilder aggregation =\\n AggregationBuilders\\n .filters(\\\"agg\\\",\\n new FiltersAggregator.KeyedFilter(\\\"men\\\", QueryBuilders.termQuery(\\\"gender\\\", \\\"male\\\")),\\n new FiltersAggregator.KeyedFilter(\\\"women\\\", QueryBuilders.termQuery(\\\"gender\\\", \\\"female\\\")));\\n使用聚合请求\\nimport org.elasticsearch.search.aggregations.bucket.filters.Filters;\\n// sr is here your SearchResponse object\\nFilters agg = sr.getAggregations().get(\\\"agg\\\");\\n\\n// For each entry\\nfor (Filters.Bucket entry : agg.getBuckets()) {\\n String key = entry.getKeyAsString(); // bucket key\\n long docCount = entry.getDocCount(); // Doc count\\n logger.info(\\\"key [{}], doc_count [{}]\\\", key, docCount);\\n}\\n大概输出\\nkey [men], doc_count [4982]\\nkey [women], doc_count [5018]\\nMissing Aggregation 基于字段数据的单桶聚合\\n\\n基于字段数据的单桶聚合，创建当前文档集上下文中缺少字段值的所有文档的bucket（桶）（有效地，丢失了一个字段或配置了NULL值集），此聚合器通常与其他字段数据桶聚合器（例如范围）结合使用，以返回由于缺少字段数据值而无法放置在任何其他存储区中的所有文档的信息。\\n\\n下面是如何使用 Java API 使用基于字段数据的单桶聚合\\n准备聚合请求\\n下面是如何创建聚合请求的是示例：\\nAggregationBuilders.missing(\\\"agg\\\").field(\\\"gender\\\");\\n使用聚合请求\\nimport org.elasticsearch.search.aggregations.bucket.missing.Missing;\\n// sr is here your SearchResponse object\\nMissing agg = sr.getAggregations().get(\\\"agg\\\");\\nagg.getDocCount(); // Doc count\\nNested Aggregation 嵌套类型聚合\\n\\n基于嵌套（nested）数据类型，把该【嵌套类型的信息】聚合到单个桶里，然后就可以对嵌套类型做进一步的聚合操作。\\n\\n下面是如何使用 Java API 使用嵌套类型聚合\\n准备聚合请求\\n下面是如何创建聚合请求的是示例：\\nAggregationBuilders\\n .nested(\\\"agg\\\", \\\"resellers\\\");\\n使用聚合请求\\nimport org.elasticsearch.search.aggregations.bucket.nested.Nested;\\n// sr is here your SearchResponse object\\nNested agg = sr.getAggregations().get(\\\"agg\\\");\\nagg.getDocCount(); // Doc count\\nReverse nested Aggregation\\n\\n一个特殊的单桶聚合，可以从嵌套文档中聚合父文档。实际上，这种聚合可以从嵌套的块结构中跳出来，并链接到其他嵌套的结构或根文档.这允许嵌套不是嵌套对象的一部分的其他聚合在嵌套聚合中。\\nreverse_nested 聚合必须定义在nested之中\\n\\n下面是如何使用 Java API 使用Reverse nested Aggregation\\n准备聚合请求\\n下面是如何创建聚合请求的是示例：\\nAggregationBuilder aggregation =\\n AggregationBuilders\\n .nested(\\\"agg\\\", \\\"resellers\\\")\\n .subAggregation(\\n AggregationBuilders\\n .terms(\\\"name\\\").field(\\\"resellers.name\\\")\\n .subAggregation(\\n AggregationBuilders\\n .reverseNested(\\\"reseller_to_product\\\")\\n )\\n );\\n使用聚合请求\\nimport org.elasticsearch.search.aggregations.bucket.nested.Nested;\\nimport org.elasticsearch.search.aggregations.bucket.nested.ReverseNested;\\nimport org.elasticsearch.search.aggregations.bucket.terms.Terms;\\n// sr is here your SearchResponse object\\nNested agg = sr.getAggregations().get(\\\"agg\\\");\\nTerms name = agg.getAggregations().get(\\\"name\\\");\\nfor (Terms.Bucket bucket : name.getBuckets()) {\\n ReverseNested resellerToProduct = bucket.getAggregations().get(\\\"reseller_to_product\\\");\\n resellerToProduct.getDocCount(); // Doc count\\n}\\nChildren Aggregation\\n\\n一种特殊的单桶聚合，可以将父文档类型上的桶聚合到子文档上。\\n\\n下面是如何使用 Java API 使用Children Aggregation\\n准备聚合请求\\n下面是如何创建聚合请求的是示例：\\nAggregationBuilder aggregation =\\n AggregationBuilders\\n .children(\\\"agg\\\", \\\"reseller\\\"); // agg 是聚合名，reseller 是子类型\\n使用聚合请求\\nimport org.elasticsearch.join.aggregations.Children;\\n// sr is here your SearchResponse object\\nChildren agg = sr.getAggregations().get(\\\"agg\\\");\\nagg.getDocCount(); // Doc count\\nTerms Aggregation 词元聚合\\n\\n基于某个field，该 field 内的每一个【唯一词元】为一个桶，并计算每个桶内文档个数。默认返回顺序是按照文档个数多少排序。当不返回所有 buckets 的情况，文档个数可能不准确。\\n\\n下面是如何使用 Java API 使用Terms Aggregation\\n准备聚合请求\\n下面是如何创建聚合请求的是示例：\\nAggregationBuilders\\n .terms(\\\"genders\\\")\\n .field(\\\"gender\\\");\\n使用聚合请求\\nimport org.elasticsearch.search.aggregations.bucket.terms.Terms;\\n// sr is here your SearchResponse object\\nTerms genders = sr.getAggregations().get(\\\"genders\\\");\\n\\n// For each entry\\nfor (Terms.Bucket entry : genders.getBuckets()) {\\n entry.getKey(); // Term\\n entry.getDocCount(); // Doc count\\n}\\nOrder 排序\\n通过 doc_count 按升序排列：\\nAggregationBuilders\\n .terms(\\\"genders\\\")\\n .field(\\\"gender\\\")\\n .order(Terms.Order.count(true))\\n按字词顺序，升序排列：\\nAggregationBuilders\\n .terms(\\\"genders\\\")\\n .field(\\\"gender\\\")\\n .order(Terms.Order.term(true))\\n按metrics 子聚合排列（标示为聚合名）\\nAggregationBuilders\\n .terms(\\\"genders\\\")\\n .field(\\\"gender\\\")\\n .order(Terms.Order.aggregation(\\\"avg_height\\\", false))\\n .subAggregation(\\n AggregationBuilders.avg(\\\"avg_height\\\").field(\\\"height\\\")\\n )\\nSignificant Terms Aggregation\\n\\n返回集合中感兴趣的或者不常见的词条的聚合\\n\\n下面是如何使用 Java API 使用Significant Terms Aggregation\\n准备聚合请求\\n下面是如何创建聚合请求的是示例：\\nAggregationBuilder aggregation =\\n AggregationBuilders\\n .significantTerms(\\\"significant_countries\\\")\\n .field(\\\"address.country\\\");\\n\\n// Let say you search for men only\\nSearchResponse sr = client.prepareSearch()\\n .setQuery(QueryBuilders.termQuery(\\\"gender\\\", \\\"male\\\"))\\n .addAggregation(aggregation)\\n .get();\\n使用聚合请求\\nimport org.elasticsearch.search.aggregations.bucket.significant.SignificantTerms;\\n// sr is here your SearchResponse object\\nSignificantTerms agg = sr.getAggregations().get(\\\"significant_countries\\\");\\n\\n// For each entry\\nfor (SignificantTerms.Bucket entry : agg.getBuckets()) {\\n entry.getKey(); // Term\\n entry.getDocCount(); // Doc count\\n}\\nRange Aggregation 范围聚合\\n\\n基于某个值（可以是 field 或 script），以【字段范围】来桶分聚合。范围聚合包括 from 值，不包括 to 值（区间前闭后开）。\\n\\n下面是如何使用 Java API 使用Range Aggregation\\n准备聚合请求\\n下面是如何创建聚合请求的是示例：\\nAggregationBuilder aggregation =\\n AggregationBuilders\\n .range(\\\"agg\\\")\\n .field(\\\"height\\\")\\n .addUnboundedTo(1.0f) // from -infinity to 1.0 (excluded)\\n .addRange(1.0f, 1.5f) // from 1.0 to 1.5 (excluded)\\n .addUnboundedFrom(1.5f); // from 1.5 to +infinity\\n使用聚合请求\\nimport org.elasticsearch.search.aggregations.bucket.range.Range;\\n// sr is here your SearchResponse object\\nRange agg = sr.getAggregations().get(\\\"agg\\\");\\n\\n// For each entry\\nfor (Range.Bucket entry : agg.getBuckets()) {\\n String key = entry.getKeyAsString(); // Range as key\\n Number from = (Number) entry.getFrom(); // Bucket from\\n Number to = (Number) entry.getTo(); // Bucket to\\n long docCount = entry.getDocCount(); // Doc count\\n\\n logger.info(\\\"key [{}], from [{}], to [{}], doc_count [{}]\\\", key, from, to, docCount);\\n}\\n输出：\\nkey [*-1.0], from [-Infinity], to [1.0], doc_count [9]\\nkey [1.0-1.5], from [1.0], to [1.5], doc_count [21]\\nkey [1.5-*], from [1.5], to [Infinity], doc_count [20]\\nDate Range Aggregation 日期范围聚合\\n\\n日期范围聚合——基于日期类型的值，以【日期范围】来桶分聚合。\\n日期范围可以用各种 Date Math 表达式。\\n同样的，包括 from 的值，不包括 to 的值。\\n\\n下面是如何使用 Java API 使用Date Range Aggregation\\n准备聚合请求\\n下面是如何创建聚合请求的是示例：\\nAggregationBuilder aggregation =\\n AggregationBuilders\\n .dateRange(\\\"agg\\\")\\n .field(\\\"dateOfBirth\\\")\\n .format(\\\"yyyy\\\")\\n .addUnboundedTo(\\\"1950\\\") // from -infinity to 1950 (excluded)\\n .addRange(\\\"1950\\\", \\\"1960\\\") // from 1950 to 1960 (excluded)\\n .addUnboundedFrom(\\\"1960\\\"); // from 1960 to +infinity\\n使用聚合请求\\nimport org.elasticsearch.search.aggregations.bucket.range.Range;\\n// sr is here your SearchResponse object\\nRange agg = sr.getAggregations().get(\\\"agg\\\");\\n\\n// For each entry\\nfor (Range.Bucket entry : agg.getBuckets()) {\\n String key = entry.getKeyAsString(); // Date range as key\\n DateTime fromAsDate = (DateTime) entry.getFrom(); // Date bucket from as a Date\\n DateTime toAsDate = (DateTime) entry.getTo(); // Date bucket to as a Date\\n long docCount = entry.getDocCount(); // Doc count\\n\\n logger.info(\\\"key [{}], from [{}], to [{}], doc_count [{}]\\\", key, fromAsDate, toAsDate, docCount);\\n}\\n输出：\\nkey [*-1950], from [null], to [1950-01-01T00:00:00.000Z], doc_count [8]\\nkey [1950-1960], from [1950-01-01T00:00:00.000Z], to [1960-01-01T00:00:00.000Z], doc_count [5]\\nkey [1960-*], from [1960-01-01T00:00:00.000Z], to [null], doc_count [37]\\nIp Range Aggregation Ip范围聚合\\n下面是如何使用 Java API 使用Ip Range Aggregation\\n准备聚合请求\\n下面是如何创建聚合请求的是示例：\\nAggregatorBuilder aggregation =\\n AggregationBuilders\\n .ipRange(\\\"agg\\\")\\n .field(\\\"ip\\\")\\n .addUnboundedTo(\\\"192.168.1.0\\\") // from -infinity to 192.168.1.0 (excluded)\\n .addRange(\\\"192.168.1.0\\\", \\\"192.168.2.0\\\") // from 192.168.1.0 to 192.168.2.0 (excluded)\\n .addUnboundedFrom(\\\"192.168.2.0\\\"); // from 192.168.2.0 to +infinity\\n使用聚合请求\\nimport org.elasticsearch.search.aggregations.bucket.range.Range;\\n// sr is here your SearchResponse object\\nRange agg = sr.getAggregations().get(\\\"agg\\\");\\n\\n// For each entry\\nfor (Range.Bucket entry : agg.getBuckets()) {\\n String key = entry.getKeyAsString(); // Ip range as key\\n String fromAsString = entry.getFromAsString(); // Ip bucket from as a String\\n String toAsString = entry.getToAsString(); // Ip bucket to as a String\\n long docCount = entry.getDocCount(); // Doc count\\n\\n logger.info(\\\"key [{}], from [{}], to [{}], doc_count [{}]\\\", key, fromAsString, toAsString, docCount);\\n}\\n输出：\\nkey [*-1950], from [null], to [1950-01-01T00:00:00.000Z], doc_count [8]\\nkey [1950-1960], from [1950-01-01T00:00:00.000Z], to [1960-01-01T00:00:00.000Z], doc_count [5]\\nkey [1960-*], from [1960-01-01T00:00:00.000Z], to [null], doc_count [37]\\nHistogram Aggregation 直方图聚合\\n\\n基于文档中的某个【数值类型】字段，通过计算来动态的分桶。\\n\\n下面是如何使用 Java API 使用Histogram Aggregation\\n准备聚合请求\\n下面是如何创建聚合请求的是示例：\\nAggregationBuilder aggregation =\\n AggregationBuilders\\n .histogram(\\\"agg\\\")\\n .field(\\\"height\\\")\\n .interval(1);\\n使用聚合请求\\nimport org.elasticsearch.search.aggregations.bucket.histogram.Histogram;\\n// sr is here your SearchResponse object\\nHistogram agg = sr.getAggregations().get(\\\"agg\\\");\\n\\n// For each entry\\nfor (Histogram.Bucket entry : agg.getBuckets()) {\\n Number key = (Number) entry.getKey(); // Key\\n long docCount = entry.getDocCount(); // Doc count\\n\\n logger.info(\\\"key [{}], doc_count [{}]\\\", key, docCount);\\n}\\nDate Histogram Aggregation 日期范围直方图聚合\\n\\n与直方图类似的多bucket聚合，但只能应用于日期值.。\\n\\n下面是如何使用 Java API 使用 Date Histogram Aggregation\\n准备聚合请求\\n下面是如何创建聚合请求的是示例：\\nAggregationBuilder aggregation =\\n AggregationBuilders\\n .dateHistogram(\\\"agg\\\")\\n .field(\\\"dateOfBirth\\\")\\n .dateHistogramInterval(DateHistogramInterval.YEAR);\\n或者把时间间隔设置为10天\\nAggregationBuilder aggregation =\\n AggregationBuilders\\n .dateHistogram(\\\"agg\\\")\\n .field(\\\"dateOfBirth\\\")\\n .dateHistogramInterval(DateHistogramInterval.days(10));\\n使用聚合请求\\nimport org.elasticsearch.search.aggregations.bucket.histogram.Histogram;\\n// sr is here your SearchResponse object\\nHistogram agg = sr.getAggregations().get(\\\"agg\\\");\\n\\n// For each entry\\nfor (Histogram.Bucket entry : agg.getBuckets()) {\\n DateTime key = (DateTime) entry.getKey(); // Key\\n String keyAsString = entry.getKeyAsString(); // Key as String\\n long docCount = entry.getDocCount(); // Doc count\\n\\n logger.info(\\\"key [{}], date [{}], doc_count [{}]\\\", keyAsString, key.getYear(), docCount);\\n}\\n输出：\\nkey [1942-01-01T00:00:00.000Z], date [1942], doc_count [1]\\nkey [1945-01-01T00:00:00.000Z], date [1945], doc_count [1]\\nkey [1946-01-01T00:00:00.000Z], date [1946], doc_count [1]\\n...\\nkey [2005-01-01T00:00:00.000Z], date [2005], doc_count [1]\\nkey [2007-01-01T00:00:00.000Z], date [2007], doc_count [2]\\nkey [2008-01-01T00:00:00.000Z], date [2008], doc_count [3]\\nGeo Distance Aggregation 地理距离聚合\\n\\n在geo_point字段上工作的多bucket聚合和概念上的工作非常类似于range(范围)聚合.用户可以定义原点的点和距离范围的集合。聚合计算每个文档值与原点的距离，并根据范围确定其所属的bucket(桶)（如果文档和原点之间的距离落在bucket(桶)的距离范围内，则文档属于bucket(桶) )\\n\\n下面是如何使用 Java API 使用 Geo Distance Aggregation\\n准备聚合请求\\n下面是如何创建聚合请求的是示例：\\nAggregationBuilder aggregation =\\n AggregationBuilders\\n .geoDistance(\\\"agg\\\", new GeoPoint(48.84237171118314,2.33320027692004))\\n .field(\\\"address.location\\\")\\n .unit(DistanceUnit.KILOMETERS)\\n .addUnboundedTo(3.0)\\n .addRange(3.0, 10.0)\\n .addRange(10.0, 500.0);\\n使用聚合请求\\nimport org.elasticsearch.search.aggregations.bucket.range.Range;\\n// sr is here your SearchResponse object\\nRange agg = sr.getAggregations().get(\\\"agg\\\");\\n\\n// For each entry\\nfor (Range.Bucket entry : agg.getBuckets()) {\\n String key = entry.getKeyAsString(); // key as String\\n Number from = (Number) entry.getFrom(); // bucket from value\\n Number to = (Number) entry.getTo(); // bucket to value\\n long docCount = entry.getDocCount(); // Doc count\\n\\n logger.info(\\\"key [{}], from [{}], to [{}], doc_count [{}]\\\", key, from, to, docCount);\\n}\\n输出：\\nkey [*-3.0], from [0.0], to [3.0], doc_count [161]\\nkey [3.0-10.0], from [3.0], to [10.0], doc_count [460]\\nkey [10.0-500.0], from [10.0], to [500.0], doc_count [4925]\\nGeo Hash Grid Aggregation GeoHash网格聚合\\n\\n在geo_point字段和组上工作的多bucket聚合将指向网格中表示单元格的bucket。生成的网格可以是稀疏的，并且只包含具有匹配数据的单元格。每个单元格使用具有用户可定义精度的 geohash 进行标记。\\n\\n下面是如何使用 Java API 使用Geo Hash Grid Aggregation\\n准备聚合请求\\n下面是如何创建聚合请求的是示例：\\nAggregationBuilder aggregation =\\n AggregationBuilders\\n .geohashGrid(\\\"agg\\\")\\n .field(\\\"address.location\\\")\\n .precision(4);\\n使用聚合请求\\nimport org.elasticsearch.search.aggregations.bucket.geogrid.GeoHashGrid;\\n// sr is here your SearchResponse object\\nGeoHashGrid agg = sr.getAggregations().get(\\\"agg\\\");\\n\\n// For each entry\\nfor (GeoHashGrid.Bucket entry : agg.getBuckets()) {\\n String keyAsString = entry.getKeyAsString(); // key as String\\n GeoPoint key = (GeoPoint) entry.getKey(); // key as geo point\\n long docCount = entry.getDocCount(); // Doc count\\n\\n logger.info(\\\"key [{}], point {}, doc_count [{}]\\\", keyAsString, key, docCount);\\n}\\n输出：\\n```\\nkey [gbqu], point [47.197265625, -1.58203125], doc_count [1282]\\nkey [gbvn], point [50.361328125, -4.04296875], doc_count [1248]\\nkey [u1j0], point [50.712890625, 7.20703125], doc_count [1156]\\nkey [u0j2], point [45.087890625, 7.55859375], doc_count [1138]\\n...\\n\"},\"query-dsl.html\":{\"url\":\"query-dsl.html\",\"title\":\"Query DSL\",\"keywords\":\"\",\"body\":\"Query DSL\\n\\nElasticsearch 提供了一个基于 JSON 的完整的查询 DSL 来定义查询。\\n\\nElasticsearch以类似于REST Query DSL 的方式提供完整的Java查询dsl。 查询构建器的工厂是 QueryBuilders。 一旦的查询准备就绪，就可以使用Search API 。\\n要使用QueryBuilder，只需将它们导入到类中：\\nimport static org.elasticsearch.index.query.QueryBuilders.*;\\n\\n注意，可以使用QueryBuilder对象上的toString（）方法打印。\\n\\nQueryBuilder可以用于接受任何查询API，如count和search。\\n\"},\"query-dsl/match-all-query.html\":{\"url\":\"query-dsl/match-all-query.html\",\"title\":\"Match All Query\",\"keywords\":\"\",\"body\":\"Match All Query\\n\\n最简单的查询，它匹配所有文档\\n\\n查看 Match All Query \\nQueryBuilder qb = matchAllQuery();\\n\"},\"query-dsl/full-text-queries.html\":{\"url\":\"query-dsl/full-text-queries.html\",\"title\":\"Full text queries\",\"keywords\":\"\",\"body\":\"Full text queries 全文搜索\\n高级别的全文搜索通常用于在全文字段（例如：一封邮件的正文）上进行全文搜索。它们了解如何分析查询的字段，并在执行之前将每个字段的分析器（或搜索分析器）应用于查询字符串。\\n这样的查询有以下这些：\\n\\n匹配查询（match query）\\n\\n用于执行全文查询的标准查询，包括模糊匹配和词组或邻近程度的查询\\n查看 Match Query \\nQueryBuilder qb = matchQuery(\\n \\\"name\\\", //field 字段\\n \\\"kimchy elasticsearch\\\" // text \\n);\\n\\n多字段查询（multi_match query）\\n\\n可以用来对多个字段的版本进行匹配查询\\n查看 Multi Match Query\\nQueryBuilder qb = multiMatchQuery(\\n \\\"kimchy elasticsearch\\\", //text\\n \\\"user\\\", \\\"message\\\" //fields 多个字段\\n);\\n\\n常用术语查询（common_terms query）\\n\\n可以对一些比较专业的偏门词语进行的更加专业的查询\\n查看Common Terms Query\\nQueryBuilder qb = commonTermsQuery(\\\"name\\\", //field 字段\\n \\\"kimchy\\\"); // value\\n\\n查询语句查询（query_string query）\\n\\n与lucene查询语句的语法结合的更加紧密的一种查询，允许你在一个查询语句中使用多个 特殊条件关键字（如：AND|OR|NOT ）对多个字段进行查询，当然这种查询仅限专家用户去使用。\\n查看Query String Query\\nQueryBuilder qb = queryStringQuery(\\\"+kimchy -elasticsearch\\\"); //text\\n\\n简单查询语句（simple_query_string）\\n\\n是一种适合直接暴露给用户的简单的且具有非常完善的查询语法的查询语句\\n查看Simple Query String Query\\nQueryBuilder qb = simpleQueryStringQuery(\\\"+kimchy -elasticsearch\\\"); //text\\n\"},\"query-dsl/term-level-queries.html\":{\"url\":\"query-dsl/term-level-queries.html\",\"title\":\"Term level queries\",\"keywords\":\"\",\"body\":\"Term level queries 术语查询\\n虽然全文查询将在执行之前分析查询字符串，但是项级别查询对存储在反向索引中的确切项进行操作。\\n这些查询通常用于结构化数据，如数字、日期和枚举，而不是全文字段。或者，在分析过程之前，它允许你绘制低级查询。\\n这样的查询有以下这些：\\n\\nTerm Query（项查询）\\n\\n查询包含在指定字段中指定的确切值的文档。\\n查看Term Query\\n\\nQueryBuilder qb = termQuery(\\n \\\"name\\\", //field\\n \\\"kimchy\\\" //text\\n);\\n\\nTerms Query（多项查询）\\n\\n查询包含任意一个在指定字段中指定的多个确切值的文档。\\n查看Terms Query\\nQueryBuilder qb = termsQuery(\\\"tags\\\", //field\\n \\\"blue\\\", \\\"pill\\\"); //values\\n\\nRange Query（范围查询）\\n\\n查询指定字段包含指定范围内的值（日期，数字或字符串）的文档。\\n查看Range Query\\n方法：\\n\\ngte() :范围查询将匹配字段值大于或等于此参数值的文档。\\ngt() :范围查询将匹配字段值大于此参数值的文档。\\nlte() :范围查询将匹配字段值小于或等于此参数值的文档。\\nlt() :范围查询将匹配字段值小于此参数值的文档。\\nfrom() 开始值 to() 结束值 这两个函数与includeLower()和includeUpper()函数配套使用。\\nincludeLower(true) 表示 from() 查询将匹配字段值大于或等于此参数值的文档。\\nincludeLower(false) 表示 from() 查询将匹配字段值大于此参数值的文档。\\nincludeUpper(true) 表示 to() 查询将匹配字段值小于或等于此参数值的文档。\\nincludeUpper(false) 表示 to() 查询将匹配字段值小于此参数值的文档。\\n\\nQueryBuilder qb = rangeQuery(\\\"price\\\") //field\\n .from(5) //开始值，与includeLower()和includeUpper()函数配套使用\\n .to(10) //结束值，与includeLower()和includeUpper()函数配套使用\\n .includeLower(true) // true: 表示 from() 查询将匹配字段值大于或等于此参数值的文档; false:表示 from() 查询将匹配字段值大于此参数值的文档。\\n .includeUpper(false); //true:表示 to() 查询将匹配字段值小于或等于此参数值的文档; false:表示 to() 查询将匹配字段值小于此参数值的文档。\\n实例\\n// Query\\nRangeQueryBuilder rangeQueryBuilder = QueryBuilders.rangeQuery(\\\"age\\\");\\nrangeQueryBuilder.from(19);\\nrangeQueryBuilder.to(21);\\nrangeQueryBuilder.includeLower(true);\\nrangeQueryBuilder.includeUpper(true);\\n//RangeQueryBuilder rangeQueryBuilder = QueryBuilders.rangeQuery(\\\"age\\\").gte(19).lte(21);\\n// Search\\nSearchRequestBuilder searchRequestBuilder = client.prepareSearch(index);\\nsearchRequestBuilder.setTypes(type);\\nsearchRequestBuilder.setQuery(rangeQueryBuilder);\\n// 执行\\nSearchResponse searchResponse = searchRequestBuilder.execute().actionGet();\\n上面代码中的查询语句与下面的是等价的：\\nQueryBuilder queryBuilder = QueryBuilders.rangeQuery(\\\"age\\\").gte(19).lte(21);\\n\\nExists Query（存在查询）\\n\\n查询指定的字段包含任何非空值的文档,如果指定字段上至少存在一个no-null的值就会返回该文档。\\n查看Exists Query\\nQueryBuilder qb = existsQuery(\\\"name\\\");\\n实例\\n// Query\\nExistsQueryBuilder existsQueryBuilder = QueryBuilders.existsQuery(\\\"name\\\");\\n// Search\\nSearchRequestBuilder searchRequestBuilder = client.prepareSearch(index);\\nsearchRequestBuilder.setTypes(type);\\nsearchRequestBuilder.setQuery(existsQueryBuilder);\\n// 执行\\nSearchResponse searchResponse = searchRequestBuilder.get();\\n举例说明，下面的几个文档都会得到上面代码的匹配：\\n{ \\\"name\\\": \\\"yoona\\\" }\\n{ \\\"name\\\": \\\"\\\" }\\n{ \\\"name\\\": \\\"-\\\" }\\n{ \\\"name\\\": [\\\"yoona\\\"] }\\n{ \\\"name\\\": [\\\"yoona\\\", null ] }\\n第一个是字符串，是一个非null的值。\\n第二个是空字符串，也是非null。\\n第三个使用标准分析器的情况下尽管不会返回词条，但是原始字段值是非null的（Even though the standard analyzer would emit zero tokens, the original field is non-null）。\\n第五个中至少有一个是非null值。\\n下面几个文档不会得到上面代码的匹配：\\n{ \\\"name\\\": null }\\n{ \\\"name\\\": [] }\\n{ \\\"name\\\": [null] }\\n{ \\\"user\\\": \\\"bar\\\" }\\n第一个是null值。\\n第二个没有值。\\n第三个只有null值，至少需要一个非null值。\\n第四个与指定字段不匹配。\\n\\nPrefix Query（前缀查询）\\n\\n查找指定字段包含以指定的精确前缀开头的值的文档。\\n查看Prefix Query\\nQueryBuilder qb = prefixQuery(\\n \\\"brand\\\", //field\\n \\\"heine\\\" //prefix\\n);\\n\\nWildcard Query（通配符查询）\\n\\n查询指定字段包含与指定模式匹配的值的文档，其中该模式支持单字符通配符（？）和多字符通配符（*）,和前缀查询一样，通配符查询指定字段是未分析的（not analyzed）\\n可以使用星号代替0个或多个字符，使用问号代替一个字符。星号表示匹配的数量不受限制，而后者的匹配字符数则受到限制。这个技巧主要用于英文搜索中，如输入““computer*”，就可以找到“computer、computers、computerised、computerized”等单词，而输入“comp?ter”，则只能找到“computer、compater、competer”等单词。注意的是通配符查询不太注重性能，在可能时尽量避免，特别是要避免前缀通配符（以通配符开始的词条）。\\nQueryBuilder qb = wildcardQuery(\\\"user\\\", \\\"k?mc*\\\");\\n实例\\n// Query\\nWildcardQueryBuilder wildcardQueryBuilder = QueryBuilders.wildcardQuery(\\\"country\\\", \\\"西*牙\\\");\\n// Search\\nSearchRequestBuilder searchRequestBuilder = client.prepareSearch(index);\\nsearchRequestBuilder.setTypes(type);\\nsearchRequestBuilder.setQuery(wildcardQueryBuilder);\\n// 执行\\nSearchResponse searchResponse = searchRequestBuilder.get();\\n查看Wildcard Query\\n\\nRegexp Query（正则表达式查询）\\n\\n查询指定的字段包含与指定的正则表达式匹配的值的文档。\\n和前缀查询一样，正则表达式查询指定字段是未分析的（not analyzed）。正则表达式查询的性能取决于所选的正则表达式。如果我们的正则表达式匹配许多词条，查询将很慢。一般规则是，正则表达式匹配的词条数越高，查询越慢。\\n查看Regexp Query\\nQueryBuilder qb = regexpQuery(\\n \\\"name.first\\\", //field\\n \\\"s.*y\\\"); //regexp\\n实例\\n// Query\\nRegexpQueryBuilder regexpQueryBuilder = QueryBuilders.regexpQuery(\\\"country\\\", \\\"(西班|葡萄)牙\\\");\\n\\n// Search\\nSearchRequestBuilder searchRequestBuilder = client.prepareSearch(index);\\nsearchRequestBuilder.setTypes(type);\\nsearchRequestBuilder.setQuery(regexpQueryBuilder);\\n// 执行\\nSearchResponse searchResponse = searchRequestBuilder.get();\\n\\nFuzzy Query（模糊查询）\\n\\n查询指定字段包含与指定术语模糊相似的术语的文档。模糊性测量为1或2的 Levenshtein。\\n如果指定的字段是string类型，模糊查询是基于编辑距离算法来匹配文档。编辑距离的计算基于我们提供的查询词条和被搜索文档。如果指定的字段是数值类型或者日期类型，模糊查询基于在字段值上进行加减操作来匹配文档（The fuzzy query uses similarity based on Levenshtein edit distance for string fields, and a +/-margin on numeric and date fields）。此查询很占用CPU资源，但当需要模糊匹配时它很有用，例如，当用户拼写错误时。另外我们可以在搜索词的尾部加上字符 “~” 来进行模糊查询。\\n查看Fuzzy Query\\nQueryBuilder qb = fuzzyQuery(\\n \\\"name\\\", //field\\n \\\"kimzhy\\\" //text\\n);\\n\\nType Query（类型查询）\\n\\n查询指定类型的文档。\\n查看Type Query\\nQueryBuilder qb = typeQuery(\\\"my_type\\\"); //type\\n\\nIds Query（ID查询）\\n\\n查询具有指定类型和 ID 的文档。\\n查看Ids Query\\nQueryBuilder qb = idsQuery(\\\"my_type\\\", \\\"type2\\\")\\n .addIds(\\\"1\\\", \\\"4\\\", \\\"100\\\");\\n\\nQueryBuilder qb = idsQuery() // type 是可选择的，可以不写\\n .addIds(\\\"1\\\", \\\"4\\\", \\\"100\\\");\\n\"},\"query-dsl/compound-queries.html\":{\"url\":\"query-dsl/compound-queries.html\",\"title\":\"Compound queries\",\"keywords\":\"\",\"body\":\"Compound queries\\n复合查询用来包装其他复合或者叶子查询，一方面可综合其结果和分数，从而改变它的行为，另一方面可从查询切换到过滤器上下文。此类查询包含：\\n\\nconstant_score 查询\\n\\n这是一个包装其他查询的查询，并且在过滤器上下文中执行。与此查询匹配的所有文件都需要返回相同的“常量” _score 。\\n查看Constant Score Query\\nQueryBuilder qb = constantScoreQuery(\\n termQuery(\\\"name\\\",\\\"kimchy\\\") //查询语句\\n )\\n .boost(2.0f); //分数\\n\\nbool 查询\\n\\n组合多个叶子并发查询或复合查询条件的默认查询类型，例如must, should, must_not, 以及 filter 条件。 在 must 和 should 子句他们的分数相结合-匹配条件越多，预期越好-而 must_not 和 filter 子句在过滤器上下文中执行。\\n查看Bool Query\\nQueryBuilder qb = boolQuery()\\n .must(termQuery(\\\"content\\\", \\\"test1\\\")) //must query\\n .must(termQuery(\\\"content\\\", \\\"test4\\\")) \\n .mustNot(termQuery(\\\"content\\\", \\\"test2\\\")) //must not query\\n .should(termQuery(\\\"content\\\", \\\"test3\\\")) // should query\\n .filter(termQuery(\\\"content\\\", \\\"test5// 与一般查询作用一样，只不过不参与评分\\n\\ndis_max 查询\\n\\n支持多并发查询的查询，并可返回与任意查询条件子句匹配的任何文档类型。与 bool 查询可以将所有匹配查询的分数相结合使用的方式不同的是，dis_max 查询只使用最佳匹配查询条件的分数。\\n查看Dis Max Query\\nQueryBuilder qb = disMaxQuery()\\n .add(termQuery(\\\"name\\\", \\\"kimchy\\\")) \\n .add(termQuery(\\\"name\\\", \\\"elasticsearch\\\")) \\n .boost(1.2f) //boost factor \\n .tieBreaker(0.7f); //tie breaker\\n\\nfunction_score 查询\\n\\n使用函数修改主查询返回的分数，以考虑诸如流行度，新近度，距离或使用脚本实现的自定义算法等因素。\\n查看Function Score Query\\nimport static org.elasticsearch.index.query.functionscore.ScoreFunctionBuilders.*;\\nFilterFunctionBuilder[] functions = {\\n new FunctionScoreQueryBuilder.FilterFunctionBuilder(\\n matchQuery(\\\"name\\\", \\\"kimchy\\\"), //根据查询添加第一个function\\n randomFunction(\\\"ABCDEF\\\")), //根据给定的种子随机分数\\n new FunctionScoreQueryBuilder.FilterFunctionBuilder(\\n exponentialDecayFunction(\\\"age\\\", 0L, 1L)) //根据年龄字段添加另一个function\\n\\n};\\nQueryBuilder qb = QueryBuilders.functionScoreQuery(functions);\\n\\nboosting 查询\\n\\n返回匹配 positive 查询的文档，并且当减少文档的分数时其结果也匹配 negative 查询。\\n查看Boosting Query\\nQueryBuilder qb = boostingQuery(\\n termQuery(\\\"name\\\",\\\"kimchy\\\"), \\n termQuery(\\\"name\\\",\\\"dadoonet\\\")) \\n .negativeBoost(0.2f);\\n\\nindices 查询\\n\\n对指定的索引执行一个查询，对其他索引执行另一个查询。\\n查看Indices Query\\n\\n在5.0.0中已弃用。用搜索 _index 字段来代替\\n\\n// Using another query when no match for the main one\\nQueryBuilder qb = indicesQuery(\\n termQuery(\\\"tag\\\", \\\"wow\\\"), \\n \\\"index1\\\", \\\"index2\\\" \\n ).noMatchQuery(termQuery(\\\"tag\\\", \\\"kow\\\"));\\n// Using all (match all) or none (match no documents)\\nQueryBuilder qb = indicesQuery(\\n termQuery(\\\"tag\\\", \\\"wow\\\"), \\n \\\"index1\\\", \\\"index2\\\" \\n ).noMatchQuery(\\\"all\\\");\\n\"},\"query-dsl/joining-queries.html\":{\"url\":\"query-dsl/joining-queries.html\",\"title\":\"Joining queries\",\"keywords\":\"\",\"body\":\"Joining queries\\n在像 ElasticSearch 这样的分布式系统中执行全 SQL 风格的连接查询代价昂贵，是不可行的。相应地，为了实现水平规模地扩展，ElasticSearch 提供了两种形式的 join。\\n\\nnested query (嵌套查询)\\n\\n文档中可能包含嵌套类型的字段，这些字段用来索引一些数组对象，每个对象都可以作为一条独立的文档被查询出来(用嵌套查询)\\n查看Nested Query\\nQueryBuilder qb = nestedQuery(\\n \\\"obj1\\\", //nested 嵌套文档的路径\\n boolQuery() // 查询 查询中引用的任何字段都必须使用完整路径（fully qualified）。\\n .must(matchQuery(\\\"obj1.name\\\", \\\"blue\\\"))\\n .must(rangeQuery(\\\"obj1.count\\\").gt(5)),\\n ScoreMode.Avg // score 模型 ScoreMode.Max, ScoreMode.Min, ScoreMode.Total, ScoreMode.Avg or ScoreMode.None\\n );\\n\\nhas_child (有子查询) and has_parent (有父查询) queries\\n\\n一类父子关系可以存在单个的索引的两个类型的文档之间。has_child 查询将返回其子文档能满足特定的查询的父文档，而 has_parent 则返回其父文档能满足特定查询的子文档\\nHas Child Query\\n查看Has Child Query\\n使用 has_child 查询时，必须使用PreBuiltTransportClient而不是常规 Client，这个点很重要：\\nSettings settings = Settings.builder().put(\\\"cluster.name\\\", \\\"elasticsearch\\\").build();\\nTransportClient client = new PreBuiltTransportClient(settings);\\nclient.addTransportAddress(new InetSocketTransportAddress(new InetSocketAddress(InetAddresses.forString(\\\"127.0.0.1\\\"), 9300)));\\n否则，parent-join 模块不会被加载，并且不能从transport client 使用has_child查询。\\nQueryBuilder qb = JoinQueryBuilders.hasChildQuery(\\n \\\"blog_tag\\\", //要查询的子类型\\n termQuery(\\\"tag\\\",\\\"something\\\"), //查询\\n ScoreMode.Avg //score 模型 ScoreMode.Avg, ScoreMode.Max, ScoreMode.Min, ScoreMode.None or ScoreMode.Total\\n);\\nHas Parent Query\\n查看Has Parent\\n使用has_parent查询时，必须使用PreBuiltTransportClient而不是常规 Client，这个点很重要：\\nSettings settings = Settings.builder().put(\\\"cluster.name\\\", \\\"elasticsearch\\\").build();\\nTransportClient client = new PreBuiltTransportClient(settings);\\nclient.addTransportAddress(new InetSocketTransportAddress(new InetSocketAddress(InetAddresses.forString(\\\"127.0.0.1\\\"), 9300)));\\n否则，parent-join 模块不会被加载，并且不能从transport client 使用has_child查询。\\nQueryBuilder qb = JoinQueryBuilders.hasParentQuery(\\n \\\"blog\\\", //要查询的子类型\\n termQuery(\\\"tag\\\",\\\"something\\\"), //查询\\n false //是否从父hit的score 传给子 hit\\n);\\n参考 term 查询中的terms-lookup mechanism ，它允许你在另一个文档的值中创建一个term 查询。\\n\"},\"query-dsl/geo-queries.html\":{\"url\":\"query-dsl/geo-queries.html\",\"title\":\"Geo queries\",\"keywords\":\"\",\"body\":\"Geo queries 地理位置查询\\nElasticsearch支持两种类型的地理数据：geo_point类型支持成对的纬度/经度，geo_shape类型支持点、线、圆、多边形、多个多边形等。\\n在这组的查询中：\\n\\ngeo_shape查询\\n\\n查找要么相交，包含的，要么指定形状不相交的地理形状的文档。\\n查看Geo Shape Query\\n\\ngeo_shape 类型使用 Spatial4J 和 JTS ，这两者都是可选的依赖项。 因此，必须将 Spatial4J 和 JTS 添加到 classpath 中才能使用此类型：\\n\\n\\n org.locationtech.spatial4j\\n spatial4j\\n 0.6 \\n\\n\\n\\n com.vividsolutions\\n jts\\n 1.13 \\n \\n \\n xerces\\n xercesImpl\\n \\n \\n\\n// Import ShapeRelation and ShapeBuilder\\nimport org.elasticsearch.common.geo.ShapeRelation;\\nimport org.elasticsearch.common.geo.builders.ShapeBuilder;\\nList points = new ArrayList();\\npoints.add(new Coordinate(0, 0));\\npoints.add(new Coordinate(0, 10));\\npoints.add(new Coordinate(10, 10));\\npoints.add(new Coordinate(10, 0));\\npoints.add(new Coordinate(0, 0));\\n\\nQueryBuilder qb = geoShapeQuery(\\n \\\"pin.location\\\", //field\\n ShapeBuilders.newMultiPoint(points) //shape\\n .relation(ShapeRelation.WITHIN); //relation 可以是 ShapeRelation.CONTAINS, ShapeRelation.WITHIN, ShapeRelation.INTERSECTS 或 ShapeRelation.DISJOINT\\n// Using pre-indexed shapes\\nQueryBuilder qb = geoShapeQuery(\\n \\\"pin.location\\\", //field\\n \\\"DEU\\\", //The ID of the document that containing the pre-indexed shape.\\n \\\"countries\\\") //Index type where the pre-indexed shape is.\\n .relation(ShapeRelation.WITHIN)) //relation\\n .indexedShapeIndex(\\\"shapes\\\") //Name of the index where the pre-indexed shape is. Defaults to shapes.\\n .indexedShapePath(\\\"location\\\"); //The field specified as path containing the pre-indexed shape. Defaults to shape.\\n\\ngeo_bounding_box 查询\\n\\n查找落入指定的矩形地理点的文档。\\n查看Geo Bounding Box Query\\nQueryBuilder qb = geoBoundingBoxQuery(\\\"pin.location\\\") //field\\n .setCorners(40.73, -74.1, //bounding box top left point\\n 40.717, -73.99); //bounding box bottom right point\\n\\ngeo_distance 查询\\n\\n查找在一个中心点指定范围内的地理点文档。\\n查看Geo Distance Query\\nQueryBuilder qb = geoDistanceQuery(\\\"pin.location\\\") //field\\n .point(40, -70) //center point\\n .distance(200, DistanceUnit.KILOMETERS); //distance from center point\\n\\ngeo_polygon 查询\\n\\n查找指定多边形内地理点的文档。\\n查看Geo Polygon Query\\nList points = new ArrayList(); //add your polygon of points a document should fall within\\npoints.add(new GeoPoint(40, -70));\\npoints.add(new GeoPoint(30, -80));\\npoints.add(new GeoPoint(20, -90));\\n\\nQueryBuilder qb =\\n geoPolygonQuery(\\\"pin.location\\\", points); //initialise the query with field and points\\n\"},\"query-dsl/specialized-queries.html\":{\"url\":\"query-dsl/specialized-queries.html\",\"title\":\"Specialized queries\",\"keywords\":\"\",\"body\":\"Specialized queries\\n\\nmore_like_this query(相似度查询)\\n\\n这个查询能检索到与指定文本、文档或者文档集合相似的文档。\\n查看More Like This Query\\nString[] fields = {\\\"name.first\\\", \\\"name.last\\\"}; //fields\\nString[] texts = {\\\"text like this one\\\"}; //text\\nItem[] items = null;\\n\\nQueryBuilder qb = moreLikeThisQuery(fields, texts, items)\\n .minTermFreq(1) //ignore threshold\\n .maxQueryTerms(12); //max num of Terms in generated queries\\n\\nscript query\\n\\n该查询允许脚本充当过滤器。 另请参阅 function_score query 。\\n查看Script Query\\nQueryBuilder qb = scriptQuery(\\n new Script(\\\"doc['num1'].value > 1\\\") //inlined script\\n);\\n如果已经在每个数据节点上存储名为 `myscript.painless 的脚本，请执行以下操作：\\ndoc['num1'].value > params.param1\\n然后使用：\\nQueryBuilder qb = scriptQuery(\\n new Script(\\n ScriptType.FILE, //脚本类型 ScriptType.FILE, ScriptType.INLINE， ScriptType.INDEXED\\n \\\"painless\\\", //Scripting engine 脚本引擎\\n \\\"myscript\\\", //Script name 脚本名\\n Collections.singletonMap(\\\"param1\\\", 5)) //Parameters as a Map of \\n);\\n\\nPercolate Query\\n\\n查看Percolate Query\\nSettings settings = Settings.builder().put(\\\"cluster.name\\\", \\\"elasticsearch\\\").build();\\nTransportClient client = new PreBuiltTransportClient(settings);\\nclient.addTransportAddress(new InetSocketTransportAddress(new InetSocketAddress(InetAddresses.forString(\\\"127.0.0.1\\\"), 9300)));\\n在可以使用percolate查询之前，应该添加percolator映射，并且应该对包含percolator查询的文档建立索引：\\n// create an index with a percolator field with the name 'query':\\nclient.admin().indices().prepareCreate(\\\"myIndexName\\\")\\n .addMapping(\\\"query\\\", \\\"query\\\", \\\"type=percolator\\\")\\n .addMapping(\\\"docs\\\", \\\"content\\\", \\\"type=text\\\")\\n .get();\\n\\n//This is the query we're registering in the percolator\\nQueryBuilder qb = termQuery(\\\"content\\\", \\\"amazing\\\");\\n\\n//Index the query = register it in the percolator\\nclient.prepareIndex(\\\"myIndexName\\\", \\\"query\\\", \\\"myDesignatedQueryName\\\")\\n .setSource(jsonBuilder()\\n .startObject()\\n .field(\\\"query\\\", qb) // Register the query\\n .endObject())\\n .setRefreshPolicy(RefreshPolicy.IMMEDIATE) // Needed when the query shall be available immediately\\n .get();\\n在上面的index中query名为 myDesignatedQueryName\\n为了检查文档注册查询,使用这个代码:\\n//Build a document to check against the percolator\\nXContentBuilder docBuilder = XContentFactory.jsonBuilder().startObject();\\ndocBuilder.field(\\\"content\\\", \\\"This is amazing!\\\");\\ndocBuilder.endObject(); //End of the JSON root object\\n\\nPercolateQueryBuilder percolateQuery = new PercolateQueryBuilder(\\\"query\\\", \\\"docs\\\", docBuilder.bytes());\\n\\n// Percolate, by executing the percolator query in the query dsl:\\nSearchResponse response = client().prepareSearch(\\\"myIndexName\\\")\\n .setQuery(percolateQuery))\\n .get();\\n//Iterate over the results\\nfor(SearchHit hit : response.getHits()) {\\n // Percolator queries as hit\\n}\\n\"},\"query-dsl/span-queries.html\":{\"url\":\"query-dsl/span-queries.html\",\"title\":\"Span queries\",\"keywords\":\"\",\"body\":\"Span queries\\n\\nspan_term查询\\n\\n等同于 term query ，但与其他Span查询一起使用。\\n查看 Span Term Query\\nQueryBuilder qb = spanTermQuery(\\n \\\"user\\\", //field\\n \\\"kimchy\\\" //value\\n);\\n\\nspan_multi查询\\n\\n包含term, range, prefix, wildcard, regexp 或者 fuzzy 查询。\\n查看Span Multi Term Query\\nQueryBuilder qb = spanMultiTermQueryBuilder(\\n prefixQuery(\\\"user\\\", \\\"ki\\\") //可以是MultiTermQueryBuilder 的 扩展 比如：FuzzyQueryBuilder, PrefixQueryBuilder, RangeQueryBuilder, RegexpQueryBuilder ， WildcardQueryBuilder。\\n);\\n\\nspan_first查询\\n\\n接受另一个Span查询，其匹配必须出现在字段的前N个位置。\\n查看Span First Query\\nQueryBuilder qb = spanFirstQuery(\\n spanTermQuery(\\\"user\\\", \\\"kimchy\\\"), //query\\n 3 //max end position\\n);\\n\\nspan_near查询\\n\\n接受多个Span查询，其匹配必须在彼此的指定距离内，并且可能顺序相同。\\n查看Span Near Query\\nQueryBuilder qb = spanNearQuery(\\n spanTermQuery(\\\"field\\\",\\\"value1\\\"), //span term queries\\n 12) //slop factor: the maximum number of intervening unmatched positions\\n .addClause(spanTermQuery(\\\"field\\\",\\\"value2\\\")) //span term queries\\n .addClause(spanTermQuery(\\\"field\\\",\\\"value3\\\")) //span term queries\\n .inOrder(false); //whether matches are required to be in-order\\n\\nspan_or查询\\n\\n组合多个Span查询 - 返回与任何指定查询匹配的文档。\\n查看Span Or Query\\nQueryBuilder qb = spanOrQuery(\\n spanTermQuery(\\\"field\\\",\\\"value1\\\")) \\n .addClause(spanTermQuery(\\\"field\\\",\\\"value2\\\")) \\n .addClause(spanTermQuery(\\\"field\\\",\\\"value3\\\")); //span term queries\\n\\nspan_not查询\\n\\n包装另一个Span查询，并排除与该查询匹配的所有文档。\\n查看Span Not Query\\nQueryBuilder qb = spanNotQuery(\\n spanTermQuery(\\\"field\\\",\\\"value1\\\"), //span query whose matches are filtered\\n spanTermQuery(\\\"field\\\",\\\"value2\\\")); //span query whose matches must not overlap those returned\\n\\nspan_containing 查询\\n\\n接受Span查询的列表，但仅返回与第二个Spans查询匹配的Span。\\n查看 Span Containing Query\\nQueryBuilder qb = spanContainingQuery(\\n spanNearQuery(spanTermQuery(\\\"field1\\\",\\\"bar\\\"), 5) //big part\\n .addClause(spanTermQuery(\\\"field1\\\",\\\"baz\\\")) \\n .inOrder(true),\\n spanTermQuery(\\\"field1\\\",\\\"foo\\\")); //little part\\n\\nspan_within查询\\n\\n只要其 span 位于由其他Span查询列表返回的范围内，就会返回单个Span查询的结果，\\n查看Span Within Query\\nQueryBuilder qb = spanWithinQuery(\\n spanNearQuery(spanTermQuery(\\\"field1\\\", \\\"bar\\\"), 5) //big part\\n .addClause(spanTermQuery(\\\"field1\\\", \\\"baz\\\"))\\n .inOrder(true),\\n spanTermQuery(\\\"field1\\\", \\\"foo\\\")); //little part\\n\"},\"indexed-scripts-api.html\":{\"url\":\"indexed-scripts-api.html\",\"title\":\"Indexed Scripts API\",\"keywords\":\"\",\"body\":\"\"},\"indexed-scripts-api/script-language.html\":{\"url\":\"indexed-scripts-api/script-language.html\",\"title\":\"Script Language\",\"keywords\":\"\",\"body\":\"\"},\"java-api-administration.html\":{\"url\":\"java-api-administration.html\",\"title\":\"Java API Administration\",\"keywords\":\"\",\"body\":\"\"},\"java-api-administration/indices-administration.html\":{\"url\":\"java-api-administration/indices-administration.html\",\"title\":\"Indices Administration\",\"keywords\":\"\",\"body\":\"\"},\"java-api-administration/cluster-administration.html\":{\"url\":\"java-api-administration/cluster-administration.html\",\"title\":\"Cluster Administration\",\"keywords\":\"\",\"body\":\"\"}}}"}],"posts":[{"title":"Elasticsearch Java API 搜索之Scrolls(四)","slug":"lasticsearch-Java-API-搜索之Scrolls-四","date":"2017-12-06T14:47:00.000Z","updated":"2018-01-29T07:18:46.525Z","comments":true,"path":"posts/3267/","link":"","permalink":"http://test.quanke.name/posts/3267/","excerpt":"","text":"Using scrolls in Java首先需要阅读 scroll documentation 一般搜索请求都是返回一”页”数据，无论数据量多大都一起返回给用户，Scroll API可以允许我们检索大量数据（甚至全部数据）。Scroll API允许我们做一个初始阶段搜索并且持续批量从Elasticsearch里拉取结果直到没有结果剩下。这有点像传统数据库里的cursors（游标）。Scroll API的创建并不是为了实时的用户响应，而是为了处理大量的数据（Scrolling is not intended for real time user requests, but rather for processing large amounts of data）。从 scroll 请求返回的结果只是反映了 search 发生那一时刻的索引状态，就像一个快照(The results that are returned from a scroll request reflect the state of the index at the time that the initial search request was made, like a snapshot in time)。后续的对文档的改动（索引、更新或者删除）都只会影响后面的搜索请求。 import static org.elasticsearch.index.query.QueryBuilders.*; QueryBuilder qb = termQuery(&quot;multi&quot;, &quot;test&quot;);SearchResponse scrollResp = client.prepareSearch(test) .addSort(FieldSortBuilder.DOC_FIELD_NAME, SortOrder.ASC) .setScroll(new TimeValue(60000)) //为了使用 scroll，初始搜索请求应该在查询中指定 scroll 参数，告诉 Elasticsearch 需要保持搜索的上下文环境多长时间（滚动时间） .setQuery(qb) .setSize(100).get(); //max of 100 hits will be returned for each scroll//Scroll until no hits are returneddo &#123; for (SearchHit hit : scrollResp.getHits().getHits()) &#123; //Handle the hit... &#125; scrollResp = client.prepareSearchScroll(scrollResp.getScrollId()).setScroll(new TimeValue(60000)).execute().actionGet();&#125; while(scrollResp.getHits().getHits().length != 0); // Zero hits mark the end of the scroll and the while loop. 如果超过滚动时间，继续使用该滚动ID搜索数据，则会报错： Caused by: SearchContextMissingException[No search context found for id [2861]] at org.elasticsearch.search.SearchService.findContext(SearchService.java:613) at org.elasticsearch.search.SearchService.executeQueryPhase(SearchService.java:403) at org.elasticsearch.search.action.SearchServiceTransportAction$SearchQueryScrollTransportHandler.messageReceived(SearchServiceTransportAction.java:384) at org.elasticsearch.search.action.SearchServiceTransportAction$SearchQueryScrollTransportHandler.messageReceived(SearchServiceTransportAction.java:381) at org.elasticsearch.transport.TransportRequestHandler.messageReceived(TransportRequestHandler.java:33) at org.elasticsearch.transport.RequestHandlerRegistry.processMessageReceived(RequestHandlerRegistry.java:75) at org.elasticsearch.transport.TransportService$4.doRun(TransportService.java:376) at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37) at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) at java.lang.Thread.run(Thread.java:745) 虽然当滚动有效时间已过，搜索上下文(Search Context)会自动被清除，但是一值保持滚动代价也是很大的，所以当我们不在使用滚动时要尽快使用Clear-Scroll API进行清除。 清除Scroll/** * 清除滚动ID * @param client * @param scrollIdList * @return */ public static boolean clearScroll(Client client, List&lt;String&gt; scrollIdList)&#123; ClearScrollRequestBuilder clearScrollRequestBuilder = client.prepareClearScroll(); clearScrollRequestBuilder.setScrollIds(scrollIdList); ClearScrollResponse response = clearScrollRequestBuilder.get(); return response.isSucceeded(); &#125; /** * 清除滚动ID * @param client * @param scrollId * @return */ public static boolean clearScroll(Client client, String scrollId)&#123; ClearScrollRequestBuilder clearScrollRequestBuilder = client.prepareClearScroll(); clearScrollRequestBuilder.addScrollId(scrollId); ClearScrollResponse response = clearScrollRequestBuilder.get(); return response.isSucceeded(); &#125; 实例public class ScrollsAPI extends ElasticsearchClientBase &#123; private String scrollId; @Test public void testScrolls() throws Exception &#123; SearchResponse scrollResp = client.prepareSearch(&quot;twitter&quot;) .addSort(FieldSortBuilder.DOC_FIELD_NAME, SortOrder.ASC) .setScroll(new TimeValue(60000)) //为了使用 scroll，初始搜索请求应该在查询中指定 scroll 参数，告诉 Elasticsearch 需要保持搜索的上下文环境多长时间（滚动时间） .setQuery(QueryBuilders.termQuery(&quot;user&quot;, &quot;kimchy&quot;)) // Query 查询条件 .setSize(5).get(); //max of 100 hits will be returned for each scroll //Scroll until no hits are returned scrollId = scrollResp.getScrollId(); do &#123; for (SearchHit hit : scrollResp.getHits().getHits()) &#123; //Handle the hit... System.out.println(&quot;&quot; + hit.getSource().toString()); &#125; scrollResp = client.prepareSearchScroll(scrollId).setScroll(new TimeValue(60000)).execute().actionGet(); &#125; while (scrollResp.getHits().getHits().length != 0); // Zero hits mark the end of the scroll and the while loop. &#125; @Override public void tearDown() throws Exception &#123; ClearScrollRequestBuilder clearScrollRequestBuilder = client.prepareClearScroll(); clearScrollRequestBuilder.addScrollId(scrollId); ClearScrollResponse response = clearScrollRequestBuilder.get(); if (response.isSucceeded()) &#123; System.out.println(&quot;成功清除&quot;); &#125; super.tearDown(); &#125;&#125; ScrollsAPI.java 本手册完整实例","categories":[{"name":"Elasticsearch","slug":"es","permalink":"http://test.quanke.name/categories/es/"}],"tags":[{"name":"Elasticsearch","slug":"es","permalink":"http://test.quanke.name/tags/es/"},{"name":"大数据","slug":"bdaga","permalink":"http://test.quanke.name/tags/bdaga/"}],"keywords":[{"name":"Elasticsearch","slug":"es","permalink":"http://test.quanke.name/categories/es/"}]},{"title":"Elasticsearch Java API 搜索之简介（三）","slug":"lasticsearch-Java-API-搜索（三）","date":"2017-12-06T14:25:00.000Z","updated":"2018-01-29T07:18:46.527Z","comments":true,"path":"posts/44811/","link":"","permalink":"http://test.quanke.name/posts/44811/","excerpt":"","text":"欢迎关注http://quanke.name/ 转载请注明出处，谢谢 Elasticsearch Java API 搜索之简介搜索查询，返回查询匹配的结果，搜索一个index / type 或者多个index / type，可以使用 query Java API 作为查询条件，下面是例子： import org.elasticsearch.action.search.SearchResponse;import org.elasticsearch.action.search.SearchType;import org.elasticsearch.index.query.QueryBuilders.*; SearchResponse response = client.prepareSearch(&quot;index1&quot;, &quot;index2&quot;) .setTypes(&quot;type1&quot;, &quot;type2&quot;) .setSearchType(SearchType.DFS_QUERY_THEN_FETCH) .setQuery(QueryBuilders.termQuery(&quot;multi&quot;, &quot;test&quot;)) // Query 查询条件 .setPostFilter(QueryBuilders.rangeQuery(&quot;age&quot;).from(12).to(18)) // Filter 过滤 .setFrom(0).setSize(60).setExplain(true) .get(); 所有的参数都是可选的，下面是最简单的调用： // MatchAll on the whole cluster with all default optionsSearchResponse response = client.prepareSearch().get(); 尽管Java API默认提供QUERY_AND_FETCH 和 DFS_QUERY_AND_FETCH 两种 search types ，但是这种模式应该由系统选择，用户不要手动指定 更多请移步 REST search 文档 如何有任何问题请关注微信公众号给我留言","categories":[{"name":"Elasticsearch","slug":"es","permalink":"http://test.quanke.name/categories/es/"}],"tags":[{"name":"Elasticsearch","slug":"es","permalink":"http://test.quanke.name/tags/es/"},{"name":"大数据","slug":"bdaga","permalink":"http://test.quanke.name/tags/bdaga/"}],"keywords":[{"name":"Elasticsearch","slug":"es","permalink":"http://test.quanke.name/categories/es/"}]},{"title":"多种方式解决spring boot swagger ui使用 nginx 部署后无法使用问题","slug":"种方式解决spring-boot-swagger-ui使用-nginx-部署后无法使用问题","date":"2017-12-05T14:19:00.000Z","updated":"2018-01-29T07:18:46.566Z","comments":true,"path":"posts/21506/","link":"","permalink":"http://test.quanke.name/posts/21506/","excerpt":"","text":"欢迎关注http://quanke.name/ 转载请注明出处，谢谢 spring boot 使用 swagger ui 做接口文档，很是方便 本地测试都没有问题 将一个Spring boot工程部署到生产环境， 配置nginx： server &#123; listen 80; server_name quanke.name; location / &#123; proxy_pass http://127.0.0.1:3101; &#125;&#125; 浏览器中访问： quanke.name, 选中某一接口点击try it out,显示: No Content。 Request URL:http://127.0.0.1:3101/test 而不是 http://quanke.name/test 通过朋友+搜索知道有两种方法解决此问题： 第一种：修改nginx配置文件把server &#123; listen 80; server_name quanke.name; location / &#123; proxy_pass http://127.0.0.1:3101; &#125;&#125; 修改为： server &#123; listen 80; server_name quanke.name; location / &#123; proxy_pass http://127.0.0.1:3101; proxy_set_header Host $host; # 指定host &#125;&#125; 第二种：启动工程时显式添加属性Java 启动的时候指定swagger.v2.host： -Dspringfox.documentation.swagger.v2.host=quanke.name 启动命令实例： java -jar -Dspringfox.documentation.swagger.v2.host=quanke.name /data/app/quanke/api.jar 或者在配置文件（application.properties）中进行配置 如何有任何问题请关注微信公众号给我留言","categories":[{"name":"服务端开发","slug":"service","permalink":"http://test.quanke.name/categories/service/"}],"tags":[{"name":"java","slug":"java","permalink":"http://test.quanke.name/tags/java/"},{"name":"spirng boot","slug":"spirng-boot","permalink":"http://test.quanke.name/tags/spirng-boot/"},{"name":"nginx","slug":"nginx","permalink":"http://test.quanke.name/tags/nginx/"},{"name":"swagger ui","slug":"swagger-ui","permalink":"http://test.quanke.name/tags/swagger-ui/"}],"keywords":[{"name":"服务端开发","slug":"service","permalink":"http://test.quanke.name/categories/service/"}]},{"title":"Elasticsearch Java API 索引的增删改查（二）","slug":"asticsearch-Java-API-索引的增删改查（二）","date":"2017-11-15T12:10:00.000Z","updated":"2018-01-29T07:18:46.437Z","comments":true,"path":"posts/51297/","link":"","permalink":"http://test.quanke.name/posts/51297/","excerpt":"","text":"本节介绍以下 CRUD API： 单文档 APIs Index API Get API Delete API Delete By Query API Update API 多文档 APIs Multi Get API Bulk API Using Bulk Processor Multi Get APIBulk API 注意:所有的单文档的CRUD API，index参数只能接受单一的索引库名称，或者是一个指向单一索引库的alias。 Index APIIndex API 允许我们存储一个JSON格式的文档，使数据可以被搜索。文档通过index、type、id唯一确定。我们可以自己提供一个id，或者也使用Index API 为我们自动生成一个。 这里有几种不同的方式来产生JSON格式的文档(document)： 手动方式，使用原生的byte[]或者String 使用Map方式，会自动转换成与之等价的JSON 使用第三方库来序列化beans，如Jackson 使用内置的帮助类 XContentFactory.jsonBuilder() 手动方式数据格式String json = &quot;&#123;&quot; + &quot;\\&quot;user\\&quot;:\\&quot;kimchy\\&quot;,&quot; + &quot;\\&quot;postDate\\&quot;:\\&quot;2013-01-30\\&quot;,&quot; + &quot;\\&quot;message\\&quot;:\\&quot;trying out Elasticsearch\\&quot;&quot; + &quot;&#125;&quot;; 实例/** * 手动生成JSON */ @Test public void CreateJSON()&#123; String json = &quot;&#123;&quot; + &quot;\\&quot;user\\&quot;:\\&quot;fendo\\&quot;,&quot; + &quot;\\&quot;postDate\\&quot;:\\&quot;2013-01-30\\&quot;,&quot; + &quot;\\&quot;message\\&quot;:\\&quot;Hell word\\&quot;&quot; + &quot;&#125;&quot;; IndexResponse response = client.prepareIndex(&quot;fendo&quot;, &quot;fendodate&quot;) .setSource(json) .get(); System.out.println(response.getResult()); &#125; Map方式Map是key:value数据类型，可以代表json结构. Map&lt;String, Object&gt; json = new HashMap&lt;String, Object&gt;();json.put(&quot;user&quot;,&quot;kimchy&quot;);json.put(&quot;postDate&quot;,new Date());json.put(&quot;message&quot;,&quot;trying out Elasticsearch&quot;); 实例 /** * 使用集合 */ @Test public void CreateList()&#123; Map&lt;String, Object&gt; json = new HashMap&lt;String, Object&gt;(); json.put(&quot;user&quot;,&quot;kimchy&quot;); json.put(&quot;postDate&quot;,&quot;2013-01-30&quot;); json.put(&quot;message&quot;,&quot;trying out Elasticsearch&quot;); IndexResponse response = client.prepareIndex(&quot;fendo&quot;, &quot;fendodate&quot;) .setSource(json) .get(); System.out.println(response.getResult()); &#125; 序列化方式ElasticSearch已经使用了jackson，可以直接使用它把javabean转为json. import com.fasterxml.jackson.databind.*;// instance a json mapperObjectMapper mapper = new ObjectMapper(); // create once, reuse// generate jsonbyte[] json = mapper.writeValueAsBytes(yourbeaninstance); 实例/** * 使用JACKSON序列化 * @throws Exception */ @Test public void CreateJACKSON() throws Exception&#123; CsdnBlog csdn=new CsdnBlog(); csdn.setAuthor(&quot;fendo&quot;); csdn.setContent(&quot;这是JAVA书籍&quot;); csdn.setTag(&quot;C&quot;); csdn.setView(&quot;100&quot;); csdn.setTitile(&quot;编程&quot;); csdn.setDate(new Date().toString()); // instance a json mapper ObjectMapper mapper = new ObjectMapper(); // create once, reuse // generate json byte[] json = mapper.writeValueAsBytes(csdn); IndexResponse response = client.prepareIndex(&quot;fendo&quot;, &quot;fendodate&quot;) .setSource(json) .get(); System.out.println(response.getResult()); &#125; XContentBuilder帮助类方式ElasticSearch提供了一个内置的帮助类XContentBuilder来产生JSON文档 // Index nameString _index = response.getIndex();// Type nameString _type = response.getType();// Document ID (generated or not)String _id = response.getId();// Version (if it&apos;s the first time you index this document, you will get: 1)long _version = response.getVersion();// status has stored current instance statement.RestStatus status = response.status(); 实例/** * 使用ElasticSearch 帮助类 * @throws IOException */ @Test public void CreateXContentBuilder() throws IOException&#123; XContentBuilder builder = XContentFactory.jsonBuilder() .startObject() .field(&quot;user&quot;, &quot;ccse&quot;) .field(&quot;postDate&quot;, new Date()) .field(&quot;message&quot;, &quot;this is Elasticsearch&quot;) .endObject(); IndexResponse response = client.prepareIndex(&quot;fendo&quot;, &quot;fendodata&quot;).setSource(builder).get(); System.out.println(&quot;创建成功!&quot;); &#125; 综合实例 import java.io.IOException; import java.net.InetAddress; import java.net.UnknownHostException; import java.util.Date; import java.util.HashMap; import java.util.Map; import org.elasticsearch.action.index.IndexResponse; import org.elasticsearch.client.transport.TransportClient; import org.elasticsearch.common.settings.Settings; import org.elasticsearch.common.transport.InetSocketTransportAddress; import org.elasticsearch.common.xcontent.XContentBuilder; import org.elasticsearch.common.xcontent.XContentFactory; import org.elasticsearch.transport.client.PreBuiltTransportClient; import org.junit.Before; import org.junit.Test; import com.fasterxml.jackson.core.JsonProcessingException; import com.fasterxml.jackson.databind.ObjectMapper; public class CreateIndex &#123; private TransportClient client; @Before public void getClient() throws Exception&#123; //设置集群名称 Settings settings = Settings.builder().put(&quot;cluster.name&quot;, &quot;my-application&quot;).build();// 集群名 //创建client client = new PreBuiltTransportClient(settings) .addTransportAddress(new InetSocketTransportAddress(InetAddress.getByName(&quot;127.0.0.1&quot;), 9300)); &#125; /** * 手动生成JSON */ @Test public void CreateJSON()&#123; String json = &quot;&#123;&quot; + &quot;\\&quot;user\\&quot;:\\&quot;fendo\\&quot;,&quot; + &quot;\\&quot;postDate\\&quot;:\\&quot;2013-01-30\\&quot;,&quot; + &quot;\\&quot;message\\&quot;:\\&quot;Hell word\\&quot;&quot; + &quot;&#125;&quot;; IndexResponse response = client.prepareIndex(&quot;fendo&quot;, &quot;fendodate&quot;) .setSource(json) .get(); System.out.println(response.getResult()); &#125; /** * 使用集合 */ @Test public void CreateList()&#123; Map&lt;String, Object&gt; json = new HashMap&lt;String, Object&gt;(); json.put(&quot;user&quot;,&quot;kimchy&quot;); json.put(&quot;postDate&quot;,&quot;2013-01-30&quot;); json.put(&quot;message&quot;,&quot;trying out Elasticsearch&quot;); IndexResponse response = client.prepareIndex(&quot;fendo&quot;, &quot;fendodate&quot;) .setSource(json) .get(); System.out.println(response.getResult()); &#125; /** * 使用JACKSON序列化 * @throws Exception */ @Test public void CreateJACKSON() throws Exception&#123; CsdnBlog csdn=new CsdnBlog(); csdn.setAuthor(&quot;fendo&quot;); csdn.setContent(&quot;这是JAVA书籍&quot;); csdn.setTag(&quot;C&quot;); csdn.setView(&quot;100&quot;); csdn.setTitile(&quot;编程&quot;); csdn.setDate(new Date().toString()); // instance a json mapper ObjectMapper mapper = new ObjectMapper(); // create once, reuse // generate json byte[] json = mapper.writeValueAsBytes(csdn); IndexResponse response = client.prepareIndex(&quot;fendo&quot;, &quot;fendodate&quot;) .setSource(json) .get(); System.out.println(response.getResult()); &#125; /** * 使用ElasticSearch 帮助类 * @throws IOException */ @Test public void CreateXContentBuilder() throws IOException&#123; XContentBuilder builder = XContentFactory.jsonBuilder() .startObject() .field(&quot;user&quot;, &quot;ccse&quot;) .field(&quot;postDate&quot;, new Date()) .field(&quot;message&quot;, &quot;this is Elasticsearch&quot;) .endObject(); IndexResponse response = client.prepareIndex(&quot;fendo&quot;, &quot;fendodata&quot;).setSource(builder).get(); System.out.println(&quot;创建成功!&quot;); &#125; &#125; 你还可以通过startArray(string)和endArray()方法添加数组。.field()方法可以接受多种对象类型。你可以给它传递数字、日期、甚至其他XContentBuilder对象。 Get API根据id查看文档： GetResponse response = client.prepareGet(&quot;twitter&quot;, &quot;tweet&quot;, &quot;1&quot;).get(); 更多请查看 rest get API 文档 配置线程operationThreaded 设置为 true 是在不同的线程里执行此次操作 下面的例子是operationThreaded 设置为 false ：GetResponse response = client.prepareGet(&quot;twitter&quot;, &quot;tweet&quot;, &quot;1&quot;) .setOperationThreaded(false) .get(); Delete API根据ID删除： DeleteResponse response = client.prepareDelete(&quot;twitter&quot;, &quot;tweet&quot;, &quot;1&quot;).get(); 更多请查看 delete API 文档 配置线程operationThreaded 设置为 true 是在不同的线程里执行此次操作 下面的例子是operationThreaded 设置为 false ：GetResponse response = client.prepareGet(&quot;twitter&quot;, &quot;tweet&quot;, &quot;1&quot;) .setOperationThreaded(false) .get(); DeleteResponse response = client.prepareDelete(&quot;twitter&quot;, &quot;tweet&quot;, &quot;1&quot;) .setOperationThreaded(false) .get(); Delete By Query API通过查询条件删除 BulkByScrollResponse response = DeleteByQueryAction.INSTANCE.newRequestBuilder(client) .filter(QueryBuilders.matchQuery(&quot;gender&quot;, &quot;male&quot;)) //查询条件 .source(&quot;persons&quot;) //index(索引名) .get(); //执行long deleted = response.getDeleted(); //删除文档的数量 如果需要执行的时间比较长，可以使用异步的方式处理,结果在回调里面获取 DeleteByQueryAction.INSTANCE.newRequestBuilder(client) .filter(QueryBuilders.matchQuery(&quot;gender&quot;, &quot;male&quot;)) //查询 .source(&quot;persons&quot;) //index(索引名) .execute(new ActionListener&lt;BulkByScrollResponse&gt;() &#123; //回调监听 @Override public void onResponse(BulkByScrollResponse response) &#123; long deleted = response.getDeleted(); //删除文档的数量 &#125; @Override public void onFailure(Exception e) &#123; // Handle the exception &#125; &#125;); Update API有两种方式更新索引： 创建 UpdateRequest,通过client发送； 使用 prepareUpdate() 方法； 使用UpdateRequestUpdateRequest updateRequest = new UpdateRequest();updateRequest.index(&quot;index&quot;);updateRequest.type(&quot;type&quot;);updateRequest.id(&quot;1&quot;);updateRequest.doc(jsonBuilder() .startObject() .field(&quot;gender&quot;, &quot;male&quot;) .endObject());client.update(updateRequest).get(); 使用 prepareUpdate() 方法 这里官方的示例有问题，new Script（）参数错误，所以一下代码是我自己写的（2017/11/10） client.prepareUpdate(&quot;ttl&quot;, &quot;doc&quot;, &quot;1&quot;) .setScript(new Script(&quot;ctx._source.gender = \\&quot;male\\&quot;&quot; ,ScriptService.ScriptType.INLINE, null, null))//脚本可以是本地文件存储的，如果使用文件存储的脚本，需要设置 ScriptService.ScriptType.FILE .get();client.prepareUpdate(&quot;ttl&quot;, &quot;doc&quot;, &quot;1&quot;) .setDoc(jsonBuilder() //合并到现有文档 .startObject() .field(&quot;gender&quot;, &quot;male&quot;) .endObject()) .get(); Update by script使用脚本更新文档 UpdateRequest updateRequest = new UpdateRequest(&quot;ttl&quot;, &quot;doc&quot;, &quot;1&quot;) .script(new Script(&quot;ctx._source.gender = \\&quot;male\\&quot;&quot;));client.update(updateRequest).get(); Update by merging documents合并文档 UpdateRequest updateRequest = new UpdateRequest(&quot;index&quot;, &quot;type&quot;, &quot;1&quot;) .doc(jsonBuilder() .startObject() .field(&quot;gender&quot;, &quot;male&quot;) .endObject());client.update(updateRequest).get(); Upsert更新插入,如果存在文档就更新，如果不存在就插入 IndexRequest indexRequest = new IndexRequest(&quot;index&quot;, &quot;type&quot;, &quot;1&quot;) .source(jsonBuilder() .startObject() .field(&quot;name&quot;, &quot;Joe Smith&quot;) .field(&quot;gender&quot;, &quot;male&quot;) .endObject());UpdateRequest updateRequest = new UpdateRequest(&quot;index&quot;, &quot;type&quot;, &quot;1&quot;) .doc(jsonBuilder() .startObject() .field(&quot;gender&quot;, &quot;male&quot;) .endObject()) .upsert(indexRequest); //如果不存在此文档 ，就增加 `indexRequest`client.update(updateRequest).get(); 如果 index/type/1 存在，类似下面的文档： &#123; &quot;name&quot; : &quot;Joe Dalton&quot;, &quot;gender&quot;: &quot;male&quot; &#125; 如果不存在，会插入新的文档： &#123; &quot;name&quot; : &quot;Joe Smith&quot;, &quot;gender&quot;: &quot;male&quot;&#125; Multi Get API一次获取多个文档 MultiGetResponse multiGetItemResponses = client.prepareMultiGet() .add(&quot;twitter&quot;, &quot;tweet&quot;, &quot;1&quot;) //一个id的方式 .add(&quot;twitter&quot;, &quot;tweet&quot;, &quot;2&quot;, &quot;3&quot;, &quot;4&quot;) //多个id的方式 .add(&quot;another&quot;, &quot;type&quot;, &quot;foo&quot;) //可以从另外一个索引获取 .get();for (MultiGetItemResponse itemResponse : multiGetItemResponses) &#123; //迭代返回值 GetResponse response = itemResponse.getResponse(); if (response.isExists()) &#123; //判断是否存在 String json = response.getSourceAsString(); //_source 字段 &#125;&#125; 更多请浏览REST multi get 文档 Bulk APIBulk API，批量插入： import static org.elasticsearch.common.xcontent.XContentFactory.*; BulkRequestBuilder bulkRequest = client.prepareBulk();// either use client#prepare, or use Requests# to directly build index/delete requestsbulkRequest.add(client.prepareIndex(&quot;twitter&quot;, &quot;tweet&quot;, &quot;1&quot;) .setSource(jsonBuilder() .startObject() .field(&quot;user&quot;, &quot;kimchy&quot;) .field(&quot;postDate&quot;, new Date()) .field(&quot;message&quot;, &quot;trying out Elasticsearch&quot;) .endObject() ) );bulkRequest.add(client.prepareIndex(&quot;twitter&quot;, &quot;tweet&quot;, &quot;2&quot;) .setSource(jsonBuilder() .startObject() .field(&quot;user&quot;, &quot;kimchy&quot;) .field(&quot;postDate&quot;, new Date()) .field(&quot;message&quot;, &quot;another post&quot;) .endObject() ) );BulkResponse bulkResponse = bulkRequest.get();if (bulkResponse.hasFailures()) &#123; // process failures by iterating through each bulk response item //处理失败&#125; 使用 Bulk ProcessorBulkProcessor 提供了一个简单的接口，在给定的大小数量上定时批量自动请求 创建BulkProcessor实例首先创建BulkProcessor实例 import org.elasticsearch.action.bulk.BackoffPolicy;import org.elasticsearch.action.bulk.BulkProcessor;import org.elasticsearch.common.unit.ByteSizeUnit;import org.elasticsearch.common.unit.ByteSizeValue;import org.elasticsearch.common.unit.TimeValue; BulkProcessor bulkProcessor = BulkProcessor.builder( client, //增加elasticsearch客户端 new BulkProcessor.Listener() &#123; @Override public void beforeBulk(long executionId, BulkRequest request) &#123; ... &#125; //调用bulk之前执行 ，例如你可以通过request.numberOfActions()方法知道numberOfActions @Override public void afterBulk(long executionId, BulkRequest request, BulkResponse response) &#123; ... &#125; //调用bulk之后执行 ，例如你可以通过request.hasFailures()方法知道是否执行失败 @Override public void afterBulk(long executionId, BulkRequest request, Throwable failure) &#123; ... &#125; //调用失败抛 Throwable &#125;) .setBulkActions(10000) //每次10000请求 .setBulkSize(new ByteSizeValue(5, ByteSizeUnit.MB)) //拆成5mb一块 .setFlushInterval(TimeValue.timeValueSeconds(5)) //无论请求数量多少，每5秒钟请求一次。 .setConcurrentRequests(1) //设置并发请求的数量。值为0意味着只允许执行一个请求。值为1意味着允许1并发请求。 .setBackoffPolicy( BackoffPolicy.exponentialBackoff(TimeValue.timeValueMillis(100), 3))//设置自定义重复请求机制，最开始等待100毫秒，之后成倍更加，重试3次，当一次或多次重复请求失败后因为计算资源不够抛出 EsRejectedExecutionException 异常，可以通过BackoffPolicy.noBackoff()方法关闭重试机制 .build(); BulkProcessor 默认设置 bulkActions 1000 bulkSize 5mb 不设置flushInterval concurrentRequests 为 1 ，异步执行 backoffPolicy 重试 8次，等待50毫秒 增加requests然后增加requests到BulkProcessorbulkProcessor.add(new IndexRequest(&quot;twitter&quot;, &quot;tweet&quot;, &quot;1&quot;).source(/* your doc here */));bulkProcessor.add(new DeleteRequest(&quot;twitter&quot;, &quot;tweet&quot;, &quot;2&quot;)); 关闭 Bulk Processor当所有文档都处理完成，使用awaitClose 或 close 方法关闭BulkProcessor: bulkProcessor.awaitClose(10, TimeUnit.MINUTES); 或 bulkProcessor.close(); 在测试中使用Bulk Processor如果你在测试种使用Bulk Processor可以执行同步方法BulkProcessor bulkProcessor = BulkProcessor.builder(client, new BulkProcessor.Listener() &#123; /* Listener methods */ &#125;) .setBulkActions(10000) .setConcurrentRequests(0) .build();// Add your requestsbulkProcessor.add(/* Your requests */);// Flush any remaining requestsbulkProcessor.flush();// Or close the bulkProcessor if you don&apos;t need it anymorebulkProcessor.close();// Refresh your indicesclient.admin().indices().prepareRefresh().get();// Now you can start searching!client.prepareSearch().get(); 所有实例 已经上传到Git 更多请浏览 spring-boot-starter-es 开源项目 如何有任何问题请关注微信公众号给我留言","categories":[{"name":"Elasticsearch","slug":"es","permalink":"http://test.quanke.name/categories/es/"}],"tags":[{"name":"Elasticsearch","slug":"es","permalink":"http://test.quanke.name/tags/es/"},{"name":"大数据","slug":"bdaga","permalink":"http://test.quanke.name/tags/bdaga/"}],"keywords":[{"name":"Elasticsearch","slug":"es","permalink":"http://test.quanke.name/categories/es/"}]},{"title":"Elasticsearch Java API - 客户端连接(TransportClient，PreBuiltXPackTransportClient)（一）","slug":"Elasticsearch-Java-API-客户端连接，TransportClient，PreBuiltXPackTransportClient（一）","date":"2017-11-13T11:01:00.000Z","updated":"2018-01-29T07:18:46.423Z","comments":true,"path":"posts/39952/","link":"","permalink":"http://test.quanke.name/posts/39952/","excerpt":"","text":"Elasticsearch Java API 客户端连接一个是TransportClient，一个是NodeClient，还有一个XPackTransportClient TransportClient： 作为一个外部访问者，请求ES的集群，对于集群而言，它是一个外部因素。 NodeClient 作为ES集群的一个节点，它是ES中的一环，其他的节点对它是感知的。 XPackTransportClient： 服务安装了 x-pack 插件 重要：客户端版本应该和服务端版本保持一致 TransportClient旨在被Java高级REST客户端取代，该客户端执行HTTP请求而不是序列化的Java请求。 在即将到来的Elasticsearch版本中将不赞成使用TransportClient，建议使用Java高级REST客户端。 上面的警告比较尴尬，但是在 5xx版本中使用还是没有问题的，可能使用rest 客户端兼容性更好做一些。 Elasticsearch Java Rest API 手册 Maven RepositoryElasticsearch Java API包已经上传到 Maven Central 在pom.xml文件中增加： transport 版本号最好就是与Elasticsearch版本号一致。 &lt;dependency&gt; &lt;groupId&gt;org.elasticsearch.client&lt;/groupId&gt; &lt;artifactId&gt;transport&lt;/artifactId&gt; &lt;version&gt;5.6.3&lt;/version&gt;&lt;/dependency&gt; Transport Client不设置集群名称// on startup//此步骤添加IP，至少一个，如果设置了&quot;client.transport.sniff&quot;= true 一个就够了，因为添加了自动嗅探配置TransportClient client = new PreBuiltTransportClient(Settings.EMPTY) .addTransportAddress(new InetSocketTransportAddress(InetAddress.getByName(&quot;host1&quot;), 9300)) .addTransportAddress(new InetSocketTransportAddress(InetAddress.getByName(&quot;host2&quot;), 9300));// on shutdown 关闭clientclient.close(); 设置集群名称Settings settings = Settings.builder() .put(&quot;cluster.name&quot;, &quot;myClusterName&quot;).build(); //设置ES实例的名称TransportClient client = new PreBuiltTransportClient(settings); //自动嗅探整个集群的状态，把集群中其他ES节点的ip添加到本地的客户端列表中//Add transport addresses and do something with the client... 增加自动嗅探配置Settings settings = Settings.builder() .put(&quot;client.transport.sniff&quot;, true).build();TransportClient client = new PreBuiltTransportClient(settings); 其他配置client.transport.ignore_cluster_name //设置 true ，忽略连接节点集群名验证client.transport.ping_timeout //ping一个节点的响应时间 默认5秒client.transport.nodes_sampler_interval //sample/ping 节点的时间间隔，默认是5s 对于ES Client，有两种形式，一个是TransportClient，一个是NodeClient。两个的区别为：TransportClient作为一个外部访问者，通过HTTP去请求ES的集群，对于集群而言，它是一个外部因素。NodeClient顾名思义，是作为ES集群的一个节点，它是ES中的一环，其他的节点对它是感知的，不像TransportClient那样，ES集群对它一无所知。NodeClient通信的性能会更好，但是因为是ES的一环，所以它出问题，也会给ES集群带来问题。NodeClient可以设置不作为数据节点，在elasticsearch.yml中设置，这样就不会在此节点上分配数据。 如果用ES的节点，仁者见仁智者见智。 实例package name.quanke.es.study;import name.quanke.es.study.util.Utils;import org.elasticsearch.action.search.SearchResponse;import org.elasticsearch.client.transport.TransportClient;import org.elasticsearch.common.settings.Settings;import org.elasticsearch.common.transport.InetSocketTransportAddress;import org.elasticsearch.transport.client.PreBuiltTransportClient;import org.junit.After;import org.junit.Before;import java.net.InetAddress;/** * Elasticsearch 5.5.1 的client 和 ElasticsearchTemplate的初始化 * 作为一个外部访问者，请求ES的集群，对于集群而言，它是一个外部因素。 * Created by http://quanke.name on 2017/11/10. */public class ElasticsearchClient &#123; protected TransportClient client; @Before public void setUp() throws Exception &#123; Settings esSettings = Settings.builder() .put(&quot;cluster.name&quot;, &quot;utan-es&quot;) //设置ES实例的名称 .put(&quot;client.transport.sniff&quot;, true) //自动嗅探整个集群的状态，把集群中其他ES节点的ip添加到本地的客户端列表中 .build(); /** * 这里的连接方式指的是没有安装x-pack插件,如果安装了x-pack则参考&#123;@link ElasticsearchXPackClient&#125; * 1. java客户端的方式是以tcp协议在9300端口上进行通信 * 2. http客户端的方式是以http协议在9200端口上进行通信 */ client = new PreBuiltTransportClient(esSettings) .addTransportAddress(new InetSocketTransportAddress(InetAddress.getByName(&quot;192.168.1.10&quot;), 9300)); System.out.println(&quot;ElasticsearchClient 连接成功&quot;); &#125; @After public void tearDown() throws Exception &#123; if (client != null) &#123; client.close(); &#125; &#125; protected void println(SearchResponse searchResponse) &#123; Utils.println(searchResponse); &#125;&#125; 本实例代码已经上传到 Git ElasticsearchClient.java 所有实例 已经上传到Git XPackTransportClient如果 ElasticSearch 服务安装了 x-pack 插件，需要PreBuiltXPackTransportClient实例才能访问 使用Maven管理项目，把下面代码增加到pom.xml; 一定要修改默认仓库地址为https://artifacts.elastic.co/maven ，因为这个库没有上传到Maven中央仓库,如果有自己的 maven ，请配置代理 &lt;project ...&gt; &lt;repositories&gt; &lt;!-- add the elasticsearch repo --&gt; &lt;repository&gt; &lt;id&gt;elasticsearch-releases&lt;/id&gt; &lt;url&gt;https://artifacts.elastic.co/maven&lt;/url&gt; &lt;releases&gt; &lt;enabled&gt;true&lt;/enabled&gt; &lt;/releases&gt; &lt;snapshots&gt; &lt;enabled&gt;false&lt;/enabled&gt; &lt;/snapshots&gt; &lt;/repository&gt; ... &lt;/repositories&gt; ... &lt;dependencies&gt; &lt;!-- add the x-pack jar as a dependency --&gt; &lt;dependency&gt; &lt;groupId&gt;org.elasticsearch.client&lt;/groupId&gt; &lt;artifactId&gt;x-pack-transport&lt;/artifactId&gt; &lt;version&gt;5.6.3&lt;/version&gt; &lt;/dependency&gt; ... &lt;/dependencies&gt; ... &lt;/project&gt; 实例/** * Elasticsearch XPack Client * Created by http://quanke.name on 2017/11/10. */public class ElasticsearchXPackClient &#123; protected TransportClient client; @Before public void setUp() throws Exception &#123; /** * 如果es集群安装了x-pack插件则以此种方式连接集群 * 1. java客户端的方式是以tcp协议在9300端口上进行通信 * 2. http客户端的方式是以http协议在9200端口上进行通信 */ Settings settings = Settings.builder() .put(&quot;xpack.security.user&quot;, &quot;elastic:utan100&quot;) .put(&quot;cluster.name&quot;, &quot;utan-es&quot;) .build(); client = new PreBuiltXPackTransportClient(settings) .addTransportAddress(new InetSocketTransportAddress(InetAddress.getByName(&quot;192.168.1.10&quot;), 9300));// final CredentialsProvider credentialsProvider = new BasicCredentialsProvider();// credentialsProvider.setCredentials(AuthScope.ANY,// new UsernamePasswordCredentials(&quot;elastic&quot;, &quot;utan100&quot;)); System.out.println(&quot;ElasticsearchXPackClient 启动成功&quot;); &#125; @Test public void testClientConnection() throws Exception &#123; System.out.println(&quot;--------------------------&quot;); &#125; @After public void tearDown() throws Exception &#123; if (client != null) &#123; client.close(); &#125; &#125; protected void println(SearchResponse searchResponse) &#123; Utils.println(searchResponse); &#125;&#125; 本实例代码已经上传到 Git ElasticsearchXPackClient.java 所有实例 已经上传到Git 更多请浏览 spring-boot-starter-es 开源项目 如何有任何问题请关注微信公众号给我留言","categories":[{"name":"Elasticsearch","slug":"es","permalink":"http://test.quanke.name/categories/es/"}],"tags":[{"name":"Elasticsearch","slug":"es","permalink":"http://test.quanke.name/tags/es/"},{"name":"Java","slug":"Java","permalink":"http://test.quanke.name/tags/Java/"},{"name":"API","slug":"API","permalink":"http://test.quanke.name/tags/API/"},{"name":"大数据","slug":"bdaga","permalink":"http://test.quanke.name/tags/bdaga/"}],"keywords":[{"name":"Elasticsearch","slug":"es","permalink":"http://test.quanke.name/categories/es/"}]},{"title":"Elasticsearch 5.6 Java API 中文手册 ","slug":"Elasticsearch-5-6-Java-API-中文手册","date":"2017-11-08T09:21:00.000Z","updated":"2018-01-29T07:18:46.424Z","comments":true,"path":"posts/21227/","link":"","permalink":"http://test.quanke.name/posts/21227/","excerpt":"","text":"本手册由 全科 翻译，并且整理成电子书，支持PDF,ePub,Mobi格式，方便大家下载阅读。 不只是官方文档的翻译，还包含使用实例，包含我们使用踩过的坑 阅读地址：https://es.quanke.name 下载地址：https://www.gitbook.com/book/quanke/elasticsearch-java github地址：https://github.com/quanke/elasticsearch-java 编辑：http://quanke.name 编辑整理辛苦，还望大神们点一下star ，抚平我虚荣的心","categories":[{"name":"Elasticsearch","slug":"es","permalink":"http://test.quanke.name/categories/es/"}],"tags":[{"name":"Elasticsearch","slug":"es","permalink":"http://test.quanke.name/tags/es/"},{"name":"Java","slug":"Java","permalink":"http://test.quanke.name/tags/Java/"},{"name":"API","slug":"API","permalink":"http://test.quanke.name/tags/API/"},{"name":"大数据","slug":"bdaga","permalink":"http://test.quanke.name/tags/bdaga/"}],"keywords":[{"name":"Elasticsearch","slug":"es","permalink":"http://test.quanke.name/categories/es/"}]},{"title":"使用PM2运行node.js服务","slug":"使用PM2运行node-js服务","date":"2017-11-06T08:20:00.000Z","updated":"2018-01-29T07:18:46.565Z","comments":true,"path":"posts/19415/","link":"","permalink":"http://test.quanke.name/posts/19415/","excerpt":"","text":"欢迎关注http://quanke.name/ 转载请注明出处，谢谢 GitHub 地址： https://github.com/Unitech/pm2 官网： http://pm2.keymetrics.io/ 为什么需要使用PM2因为node.js 是单进程，进程被杀死后整个服务就跪了，所以需要进程管理工具，但是pm2 远远不止这些。 介绍PM2 是一个带有负载均衡功能的 Node 应用的进程管理器。 当你要把你的独立代码利用全部的服务器上的所有 CPU，并保证进程永远都活着，0 秒的重载， PM2 是完美的。 特性 内建负载均衡（使用Node cluster 集群模块） 后台运行 0秒停机重载(维护升级的时候不需要停机). 具有Ubuntu和CentOS 的启动脚本 停止不稳定的进程（避免无限循环） 控制台检测 提供 HTTP API 远程控制和实时的接口API ( Nodejs 模块,允许和PM2进程管理器交互 ) 安装 首先确保有node.js 的环境 npm install -g pm2 运行pm2 start app.js --name my-api # 命名进程 其他运行方式：pm2 start app.js -i max # 根据有效CPU数目启动最大进程数目pm2 start app.js -i 3 # 启动3个进程pm2 start app.js -x #用fork模式启动 app.js 而不是使用 clusterpm2 start app.js -x -- -a 23 # 用fork模式启动 app.js 并且传递参数 (-a 23)pm2 start app.js --name serverone # 启动一个进程并把它命名为 serveronepm2 stop serverone # 停止 serverone 进程pm2 start app.json # 启动进程, 在 app.json里设置选项pm2 start app.js -i max -- -a 23 #在--之后给 app.js 传递参数pm2 start app.js -i max -e err.log -o out.log # 启动 并 生成一个配置文件，你也可以执行用其他语言编写的app ( fork 模式):pm2 start my-bash-script.sh -x --interpreter bashpm2 start my-python-script.py -x --interpreter python npm 运行pm2 start npm -- start 动一个进程并把它命名为 testpm2 start npm --name test -- start 使用npm install pm2 -g # 命令行安装 pm2 pm2 start app.js -i 4 #后台运行pm2，启动4个app.js # 也可以把&apos;max&apos; 参数传递给 start # 正确的进程数目依赖于Cpu的核心数目pm2 start app.js --name my-api # 命名进程pm2 list # 显示所有进程状态pm2 monit # 监视所有进程pm2 logs # 显示所有进程日志pm2 stop all # 停止所有进程pm2 restart all # 重启所有进程pm2 reload all # 0秒停机重载进程 (用于 NETWORKED 进程)pm2 stop 0 # 停止指定的进程pm2 restart 0 # 重启指定的进程pm2 startup # 产生 init 脚本 保持进程活着pm2 web # 运行健壮的 computer API endpoint (http://localhost:9615)pm2 delete 0 # 杀死指定的进程pm2 delete all # 杀死全部进程 参考 https://www.douban.com/note/314200231/ https://stackoverflow.com/questions/31579509/can-pm2-run-an-npm-start-script","categories":[{"name":"node.js","slug":"node","permalink":"http://test.quanke.name/categories/node/"}],"tags":[{"name":"PM2","slug":"PM2","permalink":"http://test.quanke.name/tags/PM2/"},{"name":"node.js 运行","slug":"node-js-运行","permalink":"http://test.quanke.name/tags/node-js-运行/"}],"keywords":[{"name":"node.js","slug":"node","permalink":"http://test.quanke.name/categories/node/"}]},{"title":"swagger-edit写接口文档神器的部署和使用","slug":"swagger-edit部署和使用","date":"2017-11-06T08:18:00.000Z","updated":"2018-01-29T07:18:46.551Z","comments":true,"path":"posts/41016/","link":"","permalink":"http://test.quanke.name/posts/41016/","excerpt":"","text":"欢迎关注http://quanke.name/ 转载请注明出处，谢谢 介绍swagger 是一套开源的API设计工具，包括Swagger UI，Swagger Editor等。 其中Swagger Editor是个WEB小程序，它可以让你用YAML来定义你的接口规范，并实时验证和现实成接口文档。 我们主要使用Swagger Editor 编写接口文档，在线 Swagger Editor 也是可以使用的，但是访问速度在国内有点慢，所以为了效率，自己在服务器搭建一套服务 下载直接git clone 最新代码： git clone https://github.com/swagger-api/swagger-editor.git 安装 首先确保有node.js 的环境 cd swagger-editonpm install 安装 PM2 ,如果不会PM2，请查看 《使用PM2运行node.js服务》 运行使用PM2运行 pm2 start npm -- start 使用访问： http://192.168.2.52:3001/ 参考： http://blog.csdn.net/wangmeng951011/article/details/67640375","categories":[{"name":"使用","slug":"use","permalink":"http://test.quanke.name/categories/use/"}],"tags":[{"name":"接口文档","slug":"api","permalink":"http://test.quanke.name/tags/api/"},{"name":"swagger-api","slug":"swagger-api","permalink":"http://test.quanke.name/tags/swagger-api/"},{"name":"swagger-edit","slug":"swagger-edit","permalink":"http://test.quanke.name/tags/swagger-edit/"}],"keywords":[{"name":"使用","slug":"use","permalink":"http://test.quanke.name/categories/use/"}]},{"title":"elasticsearch5xx使用logstash同步mysql","slug":"elasticsearch5xx使用logstash同步mysql","date":"2017-11-06T07:53:00.000Z","updated":"2018-01-29T07:18:46.513Z","comments":true,"path":"posts/108/","link":"","permalink":"http://test.quanke.name/posts/108/","excerpt":"","text":"欢迎关注http://quanke.name/ 转载请注明出处，谢谢 安装下载logstash下载地址：https://www.elastic.co/downloads/logstash 当时我下载的是5.6.3版本 https://artifacts.elastic.co/downloads/logstash/logstash-5.6.3.tar.gz 解压：tar -zxvf logstash-5.6.3.tar.gz 进入安装目录 运行： bin/logstash -e &apos;input &#123; stdin &#123; &#125; &#125; output &#123; stdout &#123;&#125; &#125;&apos; 等待几秒钟 出现 The stdin plugin is now waiting for input: 然后输入 hello world 得到类似的结果2017-10-30T02:49:59.005Z test-env hello world 安装logstash-input-jdbc插件1.安装 ruby 和 rubygems（注意：需要 ruby 的版本在 1.8.7 以上） yum install -y ruby rubygems 检查 ruby 版本： ruby -v ruby 1.8.7 (2013-06-27 patchlevel 374) [x86_64-linux] 替换国内的镜像 gem sources --remove http://rubygems.org/gem sources -a http://gems.ruby-china.org/ 验证是否成功 gem sources -l *** CURRENT SOURCES ***http://rubygems.org/http://gems.ruby-china.org/ 修改Gemfile的数据源地址 vim Gemfile 修改 source 的值 为： &quot;https://gems.ruby-china.org/&quot; vim Gemfile.jruby-1.9.lock 找到 remote 修改它的值为：https://gems.ruby-china.org/ 开始安装: ./bin/logstash-plugin install --no-verify logstash-input-jdbc Installing logstash-input-jdbcInstallation successful 使用配置语法最基本的配置文件定义，必须包含input 和 output。如果需要对数据进操作，则需要加上filter段 配置 java mysql 连接驱动 mysql-connector-java-5.1.42-bin.jar https://dev.mysql.com/get/Downloads/Connector-J/mysql-connector-java-5.1.42.tar.gz input &#123; stdin &#123; &#125; jdbc &#123; jdbc_connection_string =&gt; &quot;jdbc:mysql://dbs1:3306/db2_utan_cs&quot; jdbc_user =&gt; &quot;root&quot; jdbc_password =&gt; &quot;123456&quot; jdbc_driver_library =&gt; &quot;/data/arrow/logstash/mysql-connector-java-5.1.42-bin.jar&quot; jdbc_driver_class =&gt; &quot;com.mysql.jdbc.Driver&quot; jdbc_paging_enabled =&gt; &quot;true&quot; jdbc_page_size =&gt; &quot;50000&quot; statement =&gt; &quot;SELECT * FROM crawler_data WHERE id &gt; (SELECT MAX(t1.id) FROM db2_utan_cs.crawler_data AS t1)-70000 AND updatetime &gt; :sql_last_value&quot; use_column_value =&gt; true tracking_column =&gt; &quot;updatetime&quot; schedule =&gt; &quot;* * * * *&quot; type =&gt; &quot;baby_crawler&quot; &#125;&#125;filter &#123; mutate &#123; remove_field =&gt; [ &quot;@timestamp&quot;, &quot;@version&quot;, &quot;id&quot; ] &#125;&#125; output &#123; elasticsearch &#123; hosts =&gt; &quot;192.168.1.21:9201&quot; index =&gt; &quot;baby_crawler_b&quot; document_id =&gt; &quot;%&#123;uniquekey&#125;&quot; &#125; stdout &#123; codec =&gt; json_lines &#125;&#125; 启动方式# 通过手动指定配置文件启动 /bin/logstash -f /etc/logstash/conf.d/nginx_logstash.conf # 以daemon方式运行，则在指令后面加一个 &amp; 符号 /bin/logstash -f /etc/logstash/conf.d/nginx_logstash.conf &amp; # 如果是通过rpm包安装的logstash则可以使用自带的脚本启动 /etc/init.d/logstash start # 通过这种方式启动，logstash会自动加载 /etc/logstash/conf.d/ 下的配置文件 参考http://tchuairen.blog.51cto.com/3848118/1840596/","categories":[{"name":"大数据","slug":"bdata","permalink":"http://test.quanke.name/categories/bdata/"}],"tags":[{"name":"logstash","slug":"logstash","permalink":"http://test.quanke.name/tags/logstash/"},{"name":"elasticsearch","slug":"elasticsearch","permalink":"http://test.quanke.name/tags/elasticsearch/"},{"name":"mysql","slug":"mysql","permalink":"http://test.quanke.name/tags/mysql/"}],"keywords":[{"name":"大数据","slug":"bdata","permalink":"http://test.quanke.name/categories/bdata/"}]},{"title":"已有Android工程 集成React Native 的那些事","slug":"已有Android工程-集成React-Native-的那些事","date":"2017-02-28T15:03:00.000Z","updated":"2018-01-29T07:18:46.571Z","comments":true,"path":"posts/27127/","link":"","permalink":"http://test.quanke.name/posts/27127/","excerpt":"","text":"欢迎关注http://quanke.name/ 转载请注明出处，谢谢 2017年2月27日，天气晴，我永远记得这天，我心潮澎湃，因为终于把优谈TOP 集成了React Native，从去年开始，公司陆陆续续的集成和学习React Native，通过demo的形式，写了不少组件和API，也能和后端调通，也多次，多个人尝试把优谈TOP集成React Native，但是每次都是失败的，因为缺少经验，不能直接通过错误判断原因，只能通过Google查找各种资料，慢慢解决，下面记录了我们，优谈TOP 原生 集成React Native 的那些事。也许也是你的那些事？ 常规思路：通过百度搜索 已有Android工程集成ReactNative 出现一大堆教程，大部分教程都是通过在原来的基础上增加React Native的支持，比如这个：《Android之原生项目集成React Native》 ，这也是官方推荐的集成方式，我也推荐这个，只是我这样，一直报错，有一个启动 MainaAtivity的错，一直过不去，所以我就换一种思路。。。 在React Native基础上增加原生开始通过官方文档安装和初始化React Native项目。 创建和运行React Native 项目react-native init UtanTopcd UtanTopreact-native run-android 如果没有错,再继续。如果有错，说明你环境都没有安装好，哈哈。请参考环境安装文档 恭喜你，第一步搞定了。接下来，巨坑的地方要来了。 把原生的 build.gradle 文件先集成进去这一步比较简单，就是把gradle相关文件复制替换就可以了，你想的好简单哈。。。 我建议： 首先把原项目的gradle相关文件复制到新建的React Native项目，不要破坏原来的React Native项目的配置。 如果原生项目里有Module，先不要把Module导入，为了保险，把最简单的导入。 修改Root 目录下的build.gradleallprojects &#123; repositories &#123; mavenLocal() jcenter() maven &#123; url &quot;http://192.168.1.205:8081/repository/utancenter/&quot; &#125; maven &#123; // All of React Native (JS, Obj-C sources, Android binaries) is installed from npm url &quot;$rootDir/../node_modules/react-native/android&quot; &#125; &#125;&#125; 如果有其他maven仓库直接这么写就可以了。 配置app目录下的build.gradlebuildTypes &#123;// release &#123;// // 不显示Log// buildConfigField &quot;boolean&quot;, &quot;LOG_DEBUG&quot;, &quot;false&quot;//// minifyEnabled enableProguardInReleaseBuilds// zipAlignEnabled true// shrinkResources true// proguardFiles getDefaultProguardFile(&apos;proguard-android.txt&apos;), &apos;proguard-project.txt&apos;// signingConfig signingConfigs.release//// applicationVariants.all &#123; variant -&gt;// variant.outputs.each &#123; output -&gt;// def outputFile = output.outputFile// if (outputFile != null &amp;&amp; outputFile.name.endsWith(&apos;.apk&apos;)) &#123;//// //if (&quot;woman&quot;.equals(WOMAN))&#123;// // def fileName = &quot;WomanTop_v$&#123;defaultConfig.versionName&#125;_$&#123;variant.productFlavors[0].name&#125;.apk&quot;// //output.outputFile = new File(outputFile.parent+File.separator+&quot;v&quot;+defaultConfig.versionName, fileName)// //&#125; else &#123;// def fileName = &quot;UtanTop_v$&#123;defaultConfig.versionName&#125;_$&#123;variant.productFlavors[0].name&#125;.apk&quot;// output.outputFile = new File(outputFile.parent + File.separator + &quot;v&quot; + defaultConfig.versionName, fileName)// //&#125;////// &#125;// &#125;// &#125;// &#125; release &#123; minifyEnabled enableProguardInReleaseBuilds proguardFiles getDefaultProguardFile(&quot;proguard-android.txt&quot;), &quot;proguard-rules.pro&quot; &#125; &#125; 贴这个的意思就是先把打渠道包的去掉，使用React Native生成的配置，之后打渠道包在说，记得把下面几段也要先注释掉。 // // 多渠道打包// productFlavors &#123;// T1 &#123;&#125;// T2 &#123;&#125;// T3 &#123;&#125;//// &#125;//// productFlavors.all &#123; flavor -&gt;// flavor.manifestPlaceholders = [CHANNEL_VALUE: name]// &#125; 如果集成友盟的多渠道包，还需要在AndroidManifest.xml中注释掉。 &lt;meta-data android:name=&quot;UMENG_APPKEY&quot; android:value=&quot;$&#123;UMENG_APPKEY&#125;&quot; /&gt; 在这个时候我们还没集成源码，再执行： react-native run-android 如果编译通过，恭喜你，如果没有过那是正常的，因为还有一个坑。 我的报错信息是 * What went wrong:Execution failed for task &apos;:app:packageAllDebugClassesForMultiDex&apos;.&gt; java.util.zip.ZipException: duplicate entry: bolts/AggregateException.class 是因为导入了重复的条目。 可能是在某些某些gradle版本才有吧。。。 我的解决方法： compile(&apos;com.facebook.fresco:fresco:0.10.0&apos;) &#123; exclude group: &apos;com.parse.bolts&apos;, module: &apos;bolts-android&apos;&#125;compile (&apos;com.facebook.fresco:animated-gif:0.10.0&apos;)&#123; exclude group: &apos;com.parse.bolts&apos;, module: &apos;bolts-android&apos;&#125; 这时候再执行： react-native run-android 现在问题应该不大了，按道理可以运行起来了，反正我的运行起来了，但是还没有加入源码。。。 现在就把java res libs assets 目录下的文件和 AndroidManifest.xml 复制到React Native项目中。把MainApplication 集成你原生项目的Application 一般项目都会自定一个Application public class MainApplication extends UtanToutiaoApp implements ReactApplication &#123; private final ReactNativeHost mReactNativeHost = new ReactNativeHost(this) &#123; @Override public boolean getUseDeveloperSupport() &#123; return BuildConfig.DEBUG; &#125; @Override protected List&lt;ReactPackage&gt; getPackages() &#123; return Arrays.&lt;ReactPackage&gt;asList( new MainReactPackage() ); &#125; &#125;; @Override public ReactNativeHost getReactNativeHost() &#123; return mReactNativeHost; &#125; @Override public void onCreate() &#123; super.onCreate(); SoLoader.init(this, /* native exopackage */ false); &#125;&#125; 注意：不要把MainActivity MainApplication ,文件覆盖了。 再执行： react-native run-android 应该可以成功了，如果默认启动的是MainActivity，那展示的就是React Native 界面，如果默认不是MainActivity，那就通过下面的方式启动。 Intent i = new Intent(context, MainReactActivity.class); context.startActivity(i); 到这里我反正就ok了，不知道你ok了没？ 如果不OK ，请留言，一起探讨。。 还有我在学习和使用React Native 之后也会贴出来供大伙参考。。请关注 quanke","categories":[{"name":"React Native","slug":"rn","permalink":"http://test.quanke.name/categories/rn/"}],"tags":[{"name":"React Native","slug":"rn","permalink":"http://test.quanke.name/tags/rn/"},{"name":"React","slug":"React","permalink":"http://test.quanke.name/tags/React/"}],"keywords":[{"name":"React Native","slug":"rn","permalink":"http://test.quanke.name/categories/rn/"}]},{"title":"Android Gradle 相同应用多包名打包，实现测试发布包分离，不同服务器地址以生成不同安装包","slug":"Android-Gradle-相同应用多包名打包，实现测试发布包分离，不同服务器地址以生成不同安装包","date":"2017-02-22T16:07:42.000Z","updated":"2018-01-29T07:18:46.428Z","comments":true,"path":"posts/55306/","link":"","permalink":"http://test.quanke.name/posts/55306/","excerpt":"","text":"欢迎关注http://quanke.name/ 转载请注明出处，谢谢 Android Gradle 相同应用多包名打包，实现测试发布包分离，不同服务器地址以生成不同安装包简介：公司的新需求：同一份代码打出另一个包名的apk，即包名不同、名称不同的两个apk。因为市场是识别包名的，所有可以相同的代码可以发布多个APP，以便于测试什么样的名字被用户接受（本人不太认同这种观点，这里只谈技术），可以在同一个手机同时安装测试包和发布包（大部分测试的接口地址与发布的接口地址是不一样的，还有一些公司还有开发的接口），方便测试 我经过多方渠道发现大致有一下三种方法： 通过ant打多包名应用 建立多个与“main”同级的文件夹，修改清单文件及build.gradle以达到打多包名效果 通过修改build.gradle文件的applicationId达到打多包名的效果，原理与第二种方法但比较简单 因为是新手，对ant并不太了解，原理也不太清楚，为了赶时间所以直接选择了第二种与第三种方法，经过测试发现第三种方法要更加简单的多，所以最后直接使用了第三种方法，以下为详解。 因为要修改的是build.gradle文件而该文件一经修改就要重新编译，用过史丢丢的童鞋应该都清楚等待编译完成是是件多么蛋疼的事情所以建议大家一次性修改完成以便节约开发时间。 上面已经说过该方法主要是通过修改build.gradle文件的applicationId达到打多包名的效果的，下面便粘出本人代码供大家参考。 productFlavors &#123; app_one &#123; applicationId &quot;com.example.app1&quot; manifestPlaceholders = [ app_name:&quot;测试-1&quot; ] &#125; app_two &#123; applicationId &quot;com.example.app2&quot; manifestPlaceholders = [ app_name:&quot;测试-2&quot; ] &#125; app_three &#123; applicationId &quot;com.example.app3&quot; manifestPlaceholders = [ app_name:&quot;测试-3&quot; ] &#125; &#125; 是不是感觉这个方法很眼熟？没错就是多渠道打包的地方，通过添加这段代码后需要用到gradle面板进行打包，得到app_one 通过查看包名发现它的包名为 com.example.app1 显示的名称也为 测试-1，app_two 与 app_three 效果等同，至此已经完成多包名打包，且通过同一份代码打出了不同包名、不同名称的三个应用，而需求也达到了。 可能有的朋友会问如果还需要其他的渠道包怎么办，如果有10的渠道而又要打包两个不同的应用那岂不是要写20个类似于app_one的东西，那不是要很麻烦？没错我正好也碰到了这种情况，经过多次研究测试发现并没有那么麻烦，只需设定一个默认的包名、应用名即可，废话不多说，直接贴代码。 defaultConfig &#123; if (PACKAGE == &quot;one&quot;) &#123; applicationId &quot;com.example.app1&quot; manifestPlaceholders = [ app_name:&quot;测试-1&quot; ] &#125; else &#123; applicationId &quot;com.example.app2&quot; manifestPlaceholders = [ app_name:&quot;测试-2&quot; ] &#125; minSdkVersion 14 targetSdkVersion 23 versionCode 1 versionName &quot;1.0&quot; &#125; buildTypes &#123; release &#123; minifyEnabled false proguardFiles getDefaultProguardFile(&apos;proguard-android.txt&apos;), &apos;proguard-rules.pro&apos; &#125; &#125; productFlavors &#123; app_one &#123;&#125; app_two &#123;&#125; app_three &#123;&#125; &#125; 嗯，就是这样，在defaultConfig里面设置一个默认的包名与应用名就可以了。 好了，到了这一步我们就要用到另一个神奇的文件了 看看你的工程根目录下得这个东西，没错就是它，这里我设置了一个字段“PACKAGE”，即告诉Studio我想要什么包，到这里相信大家也就明白我写的判断的目的了。 PACKAGE=one 只要通过修改这一字段为“one”，然后通过打包后就可以得到三个“测试-1”的app_one、app_two、app_three的apk文件了，同理将其修改为其他字段即可打出其他包名、应用名的应用了。但是转到本人公司项目后发现这种方法竟然失灵了，即修改 properties 文件内的字段后得不到我想要的包，经过探索发现可能是与项目工程的大小有关，改完重启后就可以了。当然还有另一个最重要的地方 &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&lt;manifest xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot; package=&quot;com.example.morepackagenametest&quot;&gt; &lt;application android:allowBackup=&quot;true&quot; android:icon=&quot;@mipmap/ic_launcher&quot; android:label=&quot;$&#123;app_name&#125;&quot; android:supportsRtl=&quot;true&quot; android:theme=&quot;@style/AppTheme&quot;&gt; &lt;activity android:name=&quot;.MainActivity&quot;&gt; &lt;intent-filter&gt; &lt;action android:name=&quot;android.intent.action.MAIN&quot; /&gt; &lt;category android:name=&quot;android.intent.category.LAUNCHER&quot; /&gt; &lt;/intent-filter&gt; &lt;/activity&gt; &lt;/application&gt;&lt;/manifest&gt; 不同服务器地址以生成不同安装包方法类似，我这里不细说，有问题请留言 就是这里了，即之前定义的名字赋给应用了，在这里大家要注意一下在该项目的其他 model 内的清单文件里最好不要写 android：label 这句了，否则会报错的，至于是什么错一眼就可以看到了，当然如果报错了有两个方法： 删掉其他 model 内清单文件下application的 label 属性 通过在 application 下添加 tools:replace=&quot;android:label&quot; 属性解决 好了，打完收工。期待大神的批评指导。 欢迎关注http://quanke.name/ 转载请注明出处，谢谢 此文同事编写，此后会增加不同服务器地址以生成不同安装包的demo 原文：http://blog.csdn.net/qq_33673284/article/details/52875696 最后附上资源下载地址 Android 多包名打包应用 供各位参考","categories":[{"name":"android开发","slug":"android","permalink":"http://test.quanke.name/categories/android/"}],"tags":[{"name":"Gradle","slug":"Gradle","permalink":"http://test.quanke.name/tags/Gradle/"},{"name":"Android多渠道打包","slug":"android-pg","permalink":"http://test.quanke.name/tags/android-pg/"}],"keywords":[{"name":"android开发","slug":"android","permalink":"http://test.quanke.name/categories/android/"}]},{"title":"一个老司机工程师整理的自动化测试资料","slug":"一个老司机工程师整理的自动化测试资料","date":"2017-02-22T16:05:15.000Z","updated":"2018-01-29T07:18:46.549Z","comments":true,"path":"posts/16982/","link":"","permalink":"http://test.quanke.name/posts/16982/","excerpt":"","text":"欢迎关注http://quanke.name/ 转载请注明出处，谢谢 Python教程 http://www.liaoxuefeng.com/wiki/001374738125095c955c1e6d8bb493182103fac9270762a000 Appium：http://appium.io/slate/en/master/# Appium 中文 Appium API 文档https://testerhome.com/topics/3144 Appium移动自动化测试（虫师写的系列，质量高）http://www.cnblogs.com/fnng/p/4540731.html Robot Framework +Appium的简单教程及实例http://blog.csdn.net/xyh421/article/details/52119872 Python + Appium+ IOS自动化测试http://blog.csdn.net/temanm/article/details/49641133 Saucelabs+Java+TestNG+Appium+Maven+Git+Jenkins+ReportNG for Android 自动化测试http://blog.csdn.net/wanglin_lin/article/details/51931728 Selenium 2 Selenium 2 入门http://www.ibm.com/developerworks/cn/web/wa-selenium2/ Robot Framework自动化测试 Robot Framework自动化测试（一）—第一个脚本http://www.cnblogs.com/fnng/p/3871712.html Robot Framework自动化测试 —视频与教程免费分享（里面有 PDF 质量非常高）http://www.cnblogs.com/fnng/p/4333977.html Jenkins+robotframework+svn持续集成环境配置http://lijunwei1228ok.blog.163.com/blog/static/97383797201407113453672/ 这个是一个程序员学习自动化测试的一个过程和资料，之后会有一些原创内容，欢迎关注 如果你想零基础开始 从入门到精通 学习软件测试，建议花几块钱买视频教程 https://item.taobao.com/item.htm?id=544901106180","categories":[{"name":"自动化测试","slug":"autotest","permalink":"http://test.quanke.name/categories/autotest/"}],"tags":[{"name":"自动化测试","slug":"autotest","permalink":"http://test.quanke.name/tags/autotest/"},{"name":"软件测试","slug":"test","permalink":"http://test.quanke.name/tags/test/"}],"keywords":[{"name":"自动化测试","slug":"autotest","permalink":"http://test.quanke.name/categories/autotest/"}]},{"title":"APP版本管理SDK项目实战-准备篇","slug":"APP版本管理SDK项目实战-准备篇","date":"2016-10-26T12:42:19.000Z","updated":"2018-01-29T07:18:46.422Z","comments":true,"path":"posts/47009/","link":"","permalink":"http://test.quanke.name/posts/47009/","excerpt":"","text":"欢迎关注http://quanke.name/ 转载请注明出处，谢谢 因为友盟APP版本管理服务关闭（这是官方通知：http://bbs.umeng.com/thread-14590-1-1.html ），我计划做一个类似友盟的APP版本管理的功能，开放SDK，方便大家使用，我会把开发过程的思路分享给大家。 项目简介：版本管理项目我觉得对于所有的APP都是需要的，前期希望能做到和友盟一样。支持自动更新、手动更新、静默更新、强制更新、断点续传、忽略版本，服务端开放RESTFul的API，支持WEB管理页面，文件存储对接七牛，之后会支持各种存储 整个项目会涉及到API设计、移动端SDK开发、服务端开发、服务器选型、我打算全部自己一个人搞定 API我打算采用RESTFul架构，使用swagger在线调试API，分别用POST、PUT、GET、DELETE方法对资源做CURD操作。使用RESTFul的难点在于如何定义好各种资源的表述，即URI的定义。 SDK开发则打算第一版只用原生实现，优先Android SDK开发，之后再开发IOS SDK。 服务端开发准备使用最经典的SSM，数据库使用最最最经典的MySQL。 WEB管理后台使用Bootstrap响应式后台管理系统meadmin模板 服务器先自己本地开发，之后考虑阿里云或者其他。 功能需求整理：SDK: 自动更新 手动更新 静默更新 强制更新 断点续传 忽略版本 服务端： web管理 七牛存储 多个APP管理 渠道包支持 统计 写在最后：因为是SDK，管理使用模板，所以没有原型设计，功能确定好，就可以设计API了。","categories":[{"name":"项目实战","slug":"project","permalink":"http://test.quanke.name/categories/project/"}],"tags":[{"name":"SDK","slug":"SDK","permalink":"http://test.quanke.name/tags/SDK/"},{"name":"Android","slug":"Android","permalink":"http://test.quanke.name/tags/Android/"},{"name":"JavaEE","slug":"JavaEE","permalink":"http://test.quanke.name/tags/JavaEE/"},{"name":"IOS","slug":"IOS","permalink":"http://test.quanke.name/tags/IOS/"},{"name":"Spring Boot","slug":"Spring-Boot","permalink":"http://test.quanke.name/tags/Spring-Boot/"}],"keywords":[{"name":"项目实战","slug":"project","permalink":"http://test.quanke.name/categories/project/"}]},{"title":"Android DownloadManager ERROR_UNKNOWN 在API 17 巨坑完美解决","slug":"Android-DownloadManager-ERROR-UNKNOWN-在API-17-巨坑完美解决","date":"2016-10-26T12:36:20.000Z","updated":"2018-01-29T07:18:46.418Z","comments":true,"path":"posts/42104/","link":"","permalink":"http://test.quanke.name/posts/42104/","excerpt":"","text":"欢迎关注http://quanke.name/ 转载请注明出处，谢谢 现在做了一个下载，为了兼容性直接使用Android Sdk 自带的 DownloadManager 开发，在其他手机上都是OK，只有在有一台vivo上不行。 我尝试使用vivo系统浏览器去下载这个链接，也是OK的，这个排除了网络问题和系统下载的bug的问题。 尝试去找错误给我返回一个ERROR_UNKNOWN,完全SB了，此路不通。 尝试换一个链接去下载，居然也是OK的，所以确定了是链接的问题，链接有什么问题？我对比了一下，除了下载失败链接里包含了中括号[],其他也没有什么不一样的，所以我尝试着使用%5B、%5D 替换 [],居然好了。这也太奇葩了吧。。。 url = url.replace(&quot;[&quot;,&quot;%5B&quot;).replace(&quot;]&quot;,&quot;%5D&quot;); 之后我去Google了一下，搞明白了，原来Android系统在18之前有这么一个问题，之后修复了。 最终解决： if(Build.VERSION.SDK_INT&lt;=Build.VERSION_CODES.JELLY_BEAN_MR2)&#123; uri = uri.replace(&quot;[&quot;,&quot;%5B&quot;).replace(&quot;]&quot;,&quot;%5D&quot;); &#125; 参考： http://stackoverflow.com/questions/37976748/downloadmanager-fails-with-error-unknown-on-api-17","categories":[{"name":"android开发","slug":"android","permalink":"http://test.quanke.name/categories/android/"}],"tags":[{"name":"android","slug":"android","permalink":"http://test.quanke.name/tags/android/"}],"keywords":[{"name":"android开发","slug":"android","permalink":"http://test.quanke.name/categories/android/"}]},{"title":"Android Studio Service AIDL 详解","slug":"Android-Studio-Service-AIDL-详解","date":"2016-07-22T15:35:30.000Z","updated":"2018-01-29T07:18:46.431Z","comments":true,"path":"posts/52572/","link":"","permalink":"http://test.quanke.name/posts/52572/","excerpt":"","text":"欢迎关注http://quanke.name/ 转载请注明出处，谢谢 公司产品之前IM这块存在很多问题，消息到达率低，加上协议上有些问题，丢消息频繁，所以需要重构IM，AIDL不能解决以上问题。好吧！那AIDL可以解决什么问题？什么是AIDL？ 什么是AIDL？AIDL是 Android Interface definition language的缩写，它是一种Android内部进程通信接口的描述语言，通过它我们可以定义进程间的通信接口 AIDL可以解决什么问题？ 可以实现多个应用程序共享同一个Service的功能，比如：IM服务可以提供给多个APP使用，先在推送基本都是采取这种方案 可以跨进程调用服务里的方法 Android Studio AIDL 实战大部分文章介绍都是在eclipse下介绍的，现在 Android Studio 作为开发工具比较普及了，所以我在Android Studio 下介绍（其实区别不大）。 言归正传，我们需要使用Android Studio实现一个远程Service，并且建立AIDL进行通信。 搭建了简单的Service框架1.继承Service package name.quanke.aidldemo;import android.app.Service;import android.content.Intent;import android.os.IBinder;/** * * Created by http://quanke.name on 16/7/23. */public class PushService extends Service &#123; public PushService() &#123; &#125; @Override public IBinder onBind(Intent intent) &#123; return new LibHandler(); &#125; @Override public boolean onUnbind(Intent intent) &#123; return super.onUnbind(intent); &#125;&#125; 2.在AndroidManifest.xml里注册 &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&lt;manifest xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot; package=&quot;name.quanke.aidldemo&quot;&gt; &lt;application android:allowBackup=&quot;true&quot; android:icon=&quot;@mipmap/ic_launcher&quot; android:label=&quot;@string/app_name&quot; android:name=&quot;.App&quot; android:supportsRtl=&quot;true&quot; android:theme=&quot;@style/AppTheme&quot;&gt; &lt;activity android:name=&quot;.MainActivity&quot;&gt; &lt;intent-filter&gt; &lt;action android:name=&quot;android.intent.action.MAIN&quot;/&gt; &lt;category android:name=&quot;android.intent.category.LAUNCHER&quot;/&gt; &lt;/intent-filter&gt; &lt;/activity&gt; &lt;service android:name=&quot;.PushService&quot; android:enabled=&quot;true&quot; android:process=&quot;:push&quot; android:exported=&quot;true&quot;&gt; &lt;/service&gt; &lt;/application&gt;&lt;/manifest&gt; 建立AIDL1.创建AIDL文件夹 2.创建AIDL文件 3.编写AIDL文件// IHandler.aidlpackage name.quanke.aidldemo;// Declare any non-default types here with import statementsinterface IHandler &#123; void connect();&#125; 4.AIDL文件 生成接口 生成后的样子 5.编写客户端 ServiceConnectionpackage name.quanke.aidldemo;import android.app.Application;import android.content.ComponentName;import android.content.Context;import android.content.Intent;import android.content.ServiceConnection;import android.os.IBinder;import android.os.RemoteException;import android.util.Log;/** * Created by quanke on 16/7/23. */public class PushManager &#123; private static final String TAG = &quot;PushManager.class&quot;; private IHandler iHandler; private static PushManager ourInstance = new PushManager(); public static PushManager getInstance() &#123; return ourInstance; &#125; private PushManager() &#123; &#125; public void init(Application app)&#123; Intent binderIntent = new Intent(app,PushService.class); app.bindService(binderIntent, serviceConnection, Context.BIND_AUTO_CREATE); &#125; public void connect()&#123; try &#123; //通过AIDL远程调用 Log.d(TAG,&quot;++start Remote++&quot;); iHandler.connect(); &#125; catch (RemoteException e) &#123; e.printStackTrace(); &#125; &#125; private ServiceConnection serviceConnection = new ServiceConnection() &#123; @Override public void onServiceConnected(ComponentName name, IBinder service) &#123; iHandler = IHandler.Stub.asInterface(service); //连接成功调动 &#125; @Override public void onServiceDisconnected(ComponentName name) &#123; //断开连接调用 &#125; &#125;;&#125; 6.编写服务端实现connect方法package name.quanke.aidldemo;import android.os.IBinder;import android.os.RemoteException;import android.util.Log;/** * * Created by quanke on 16/7/23. */public class LibHandler extends IHandler.Stub&#123; @Override public void connect() throws RemoteException &#123; Log.d(&quot;&quot;,&quot;connect()&quot;); &#125; @Override public IBinder asBinder() &#123; return null; &#125;&#125; 以上实现了简单的连接，接下来我们实现传递自定义类型 传递自定义的类型AIDL默认支持的类型包括Java基本类型（int、long、boolean等），和（String、List、Map、CharSequence），如果要传递自定义的类型需要实现android.os.Parcelable接口。自己写了一个实体类public class Message implements Parcelable。 package name.quanke.aidldemo.model;import android.os.Parcel;import android.os.Parcelable;/** * * Created by quanke on 16/7/23. */public class Message implements Parcelable &#123; private long id; private String content; public long getId() &#123; return id; &#125; public void setId(long id) &#123; this.id = id; &#125; public String getContent() &#123; return content; &#125; public void setContent(String content) &#123; this.content = content; &#125; @Override public String toString() &#123; return &quot;Message&#123;&quot; + &quot;id=&quot; + id + &quot;, content=&apos;&quot; + content + &apos;\\&apos;&apos; + &apos;&#125;&apos;; &#125; @Override public int describeContents() &#123; return 0; &#125; @Override public void writeToParcel(Parcel dest, int flags) &#123; dest.writeLong(this.id); dest.writeString(this.content); &#125; public Message() &#123; &#125; protected Message(Parcel in) &#123; this.id = in.readLong(); this.content = in.readString(); &#125; public static final Creator&lt;Message&gt; CREATOR = new Creator&lt;Message&gt;() &#123; @Override public Message createFromParcel(Parcel source) &#123; return new Message(source); &#125; @Override public Message[] newArray(int size) &#123; return new Message[size]; &#125; &#125;;&#125; 修改IHandler // IHandler.aidlpackage name.quanke.aidldemo;// Declare any non-default types here with import statementsimport name.quanke.aidldemo.model.Message;interface IHandler &#123; void connect(); void sendMessage(Message message);&#125; 编译项目，报错 /Users/quanke/Dev/android/src/AIDLDemo/app/src/main/aidl/name/quanke/aidldemo/IHandler.aidlError:(6) couldn&apos;t find import for class name.quanke.aidldemo.model.MessageError:Execution failed for task &apos;:app:compileDebugAidl&apos;.&gt; java.lang.RuntimeException: com.android.ide.common.process.ProcessException: org.gradle.process.internal.ExecException: Process &apos;command &apos;/Users/quanke/Dev/android/tools/android-sdks/build-tools/23.0.3/aidl&apos;&apos; finished with non-zero exit value 1Information:BUILD FAILED 因为自定义类型不仅要定义实现android.os.Parcelable接口的类，还得为该实现类定义一个aidl文件，如下： // IHandler.aidlpackage name.quanke.aidldemo.model;// Declare any non-default types here with import statementsimport name.quanke.aidldemo.model.Message;parcelable Message ; 切记 自定类型aidl文件名字、路径需要和自定义类名字、路径保持一致， 编译项目，还是报错 parameter 1: &apos;Message message&apos; can be an out parameter, so you must declare it as in, out or inout. AIDL不是 Java。它是真的很接近，但它不是 Java。 Java 参数没有方向的概念，AIDL 参数有方向，参数可以从客户端传到服务端，再返回来。 如果sendMessage方法的message参数是纯粹的输入参数–这意味着是从客户端到服务器的数据，你需要在AIDL声明： void sendMessage(in Message message); 如果sendMessage方法的message参数是纯粹的输出-这意味着它的数据是通过从服务器到客户端，使用： void sendMessage(out Message message); 如果sendMessage方法的message参数是输入也是输出-客户端的值在服务可能会修改，使用： void sendMessage(inout Message message); 总结Android Studio Service AIDL 详解 就到这里，现在应该可以使用AIDL实现想要的功能了，实现简答的AIDL很简单，主要是在自定义类型的时候，有几个坑注意就好。 源码地址： https://github.com/quanke/AIDLDemo.git 有什么问题欢迎留言。 如果喜欢请关注我，赞我，来抚平我虚荣的心","categories":[{"name":"android开发","slug":"android","permalink":"http://test.quanke.name/categories/android/"}],"tags":[{"name":"android","slug":"android","permalink":"http://test.quanke.name/tags/android/"}],"keywords":[{"name":"android开发","slug":"android","permalink":"http://test.quanke.name/categories/android/"}]},{"title":"完美解决 Android 6 java.lang.AbstractMethodError","slug":"完美解决-Android-6-java-lang-AbstractMethodError","date":"2016-07-19T13:55:13.000Z","updated":"2018-01-29T07:18:46.559Z","comments":true,"path":"posts/60800/","link":"","permalink":"http://test.quanke.name/posts/60800/","excerpt":"","text":"欢迎关注http://quanke.name/ 转载请注明出处，谢谢 在Android Marshmallow (6.0)中有一个异常，异常信息中居然没有和APP包相关的东西，感觉这是Android SDK的一个坑 java.lang.AbstractMethodError: abstract method “int android.text.ParcelableSpan.getSpanTypeIdInternal()” Google一下，还真有人也遇到了同样的问题，看了半天也没有解决方案,只是解释了，为什么会有这个问题，大概就是在 Android 6.0 之后 ParcelableSpan 接口的 getSpanTypeIdInternal 和 writeToParcelInternal 方法是 @hide 标记了，多次提醒我们要看Google的文档，但是怎么解决呢？找另外的方法吧，此处不通。。。 既然不能实现ParcelableSpan接口了，那就换一种方式实现吧。 我换成继承android.text.style.UnderlineSpan类，居然可以了 package com.utan.app.utantop;import android.os.Parcel;import android.text.style.UnderlineSpan;/** * * Created by quanke.name on 2016/7/16. * App Url:utantop.com */public class UtanUnderlineSpan extends UnderlineSpan &#123; public UtanUnderlineSpan() &#123; super(); &#125; public UtanUnderlineSpan(Parcel src) &#123; super(src); &#125;&#125; https://medium.com/@numan1617/android-framework-classes-choose-wisely-2f8300f6c255#.3669g6u0m","categories":[{"name":"android开发","slug":"android","permalink":"http://test.quanke.name/categories/android/"}],"tags":[{"name":"android","slug":"android","permalink":"http://test.quanke.name/tags/android/"}],"keywords":[{"name":"android开发","slug":"android","permalink":"http://test.quanke.name/categories/android/"}]},{"title":"完美解决 java.lang.NoClassDefFoundError  R R 巨坑","slug":"完美解决-java-lang-NoClassDefFoundError-R-R-巨坑","date":"2016-07-19T13:53:59.000Z","updated":"2018-01-29T07:18:46.560Z","comments":true,"path":"posts/57394/","link":"","permalink":"http://test.quanke.name/posts/57394/","excerpt":"","text":"欢迎关注http://quanke.name/ 转载请注明出处，谢谢 此坑有点大，害我同事弄了一周没有搞定 开始的时候是报另外一个错误，也是NoClassDefFoundError异常，但这个是因为包冲突的问题,删除掉一些包就好了。但是这个问题没有这么简单。 首先描述一下我们的场景吧： 我们做了一个优谈TOP APP，主要的逻辑代码是在一个单独的android studio module 实现的，这个主要是为了可以导入到公司其他APP里面，就是把优谈TOP当成sdk，嵌入到公司其他APP里，我们使用优谈TOP单独运行的时候没有一点问题，导入到另外要一个APP的时候，问题就出现了。 百度，Google搜了以大堆资料，都没有解决，最后在stackoverflow找到了一种方案。还真可以 stackoverflow 连接 http://stackoverflow.com/questions/32110859/fatal-exception-java-lang-noclassdeffounderror-android-support-v7-appcompat-r 看了这个才知道，这是Dex超出方法数的限制问题，Dex达到极限时，会创建多个Dex文件，android Lollipop 没有处理，需要在应用中处理 。 第一步：在 build.gradle 中增加(非 root build.gradle ) dependencies &#123; compile &apos;com.android.support:multidex:1.0.0&apos;&#125;defaultConfig &#123; multiDexEnabled true&#125; 第二步：在AndroidManifest.xml增加 &lt;application ... android:name=&quot;android.support.multidex.MultiDexApplication&quot;&gt; ...&lt;/application&gt; 如果需要自己实现 Application,需要重写attachBaseContext方法 import android.support.multidex.MultiDexApplication;import android.support.multidex.MultiDex;public class MyApplication extends MultiDexApplication &#123; // ...... @Override protected void attachBaseContext(Context base) &#123; super.attachBaseContext(base); MultiDex.install(this); &#125;&#125; 或者 import android.support.multidex.MultiDex;public class MyApplication extends Application &#123; // ...... @Override protected void attachBaseContext(Context base) &#123; super.attachBaseContext(base); MultiDex.install(this); &#125;&#125; 参考：https://developer.android.com/tools/building/multidex.html#mdex-gradle 这里记录一下没有解决我的问题的方案，也许你有用： http://stackoverflow.com/questions/32110859/fatal-exception-java-lang-noclassdeffounderror-android-support-v7-appcompat-r?noredirect=1&amp;lq=1 http://stackoverflow.com/questions/27614538/crash-java-lang-noclassdeffounderror-android-support-v7-appcompat-rlayout http://stackoverflow.com/questions/9870995/android-java-lang-noclassdeffounderror","categories":[{"name":"android开发","slug":"android","permalink":"http://test.quanke.name/categories/android/"}],"tags":[{"name":"android","slug":"android","permalink":"http://test.quanke.name/tags/android/"}],"keywords":[{"name":"android开发","slug":"android","permalink":"http://test.quanke.name/categories/android/"}]},{"title":"Android fastjson和Realm的完美结合，有坑","slug":"Android-fastjson和Realm的完美结合，有坑","date":"2016-07-19T13:52:11.000Z","updated":"2018-01-29T07:18:46.424Z","comments":true,"path":"posts/22728/","link":"","permalink":"http://test.quanke.name/posts/22728/","excerpt":"","text":"欢迎关注http://quanke.name/ 转载请注明出处，谢谢 源码地址：https://github.com/quanke/FastjsonRealm Realm的安装和fastjson的安装这里就不详细说了。详细的文档在这里 https://realm.io/docs/java/ ，最好看英文文档，中文文档，不是最新的，而且看起来别扭。 现在Realm Java 的最新版本是 1.1.0，fastjson Android的版本是1.1.52 安装Realm Java在项目中（最外层的build.gradle文件）build.gradle中增加buildscript &#123; repositories &#123; jcenter() &#125; dependencies &#123; classpath &quot;io.realm:realm-gradle-plugin:1.1.0&quot; &#125;&#125; 在应用中(一般是名为app模型)build.gradle增加apply plugin: &apos;realm-android&apos; 安装fastjson在应用中(一般是名为app模型)build.gradle增加compile &apos;com.alibaba:fastjson:1.1.52.android&apos; 现在我们写一个模型/** * * Created by quanke(http://quanke.name) on 2016/7/18. */public class User extends RealmObject implements Serializable&#123; public User() &#123; &#125; private String name; private int age; @Ignore private int sessionId; // Standard getters &amp; setters generated by your IDE… public String getName() &#123; return name; &#125; public void setName(String name) &#123; this.name = name; &#125; public int getAge() &#123; return age; &#125; public void setAge(int age) &#123; this.age = age; &#125; public int getSessionId() &#123; return sessionId; &#125; public void setSessionId(int sessionId) &#123; this.sessionId = sessionId; &#125;&#125; 把User对象通过fastjson转为String/** * Created by quanke(http://quanke.name) on 2016/7/18. */public class MainActivity extends AppCompatActivity &#123; @Override protected void onCreate(Bundle savedInstanceState) &#123; super.onCreate(savedInstanceState); setContentView(R.layout.activity_main); User user = new User(); user.setAge(2); user.setName(&quot;http://quanke.name&quot;); String userStr = JSON.toJSONString(user); Log.d(&quot;userStr:&quot;,userStr); User userObj = JSON.parseObject(userStr,User.class); Log.d(&quot;userObj:&quot;,userObj+&quot;&quot;); &#125;&#125; 这个时候，我以为可以完美的运行了，但是运行的时候，报异常了。 java.lang.NoClassDefFoundError: rx.Observableat libcore.reflect.InternalNames.getClass(InternalNames.java:55)... 怎么解决？这里有两种方法。。 第一种：直接使用 RxJava第二种，不想使用 RxJava，那就创建一个 Observable 空文件package rx;public class Observable &#123; // Dummy class required for Jackson-Databind support if // RxJava is not a project dependency.&#125; 其实解决方案是官方提供的，只是里面的例子是Jackson而我用的是国产fastjson Realm 的详细使用这里就不说了。。。有很多小伙伴分享了，但我还是建议看官方文档 https://realm.io/docs/java/","categories":[{"name":"android开发","slug":"android","permalink":"http://test.quanke.name/categories/android/"}],"tags":[{"name":"android","slug":"android","permalink":"http://test.quanke.name/tags/android/"}],"keywords":[{"name":"android开发","slug":"android","permalink":"http://test.quanke.name/categories/android/"}]},{"title":"Thinking in Java (Java 编程思想) PDF ePub Mobi格式电子书","slug":"Thinking-in-Java-Java-编程思想-PDF-ePub-Mobi格式电子书","date":"2016-05-08T08:01:19.000Z","updated":"2018-01-29T07:18:46.426Z","comments":true,"path":"posts/25790/","link":"","permalink":"http://test.quanke.name/posts/25790/","excerpt":"","text":"欢迎关注http://quanke.name/ 转载请注明出处，谢谢 本书来自网络，http://quanke.name 整理成电子书，支持PDF,ePub,Mobi格式，方便大家下载阅读。 阅读地址：https://www.gitbook.com/read/book/quanke/think-in-java 下载地址：https://www.gitbook.com/book/quanke/think-in-java/ github地址：https://github.com/quanke/think-in-java 编辑：http://quanke.name 第13章没有编辑，觉得没有意义，Java的GUI先在应用少，有时间在编辑好。。。 编辑整理辛苦，还望大神们点一下star ，抚平我虚荣的心","categories":[{"name":"Java","slug":"Java","permalink":"http://test.quanke.name/categories/Java/"}],"tags":[{"name":"Java","slug":"Java","permalink":"http://test.quanke.name/tags/Java/"},{"name":"Java 编程思想","slug":"th-java","permalink":"http://test.quanke.name/tags/th-java/"}],"keywords":[{"name":"Java","slug":"Java","permalink":"http://test.quanke.name/categories/Java/"}]},{"title":"打造简单灵活的支持所有View的Android 空页面及错误页面","slug":"打造简单灵活的支持所有View的Android-空页面及错误页面","date":"2016-05-05T16:18:24.000Z","updated":"2018-01-29T07:18:46.562Z","comments":true,"path":"posts/7329/","link":"","permalink":"http://test.quanke.name/posts/7329/","excerpt":"","text":"欢迎关注http://quanke.name/ 转载请注明出处，谢谢 当页面加载数据失败，数据为空，或者数据加载中需要可以操作其他地方，我们应该怎么办？ 体验良好的APP都会做相应的处理。 比如网络异常，会显示一个网络异常页面，提示用户去检查网络； 数据为空时，出现一个温馨的空页面，引导用户去创建数据等； 当数据在加载中时，我想按返回按钮，想切换tab，想做更多的事情时，弹出一个loading就不是那么友好了，直接在页面的内容显示区域显示加载中，问题就解决了。 这些方法各大app都在使用，但是怎么发开？每一个页面都写一个空页、面错误页面和loading页面吗？那也太恶心了吧。 下面我们一起打造简单灵活的支持所有View的Android 空页面及错误页面： 开始之前先看效果： 继承LinearLayout public class EmptyLayout extends LinearLayout&#123;public EmptyLayout(Context context, AttributeSet attrs) &#123; super(context, attrs); &#125;&#125; 我们需要实现三种不同的页面，所以需要定义三种类型： /** * The empty state */ public final static int TYPE_EMPTY = 1; /** * The loading state */ public final static int TYPE_LOADING = 2; /** * The error state */ public final static int TYPE_ERROR = 3; 定义操作方法： /** * 展示错误信息 * @param resId 图片资源id * @param text */ public void showError(int resId,String text)/** * 展示空信息 * @param resId 图片资源id * @param text */ public void showEmpty(int resId,String text)/** * 展示加载中 * @param resId 图片资源id * @param text */ public void showLoading(int resId,String text)/** *隐藏EmptyLayout */ public void hide() 获得EmptyLayout的子view，方便隐藏或者展示子view（这里的子view 一般用户展示本来的内容） /** * 获得EmptyLayout的子view */ private void getChildViews()&#123; int childCount = getChildCount(); Log.d(&quot;EmptyLayout&quot;,&quot;ChildCount:&quot;+childCount); View view; for (int i=0;i&lt;childCount;i++)&#123; view = getChildAt(i); if (isEmptyView(view))&#123; continue; &#125; childViews.add(view); &#125; &#125; 判断view 对象是否是EmptyView ： /** * 判断view 对象是否是EmptyView * @param view * @return */ private boolean isEmptyView(View view)&#123; if ((view == null||mEmptyRelativeLayout == view||view == mLoadingView||view == mEmptyView||view == mErrorView))&#123; return true; &#125; return false; &#125; 当数据为空时调用: public void showEmpty()&#123; getChildViews(); //获得除EmptyView的其他子view hideChildView(); //把子view隐藏了 this.mEmptyType = TYPE_EMPTY; changeEmptyType(); &#125; 其他方法和这个类似，思路很简单，大家可以试试 使用很简单 在布局文件里增加： &lt;name.quanke.app.libs.emptylayout.EmptyLayout android:id=&quot;@+id/emptyLayout&quot; android:layout_width=&quot;match_parent&quot; android:layout_height=&quot;match_parent&quot;&gt; &lt;TextView android:id=&quot;@+id/textHello&quot; android:layout_width=&quot;wrap_content&quot; android:layout_height=&quot;wrap_content&quot; android:text=&quot;Hello World!&quot; /&gt;&lt;/name.quanke.app.libs.emptylayout.EmptyLayout&gt; 代码里增加: findViewById(R.id.btnLoading).setOnClickListener(new View.OnClickListener() &#123; @Override public void onClick(View view) &#123; emptyLayout.showLoading(); &#125; &#125;); findViewById(R.id.btnEmpty).setOnClickListener(new View.OnClickListener() &#123; @Override public void onClick(View view) &#123; emptyLayout.showEmpty(); &#125; &#125;); findViewById(R.id.btnError).setOnClickListener(new View.OnClickListener() &#123; @Override public void onClick(View view) &#123; emptyLayout.showError(); &#125; &#125;); findViewById(R.id.btnData).setOnClickListener(new View.OnClickListener() &#123; @Override public void onClick(View view) &#123; emptyLayout.hide(); &#125; &#125;); 好了，使用起来就这么简单。。。支持所有的view 源码放在github上：https://github.com/quanke/AndroidEmptyLayout 欢迎讨论","categories":[{"name":"android开发","slug":"android","permalink":"http://test.quanke.name/categories/android/"}],"tags":[{"name":"android","slug":"android","permalink":"http://test.quanke.name/tags/android/"}],"keywords":[{"name":"android开发","slug":"android","permalink":"http://test.quanke.name/categories/android/"}]},{"title":"Vert.x 3 Core手册 for Java 中文版","slug":"Vert-x-3-Core手册-for-Java-中文版","date":"2016-05-03T23:58:21.000Z","updated":"2018-01-29T07:18:46.428Z","comments":true,"path":"posts/700/","link":"","permalink":"http://test.quanke.name/posts/700/","excerpt":"","text":"欢迎关注http://quanke.name/ 交流群：231419585- 转载请注明出处，谢谢 阅读地址：http://vertx.quanke.name/ 下载地址：https://www.gitbook.com/book/quanke/vert-x-core-manual-for-java 本书源码地址：https://github.com/quanke/vert-x-core-manual-for-java","categories":[{"name":"Vert.x3 系列","slug":"vertx","permalink":"http://test.quanke.name/categories/vertx/"}],"tags":[{"name":"Vert.x3","slug":"Vert-x3","permalink":"http://test.quanke.name/tags/Vert-x3/"},{"name":"Vertx","slug":"Vertx","permalink":"http://test.quanke.name/tags/Vertx/"}],"keywords":[{"name":"Vert.x3 系列","slug":"vertx","permalink":"http://test.quanke.name/categories/vertx/"}]},{"title":"设计模式Java版,Gitbook开源电子书，含源码","slug":"设计模式Java版-Gitbook开源电子书，含源码","date":"2016-05-03T23:56:26.000Z","updated":"2018-01-29T07:18:46.573Z","comments":true,"path":"posts/15671/","link":"","permalink":"http://test.quanke.name/posts/15671/","excerpt":"","text":"欢迎关注http://quanke.name/ 转载请注明出处，谢谢 Sunny在CSDN技术博客中陆续发表了100多篇与设计模式学习相关的文章，涵盖了七个面向对象设计原则和24个设计模式（23个GoF设计模式 + 简单工厂模式），为了方便大家学习，http://quanke.name 现将所有文章的进行了整理，方便大家下载阅读，希望能给各位带来帮助！ 阅读地址：https://quanke.gitbooks.io/design-pattern-java/content/ 下载地址：https://www.gitbook.com/book/quanke/design-pattern-java/ 源码下载地址：http://www.chinasa.info/download/DP-Code.rar 课件下载地址：http://www.chinasa.info/download/DP-Slides.rar 作者：刘伟 http://blog.csdn.net/lovelion 本书编辑：http://quanke.name 刘伟(Sunny)，中南大学计算机应用技术博士，国家认证系统分析师（2005年），国家认证系统架构设计师（2009年，全国第四名），高级程序员，数据库系统工程师，MCSE，MCDBA，CASI专业顾问与企业内训讲师。具有十多年软件开发、项目管理及教育培训经验，曾在NIIT（印度国家信息技术学院）担任高级讲师，主持和参与30多个软件项目的开发工作，并给国内多家公司提供软件开发、软件设计等培训服务，现主要致力于软件工程、数据挖掘等领域的教学、推广和研究工作。技术专长：软件架构、设计模式、UML、OOAD、数据挖掘等。已出版设计模式书籍四本：《设计模式》（清华大学出版社，2011年）、《设计模式实训教程》（清华大学出版社，2012年）、《设计模式的艺术——软件开发人员内功修炼之道》（清华大学出版社，2013年）、《C#设计模式》（清华大学出版社，2013年）。架构师之家www.chinasa.info站长。E-mail:weiliu_china@126.com微博地址：http://weibo.com/csusunny 更多干货，请关注：http://quanke.name","categories":[{"name":"设计模式","slug":"gof","permalink":"http://test.quanke.name/categories/gof/"}],"tags":[{"name":"设计模式","slug":"gof","permalink":"http://test.quanke.name/tags/gof/"},{"name":"JAVA","slug":"JAVA","permalink":"http://test.quanke.name/tags/JAVA/"}],"keywords":[{"name":"设计模式","slug":"gof","permalink":"http://test.quanke.name/categories/gof/"}]},{"title":"Web服务器处理HTTP压缩之gzip、deflate压缩","slug":"Web服务器处理HTTP压缩之gzip、deflate压缩","date":"2016-05-01T07:55:53.000Z","updated":"2018-01-29T07:18:46.442Z","comments":true,"path":"posts/52945/","link":"","permalink":"http://test.quanke.name/posts/52945/","excerpt":"","text":"欢迎关注http://quanke.name/ 交流群：231419585 转载请注明出处，谢谢 一、什么是gzipgzip是一种数据格式，默认且目前仅使用deflate算法压缩data部分； Gzip是一种流行的文件压缩算法，现在的应用十分广泛，尤其是在Linux平台。当应用Gzip压缩到一个纯文本文件时，效果是非常明显的，大约可以减少70％以上的文件大小。这取决于文件中的内容。 利用Apache中的Gzip模块，我们可以使用Gzip压缩算法来对Apache服务器发布的网页内容进行压缩后再传输到客户端浏览器。这样经过压缩后实际上降低了网络传输的字节数，最明显的好处就是可以加快网页加载的速度。 网页加载速度加快的好处不言而喻，除了节省流量，改善用户的浏览体验外，另一个潜在的好处是Gzip与搜索引擎的抓取工具有着更好的关系。例如 Google就可以通过直接读取gzip文件来比普通手工抓取更快地检索网页。在Google网站管理员工具（Google Webmaster Tools）中你可以看到，sitemap.xml.gz 是直接作为Sitemap被提交的。 而这些好处并不仅仅限于静态内容，PHP动态页面和其他动态生成的内容均可以通过使用Apache压缩模块压缩，加上其他的性能调整机制和相应的服务器端 缓存规则，这可以大大提高网站的性能。因此，对于部署在Linux服务器上的PHP程序，在服务器支持的情况下，我们建议你开启使用Gzip Web压缩。 PS：详情参考：http://baike.baidu.com/item/gzip?fr=aladdin 二、什么是deflateDEFLATE是同时使用了LZ77算法与哈夫曼编码（Huffman Coding）的一个无损数据压缩算法。 它最初是由Phil Katz为他的PKZIP归档工具第二版所定义的，后来定义在RFC 1951规范中。 人们普遍认为DEFLATE不受任何专利所制约，并且在LZW（GIF文件格式使用）相关的专利失效之前，这种格式除了在ZIP文件格式中得到应用之外也在gzip压缩文件以及PNG图像文件中得到了应用。 DEFLATE压缩与解压的源代码可以在自由、通用的压缩库zlib上找到。 更高压缩率的DEFLATE是7-zip所实现的。AdvanceCOMP也使用这种实现，它可以对gzip、PNG、MNG以及ZIP文件进行压缩从而得到比zlib更小的文件大小。在Ken Silverman的KZIP与PNGOUT中使用了一种更加高效同时要求更多用户输入的DEFLATE程序。 deflate是一种压缩算法,是huffman编码的一种加强。 deflate与gzip解压的代码几乎相同，可以合成一块代码。 三、web服务器处理http压缩的过程 Web服务器接收到浏览器的HTTP请求后，检查浏览器是否支持HTTP压缩（Accept-Encoding 信息）； 如果浏览器支持HTTP压缩，Web服务器检查请求文件的后缀名； 如果请求文件是HTML、CSS等静态文件，Web服务器到压缩缓冲目录中检查是否已经存在请求文件的最新压缩文件； 如果请求文件的压缩文件不存在，Web服务器向浏览器返回未压缩的请求文件，并在压缩缓冲目录中存放请求文件的压缩文件； 如果请求文件的最新压缩文件已经存在，则直接返回请求文件的压缩文件； 如果请求文件是动态文件，Web服务器动态压缩内容并返回浏览器，压缩内容不存放到压缩缓存目录中。 下面是两个演示图：未使用Gzip： 开启使用Gzip后： 四、gzip与deflate区别deflate使用inflateInit()，而gzip使用inflateInit2()进行初始化，比 inflateInit()多一个参数: -MAX_WBITS，表示处理raw deflate数据。因为gzip数据中的zlib压缩数据块没有zlib header的两个字节。使用inflateInit2时要求zlib库忽略zlib header。在zlib手册中要求windowBits为8..15，但是实际上其它范围的数据有特殊作用，见zlib.h中的注释，如负数表示raw deflate。 Apache的deflate变种可能也没有zlib header，需要添加假头后处理。即MS的错误deflate (raw deflate).zlib头第1字节一般是0x78, 第2字节与第一字节合起来的双字节应能被31整除，详见rfc1950。例如Firefox的zlib假头为0x7801，python zlib.compress()结果头部为0x789c。 deflate 是最基础的算法，gzip 在 deflate 的 raw data 前增加了 10 个字节的 gzheader，尾部添加了 8 个字节的校验字节（可选 crc32 和 adler32） 和长度标识字节。 安装它们的Apache Web服务器版本的差异。Apache 1.x系列没有内建网页压缩技术，所以才去用额外的第三方mod_gzip 模块来执行压缩。而Apache 2.x官方在开发的时候，就把网页压缩考虑进去，内建了mod_deflate 这个模块，用以取代mod_gzip。虽然两者都是使用的Gzip压缩算法，它们的运作原理是类似的。 压缩质量。mod_deflate 压缩速度略快而mod_gzip 的压缩比略高。一般默认情况下，mod_gzip 会比mod_deflate 多出4%~6％的压缩量。 对服务器资源的占用。 一般来说mod_gzip 对服务器CPU的占用要高一些。mod_deflate 是专门为确保服务器的性能而使用的一个压缩模块，mod_deflate 需要较少的资源来压缩文件。这意味着在高流量的服务器，使用mod_deflate 可能会比mod_gzip 加载速度更快。即在服务器性能足够的情况下，使用mod_gzip，虽然会耗费服务器性能，但是值得（压缩更快更好）；在服务器性能不足的情况下，使用mod_deflate 确保性能。 从Apache 2.0.45开始，mod_deflate 可使用DeflateCompressionLevel 指令来设置压缩级别。该指令的值可为1（压缩速度最快，最低的压缩质量）至9（最慢的压缩速度，压缩率最高）之间的整数，其默认值为6（压缩速度和压缩质 量较为平衡的值）。这个简单的变化更是使得mod_deflate 可以轻松媲美mod_gzip 的压缩。 五、开启mod_gzip、mod_deflateApache上利用Gzip压缩算法进行压缩的模块有两种：mod_gzip 和mod_deflate。 要使用Gzip Web压缩，请首先确定你的服务器开启了对这两个组件之一的支持。在Linux服务器上，现在已经有越来越多的空间商开放了对它们的支持，有的甚至是同时 支持这两个模块的。例如目前Godaddy、Bluehost及DreamHosts等空间商的服务器都已同时支持mod_gzip 和mod_deflate。 通过查看HTTP头，我们可以快速判断使用的客户端浏览器是否支持接受gzip压缩。若发送的HTTP头中出现以下信息，则表明你的浏览器支持接受相应的gzip压缩： Accept-Encoding: gzip 支持mod_gzipAccept-Encoding: deflate 支持mod_deflate Accept-Encoding: gzip,deflate 同时支持mod_gzip 和mod_deflate mod_deflate 是apache自带的模块,当然是在apache 2后支持的,以前1的时候是mod_gzip,启用mod_deflate可以很好的为节省网页大小,只不过是占用服务器的资源和内存.用户看到页面的速度会大大加快。在apache2.0以上（包括apache2.0）的版中gzip压缩使用的是mod_deflate模块 查看apache的安装模式 apachectl -l 发现 mod_so.c，ok可以动态加模块，不用重新编译。 安装mod_deflate 找到原有的apache安装包安装mod_deflate cd httpd-2.0.59/modules/filters/usr/local/apache2/bin/apxs -i -c -a mod_deflate.c PS：apxs命令参数说明： -i 此选项表示需要执行安装操作，以安装一个或多个动态共享对象到服务器的modules目录中。 -a 此选项自动增加一个LoadModule行到httpd.conf文件中，以激活此模块，或者，如果此行已经存在，则启用之。 -A 与 -a 选项类似，但是它增加的LoadModule命令有一个井号前缀(#)，即此模块已经准备就绪但尚未启用。 -c 此选项表示需要执行编译操作。它首先会编译C源程序(.c)files为对应的目标代码文件(.o)，然后连接这些目标代码和files中其余的目标代码文件(.o和.a)，以生成动态共享对象dsofile 。如果没有指定 -o 选项，则此输出文件名由files中的第一个文件名推测得到，也就是默认为mod_name.so 。 3、修改Apache的http.conf文件，去除mod_deflate.so前面的注释 LoadModule deflate_module modules/mod_deflate.so 4、在根目录中新建.htaccess文件，定制压缩规则 #GZIP压缩模块配置&lt;ifmodule mod_deflate.c&gt;#启用对特定MIME类型内容的压缩SetOutputFilter DEFLATESetEnvIfNoCase Request_URI .(?:gif|jpe?g|png|exe|t?gz|zip|bz2|sit|rar|pdf|mov|avi|mp3|mp4|rm)$ no-gzip dont-vary #设置不对压缩的文件AddOutputFilterByType DEFLATE text/html text/css text/plain text/xml application/x-httpd-php application/x-javascript #设置对压缩的文件&lt;/ifmodule&gt; 5、对指定的文件配置缓存的生存时间，去除mod_headers.so模块前面的注释 LoadModule headers_module modules/mod_headers.so 6、在根目录中新建.htaccess文件，定制压缩规则 #文件缓存时间配置&lt;FilesMatch &quot;.(flv|gif|jpg|jpeg|png|ico|swf|js|css)$&quot;&gt;Header set Cache-Control &quot;max-age=2592000&quot;&lt;/FilesMatch&gt; 里面的文件MIME类型可以根据自己情况添加，至于PDF 、图片、音乐文档之类的这些本身都已经高度压缩格式，重复压缩的作用不大，反而可能会因为增加CPU的处理时间及浏览器的渲染问题而降低性能。所以就没必要再通过Gzip压缩。通过以上设置后再查看返回的HTTP头，出现以下信息则表明返回的数据已经过压缩。即网站程序所配置的Gzip压缩已生效。 Content-Encoding: gzip 注：不管使用mod_gzip 还是mod_deflate，此处返回的信息都一样。因为它们都是实现的gzip压缩方式。 遇到的问题以及解决: 1： apach2 安装mod_deflate后restart,直接 load /opt/apache/modules/mod_deflate.so into server: /opt/apache/modules/mod_deflate.so: undefined symbol: deflate 异常的痛苦 什么ldd mod_deflate.so后再export LIB_LIBRARY_PATH呀，都试了N次，google也go了N天 终于在google上go出来一篇文章，终于解决，方法如下： vi /usr/local/apache2/bin/apr-config 修改LDFLAGS=” “ 为 LDFLAGS=”-lz” 然后再apxs -ica mod_deflate.c 就OK了. 2：apach2 安装mod_deflate后restart,直接 module deflate_module is built-in and can&apos;t be loaded ... 这说明该模块已经安装，不必再LoadModule deflate_module启用它。 只需做配置 阅读原文","categories":[{"name":"Vert.x3 系列","slug":"vertx","permalink":"http://test.quanke.name/categories/vertx/"}],"tags":[{"name":"Vert.x3","slug":"Vert-x3","permalink":"http://test.quanke.name/tags/Vert-x3/"},{"name":"Vertx","slug":"Vertx","permalink":"http://test.quanke.name/tags/Vertx/"}],"keywords":[{"name":"Vert.x3 系列","slug":"vertx","permalink":"http://test.quanke.name/categories/vertx/"}]},{"title":"使用Gitbook写开源书籍，过一把作家瘾","slug":"使用Gitbook写开源书籍，过一把作家瘾","date":"2016-04-25T01:16:28.000Z","updated":"2018-01-29T07:18:46.557Z","comments":true,"path":"posts/45299/","link":"","permalink":"http://test.quanke.name/posts/45299/","excerpt":"","text":"欢迎关注http://quanke.name/ 转载请注明出处，谢谢 初级（适合没有编程基础的童鞋看）使用GitBook Editor 写开源书籍这个是gitbook官方出的编辑器，使用简单 首先下载GitBook Editor 下载地址：https://www.gitbook.com/editor 支持Mac、Linux、Windows 安装Windows 下载gitbook-win.zip； 解压； 打开GitBook.exe安装； Mac 下载 gitbook-mac.dmg安装即可 Linux 下载 gitbook-linux32.tar.gz 使用tar -xvzf gitbook-linux32.tar.gz解压 运行脚本 cd GitBook &amp;&amp; ./install.sh安装 使用安装完成之后，如果有github账号直接，登录，但是用github登录之后也需要设置gitbook的邮箱和密码，等会儿要用到，没有账号的直接注册就好； 登录后，可以直接在gitbook上创建书籍，建议在gitbook网站上创建书籍，然后通过GitBook Editor clone 下来； clone 下来之后 可以直接写书了，先在感觉是不是特别简单？别急，为了更爽的写作还需要继续看看下面。 怎么和github同步？ 如果没有github账号，先注册，之后绑定github账号 https://www.gitbook.com/@quanke/settings#social（把连接中的quanke修改为自己的用户名） 如果绑定了了github账号，需要设置权限，https://www.gitbook.com/@quanke/settings#github（把连接中的quanke修改为自己的用户名）， Reconnect GitHub Account 选择 With access to public repositories 当授权好了之后，我们来到书的设置（ Settings ）页面，点击设置github https://www.gitbook.com/book/quanke/vert-x-core-manual-for-java/settings/github（把quanke替换成你的用户名，把vert-x-core-manual-for-java替换成书名） 如果原来这本书是github里写的，直接填入github的地址就好，如果账号都是新建的，什么都没有，那就点击Export to GitHub （注意填入gitbook的用户名密码不是github的） 如果上面的步骤没问题，点击 Add webhook 就OK了，给github增加了一个钩子，也就是说当你的github更新的时候，会告诉gitbook 还有一步很关键,在你的GitBook Editor中，打开我们刚才clone下来的书，点击菜单里的 Book -&gt; Repository Settings ，把这个设置成为刚才导到github的地址，之后就可以在GitBook Editor写作了。。有什么不懂的，直接可以留言问我 进阶（适合有编程基础的童鞋看）gitbook 安装 安装npm从网站 https://nodejs.org/#download 下载node.js源代码（点击绿色的INSTALL），解压 ./configuremakemake install 成功执行后，npm就被安装好了。 gitbook 安装 npm install -g gitbook-cli gitbook -V 查看gitbook是否安装成功。 gitbook 使用 根据目录生成图书结构 1.1 README.md 与 SUMMARY编写 README.md 这个文件相当于一本Gitbook的简介。 $ mkdir test_gitbook$ touch README.md SUMMARY.md 这个文件是一本书的目录结构，使用Markdown语法，如我们这本书的SUMMARY.md： $ touch SUMMARY.md$ vim SUMMARY.md 输入 * [简介](README.md)* [第一章](chapter1/README.md) - [第一节](chapter1/section1.md) - [第二节](chapter1/section2.md)* [第二章](chapter2/README.md) - [第一节](chapter2/section1.md) - [第二节](chapter2/section2.md)* [结束](end/README.md) 1.2 生成图书结构 当这个目录文件创建好之后，我们可以使用Gitbook的命令行工具将这个目录结构生成相应的目录及文件： $ gitbook init$ tree . #查看建立的目录和文件 .├── chapter1│ ├── README.md│ ├── section1.md│ └── section2.md├── chapter2│ ├── README.md│ ├── section1.md│ └── section2.md├── end│ └── README.md├── README.md└── SUMMARY.md 我们可以看到，gitbook给我们生成了与SUMMARY.md所对应的目录及文件。 每个目录中，都有一个README.md文件，相当于一章的说明。 生成图书 2.1 输出为静态网站 你有两种方式输出一个静态网站： 2.1.1 本地预览时自动生成 当你在自己的电脑上编辑好图书之后，你可以使用Gitbook的命令行进行本地预览： $ gitbook serve . 然后浏览器中输入 http://localhost:4000 就可以预览生成的以网页形式组织的书籍。 这里你会发现，你在你的图书项目的目录中多了一个名为_book的文件目录，而这个目录中的文件，即是生成的静态网站内容。 使用build参数生成到指定目录与直接预览生成的静态网站文件不一样的是，使用这个命令，你可以将内容输入到你所想要的目录中去： $ mkdir /tmp/gitbook$ gitbook build --output=/tmp/gitbook 2.2 输出PDF 输入为PDF文件，需要先使用NPM安装上gitbook pdf：$ sudo npm install gitbook-pdf -g 我在执行上面这条命令的时候出现了下面的错误： ***************************************************Downloading http://cdn.bitbucket.org/ariya/phantomjs/downloads/phantomjs-1.9.7-linux-i686.tar.bz2Saving to /usr/local/lib/node_modules/gitbook-pdf/node_modules/phantomjs/phantomjs/phantomjs-1.9.7-linux-i686.tar.bz2Error: connect ETIMEDOUT at exports._errnoException (util.js:746:11) at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1010:19)npm ERR! Linux 3.2.0-4-686-paenpm ERR! argv &quot;/usr/local/bin/node&quot; &quot;/usr/local/bin/npm&quot; &quot;install&quot; &quot;gitbook-pdf&quot; &quot;-g&quot;npm ERR! node v0.12.7npm ERR! npm v2.11.3npm ERR! code ELIFECYCLEnpm ERR! phantomjs@1.9.7-5 install: `node install.js`npm ERR! Exit status 1npm ERR! npm ERR! Failed at the phantomjs@1.9.7-5 install script &apos;node install.js&apos;.npm ERR! This is most likely a problem with the phantomjs package,npm ERR! not with npm itself.npm ERR! Tell the author that this fails on your system:npm ERR! node install.jsnpm ERR! You can get their info via:npm ERR! npm owner ls phantomjsnpm ERR! There is likely additional logging output above.npm ERR! Please include the following file with any support request:npm ERR! /home/wangxq/repository/phantomjs/npm-debug.log*************************************************** 由错误报告内容的第一行可以知道，发生错误的原因是下载phantomjs发生了错误，因此我们需要手动下载和安装。 解决方法：[1] $ git clone git://github.com/ariya/phantomjs.git$ sudo apt-get install build-essential g++ flex bison gperf ruby perl \\ libsqlite3-dev libfontconfig1-dev libicu-dev libfreetype6 libssl-dev \\ libpng-dev libjpeg-dev python libx11-dev libxext-dev #安装编译需要的工具和依赖$ cd phantomjs$ git checkout 1.9.7 #注意：这里的1.9.7是phantom的版本号，可以由错误报告的第一行找出 $ ./build.sh --jobs 4$ sudo cp bin/phantomjs /bin/$ sudo npm install gitbook-pdf -g #重新进行安装 然后，使用下面的命令，要PDF文件，首先安装依赖库： $ sudo apt-get install calibre $ gitbook -v 2.1.0 pdf . 发生错误： *****************************************************info: start conversion to pdf ....ERRORError: Command failed: /bin/sh -c ebook-convert /tmp/tmp-29384ctltwbk/SUMMARY.html /tmp/tmp-29384ctltwbk/index.pdf --title=&quot;&quot; --comments=&quot;这本书是gitbook的一个例子&quot; --language=&quot;en&quot; --book-producer=&quot;GitBook&quot; --publisher=&quot;GitBook&quot; --chapter=&quot;descendant-or-self::*[contains(concat(&apos; &apos;, normalize-space(@class), &apos; &apos;), &apos; book-chapter &apos;)]&quot; --chapter-mark=&quot;pagebreak&quot; --page-breaks-before=&quot;/&quot; --level1-toc=&quot;descendant-or-self::*[contains(concat(&apos; &apos;, normalize-space(@class), &apos; &apos;), &apos; book-chapter-1 &apos;)]&quot; --level2-toc=&quot;descendant-or-self::*[contains(concat(&apos; &apos;, normalize-space(@class), &apos; &apos;), &apos; book-chapter-2 &apos;)]&quot; --level3-toc=&quot;descendant-or-self::*[contains(concat(&apos; &apos;, normalize-space(@class), &apos; &apos;), &apos; book-chapter-3 &apos;)]&quot; --no-chapters-in-toc --max-levels=&quot;1&quot; --breadth-first --margin-left=&quot;62&quot; --margin-right=&quot;62&quot; --margin-top=&quot;56&quot; --margin-bottom=&quot;56&quot; --pdf-default-font-size=&quot;12&quot; --pdf-mono-font-size=&quot;12&quot; --paper-size=&quot;a4&quot; --pdf-header-template=&quot;&lt;p class=&apos;header&apos;&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;&quot; --pdf-footer-template=&quot;&lt;p class=&apos;footer&apos;&gt;&lt;span&gt;_SECTION_&lt;/span&gt; &lt;span style=&apos;float:right;&apos;&gt;_PAGENUM_&lt;/span&gt;&lt;/p&gt;&quot;Usage: ebook-convert input_file output_file [options]Convert an ebook from one format to another.input_file is the input and output_file is the output. Both must be specified as the first two arguments to the command.The output ebook format is guessed from the file extension of output_file. output_file can also be of the special format .EXT where EXT is the output file extension. In this case, the name of the output file is derived the name of the input file. Note that the filenames must not start with a hyphen. Finally, if output_file has no extension, then it is treated as a directory and an &quot;open ebook&quot; (OEB) consisting of HTML files is written to that directory. These files are the files that would normally have been passed to the output plugin.After specifying the input and output file you can customize the conversion by specifying various options. The available options depend on the input and output file types. To get help on them specify the input and output file and then use the -h option.For full documentation of the conversion system seehttp://manual.calibre-ebook.com/conversion.htmlWhenever you pass arguments to ebook-convert that have spaces in them, enclose the arguments in quotation marks.ebook-convert: error: no such option: --pdf-default-font-size***************************************************** 解决方法[2] $ sudo -v &amp;&amp; wget -nv -O- https://raw.githubusercontent.com/kovidgoyal/calibre/master/setup/linux-installer.py | sudo python -c &quot;import sys; main=lambda:sys.stderr.write(&apos;Download failed\\n&apos;); exec(sys.stdin.read()); main()&quot;$ gitbook -v 2.1.0 pdf . # 重新执行命令生成pdf，目标文件为book.pdf 问题如果输入gitbook init命令，出现Installing version 2.1.0，需要耐性等待安装。","categories":[{"name":"使用","slug":"use","permalink":"http://test.quanke.name/categories/use/"}],"tags":[{"name":"gitbook","slug":"gitbook","permalink":"http://test.quanke.name/tags/gitbook/"}],"keywords":[{"name":"使用","slug":"use","permalink":"http://test.quanke.name/categories/use/"}]},{"title":"Android ObjectAnimator 无限循环播放，实现上下左右浮动效果","slug":"Android-ObjectAnimator-无限循环播放，实现上下左右浮动效果","date":"2016-04-23T11:04:41.000Z","updated":"2018-01-29T07:18:46.420Z","comments":true,"path":"posts/12981/","link":"","permalink":"http://test.quanke.name/posts/12981/","excerpt":"","text":"欢迎关注http://quanke.name/ 转载请注明出处，谢谢 Android Property Animation 动画有很多大神写过，都非常好，这里只通过ObjectAnimator /ValueAnimator实现上下左右浮动效果。 很简单看代码就好 private void floatAnim(View view,int delay)&#123; List&lt;Animator&gt; animators = new ArrayList&lt;&gt;(); ObjectAnimator translationXAnim = ObjectAnimator.ofFloat(view, &quot;translationX&quot;, -6.0f,6.0f,-6.0f); translationXAnim.setDuration(1500); translationXAnim.setRepeatCount(ValueAnimator.INFINITE);//无限循环 translationXAnim.setRepeatMode(ValueAnimator.INFINITE);// translationXAnim.start(); animators.add(translationXAnim); ObjectAnimator translationYAnim = ObjectAnimator.ofFloat(view, &quot;translationY&quot;, -3.0f,3.0f,-3.0f); translationYAnim.setDuration(1000); translationYAnim.setRepeatCount(ValueAnimator.INFINITE); translationYAnim.setRepeatMode(ValueAnimator.INFINITE); translationYAnim.start(); animators.add(translationYAnim); AnimatorSet btnSexAnimatorSet = new AnimatorSet(); btnSexAnimatorSet.playTogether(animators); btnSexAnimatorSet.setStartDelay(delay); btnSexAnimatorSet.start();&#125; 开始设置setRepeatMode(ValueAnimator.INFINITE);方法没有效果，只有设置setRepeatCount(ValueAnimator.INFINITE)才可以。","categories":[{"name":"android开发","slug":"android","permalink":"http://test.quanke.name/categories/android/"}],"tags":[{"name":"android","slug":"android","permalink":"http://test.quanke.name/tags/android/"},{"name":"android动画","slug":"android-a","permalink":"http://test.quanke.name/tags/android-a/"}],"keywords":[{"name":"android开发","slug":"android","permalink":"http://test.quanke.name/categories/android/"}]},{"title":"10多年码代码经验腾讯管理谈职业规划","slug":"10多年码代码经验腾讯管理谈职业规划","date":"2016-04-23T10:56:22.000Z","updated":"2018-01-29T07:18:46.427Z","comments":true,"path":"posts/60761/","link":"","permalink":"http://test.quanke.name/posts/60761/","excerpt":"","text":"欢迎关注http://quanke.name/ 转载请注明出处，谢谢 此人是我眼中的大神，曾经任职EA高级技术，腾讯技术管理，在级别提升后因为厌恶政治斗争，毅然离开腾讯开始创业。 cto眼中的牛人是什么？ 有多种解决方案； 有架构思维； 一专多通； 有预判能力； 思维不单一； 基础扎实； 有一些高阶技能； 技术人员分工： 前端： 多看别人的效果，别人做出来的模仿做出来，学习新技术，前端技术更新快，需要超级顺速的更新自己的技术 后端 （分为逻辑和服务） 逻辑 像php,生命周期相对短，变化快，更加需要学习新技术。 服务 生命周期长，复用要求更加高，多考虑架构的问题 运维 对于运营来说预判能力很重要 测试 一个强势的部门，如果不能强制那就不要做测试 铁塔模型和故宫模型对于中高级技术来说，有两条技术路可以走，第一条路是成为一个技术的专家，第二条路是成为解决方案的专家，第一条路就试我们所说的铁塔模型，技术很深，优点就是，立马能有回报，前期容易实现，最后能成为行业专家，很厉害，缺点就是容易倒，受环境影响大，需要有眼光和机缘，比如以前的塞班工程师牛逼哄哄的，但是塞班幕落的时候塞班工程师就抓狂了，第二种就是故宫模型，这种模型开始的时候看不到成效，不能立即变现，但是到后面会起来，可以在自己的故宫里建立各种东西，包括铁塔，不太受环境的影响。当然也可以组合成长，先一门技术能独当一面，其他技术也学习，这就是我们所说的一专多通，这就要看自己的选择了。 程序员高手养成： 第一：ide炉火纯青； 第二：优先考虑有哪些解决方案，不轻易说我不能实现。； 第三：熟悉新技术，比如java,可能现在用不到，但需要的时候能用好； 第四：一定要形成自己的技术体系，心目中熟悉各种架构，提炼出自己的架构。 职业阶梯1.代表初级 初级表现为，能实现一些基本的功能，毕业实习期一般为初级，一般一年左右 2.代表中级 中级表现为，功能基本都能实现，有一点点的分装思维，工作效率一般。 3.代表高级 高级表现为，有分装思想，考虑复用，能写出高质量，可复用，可扩展的代码，会一些一些基本的工具提高工作效率，精通一门语言 4.代表大牛 在开始的时候就有表达 5.行业精英 推动行业进步，有一定知名度 对于我们来说，每个人应该都要有成为行业精英的理想，但是我们生下来都是初级的，不论我们现在处于哪一位阶梯，都没有关系，这不一定是你自己的原因，有可能是没有遇到贵人，有可能是在为上上一个阶梯做准备，但是今天我们知道了，希望我们的人不要一直停留在自己阶梯。 从初级开始，我们每次成长都特别有成就感，比如，写了一个“Hello word”，可以被浏览器渲染出来，再写一个表单，能提交处理信息等，都是一个很有成就感的时候，这时候我们就处于阶梯的平面上，但是我们走着走着，就发现，自己很无力，比如我想做一个类似utan.com这样的网站，就要学习更多的东西，比如数据库设计、数据库管理、后端处理，服务器部署等（当然utan应该是多人合作的产物），这时候感觉自己很难提高了，遇到各种问题，踩各种坑，加班、痛苦随之而来，其实这都是正常的，这都是爬到上一个阶梯的必经之路，当爬的次数多了，就会想用石头垫在脚下，爬到上一个阶梯，当然自身的能力也会成长，就这样上中级，高级，但是要成为 牛人（4），就没有那么简单了，因为可能会遇到各种阻力，或者太滑上不去，要通过我们的智慧上去，比如，如果太滑可以借助防滑手套等等，这个自己体会。 还有一个层级都是行业精英，不是每个人都能成为行业精英的，要机缘，要看以前的路是否扎实，要看以前的选择是否符合发展等一系列因素都会影响我们成为行业精英。 反PMP项目管理就是一群技术不好的人，又不想放弃技术，就选择做PM，是以前在项目过程中产出的畸形产物，真正的高手是不需要PM的，我们倡导敏捷。 最后是提问环节。像Android或者iOS开发这种不确定性的技术有必要转型吗？不一定转型，但是绝不要只关注一个技术，比如做android只做android，做iOS的值关注ios，那就悲剧了，要去学习HTML5等，不知道未来会是怎么样？开放的心态去学习新的东西是正道。 怎么掌握新技术？有时候行业出现了很多优秀的技术，我们都是知道技术的成长最快的过程是在项目中成长，但是公司没有采取此技术，我们怎么办？ 先对技术有一个基本的了解，很清楚，新技术的优缺点，小规模的尝试性的在公司项目中用，最好是内部系统。 来自内部培训，地铁用上手机形成此文，欢迎拍砖。","categories":[{"name":"随笔","slug":"essay","permalink":"http://test.quanke.name/categories/essay/"}],"tags":[{"name":"职业规划","slug":"career-planning","permalink":"http://test.quanke.name/tags/career-planning/"}],"keywords":[{"name":"随笔","slug":"essay","permalink":"http://test.quanke.name/categories/essay/"}]},{"title":"Vert.x 3.x版本callback hell的解决","slug":"Vert-x-3-x版本callback-hell的解决","date":"2016-04-09T11:15:01.000Z","updated":"2018-01-29T07:18:46.431Z","comments":true,"path":"posts/11284/","link":"","permalink":"http://test.quanke.name/posts/11284/","excerpt":"","text":"欢迎关注http://quanke.name/ 交流群：231419585 转载请注明出处，谢谢 Vert.x乃神器也，管玩管住还包饭，异步处理，很多人头疼的callback hell（回调地狱），也就是金字塔，不知不觉就走入了金字塔的陷阱里，一般callback都发生在异步处理期间，而异步处理，除了少数数据量极大的cpu intense的代码块以外（这部分主要通过降低算法时间复杂度来优化），绝大多数都集中在io上，将一个io操作包装成一个异步程序块来执行，是比较常见的优化方式，vert.x的io集中在以下几个部分。 第一，eventbus.send()方法。 第二，jdbcclient.getconnection以及connection.update/query等方法。 第三，httpclient.get/post等方法，其中前两个都可以通过vert.x自带的Future来对付。 首先我们要实例化一个future对象： Future&lt;MyResult&gt; future = Future.future(); 然后future有几个方法值得注意，其中一个是setHandler方法，这个方法就是设置后续处理的函数，另外一个，与之相对应的是completer()方法，这个方法返回的就是setHandler方法set的handler函数，通俗点说，就是getHandler()方法，在callback位置调用该方法，就可以在callback的时候执行handler方法/函数，比如原本是： vertx.eventBus().send(CommerceVerticle.class.getName(),myAsyncResult -&gt; &#123;...&#125;); 经过改写之后，就变成了： vertx.eventBus().send(CommerceVerticle.class.getName(),future.completer());future.setHandler(myAsyncResult -&gt; &#123;...&#125;); 这样通过拆分原来的内嵌lambda/匿名函数来达到扁平化的效果。callback hell一个典型特征就是金字塔，也就是经过多层回调/callback函数嵌套之后，程序会变成： ar -&gt; &#123; ar1 -&gt; &#123; ar2 -&gt; &#123; ... &#125; &#125;&#125;; 这种方式，或者fp里面常见的(+ 1 (+ 1 (+ 1 1)));如果强行format的话，就会变成一个多层多次缩进的，向右凸起的金字塔，极为丑陋，但是如果不这么做，又无法保证顺序，所以为了保证顺序的同时，我们要扁平化该金字塔，那么如何保证顺序呢？用compose方法，比如： Future fut1 = Future.future();Future fut2 = Future.future();fut1.compose(asyncMyResult -&gt; &#123; ... fut2.complete(); ...&#125;, fut2);fut2.setHandler(asyncMyResult2 -&gt; &#123; ...&#125;); 那么当fut1被触发之后，如果成功，则执行compose方法里面的第一个参数，也就是那个回调函数/handler，如果失败，则直接传递给compose方法的第二个参数，也就是fut2，依次类推，便可以很轻松地组装出你想要的扁平化链条，使得多层缩进的噩梦不再。利用这种方式，可以扁平化处理vertx.eventBus()，jdbcClient.getConnection()等包含有异步callback的代码块。至于Vert.x自带的httpclient，这个稍微有些特殊，因为执行get/post等方法的时候，response handler并不能囊括全部情况，尤其是常见的超时/timeout，属于exception范畴，也就是说，要想囊括全部返回情况，至少需要response的body handler，同时也需要一个exception handler，最后还要调用end方法才能将全部常见的情况全部覆盖住，代码如下： client1.get(port, ip, url, response -&gt; &#123; response.bodyHandler(respBody -&gt; &#123; //这里处理正常返回 &#125;);&#125;).exceptionHandler(exception -&gt; &#123; //这里处理超时&#125;).end(); 如果要在这里面用future的话，需要显式处理标识成功future.complete(...)或者失败future.fail(...)另外，常见的httpClient.getNow();等方法相当于： client1.get(port, ip, url, response -&gt; &#123; response.bodyHandler(respBody -&gt; &#123; //这里处理正常返回 &#125;);&#125;).end(); 也就是没有exception handler的普通get/post等方法＋end方法，所以如果用getNow等方法发送请求，会无法捕捉处理timeout超时异常。 通过这篇文章想必对Vertx如何避免callback hell有所了解。 参考此文编辑 非常感谢。","categories":[{"name":"Vert.x3 系列","slug":"vertx","permalink":"http://test.quanke.name/categories/vertx/"}],"tags":[{"name":"Vert.x3","slug":"Vert-x3","permalink":"http://test.quanke.name/tags/Vert-x3/"},{"name":"Vertx","slug":"Vertx","permalink":"http://test.quanke.name/tags/Vertx/"}],"keywords":[{"name":"Vert.x3 系列","slug":"vertx","permalink":"http://test.quanke.name/categories/vertx/"}]},{"title":"Vert-x配置项VertxOptions的使用","slug":"Vert-x配置项VertxOptions的使用","date":"2016-04-03T22:59:52.000Z","updated":"2018-01-29T07:18:46.433Z","comments":true,"path":"posts/38014/","link":"","permalink":"http://test.quanke.name/posts/38014/","excerpt":"","text":"欢迎关注http://quanke.name/ 交流群：231419585 转载请注明出处，谢谢 今天清明节，一大早被孩子吵醒，起来撸一篇关于VertxOptions的文章，此文章诞生于洗手间，读此文章可能会闻到臭臭的味道。下面正式开始： 在发布Vert.x实例时，需要传入一个VertxOptions来实现针对Vert.x的配置项的管理，代码如下： VertxOptions options = new VertxOptions();options.setWorkerPoolSize(40)//举个栗子，设置支持的Worker线程的最大数量Vertx vertx = Vertx.vertx(options); 配置项的API说明： setEventLoopPoolSize 设置Vert.x实例中使用的Event Loop线程的数量，默认值为：2 * Runtime.getRuntime().availableProcessors()（可用的处理器个数）； setWorkerPoolSize 设置Vert.x实例中支持的Worker线程的最大数量，默认值为20； setInternalBlockingPoolSize 设置内部阻塞线程池最大线程数，这个参数主要被Vert.x的一些内部操作使用，默认值为20； setClustered 是否开启Vert.x的Cluster集群模式，默认值为false； setClusterHost 【Cluster集群模式有效】设置集群运行的默认hostname，默认值为localhost； setClusterPort 【Cluster集群模式有效】设置集群运行的端口号，可自定义固定端口号，默认值为0（随机分配）； setClusterPingInterval 【Cluster集群模式有效】使用ping命令检测Cluster的时间间隔，默认20000，单位毫秒ms，即20秒； setClusterPingReplyInterval 【Cluster集群模式有效】集群响应ping命令的时间间隔，默认20000，单位毫秒ms，即20秒； setBlockedThreadCheckInterval 阻塞线程检查的时间间隔，默认1000，单位ms，即1秒； setMaxEventLoopExecuteTime Event Loop的最大执行时间，默认2l 1000 1000000，单位ns，即2秒； setMaxWorkerExecuteTime Worker线程的最大执行时间，默认60l 1000 1000000，单位ns，即60秒； setHAEnabled 是否支持HA架构，默认值false；（*：如果Vert.x启用了HA模式，其中一个Vert.x实例运行出现了异常或者死掉，那么这个Vert.x实例中运行的Verticle会执行重发布Redeploy的过程将运行在该实例中的Verticle实例重新发布到其他正常运行的Vert.x实例中【Verticle Fail-Over】。） setHAGroup 【HA模式有效】支持了HA模式过后，可根据不同的组名将Vert.x进行逻辑分组，此方法设置当前Vert.x的逻辑组名，默认DEFAULT； setQuorumSize 【HA模式有效】支持了HA模式过后，此方法设置冲裁节点的数量，默认值1；（*：这个值一旦设置过后，如果要发布Verticle组件，则需要运行环境中的节点数量达到这个值才可执行发布，比如quorum的值设置成3，如果仅仅运行了两个Vert.x实例，那么这种情况下Verticle不会被发布，必须要运行至少三个Vert.x实例，才会执行发布Deploy流程，Undeploy流程类似） setWarningExceptionTime 如果线程阻塞时间超过了这个阀值，那么就会打印警告的堆栈信息，默认为5l 1000 1000000，单位ns，即5秒； 之后还有大招，请关注http://quanke.name/ ，马化腾群：231419585 此文参考： http://dwz.cn/32dhMF 感谢戒子猪","categories":[{"name":"Vert.x3 系列","slug":"vertx","permalink":"http://test.quanke.name/categories/vertx/"}],"tags":[{"name":"Vert.x3","slug":"Vert-x3","permalink":"http://test.quanke.name/tags/Vert-x3/"},{"name":"Vertx","slug":"Vertx","permalink":"http://test.quanke.name/tags/Vertx/"}],"keywords":[{"name":"Vert.x3 系列","slug":"vertx","permalink":"http://test.quanke.name/categories/vertx/"}]},{"title":"[Vert.x Core手册 for Java]-了解Vert.x","slug":"Vert-x-Core手册-for-Java-了解Vert-x","date":"2016-01-20T12:39:49.000Z","updated":"2018-01-29T07:18:46.432Z","comments":true,"path":"posts/3468/","link":"","permalink":"http://test.quanke.name/posts/3468/","excerpt":"","text":"欢迎关注http://quanke.name/ 交流群：231419585 转载请注明出处，谢谢 源码在github上 Vert.x Core提供的功能： 编写TCP客户端和服务器 编写 HTTP 客户端和服务器包括 Websocket 支持 事件总线(Event bus) 共享的数据-本地的map和分布式的map 定时和延时运行 部署和非部署 Verticles Sockets DNS 客户端 文件系统 高可用性 集群 Vert.x核心功能是相当简单的 — — 你不会找到数据库访问、 授权或高级别 web 功能等，这些东西你可以在哪里找到？在这里-，Vert.x ext(扩展)。 Vert.x core 非常小，非常轻量级。只是使用你想要的部分。也是完全可嵌入在您现有的应用程序 — — 不强迫你使用特殊方式架构您的应用程序，这样你可以方向使用 Vert.x。 您可以使用任何 Vert.x 支持的其他语言的核心。这有点小酷-我们不强迫你使用 Java API ，JavaScript 或者 Ruby等都没问题 — — 毕竟，不同的语言有不同的习惯和语法，迫使Ruby 开发人员使用 Java 的语法，这会很奇怪 (举个例子)。相反，我们自动生成以 Java Api 为核心，等效、地道的每种语言。 从现在起我们会使用 core 指 Vert.x core。 如果你使用 Maven 或 Gradle，需要增加以下依赖才能使用Vert.x Core API: Maven (在你的pom.xml中): &lt;dependency&gt; &lt;groupId&gt;io.vertx&lt;/groupId&gt; &lt;artifactId&gt;vertx-core&lt;/artifactId&gt; &lt;version&gt;3.2.0&lt;/version&gt;&lt;/dependency&gt; Gradle (在您的build.gradle文件): compile io.vertx:vertx-core:3.2.0 下面让我们来讨论 core 的不同概念和功能。 从Vert.x开始注意：这大部分是Java特有的-需要语言特有的调用方法 如果没有获得Vertx对象，Vert.x做不了什么。 Vertx对象是 Vert.x 的控制中心，几乎可以做所有事，包括创建客户端和服务器，获取引用到事件总线（event bus）、 设置计时器等。 所以怎么获得Vertx实例? 如果已经嵌入了 Vert.x，然后只需创建一个实例，如下所示: Vertx vertx = Vertx.vertx(); 如果使用 Verticles 注意:大多数应用程序只需要一个单一的 Vert.x 实例，但如果你需要，可以创建多个 Vert.x 实例，例如，事件总线或不同的服务器和客户端之间的隔离。 创建一个指定选项的Vertx 对象创建一个 Vertx 对象时，如果默认值不是正确的选择，你还可以指定选项: Vertx vertx = Vertx.vertx(new VertxOptions().setWorkerPoolSize(40)); VertxOptions对象有许多设置，可以配置集群、 高可用性、 池的大小等。所有设置细节在Javadoc 中有描述。 创建群集 Vert.x 对象如果您正在创建clustered（群集） Vert.x (更多集群相关的请参阅事件总线（ event bus）)，然后通常会使用异步方式创建 Vertx 对象。 这是因为不同的 Vert.x 实例在群集中组合在一起，通常需要一些时间 (也许几秒钟) 的。在这段时间，我们不想阻止调用线程，所以我们把结果以异步方式给你。 你是傻瓜吗?你可能注意到，在前面使用fluent API（fluent API：流API，更易使用的API，也称傻瓜式API）的例子。 fluent API 是支持链式调用的。例如: request.response().putHeader(&quot;Content-Type&quot;, &quot;text/plain&quot;).write(&quot;some text&quot;).end(); 整个 Vert.x Api都是这种模式，，所以要去适应它。 可以链式编写代码，当然你也可以按自己的喜欢，写上这样的代码： HttpServerResponse response = request.response();response.putHeader(&quot;Content-Type&quot;, &quot;text/plain&quot;);response.write(&quot;some text&quot;);response.end(); 不要call（调用、打电话）我们，我们会call给你。Vert.x Api 是很大程度上由事件驱动的。这意味着，当事情发生在你感兴趣的Vert.x，Vert.x 会通过回调方式向您发送events。 一些示例events: 计时器激活 socket收到数据 从磁盘读取数据 发生了异常 HTTP 服务器收到请求 通过向 Vert.x Api 提供处理程序来处理事件。例如要接收一个计时器事件每一秒你会做: vertx.setPeriodic(1000, id -&gt; &#123; // This handler will get called every second System.out.println(&quot;timer fired!&quot;);&#125;); 或接收到 HTTP 请求: server.requestHandler(request -&gt; &#123; // This handler will be called every time an HTTP request is received at the server request.response().end(&quot;hello world!&quot;);&#125;); 一段时间后当 Vert.x 有一个事件，它将传递到您的处理程序 Vert.x 将它异步调用. 这将引导我们进入Vert.x 中的一些重要概念: 不要阻塞我!除了极少数例外 (一些文件系统操作的“同步”结束)，没有一个 Vert.x Api 阻塞调用线程。 如果可以立即提供的结果，它将立即返回，你通常会提供一个handle来接收过一段时间的事件。 由于Vert.x API没有任何阻塞的线程，这意味着你可以使用Vert.x来处理只是使用小数目线程的大量并发。 常规阻塞API使用线程可能会阻塞： 从socket读取数据 向磁盘写入数据 向收件人发送一条消息，等待答复。 … 在所有上述情况下，当您的线程正在等待结果时它不能做别的-这是实际上是浪费。 这意味着，如果你需要大量的并发使用阻塞 APIs，然后你需要大量的线程，以防止您的应用程序停止工作。 线程在他们所需要的内存（例如栈）和上下文切换方面有开销。 对于许多现代应用程序所需要的并发水平，阻塞的方法不能按比例缩放。 Reactor和多Reactor之前提到Vert.x API是事件驱动 - 当他们都可用时，Vert.x传递事件给处理程序。 在大多数情况下Vertx要求使用一种称为event loop线程的处理程序。 如无有 Vert.x 或您的应用程序块中，event loop可以欢快地运行将事件传递给不同的处理程序提供事件陆续到达。 因为没有阻塞，event loop可以在短时间内提供大量的事件。例如一个单一的event loop可以非常迅速地处理成千上万的 HTTP 请求。 我们把这个叫做反应器模式（Reactor Pattern）. 你可能会有之前听说过-例如 Node.js 实现此模式。 标准的Reactor所有事件都运行在单一事件循环线程。 单个线程的麻烦是在任何一个时间它只能运行在单一的核心上(例如 Node.js 应用，如果想要实现多线程你要做很多事 。 而Vert.x 不同。不是单事件循环，每个 Vertx 实例都维护若干个事件循环。默认情况下，我们选择数量基于在机器上可用的内核数，但可以自己设置。 与 Node.js 不同是Vertx进程是可配置的，与 Node.js 不同 我们称这种模式多反应器（Multi-Reactor）模式，以区别于单线程的反应器模式。 注意：即使 Vertx 实例维护多个事件循环，任何特定的处理程序将永远不会被同时执行，在大多数情况下 (除了 worker verticles) 将始终使用完全相同的事件循环调用。 黄金法则 — 不要阻塞事件循环我们已经知道 Vert.x Api 是非阻塞，并且不会堵塞事件循环。如果你堵塞事件循环，那事件循环将不能做别的事，因为它被阻塞了。如果所有的event loop被阻塞了，应用程序将完全停止！ 所以不要这样做!你已经被警告。 阻塞的例子包括: Thread.sleep() 等待锁 等待互斥体或监视器 (例如同步段) 做一个长时间的数据库操作和等待返回 做复杂的计算，需要很长的时间。 死循环。 如果有上述情况停止了事件循环（event loop），需要相当长的时间，你应经立即去下一步，并等待进一步的指示。 这个时间具体多长？ 具体多长时间?它取决于应用程序需要的并发量。 如果你有一个单一的事件循环，并且你想要处理每秒 10000 的 http 请求，然后很明显，每个请求不能超过 0.1 ms 要处理，所以你不能阻塞比这更多的时间。 这道数学题并不是困难，作为练习留给读者。 如果您的应用程序不响应，可能你阻塞的事件循环的地方。为了帮助您诊断此类问题，如果它检测到一段时间后事件循环还没有恢复，Vert.x会自动记录警告。如果你在日志中看到这样的警告，那么你就应该去检查应用。 Thread vertx-eventloop-thread-3 has been blocked for 20458 ms Vert.x 还将提供堆栈跟踪来确定阻塞发生的位置。 如果你想关闭这些警告或更改设置，你可以在创建Vertx对象之前，使用VertxOptions配置。 运行阻塞代码在完美的世界，将没有战争或饥饿，所有 Api 将使用异步写，阳光明媚，绿色的草地有跳来跳去的兔子和手牵手的小羊羔。 但是，现实世界并不是这样。(你看过新闻最近吗?) 事实是，大多数库，特别是在JVM的生态,Y有许多是同步API，许多的方法有可能阻塞。一个很好的例子是JDBC API - 这是本质上的同步，不管如何努力尝试，Vert.x 不能撒上魔法使之同步。 我们不打算在一夜之间把一切改写成异步，所以我们需要给你提供一个方法，一个Vert.x应用中安全地使用“传统”的阻塞API的方法。 如前所述，直接在事件循环里调用阻塞操作，会妨碍它做任何其他有用的工作。所以你怎么能这样呢? 它是通过调用executeBlocking指定要执行的阻塞的代码和在执行阻塞的代码时调用返回异步结果处理程序。 通过调用executeblocking，执行阻塞代码，当阻塞代码执行完成后通过异步回调的方式返回 vertx.executeBlocking(future -&gt; &#123; // Call some blocking API that takes a significant amount of time to return String result = someAPI.blockingMethod(&quot;hello&quot;); future.complete(result);&#125;, res -&gt; &#123; System.out.println(&quot;The result is: &quot; + res.result());&#125;); 默认情况下，如果 executeBlocking 从相同的上下文 (例如同一垂直实例) 调用几次不同的 executeBlocking 则以串行方式执行 (即一个接一个)。 默认情况下，如果executeBlocking在同一环境（例如同一个verticle实例）多次调用，那么不同的executeBlocking将串行执行（即一个接一个）。 如果不关系执行顺序，调用executeBlocking时可以制定ordered参数为false。在这种情况下 executeBlocking 会与worker pool并行执行。 运行阻塞的代码替代方法是使用worker verticle worker verticle始终在worker池中的线程执行。 查看原文","categories":[{"name":"Vert.x3 系列","slug":"vertx","permalink":"http://test.quanke.name/categories/vertx/"}],"tags":[{"name":"Vert.x3","slug":"Vert-x3","permalink":"http://test.quanke.name/tags/Vert-x3/"},{"name":"Vertx","slug":"Vertx","permalink":"http://test.quanke.name/tags/Vertx/"},{"name":"Vert.x Core手册 for Java","slug":"vertx-for-java","permalink":"http://test.quanke.name/tags/vertx-for-java/"}],"keywords":[{"name":"Vert.x3 系列","slug":"vertx","permalink":"http://test.quanke.name/categories/vertx/"}]},{"title":"Vert.x 通过异步的方式使用JDBC连接SQL","slug":"Vert-x-通过异步的方式使用JDBC连接SQL","date":"2016-01-16T09:45:54.000Z","updated":"2018-01-29T07:18:46.438Z","comments":true,"path":"posts/26137/","link":"","permalink":"http://test.quanke.name/posts/26137/","excerpt":"","text":"欢迎关注http://quanke.name/ 交流群：231419585 转载请注明出处，谢谢 在这篇文章中，我们将会看到怎样在vert.x应用中使用HSQL，当然也可以使用任意JDBC，以及使用vertx-jdbc-client提供的异步的API，这篇文章的代码在github上。 异步？vert.x一个很重要的特点就是它的异步性。使用异步的API，不需要等结果返回，当有结果返回时，vert.x会主动通知。为了说明这个，我们来看一个简单的例子。 我们假设有个add方法。一般来说，会像int r = add(1, 1)这样来使用它。这是一个同步的API，所以你必须等到返回结果。异步的API会是这样：add(1, 1, r -&gt; { /*do something with the result*/})。在这个版本中，你传入了一个Handler，当结果计算出来时才被调用。这个方法不返回任何东西，实现如下： public void add(int a, int b, Handler&lt;Integer&gt; resultHandler) &#123; int r = a + b; resultHandler.handle(r);&#125; 为了避免混淆概念，异步API并不是多线程。像我们在add例子里看到的，并没有涉及多线程。 异步JDBC看了一些基本的异步的API，现在了解下vertx-jdbc-client。这个组件能够让我们通过JDBC driver与数据库交互。这些交互都是异步的，以前这样： String sql = &quot;SELECT * FROM Products&quot;;ResultSet rs = stmt.executeQuery(sql); 现在要这样： connection.query(&quot;SELECT * FROM Products&quot;, result -&gt; &#123; // do something with the result&#125;); 这个模型更高效，当结果出来后vert.x通知，避免了等待结果。 增加maven依赖在pom.xml文件中增加两个 Maven dependencies &lt;dependency&gt; &lt;groupId&gt;io.vertx&lt;/groupId&gt; &lt;artifactId&gt;vertx-jdbc-client&lt;/artifactId&gt; &lt;version&gt;3.1.0&lt;/version&gt;&lt;/dependency&gt;&lt;dependency&gt; &lt;groupId&gt;org.hsqldb&lt;/groupId&gt; &lt;artifactId&gt;hsqldb&lt;/artifactId&gt; &lt;version&gt;2.3.3&lt;/version&gt;&lt;/dependency&gt; 第一个依赖提供了vertx-jdbc-client，第二个提供了HSQL JDBC的驱动。如果你想使用另外一个数据库，修改这个依赖，同时你还需要修改JDBC url和JDBC driver名。 初始化JDBC client创建JDBC 客户端（client）： 在MyFirstVerticle类中，声明一个新变量JDBCClient jdbc，并且在start方法中添加： jdbc = JDBCClient.createShared(vertx, config(), &quot;My-Whisky-Collection&quot;); 创建了一个JDBC client实例，使用verticle的配置文件配置JDBC client。这个配置文件需要提供下面的配置才能让JDBC client正常工作： url－JDBC url，例如：jdbc:hsqldb:mem:db?shutdown=true _driver class－JDBC的驱动，例如：org.hsqldb.jdbcDriver 有了client，接下来需要连接数据库。连接数据库是通过使用jdbc.getConnection来实现的，jdbc.getConnection需要传入一个Handler&lt;AsyncResult&lt;SQLConnection&gt;&gt;参数。我们深入的了解下这个类型。首先，这是一个Handler，因此当结果准备好时它就会被调用。这个结果是AsyncResult&lt;SQLConnection&gt;的一个实例。AsyncResult是vert.x提供的一个结构，使用它能够知道连接数据库的操作是成功或失败了。如果成功了，它就会提供一个结果，这里结果是一个SQLConnection的实例。 当你接收一个AsyncResult的实例时，代码通常是： if (ar.failed()) &#123; System.err.println(&quot;The operation has failed...: &quot; + ar.cause().getMessage());&#125; else &#123; // Use the result: result = ar.result(); &#125; 需要获取到SQLConnection，然后启动rest的应用。因为变成了异步的，这需要改变启动应用的方式。因此，如果将启动序列划分成多块： startBackend( (connection) -&gt; createSomeData(connection, (nothing) -&gt; startWebApp( (http) -&gt; completeStartup(http, fut) ), fut ), fut); startBackend- 获取SQLConnection对象，然后调用下一步 createSomeData- 初始化数据库并插入数据。当完成后，调用下一步 startWebApp- 启动web应用 completeStartup- 最后完成启动 fut由vert.x传入，通知已经启动或者启动过程中遇到的问题。 startBackend方法： private void startBackend(Handler&lt;AsyncResult&lt;SQLConnection&gt;&gt; next, Future&lt;Void&gt; fut) &#123; jdbc.getConnection(ar -&gt; &#123; if (ar.failed()) &#123; fut.fail(ar.cause()); &#125; else &#123; next.handle(Future.succeededFuture(ar.result())); &#125; &#125;); &#125; 这个方法获取了一个SQLConnection对象，检查操作是否完成。如果成功，会调用下一步。失败了，就会报告一个错误。其他的方法遵循同样的模式： 检查上一步操作是否成功 处理业务逻辑 调用下一步 SQL客户端已经准备好了，现在写SQL。从createSomeData方法开始，这个方法也是启动顺序中的一部分： private void createSomeData(AsyncResult&lt;SQLConnection&gt; result, Handler&lt;AsyncResult&lt;Void&gt;&gt; next, Future&lt;Void&gt; fut) &#123; if (result.failed()) &#123; fut.fail(result.cause()); &#125; else &#123; SQLConnection connection = result.result(); connection.execute( &quot;CREATE TABLE IF NOT EXISTS Whisky (id INTEGER IDENTITY, name varchar(100), &quot; + &quot;origin varchar(100))&quot;, ar -&gt; &#123; if (ar.failed()) &#123; fut.fail(ar.cause()); connection.close(); return; &#125; connection.query(&quot;SELECT * FROM Whisky&quot;, select -&gt; &#123; if (select.failed()) &#123; fut.fail(ar.cause()); connection.close(); return; &#125; if (select.result().getNumRows() == 0) &#123; insert( new Whisky(&quot;Bowmore 15 Years Laimrig&quot;, &quot;Scotland, Islay&quot;), connection, (v) -&gt; insert(new Whisky(&quot;Talisker 57° North&quot;, &quot;Scotland, Island&quot;), connection, (r) -&gt; &#123; next.handle(Future.&lt;Void&gt;succeededFuture()); connection.close(); &#125;)); &#125; else &#123; next.handle(Future.&lt;Void&gt;succeededFuture()); connection.close(); &#125; &#125;); &#125;); &#125; &#125; 这个方法检查SQLConnection是否可用，然后执行一些SQL语句。首先，如果表不存在就创建表。看看下面代码： connection.execute( SQL statement, handler called when the statement has been executed) handler接收AsyncResult&lt;Void&gt;，例如：只有是通知而已，没有实际返回的结果。 关闭连接操作完成后，别忘了关闭SQL链接。这个连接会被放入连接池并且可以被重复利用。 在这个handler的代码里，检查了statement是否正确的执行了，如果正确，我们接下来检查表是否含有数据，如果没有，将会使用insert方法插入数据： private void insert(Whisky whisky, SQLConnection connection, Handler&lt;AsyncResult&lt;Whisky&gt;&gt; next) &#123; String sql = &quot;INSERT INTO Whisky (name, origin) VALUES ?, ?&quot;; connection.updateWithParams(sql, new JsonArray().add(whisky.getName()).add(whisky.getOrigin()), (ar) -&gt; &#123; if (ar.failed()) &#123; next.handle(Future.failedFuture(ar.cause())); return; &#125; UpdateResult result = ar.result(); // Build a new whisky instance with the generated id. Whisky w = new Whisky(result.getKeys().getInteger(0), whisky.getName(), whisky.getOrigin()); next.handle(Future.succeededFuture(w)); &#125;);&#125; 这个方法使用带有INSERT（插入）statement（声明）的upateWithParams方法，且传入了值。这个方法避免了SQL注入。一旦statement执行了（当数据库没有此条数据就会创建），就创建一个新的Whisky对象，自动生成ID。 带有数据库（SQL）的REST上面的方法都是启动顺序的一部分。但是，关于调用REST API的方法又是怎么样的呢？以getAll方法为例。这个方法被web应用前端调用，并检索存储的所有的产品： private void getAll(RoutingContext routingContext) &#123; jdbc.getConnection(ar -&gt; &#123; SQLConnection connection = ar.result(); connection.query(&quot;SELECT * FROM Whisky&quot;, result -&gt; &#123; List&lt;Whisky&gt; whiskies = result.result().getRows().stream().map(Whisky::new).collect(Collectors.toList()); routingContext.response() .putHeader(&quot;content-type&quot;, &quot;application/json; charset=utf-8&quot;) .end(Json.encodePrettily(whiskies)); connection.close(); // Close the connection &#125;); &#125;); &#125; 这个方法获得了一个SQLConnection对象，然后发出一个查询。一旦获取到查询结果，它会像之前的方法一样写HTTP response。getOne、deleteOne、updateOne和addOne方法都是一样的。注意，在response之后，需要要关闭SQL连接。 看下传入到query方法的handler提供的结果。获取了一个包含了查询结果的ResultSet。每一行都是一个JsonObject，因此，如果你有一个数据对象使用JsonObject作为唯一的参数，那么创建这个对象很简单。 测试需要小小的更新下测试程序，增加配置JDBCClient。在MyFirstVerticleTest类中，将setUp方法中创建的DeploymentOption对象修改成： DeploymentOptions options = new DeploymentOptions() .setConfig(new JsonObject() .put(&quot;http.port&quot;, port) .put(&quot;url&quot;, &quot;jdbc:hsqldb:mem:test?shutdown=true&quot;) .put(&quot;driver_class&quot;, &quot;org.hsqldb.jdbcDriver&quot;) ); 除了http.port，还配置了JDBC url和JDBC驱动。测试时，使用的是一个内存数据库。在src/test/resources/my-it-config.json文件中也要做同样的修改。 &#123; &quot;http.port&quot;: $&#123;http.port&#125;, &quot;url&quot;: &quot;jdbc:hsqldb:mem:it-test?shutdown=true&quot;, &quot;driver_class&quot;: &quot;org.hsqldb.jdbcDriver&quot;&#125; src/main/conf/my-application-conf.json文件也同样需要修改，这不是为了测试，而是为了运行这个应用： &#123; &quot;http.port&quot; : 8082, &quot;url&quot;: &quot;jdbc:hsqldb:file:db/whiskies&quot;, &quot;driver_class&quot;: &quot;org.hsqldb.jdbcDriver&quot;&#125; 这里这个JDBC url和上一个文件的有点不一样，因为需要将数据库存储到硬盘中。 展示时间！开始构建程序： mvn clean package 没有修改API（没有更改发布的java文件和REST接口），测试应该是可以顺利的运行的。 启动应用： java -jar target/my-first-app-1.0-SNAPSHOT-fat.jar -conf src/main/conf/my-application-conf.json 访问http://localhost:8082/assets/index.html，然后，你可以看到这个应用使用的是数据库了。这一次，就算重启应用，这些数据仍然在，因为存储产品被持久化到硬盘里了。 总结这篇文章中，知道了怎么在vert.x里使用JDBC数据库，并没有很多复杂的东西。开始可能会被这个异步的开发模型惊讶到，但是，一旦你开始使用了，你就很难再回去了。 下一次，我们将看到这个应用怎么使用mongoDB来替换HSQL。 Stay tuned, and happy coding !","categories":[{"name":"Vert.x3 系列","slug":"vertx","permalink":"http://test.quanke.name/categories/vertx/"}],"tags":[{"name":"Vert.x3","slug":"Vert-x3","permalink":"http://test.quanke.name/tags/Vert-x3/"},{"name":"Vertx","slug":"Vertx","permalink":"http://test.quanke.name/tags/Vertx/"}],"keywords":[{"name":"Vert.x3 系列","slug":"vertx","permalink":"http://test.quanke.name/categories/vertx/"}]},{"title":"怎样写一个安全的Vert.x Web apps","slug":"怎样写一个安全的Vert-x-Web-apps","date":"2016-01-16T08:36:32.000Z","updated":"2018-01-29T07:18:46.562Z","comments":true,"path":"posts/43843/","link":"","permalink":"http://test.quanke.name/posts/43843/","excerpt":"","text":"欢迎关注http://quanke.name/ 交流群：231419585 转载请注明出处，谢谢 此文只是对vert.x Web应用程序的入门指导（大神请绕道）。 这绝不是对Web应用程序安全性的全面指导，如OWASP。 标准规则和惯例适用于vert.x应用程序。 不要用root身份运行DEVOPS团队成员会经常说，只给必要的运行权限，不要多给。有些新手试图以root用户在80或443端口下运行，虽然这样简单，但也为坏蛋打开一扇门。 让我们看看下面的代码： public class App extends AbstractVerticle &#123; @Override public void start() &#123; Router router = Router.router(vertx); router.route().handler(StaticHandler.create(&quot;&quot;)); vertx.createHttpServer().requestHandler(router::accept).listen(80); &#125;&#125; 当与开始CWD设置为/ (java -Dvertx.cwd=/ ...)你就创建了一个简单的文件服务器，给所有服务器存储。 现在，假设你要启动这个程序，会打印如下错误： Aug 26, 2015 2:02:18 PM io.vertx.core.http.impl.HttpServerImplSEVERE: java.net.SocketException: Permission denied 如果你现在使用root运行的，浏览器输入http://localhost/etc/shadow，恭喜你，你的服务器logins 和 passwords 暴露了 ！ 有几种方法，可以root用户运行，使用iptables请求转发到更高的端口，使用authbind，配置代理服务器ngnix等… Sessions许多应用程序要处理在某些时候用户会话。 会话Cookie应该有SECURE和HTTPOnly设置的标志，只发送HTTPS（在使用HTTPS？），也没有脚本访问cookie的客户端： Router router = Router.router(vertx); router.route().handler(CookieHandler.create()); router.route().handler(SessionHandler .create(LocalSessionStore.create(vertx)) .setCookieHttpOnlyFlag(true) .setCookieSecureFlag(true) ); router.route().handler(routingContext -&gt; &#123; Session session = routingContext.session(); Integer cnt = session.get(&quot;hitcount&quot;); cnt = (cnt == null ? 0 : cnt) + 1; session.put(&quot;hitcount&quot;, cnt); routingContext.response().end(&quot;Hitcount: &quot; + cnt); &#125;); vertx.createHttpServer().requestHandler(router::accept).listen(8080); 在这种情况下，检查浏览器，应该看到： 你的浏览器的脚本有读取的能力，可以嗅探劫持或篡改您的会话。 Security Headers有很多的安全headers有助于提高安全性，只需几行代码。 没有必要在这里解释，因为网上有很好的文章说的做得可能会比我更好。 怎么实现： public class App extends AbstractVerticle &#123; @Override public void start() &#123; Router router = Router.router(vertx); router.route().handler(ctx -&gt; &#123; ctx.response() // do not allow proxies to cache the data .putHeader(&quot;Cache-Control&quot;, &quot;no-store, no-cache&quot;) // prevents Internet Explorer from MIME - sniffing a // response away from the declared content-type .putHeader(&quot;X-Content-Type-Options&quot;, &quot;nosniff&quot;) // Strict HTTPS (for about ~6Months) .putHeader(&quot;Strict-Transport-Security&quot;, &quot;max-age=&quot; + 15768000) // IE8+ do not allow opening of attachments in the context of this resource .putHeader(&quot;X-Download-Options&quot;, &quot;noopen&quot;) // enable XSS for IE .putHeader(&quot;X-XSS-Protection&quot;, &quot;1; mode=block&quot;) // deny frames .putHeader(&quot;X-FRAME-OPTIONS&quot;, &quot;DENY&quot;); &#125;); vertx.createHttpServer().requestHandler(router::accept).listen(8080); &#125;&#125; 保护跨站请求伪造（CSRF）Vert.x web在handler里提供了CSRF保护。下面代码增加CSRF保护： public class App extends AbstractVerticle &#123; @Override public void start() &#123; Router router = Router.router(vertx); router.route().handler(CookieHandler.create()); router.route().handler(SessionHandler .create(LocalSessionStore.create(vertx)) .setCookieHttpOnlyFlag(true) .setCookieSecureFlag(true) ); router.route().handler(CSRFHandler.create(&quot;not a good secret&quot;)); router.route().handler(ctx -&gt; &#123; ... &#125;); 该处理器(handler)增加了一个CSRF令牌(token)。 为了改变cookie（XSRF-TOKEN），设置了一个独一无二的token，即预计返回一个（X-XSRF-TOKEN）header。 限制上传上传处理一定要定义一个上限，否则你会很容易受到DDoS攻击。 例如，看看下面的代码： public class App extends AbstractVerticle &#123; @Override public void start() &#123; Router router = Router.router(vertx); router.route().handler(BodyHandler.create()); router.route().handler(ctx -&gt; &#123; ... 现在，“好心人”可以随机生成一个1GB的垃圾文件： dd if=/dev/urandom of=ddos bs=1G count=1 然后把它上传到你的服务器： curl --data-binary &quot;@ddos&quot; -H &quot;Content-Type: application/octet-stream&quot; -X POST http://localhost:8080/ 您的应用程序将愉快地处理，上面两步不断重复，它会耗尽磁盘空间或内存。 为了减轻这些类型的攻击，始终指定的最大允许上传的大小： public class App extends AbstractVerticle &#123; private static final int KB = 1024; private static final int MB = 1024 * KB; @Override public void start() &#123; Router router = Router.router(vertx); router.route().handler(BodyHandler.create().setBodyLimit(50 * MB)); 最后虽然只有几点，也应该记住。 当程序要用于生产，你还要注意更多： OWASP Top Ten Project Preventing SQL Injection in Java Testing for NoSQL injection","categories":[{"name":"Vert.x3 系列","slug":"vertx","permalink":"http://test.quanke.name/categories/vertx/"}],"tags":[{"name":"Vert.x3","slug":"Vert-x3","permalink":"http://test.quanke.name/tags/Vert-x3/"},{"name":"Vertx","slug":"Vertx","permalink":"http://test.quanke.name/tags/Vertx/"}],"keywords":[{"name":"Vert.x3 系列","slug":"vertx","permalink":"http://test.quanke.name/categories/vertx/"}]},{"title":"LiveOak 系列不再更新","slug":"LiveOak-系列不再更新","date":"2016-01-16T01:26:09.000Z","updated":"2018-01-29T07:18:46.425Z","comments":true,"path":"posts/60311/","link":"","permalink":"http://test.quanke.name/posts/60311/","excerpt":"","text":"欢迎关注http://quanke.name/ 交流群：231419585 转载请注明出处，谢谢 因为官方放弃此项目，LiveOak系列也不再更新。","categories":[{"name":"MBaaS-LiveOak系列","slug":"MBaaS-LiveOak系列","permalink":"http://test.quanke.name/categories/MBaaS-LiveOak系列/"}],"tags":[{"name":"MBaaS","slug":"MBaaS","permalink":"http://test.quanke.name/tags/MBaaS/"}],"keywords":[{"name":"MBaaS-LiveOak系列","slug":"MBaaS-LiveOak系列","permalink":"http://test.quanke.name/categories/MBaaS-LiveOak系列/"}]},{"title":"Vert.x 实现REST","slug":"Vert-x-实现REST","date":"2016-01-15T13:19:45.000Z","updated":"2018-01-29T07:18:46.435Z","comments":true,"path":"posts/36108/","link":"","permalink":"http://test.quanke.name/posts/36108/","excerpt":"","text":"欢迎关注http://quanke.name/ 交流群：231419585 转载请注明出处，谢谢 回顾在第一篇文章中开发了一个非常简单的Vert.x 3应用程序，还包括怎么测试、打包和执行。在第二篇文章中对端口进行了可变配置。 这篇文章中，开发一个CRUD（增删改查）应用，发布一个HTML页面，通过REST API与后台进行交互。RESTfull形式的API不简单，这篇文章中就不涉及了。 接下来，能看到： Vert.x Web - 使用Vert.x创建Web应用的框架 怎么发布静态资源 怎么开发REST API 这篇文章开发的代码放在GitHub上，是从第二篇文章的代码基础上进行的。 开始Vert.x Web如果你看了前面的文章，使用Vert.x Core来处理复杂的HTTP应用还是很麻烦的，所以就有了Vert.x Web，它可以使Vert.x开发一个web应用更加简单，而且不会改变Vert.x的思想。 更新pom.xml文件，添加下面的依赖： &lt;dependency&gt; &lt;groupId&gt;io.vertx&lt;/groupId&gt; &lt;artifactId&gt;vertx-web&lt;/artifactId&gt; &lt;version&gt;3.0.0&lt;/version&gt;&lt;/dependency&gt; 这就是使用Vert.x Web的唯一前提。 还记得在上一篇文章中，当请求http://localhost:8080时，返回一个Hello World消息，使用Vert.x Web完成同样的事情，打开name.quanke.study.vertx.first.MyFirstVerticle.java 类，修改start方法： @Overridepublic void start(Future&lt;Void&gt; fut) &#123; // Create a router object. Router router = Router.router(vertx); // Bind &quot;/&quot; to our hello message - so we are still compatible. router.route(&quot;/&quot;).handler(routingContext -&gt; &#123; HttpServerResponse response = routingContext.response(); response .putHeader(&quot;content-type&quot;, &quot;text/html&quot;) .end(&quot;&lt;h1&gt;Hello from my first Vert.x 3 application&lt;/h1&gt;&quot;); &#125;); // Create the HTTP server and pass the &quot;accept&quot; method to the request handler. vertx .createHttpServer() .requestHandler(router::accept) .listen( // Retrieve the port from the configuration, // default to 8080. config().getInteger(&quot;http.port&quot;, 8080), result -&gt; &#123; if (result.succeeded()) &#123; fut.complete(); &#125; else &#123; fut.fail(result.cause()); &#125; &#125; );&#125; 在开始start方法里创建了一个Router对象。router是Vert.x Web的基础，负责分发HTTP请求到handler（处理器），在Vert.x Web中还有两个很重要的概念。 Routes-定义请求的分发 Handlers-这是实际处理请求并且返回结果的地方。Handlers可以被链接起来使用。 如果明白了这3个概念（Router、Routes、Handlers），就明白了Vert.x Web的所有了。 仔细看看下面这段代码： router.route(&quot;/&quot;).handler(routingContext -&gt; &#123; HttpServerResponse response = routingContext.response(); response .putHeader(&quot;content-type&quot;, &quot;text/html&quot;) .end(&quot;&lt;h1&gt;Hello from my first Vert.x 3 application&lt;/h1&gt;&quot;);&#125;); 将访问”/“（http://localhost:8080/）的请求“路由”到指定的handler。Handlers接收RoutingContext对象。这个handler的方法和我们之前的代码很像，他们操作的是同一个HttpServerResponse类型的对象。 让我们来看看剩下的代码： vertx .createHttpServer() .requestHandler(router::accept) .listen( // Retrieve the port from the configuration, // default to 8080. config().getInteger(&quot;http.port&quot;, 8080), result -&gt; &#123; if (result.succeeded()) &#123; fut.complete(); &#125; else &#123; fut.fail(result.cause()); &#125; &#125; );&#125; 除了改变了request handler，基本和之前的代码一样。传router::accept给handler。你可能对这个符号不太熟悉。它表示引用一个方法（这里是引用router的accept方法）。换句话说，当接收到一个请求的时候，告诉vert.x从router里调用accept方法。 让我们来看下它是怎么工作的： mvn clean packagejava -jar target/my-first-app-1.0-SNAPSHOT-fat.jar 浏览器打开http://localhost:8080，你会看到Hello的消息。 发布静态资源现在有了第一个使用Vert.x Web开发的应用。先在写增加一个index.html页面（静态资源）。 这个HTML页面将会是我们应用的入口。在src/main/resources/assets目录下，index.html文件在github上。此文不涉及这个文件的细节。 基本上，就是一个简单的CRUD的UI界面，actions是由通过AJAX调用的REST API执行的。 创建完了页面后，编辑name.quanke.study.vertx.first.MyFirstVerticle类，并修改start方法： @Overridepublic void start(Future&lt;Void&gt; fut) &#123; Router router = Router.router(vertx); router.route(&quot;/&quot;).handler(routingContext -&gt; &#123; HttpServerResponse response = routingContext.response(); response .putHeader(&quot;content-type&quot;, &quot;text/html&quot;) .end(&quot;&lt;h1&gt;Hello from my first Vert.x 3 application&lt;/h1&gt;&quot;); &#125;); // Serve static resources from the /assets directory // 将访问“/assets/*”的请求route到“assets”目录下的资源 router.route(&quot;/assets/*&quot;).handler(StaticHandler.create(&quot;assets&quot;)); vertx .createHttpServer() .requestHandler(router::accept) .listen( // Retrieve the port from the configuration, // default to 8080. config().getInteger(&quot;http.port&quot;, 8080), result -&gt; &#123; if (result.succeeded()) &#123; fut.complete(); &#125; else &#123; fut.fail(result.cause()); &#125; &#125; );&#125; 就这段代码和前面的不同： router.route(&quot;/assets/*&quot;).handler(StaticHandler.create(&quot;assets&quot;)); 这一行是什么意思？挺简单的。将访问“/assets/*”的请求route到“assets”目录下的资源。现在可以通过http://localhost:8080/assets/index.html来访问index.html了。 测试之前，我们花一些时间来看一下handler的创建。所有的处理请求动作在Vert.x Web里都实现成handler。而创建一个handler需要调用create方法。 编译、运行： mvn clean packagejava -jar target/my-first-app-1.0-SNAPSHOT-fat.jar 浏览器，输入http://localhost:8080/assets/index.html。 现在这个table是空的。那是因为我们还没有实现REST的API。现在让我们来开始吧。 使用Vert.x Web实现REST APIVert.x Web实现REST API很简单。看下面： GET /api/whiskies =&gt; 获取所有的威士忌（getAll） GET /api/whiskies/:id =&gt; 获取指定id的威士忌（getOne） POST /api/whiskies =&gt;添加一瓶威士忌（addOne） PUT /api/whiskies/:id =&gt; 编辑一瓶威士忌(updateOne) DELETE /api/whiskies/id =&gt; 删除一瓶威士忌(deleteOne) 我们需要一些数据。。。在实现REST API之前，需要创建Whisky的数据模型。使用下面的内容创建src/main/java/quanke/name/study/vertx/first/Whisky.java： package name.quanke.study.vertx.first;import java.util.concurrent.atomic.AtomicInteger;public class Whisky &#123; private static final AtomicInteger COUNTER = new AtomicInteger(); private final int id; private String name; private String origin; public Whisky(String name, String origin) &#123; this.id = COUNTER.getAndIncrement(); this.name = name; this.origin = origin; &#125; public Whisky() &#123; this.id = COUNTER.getAndIncrement(); &#125; public String getName() &#123; return name; &#125; public String getOrigin() &#123; return origin; &#125; public int getId() &#123; return id; &#125; public void setName(String name) &#123; this.name = name; &#125; public void setOrigin(String origin) &#123; this.origin = origin; &#125;&#125; 这是一个很简单的bean类。因为Vert.x依赖Jackson来处理JSON格式,Jackson能够自动序列化和反序列化bean类，让代码变得更简单，所以选择这样的格式。 现在，创建几瓶威士忌。在MyFirstVerticle类中，添加下面的代码： // Store our product// 存储产品private Map&lt;Integer, Whisky&gt; products = new LinkedHashMap&lt;&gt;();// Create some product// 创建一些产品private void createSomeData() &#123; Whisky bowmore = new Whisky(&quot;Bowmore 15 Years Laimrig&quot;, &quot;Scotland, Islay&quot;); products.put(bowmore.getId(), bowmore); Whisky talisker = new Whisky(&quot;Talisker 57° North&quot;, &quot;Scotland, Island&quot;); products.put(talisker.getId(), talisker);&#125; 然后，在start方法里，调用createSomeData方法： @Overridepublic void start(Future&lt;Void&gt; fut) &#123; createSomeData(); // Create a router object. Router router = Router.router(vertx); // Rest of the method&#125; 在这里并没有一个后台数据库。仅使用一个map，将数据存储在内存中。添加后端数据库的介绍我准备放在另一篇文章中讲。 获得产品（威士忌）GET /api/whiskies，JSON数组中返回产品列表。 在start方法里，添加下面这行（static handler）： router.get(&quot;/api/whiskies&quot;).handler(this::getAll); 告诉router调用getAll方法来处理&quot;/api/whiskies&quot;的GET请求。代码可以写在handler里，但是为了让代码更加清晰，另外创建一个方法： private void getAll(RoutingContext routingContext) &#123; routingContext.response() .putHeader(&quot;content-type&quot;, &quot;application/json; charset=utf-8&quot;) .end(Json.encodePrettily(products.values()));&#125; 每一个handler（比如：请看上面的代码）都会接受一个RoutingContext参数。通过设置content-type和一些内容来填充response。因为内容可能会碰到特殊的字符，所以强制使用UTF-8的格式。创建内容的时候，并不需要自己去处理JSON格式的字符串。Vert.x有处理Json的API。使用Json.encodePrettily(products.values())处理JSON字符串。本应使用Json.encodePrettily(products)，但是为了让JavaScript代码更简单，我们仅返回威士忌（产品）的数据集合，并没有返回包含Id=&gt;Bottle的键值对。 打包运行： mvn clean packagejava -jar target/my-first-app-1.0-SNAPSHOT-fat.jar 浏览器访问http://localhost:8080/assets/index.html，然后你将会看到下面这个页面。 很好奇，想看一下REST API到底返回了什么。打开浏览器，访问http://localhost:8080/api/whiskies。你会看到下面这样的信息： [ &#123; &quot;id&quot; : 0, &quot;name&quot; : &quot;Bowmore 15 Years Laimrig&quot;, &quot;origin&quot; : &quot;Scotland, Islay&quot;&#125;, &#123; &quot;id&quot; : 1, &quot;name&quot; : &quot;Talisker 57° North&quot;, &quot;origin&quot; : &quot;Scotland, Island&quot;&#125; ] 创建一个产品能获取到威士忌（产品）了，现在需要创建一个产品。不像之前的REST API，这一次，需要读取request的body。因为性能的原因，它应该被显式地启用。不要怕，这也仅仅是一个handler而已。 在start方法中，添加下面的内容到getAll的后面： router.route(&quot;/api/whiskies*&quot;).handler(BodyHandler.create());router.post(&quot;/api/whiskies&quot;).handler(this::addOne); 第一行允许&quot;/api/whiskies&quot;下的所有route读取请求的body。通过使用router.route().handler(BodyHandler.create())，能让它在全局生效。 第二行将对/api/whiskies的POST请求映射到addOne方法。让我们来创建这个方法： private void addOne(RoutingContext routingContext) &#123; final Whisky whisky = Json.decodeValue(routingContext.getBodyAsString(), Whisky.class); products.put(whisky.getId(), whisky); routingContext.response() .setStatusCode(201) .putHeader(&quot;content-type&quot;, &quot;application/json; charset=utf-8&quot;) .end(Json.encodePrettily(whisky));&#125; 开始从请求的body中取出Whisky对象。只是将body读成一个字符串并将它传入到Json.decodeValue方法里。Whisky这个对象一旦创建好，将被添加到后台的map中，并以JSON的格式返回。 重新编译并且运行： mvn clean packagejava -jar target/my-first-app-1.0-SNAPSHOT-fat.jar 刷新HTML页面，点击Add a new bottle按钮。输入数据，如：“quanke” 作为名字， “quanke.name” 作为产地 ，就OK了。 状态码 201 ？CREATED和在REST API中创建一个entity时，response的状态码为201。。默认的vert.x web设置一个200的状态码代表OK。 删除一个产品在start方法里，添加： router.delete(&quot;/api/whiskies/:id&quot;).handler(this::deleteOne); 在URL里，参数为：:id。在处理一个相匹配的请求的时候，Vert.x提取路径中与这个参数对应的一段，能够在handler中获得。例如，/api/whiskies/0将id映射为0。 看一下在handler方法中这个参数是怎样被使用的。创建一个deleteOne方法。 private void deleteOne(RoutingContext routingContext) &#123; String id = routingContext.request().getParam(&quot;id&quot;); if (id == null) &#123; routingContext.response().setStatusCode(400).end(); &#125; else &#123; Integer idAsInteger = Integer.valueOf(id); products.remove(idAsInteger); &#125; routingContext.response().setStatusCode(204).end();&#125; 状态码 204 ？状态码为204 - NO CONTENT。HTTP delete动作通常都是无返回内容的。 其他方法实现getOne和updateOne很简单，和上面的差不多，此文不再详细介绍。源码在github上 总结此文介绍了如何用Vert.x web轻松的实现一个REST API，如何访问静态资源。比以前的文章复杂些，但仍然还是很简单。","categories":[{"name":"Vert.x3 系列","slug":"vertx","permalink":"http://test.quanke.name/categories/vertx/"}],"tags":[{"name":"Vert.x3","slug":"Vert-x3","permalink":"http://test.quanke.name/tags/Vert-x3/"},{"name":"Vertx","slug":"Vertx","permalink":"http://test.quanke.name/tags/Vertx/"}],"keywords":[{"name":"Vert.x3 系列","slug":"vertx","permalink":"http://test.quanke.name/categories/vertx/"}]},{"title":"Vert.x 应用的配置","slug":"Vert-x-应用的配置","date":"2016-01-14T23:40:12.000Z","updated":"2018-01-29T07:18:46.434Z","comments":true,"path":"posts/54943/","link":"","permalink":"http://test.quanke.name/posts/54943/","excerpt":"","text":"欢迎关注http://quanke.name/ 交流群：231419585 转载请注明出处，谢谢 在上篇文章中，开发了一个简单的Vert.x应用，介绍了怎么测试，打包和执行，这仅仅是一个开始，在这篇文章中，我们通过配置来提高应用。 还记得，在上一个应用中有HTTP server，监听8080端口，应答一个“Hello”的消息，上篇文章的代码在这里，本篇文章的代码在github 为什么需要配置？这个问题非常好。这个应用是正常工作的，但是如果当你部署在8080端口已经被占领了的机器上，如果要部署在这个机器上，我们就需要到代码里修改应用程序和测试里的端口了，这不能忍受，很幸运的是Vert.x配置一下就可以了。 Vert.x使用的是JSON格式配置的，所以很简单，可以使用API传给verticle或者命令行，我们来看一看。 不使用 ‘8080’ 端口第一步是修改name/quanke/study/vertx/first/MyFirstVerticle.java类，从配置里读取端口，而不8080绑定，默认是8080端口： public void start(Future&lt;Void&gt; fut) &#123; vertx .createHttpServer() .requestHandler(r -&gt; &#123; r.response().end(&quot;Hello from my first &quot; + &quot;Vert.x 3 application&quot;); &#125;) .listen( // Retrieve the port from the configuration, //从配置里检索端口 // default to 8080. //默认8080 config().getInteger(&quot;http.port&quot;, 8080), result -&gt; &#123; if (result.succeeded()) &#123; fut.complete(); &#125; else &#123; fut.fail(result.cause()); &#125; &#125; );&#125; 与上一版本的区别仅仅是listen里面的第一个参数8080换成config().getInteger(&quot;http.port&quot;, 8080)。这里，我们的代码会请求这个配置并检查http.port属性是否配置了。如果没有，将会默认使用8080端口。配置信息是从JsonObject中返回的。 默认还是使用8080，所以打包运行和以前一样： mvn clean packagejava -jar target/my-first-app-1.0-SNAPSHOT-fat.jar 使用API的方式配置 - 在测试中随机生成端口号在测试代码中，我们把端口修改成8081，部署（deploying）verticle的代码如下： vertx.deployVerticle(MyFirstVerticle.class.getName(), context.asyncAssertSuccess()); 传入部署（deploying）选项： port = 8081;DeploymentOptions options = new DeploymentOptions() .setConfig(new JsonObject().put(&quot;http.port&quot;, port));vertx.deployVerticle(MyFirstVerticle.class.getName(), options, context.asyncAssertSuccess()); post在全局变量里面声明的private Integer port; DeploymentOptions对象可以定义多个参数。将JsonObject注入到verticle的config()方法中。 连接服务器的代码需要修改一下，端口要和测试里面的一样才行。 vertx.createHttpClient().getNow(port, &quot;localhost&quot;, &quot;/&quot;, response -&gt; &#123; response.handler(body -&gt; &#123; context.assertTrue(body.toString().contains(&quot;Hello&quot;)); async.complete(); &#125;);&#125;); 这个并没有完全解决问题，如果8081端口也被占用了怎么办？我们使用随机端口： ServerSocket socket = new ServerSocket(0);port = socket.getLocalPort();socket.close();DeploymentOptions options = new DeploymentOptions() .setConfig(new JsonObject().put(&quot;http.port&quot;, port) );vertx.deployVerticle(MyFirstVerticle.class.getName(), options, context.asyncAssertSuccess()); 这种方式是很简单。打开server socket获取一个随机的端口（这也是为什么将0作为参数）。检索如果端口被占用就关闭socket。需要注意的是，这个方法并不完美，如果端口在socket.close()方法之后和HTTP服务器启动之前被占用的话，会失败。然而，这种情况如果被朋友的话，说明你非常幸运，所以大多数情况下都是没有问题的。 测试一下： mvn clean test 外部配置-在另一个端口运行在生产环境中，随机端口并不是我们想要的。所以，在实际执行应用的时候，我们需要将配置写在一个外部的文件里。这个配置的文件使用json格式。 创建src/main/conf/my-application-conf.json，内容如下： &#123; &quot;http.port&quot; : 8082&#125; 通过执行下面这句命令，在启动应用的时候，加载配置文件: java -jar target/my-first-app-1.0-SNAPSHOT-fat.jar -conf src/main/conf/my-application-conf.json 打开浏览器，然后访问 http://localhost:8082 。 编辑JSON文件，重新打包运行，端口就修改了，不需要修改源码。 这是怎么工作的？fat jar是使用Starter类来加载应用程序。当部署verticle的时候，这个类会读取-conf参数，相应的会创建一个DeploymentOptions对象。 总结在第一个应用的基础上，只增加了非常简单的代码就完成了Vertx的配置工作。下篇文章我们一起来看看通过vertx-web开发一个提供静态页面和REST API的小应用，这个更加厉害，但是也是非常简单。 Happy coding &amp; Stay tuned ! 本人英语比较烂，建议看原文","categories":[{"name":"Vert.x3 系列","slug":"vertx","permalink":"http://test.quanke.name/categories/vertx/"}],"tags":[{"name":"Vert.x3","slug":"Vert-x3","permalink":"http://test.quanke.name/tags/Vert-x3/"},{"name":"Vertx","slug":"Vertx","permalink":"http://test.quanke.name/tags/Vertx/"}],"keywords":[{"name":"Vert.x3 系列","slug":"vertx","permalink":"http://test.quanke.name/categories/vertx/"}]},{"title":"我的第一个Vert.x 3 应用","slug":"我的第一个Vert-x-3-应用","date":"2016-01-12T11:44:56.000Z","updated":"2018-01-29T07:18:46.567Z","comments":true,"path":"posts/27296/","link":"","permalink":"http://test.quanke.name/posts/27296/","excerpt":"","text":"欢迎关注http://quanke.name/ 交流群：231419585 转载请注明出处，谢谢 如果，你听到有人说Vert.x 是牛逼的。非常好！但是你自己想要尝试的话，Ok great，那么下一个问题自然是“从哪里开始？”，这篇文章是一个很好的起点。文章展示了怎么构建一个非常简单的 vert.x 应用（这没什么大不了的），怎样测试和执行vert.x应用。 文章里提到的代码在github 。 开始首先，创建一个项目，在这篇文章中使用Apache Maven,当然你可以使用Gradle 或者其他工具，使用Maven jar archetype 创建结构，但基本上只需要一个目录。 src/main/java 目录 src/test/java 目录 pom.xml 文件 会得到一个像这样的结构 .├── pom.xml├── src│ ├── main│ │ └── java│ └── test│ └── java pom.xml 文件的内容如下： &lt;project xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;&gt; &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt; &lt;groupId&gt;name.quanke.study.vertx.first&lt;/groupId&gt; &lt;artifactId&gt;my-first-app&lt;/artifactId&gt; &lt;version&gt;1.0-SNAPSHOT&lt;/version&gt; &lt;dependencies&gt; &lt;dependency&gt; &lt;groupId&gt;io.vertx&lt;/groupId&gt; &lt;artifactId&gt;vertx-core&lt;/artifactId&gt; &lt;version&gt;3.0.0&lt;/version&gt; &lt;/dependency&gt; &lt;/dependencies&gt; &lt;build&gt; &lt;plugins&gt; &lt;plugin&gt; &lt;artifactId&gt;maven-compiler-plugin&lt;/artifactId&gt; &lt;version&gt;3.3&lt;/version&gt; &lt;configuration&gt; &lt;source&gt;1.8&lt;/source&gt; &lt;target&gt;1.8&lt;/target&gt; &lt;/configuration&gt; &lt;/plugin&gt; &lt;/plugins&gt; &lt;/build&gt;&lt;/project&gt; 这个 pom.xml 文件非常简单： 声明了一个 vertx-core 依赖 配置了maven-compiler-plugin 插件（使用的是Java 8）. 第二点非常重要，Vert.x 只支持Java 8。 编码！OK，我们已经创建了一个pom.xml 文件，接下来正式开始编码，创建 src/main/java/name/quanke/study/vertx/first/MyFirstVerticle.java文件，内容如下： package name.quanke.study.vertx.first;import io.vertx.core.AbstractVerticle;import io.vertx.core.Future;public class MyFirstVerticle extends AbstractVerticle &#123; @Override public void start(Future&lt;Void&gt; fut) &#123; vertx .createHttpServer() .requestHandler(r -&gt; &#123; r.response().end(&quot;&lt;h1&gt;Hello from my first &quot; + &quot;Vert.x 3 application&lt;/h1&gt;&quot;); &#125;) .listen(8080, result -&gt; &#123; if (result.succeeded()) &#123; fut.complete(); &#125; else &#123; fut.fail(result.cause()); &#125; &#125;); &#125;&#125; 这个实际上不是最优秀的应用，这个类继承AbstractVerticle，在Vert.x的世界里verticle就是组件（是Vert.x的之行单元），通过继承AbstractVerticle类，获得vertx的入口。 当verticle部署后会调用start方法，我们也能实现 stop 方法，在这个方法里回收资源，start方法接收Future对象的参数，可以告诉用户是执行完成还是报出错误，Vert.x是异步执行的，运行的时候不会等到start方法执行完成，所以 Future 参数是非常重要的，可以通知是否已经执行完成。 在start方法里创建了一个HTTP 服务和一个请求处理器（handler），这个请求处理器使用lambda表达式，通过requestHandler方法，每次服务器收到请求，都会返回“Hello。。。”（也没有什么其他可以告诉你的东西了。。。），最后服务器绑定了一个8080端口，这里可能会失败（因为8080端口可能被使用了），通过lambda表达式检查是否连接成功，就想上面说的，调用fut.complete表示成功，调用 fut.fail 报告失败。 使用下面的命令尝试着编译应用（首先你要安装好了maven，此命令在pom.xml目录下执行，知道使用maven的都懂得）： mvn clean compile 如果幸运，编译应该是成功的。 应用就编写到这里，是不是很简单？ 测试应用开发完成了，但是我们从来都不是很认真的，所有我们需要测试一下，测试使用JUnit 和 vertx-unit。 打开pom.xml文件，增加两个依赖（dependencies）： &lt;dependency&gt; &lt;groupId&gt;junit&lt;/groupId&gt; &lt;artifactId&gt;junit&lt;/artifactId&gt; &lt;version&gt;4.12&lt;/version&gt; &lt;scope&gt;test&lt;/scope&gt;&lt;/dependency&gt;&lt;dependency&gt; &lt;groupId&gt;io.vertx&lt;/groupId&gt; &lt;artifactId&gt;vertx-unit&lt;/artifactId&gt; &lt;version&gt;3.0.0&lt;/version&gt; &lt;scope&gt;test&lt;/scope&gt;&lt;/dependency&gt; 创建 src/main/java/name/quanke/study/vertx/first/MyFirstVerticleTest.java 文件 package name.quanke.study.vertx.first;import io.vertx.core.Vertx;import io.vertx.ext.unit.Async;import io.vertx.ext.unit.TestContext;import io.vertx.ext.unit.junit.VertxUnitRunner;import org.junit.After;import org.junit.Before;import org.junit.Test;import org.junit.runner.RunWith;@RunWith(VertxUnitRunner.class)public class MyFirstVerticleTest &#123; private Vertx vertx; @Before public void setUp(TestContext context) &#123; vertx = Vertx.vertx(); vertx.deployVerticle(MyFirstVerticle.class.getName(), context.asyncAssertSuccess()); &#125; @After public void tearDown(TestContext context) &#123; vertx.close(context.asyncAssertSuccess()); &#125; @Test public void testMyApplication(TestContext context) &#123; final Async async = context.async(); vertx.createHttpClient().getNow(8080, &quot;localhost&quot;, &quot;/&quot;, response -&gt; &#123; response.handler(body -&gt; &#123; context.assertTrue(body.toString().contains(&quot;Hello&quot;)); async.complete(); &#125;); &#125;); &#125;&#125; 在这里使用JUnit测试verticle，也会使用到 vertx-unit 自定义的runner，vert.x-unit很容易测试异步的vert.x应用。 在setUp方法里，创建了一个Vertx实例，deploy了verticle ,你可能已经注意到了，这与传统JUnit的@Before不一样，它接收了一个TestContext参数，TestContext对象让我们可以控制异步的测试，例如：当我们deploy了异步verticle，多个Vertx实例相互作用时，不能检测它的正确性，deployVerticle方法的第二个参数返回一个handler：context.asyncAssertSuccess()，如果verticle的状态是失败，那这个测试就是失败的，此外会等待verticle完成启动，还记得，在verticle里，我们调用了fut.complete()方法，直到等到调用fut.complete()方法才返回状态。 tearDown方法比较简单，负责回收我们创建的vertx对象。 现在我们看一下测试应用的testMyApplication方法，给应用发出请求并且拦截一个返回，发出请求和接收答复都是异步的，我们需要一种方法来控制，setUp和tearDown方法接收一个TestContext对象，当这个测试完成的时候，通过我们这个对象创建的异步的处理器（async），通知测试框架（使用async.complete()） 像这样，一个异步处理器创建好了，我们使用getNow()方法（getNow()方法是get(...).end()的捷径），创建一个HTTP客户端和发一个HTTP请求给我们的应用，响应使用lambda处理，通过另一个lambda的handler方法接收一个response body，这个body参数是这个response body（如buffer对象），检测body是否等于“Hello”字符串，并且宣布测试完成（async.complete()）。 让我们花一个分钟的时间提一下这个断言，不像传统的使用context.assert...断言，如果断言失败，它会立即中断测试，因为Vert.x 程序各方面都是异步的,所以使用这种方式断言测试很重要。 可以使用IDE或者Maven运行测试： mvn clean test 打包总结一下，我们有了应用程序和测试，接下来，给应用打包，在这篇文章中我们把应用打 成fat jar包，一个 fat jar包是一个可以独立执行的jar文件，它包含所有的运行程序所需要的依赖，Vert.x使用这种打包的方式非常方便，仅仅只有一个文件，这使它非常容易执行。 创建一个 fat jar 便捷pom.xml文件，把下面的的代码增加到&lt;/plugins&gt;标签之前： &lt;plugin&gt; &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt; &lt;artifactId&gt;maven-shade-plugin&lt;/artifactId&gt; &lt;version&gt;2.3&lt;/version&gt; &lt;executions&gt; &lt;execution&gt; &lt;phase&gt;package&lt;/phase&gt; &lt;goals&gt; &lt;goal&gt;shade&lt;/goal&gt; &lt;/goals&gt; &lt;configuration&gt; &lt;transformers&gt; &lt;transformer implementation=&quot;org.apache.maven.plugins.shade.resource.ManifestResourceTransformer&quot;&gt; &lt;manifestEntries&gt; &lt;Main-Class&gt;io.vertx.core.Starter&lt;/Main-Class&gt; &lt;Main-Verticle&gt;name.quanke.study.vertx.first.MyFirstVerticle&lt;/Main-Verticle&gt; &lt;/manifestEntries&gt; &lt;/transformer&gt; &lt;/transformers&gt; &lt;artifactSet/&gt; &lt;outputFile&gt;$&#123;project.build.directory&#125;/$&#123;project.artifactId&#125;-$&#123;project.version&#125;-fat.jar&lt;/outputFile&gt; &lt;/configuration&gt; &lt;/execution&gt; &lt;/executions&gt; &lt;/plugin&gt; 使用maven-shade-plugin 创建fat jar。在manifestEntries标签里声明我们的verticle，你也许不知道从哪里来的Starter类，实际上，它是在vertx实例化和部署verticle的时候就有创建。 这个插件的配置就是这样，我们执行： mvn clean package 应该会创建一个target/my-first-app-1.0-SNAPSHOT-fat.jar，里面嵌入了应用所有的依赖（包含vert.x自己）。 执行嗯，很高兴拥有一个 fal jar,但我们希望看到我们的应用程序的运行！正如上面所说，多亏了fat jar包装，运行vert.x应用程序是容易的： java -jar target/my-first-app-1.0-SNAPSHOT-fat.jar 然后，打开浏览器访问 http://localhost:8080。 CTRL+C停止应用运行。 总结这个Vert.x 3速成班告诉你，怎么使用Vert.x 3开发一个简单的应用，怎么测试、打包和运行，现在知道了在Vert.x 3 上任意创建令人惊奇的系统。接下来的时间看看怎么配置我们的应用。 Happy coding &amp; Stay tuned ! 本人英语比较烂，建议看原文","categories":[{"name":"Vert.x3 系列","slug":"vertx","permalink":"http://test.quanke.name/categories/vertx/"}],"tags":[{"name":"Vert.x3","slug":"Vert-x3","permalink":"http://test.quanke.name/tags/Vert-x3/"},{"name":"Vertx","slug":"Vertx","permalink":"http://test.quanke.name/tags/Vertx/"}],"keywords":[{"name":"Vert.x3 系列","slug":"vertx","permalink":"http://test.quanke.name/categories/vertx/"}]},{"title":"盗版windows7高速免费安装windows10","slug":"盗版windows7高速免费安装windows10","date":"2015-08-04T02:03:13.000Z","updated":"2018-01-29T07:18:46.563Z","comments":true,"path":"posts/1815/","link":"","permalink":"http://test.quanke.name/posts/1815/","excerpt":"","text":"欢迎关注http://quanke.name/ 转载请注明出处，谢谢 为了体验windows10，花了我一晚上的时间，让我放弃了健身，学习PMP，代价很大，其实安装很简单。 首先使用腾讯管家（360的也可以） 里的windows10硬件检测工具，检测电脑是否符合安装windows10的要求。如果是c盘不够，会建议你移动一些文件到其他盘，如果都通过后，一般会提示预约成功，但是我现在就想用，怎么办？直接windows7更新中心更新，如果更新成功了，那恭喜你，我的是盗版，没有提示更新错误，怎么办？ 这就是本文的重点了。 直接下载windows 10 安装（windows7的软件数据都在，不要担心） 百度盘下载链接: http://pan.baidu.com/s/1bnjnXBT 密码: 2r8r 下载完后解压，运行你应该就懂了吧，不懂留言吧 小技巧： 有时候使用百度网盘管家下载有点慢，把地址修改一下，把链接地址的disk修改为wap，其他的都不要改变，就可以使用迅雷下载了，不懂留言","categories":[{"name":"使用","slug":"use","permalink":"http://test.quanke.name/categories/use/"}],"tags":[{"name":"Windows10安装","slug":"windows-install","permalink":"http://test.quanke.name/tags/windows-install/"}],"keywords":[{"name":"使用","slug":"use","permalink":"http://test.quanke.name/categories/use/"}]},{"title":"MBaaS-LiveOak系列三：LiveOak官方实例-聊天","slug":"liveoak/MBaaS-LiveOak系列三：LiveOak官方实例-聊天","date":"2015-07-13T02:03:56.000Z","updated":"2018-01-29T07:18:46.596Z","comments":true,"path":"posts/31883/","link":"","permalink":"http://test.quanke.name/posts/31883/","excerpt":"","text":"欢迎关注http://quanke.name/ 交流群：231419585 转载请注明出处，谢谢","categories":[{"name":"MBaaS-LiveOak系列","slug":"MBaaS-LiveOak系列","permalink":"http://test.quanke.name/categories/MBaaS-LiveOak系列/"}],"tags":[{"name":"MBaaS","slug":"MBaaS","permalink":"http://test.quanke.name/tags/MBaaS/"},{"name":"LiveOak","slug":"LiveOak","permalink":"http://test.quanke.name/tags/LiveOak/"}],"keywords":[{"name":"MBaaS-LiveOak系列","slug":"MBaaS-LiveOak系列","permalink":"http://test.quanke.name/categories/MBaaS-LiveOak系列/"}]},{"title":"MBaaS-LiveOak系列二：LiveOak的安装和运行","slug":"liveoak/MBaaS-LiveOak系列二：LiveOak的安装和运行","date":"2015-07-11T08:41:49.000Z","updated":"2018-01-29T07:18:46.597Z","comments":true,"path":"posts/44076/","link":"","permalink":"http://test.quanke.name/posts/44076/","excerpt":"","text":"欢迎关注http://quanke.name/ 交流群：231419585 转载请注明出处，谢谢 LiveOak是Java开发，所以前提是需要有Java运行环境，Java运行环境自己百度安装，不会装Java环境的看这个还是困难的，LiveOak要求的Java环境是Java 8 下面命令是查看你的Java版本 java -version 下载地址： http://liveoak.io/downloads. 首先下载解压后执行下面的命令（$LIVEOAK_HOME是LiveOak的目录）： $LIVEOAK_HOME/bin/standalone.sh -b 0.0.0.0 之后会自动下载MongoDB 最后访问 http://localhost:8080/admin ，用户名和密码是admin LiveOak支持安装在OpenShift上 LiveOak 在OpenShift 市场上的地址https://marketplace.openshift.com/apps/10363 用户名和密码都是admin 安装LiveOak 的Docker容器 首先从Docker容器 pull下来，安装 docker pull jboss/liveoak-server 启动 docker run -it -p 8080:8080 -p 9090:9090 jboss/liveoak-server 想要在docker上用好，建议系统学习docker 如果用的是Mac系统，kitematic（https://docs.docker.com/kitematic/）可以非常简单的使用docker，在kitematic里搜索LiveOak ，安装就可以使用了，非常简单 运行效果 有问题请多多指教","categories":[{"name":"MBaaS-LiveOak系列","slug":"MBaaS-LiveOak系列","permalink":"http://test.quanke.name/categories/MBaaS-LiveOak系列/"}],"tags":[{"name":"MBaaS","slug":"MBaaS","permalink":"http://test.quanke.name/tags/MBaaS/"},{"name":"LiveOak","slug":"LiveOak","permalink":"http://test.quanke.name/tags/LiveOak/"}],"keywords":[{"name":"MBaaS-LiveOak系列","slug":"MBaaS-LiveOak系列","permalink":"http://test.quanke.name/categories/MBaaS-LiveOak系列/"}]},{"title":"MBaaS-LiveOak系列一:LiveOak简介","slug":"liveoak/MBaaS-LiveOak系列一-LiveOak简介","date":"2015-07-10T15:35:21.000Z","updated":"2018-01-29T07:18:46.598Z","comments":true,"path":"posts/55796/","link":"","permalink":"http://test.quanke.name/posts/55796/","excerpt":"","text":"欢迎关注http://quanke.name/ 交流群：231419585 转载请注明出处，谢谢 LiveOak 是一个来自红帽的全开源的 MBaaS 解决方案。MBaaS 通过提供关键的后端服务来加速移动应用的开发。 官网原话 The Open Source Mobile Services Platform 开源移动服务平台 现在国内的MBaaS服务商有不少，比如APPCan、Bmob、 Uncode（国内开源）、苹果的CloudKit和现在大红大紫的重新定义移动应用开发的APICloud，都属于MBaaS。 那什么是MBaaS呢？ http://mobile.51cto.com/news-464546.htm LiveOak提供什么功能？ 提供数据存储、账户管理、安全授权（SSO）、推送（但是这个推送是使用Google的，国内用户要哭，我计划写一个支持国内推送的插件，欢迎关注quanke.name）、客户端管理（比较弱）、业务逻辑使用js写，可以在线编辑业务逻辑、统计等功能，提供Android、iOS、js的SDK，很容易集成到自己的程序里，现在还是1.0版本，功能比较弱。 LiveOak是jboss系列的，支持jboss插件化开发，扩展非常简单，之后的文章里会一一讲到 LiveOak的官网 http://liveoak.io LiveOak源码地址 https://github.com/liveoak-io/liveoak/","categories":[{"name":"MBaaS-LiveOak系列","slug":"MBaaS-LiveOak系列","permalink":"http://test.quanke.name/categories/MBaaS-LiveOak系列/"}],"tags":[{"name":"MBaaS","slug":"MBaaS","permalink":"http://test.quanke.name/tags/MBaaS/"},{"name":"LiveOak","slug":"LiveOak","permalink":"http://test.quanke.name/tags/LiveOak/"}],"keywords":[{"name":"MBaaS-LiveOak系列","slug":"MBaaS-LiveOak系列","permalink":"http://test.quanke.name/categories/MBaaS-LiveOak系列/"}]},{"title":"android开发总结和注意事项","slug":"android/android-development-summary-and-matters-needing-attention","date":"2015-05-09T01:03:33.000Z","updated":"2018-01-29T07:18:46.580Z","comments":true,"path":"posts/4539/","link":"","permalink":"http://test.quanke.name/posts/4539/","excerpt":"","text":"做好详细设计 功能设计 数据结构设计 统一的异常处理 统一的网络请求发送 统一的命名 所有的耗时操作不能在ui线程里处理，比如数据库操作 统一配置文件 统一定义常量 统一注释 书写方法要求 书写类要求 写通用工具 统一日志打印 需要统一处理调试模式和正式发布（） 百度key不同 日志打印不同 api地址不同 统一线程处理 集成分享平台sdk，自己实现 ui方面找出相同的地方，写出样式，写出公共布局 信息修改统一通知其他界面（把详细设计写好），主要处理返回数据，点击进入需要重新从本地加载数据 怎么做详细设计 一定要细看需求，理解需求（怎么快速理解需求） 不管是谁，完整的看完需求 找到相同点和不同点 找到关联性 找出不合逻辑的需求 储备技术 图片处理 图片滤镜 图片压缩 文件后台断点上传 群功能 怎么沟通？ 在软件开发过程中，可能需要和负责不同工作的人沟通，可以很多人会向你反馈问题，需要怎么解决 相关人员找你你沟通时，首先需要判断问题的重要性，如果自己可以解决自己解决，不能解决的，向负责人反应 你找相关人员沟通时，首先需要判断问题是谁的，一定要尽量排除自己的问题，再去找人沟通，沟通时需要想好，不要耽误别人时间 软件开发流程 写项目的时候不比写demo，写demo可能就是一个人写，写了有bug也没有关系，但是项目就不同了，项目不能出现过多bug，需要多人合作开发！ 接任务 分析任务：如果不理解和自己不能胜任，一定要和负责人说，这关系到整个项目进度 详细设计：把命名想好…… 开始编码 反复测试 提交任务 习惯 做笔记，屡逻辑 随便写的有点乱，有时间继续补充","categories":[{"name":"android开发","slug":"android","permalink":"http://test.quanke.name/categories/android/"}],"tags":[{"name":"资料","slug":"data","permalink":"http://test.quanke.name/tags/data/"},{"name":"总结","slug":"conclusion","permalink":"http://test.quanke.name/tags/conclusion/"},{"name":"注意","slug":"careful","permalink":"http://test.quanke.name/tags/careful/"}],"keywords":[{"name":"android开发","slug":"android","permalink":"http://test.quanke.name/categories/android/"}]},{"title":"值得学习的一些开源项目和资料","slug":"open-souce-and-data","date":"2015-05-07T14:37:48.000Z","updated":"2018-01-29T07:18:46.529Z","comments":true,"path":"posts/29951/","link":"","permalink":"http://test.quanke.name/posts/29951/","excerpt":"","text":"https://github.com/github/android github的android开源项目 https://github.com/owncloud/android 一个私有云项目，里面涉及同步相关的东西 https://github.com/aporter/coursera-android/tree/master/Examples Coursera是免费大型公开在线课程项目（https://www.coursera.org/） https://github.com/commonsguy/cw-android 一本书的源码，适合android初学者研究 https://github.com/novoda/android-demos android demo 适合新手研究 http://www.trinea.cn/ 国人整理的一些工具，可以研究研究源码 https://github.com/zxing/zxing ZXing 二维码扫描工具，现在市面上很多应用的二维码扫描功能都是从这个修改而来，需要好好研究 https://github.com/chrisbanes/photup photup 编辑机批量上传照片到facebook上，值得研究 https://github.com/codinguser/gnucash-android 四次元-新浪微博客户端 https://github.com/eluleci/FlatUI FlatUI实现主题定制，扁平化UI效果，可以轻松实现主体切换. https://github.com/ikocijan/MagicViews MagicViews实现控件使用自定义字体，只需要在xml上设置字体 http://androidkickstartr.com/ 生成android项目 https://github.com/daimajia/AndroidViewAnimations 实现了很多动画 http://easysoft.github.io/zui/ http://www.tinygroup.org 这是一个国人写的跨平台ui框架 http://www.amsoft.cn/ andbase源码： 国人写的一个框架包含很多工具类，基本的android技术都能在这里找到 https://github.com/Trinea/android-open-project Android开源项目分类汇总 ，非常全面的GitHub开源项目汇总，不需要重复发明轮子，尽情遨游在开源世界里吧 http://www.23code.com 整理了很多开源项目 google demo https://github.com/googlesamples http://yeasy.gitbooks.io/docker_practice/ docker 开源书籍 https://github.com/sd6352051/NiftyNotification 一个不错的通知ui http://coolgithubprojects.com/ github 项目排名 https://github.com/gcacace/android-signaturepad 一个签名的项目 https://github.com/bayandin/awesome-awesomeness 国外的开源书籍 https://android-arsenal.com 国外整理的开源项目 http://www.ddpush.net 推送解决方案 https://github.com/Trinea/android-open-project Android开源项目分类汇总 带进度显示的Button 项目地址：https://github.com/dmytrodanylyk/circular-progress-button https://github.com/mikepenz/Android-LollipopShowcase 一个悬浮按钮 https://github.com/traex/RippleEffect https://github.com/siriscac/RippleView点击有扩散效果的ui https://github.com/google/material-design-icons https://github.com/baoyongzhang/SwipeMenuListView 滑动删除 https://github.com/JakeWharton/DiskLruCache 大牛写的缓存框架 https://github.com/atermenji/IconicDroid 大量矢量图标，怎么放大也不变形 https://github.com/ksky521/nodePPT 网页ppt http://www.ui.cn/Material/ 免费编程书籍 http://siberiawolf.com/free_programming/index.html android周报（内容很nice）http://www.androidweekly.cn http://square.github.io/ https://github.com/r0adkll/Slidr滑动关闭 http://blog.csdn.net/qiujuer/article/details/42471119（打造极致Material Design动画风格Button） https://github.com/JakeWharton/Telecine（屏幕录制软件） https://github.com/Raizlabs/Singleton （一个非常简洁的库，可以帮助你方便将一个对象存储在磁盘。） http://blog.csdn.net/lovelion 刘伟老师的博客 https://github.com/inaka/galgo (可以把日志打印在屏幕的工具) http://www.imooc.com AndroidSigning (https://github.com/dodocat/AndroidSigning) AndroidSigning是一个可以方便你配置和管理Android签名信息的Gradle插件，使用本插件可以让所有的开发机以及持续交付设备使用完全相同的代码进行工作.避免陷入本地配置兼容性的泥淖中, 防止私密信息泄露. http://www.devtf.cn https://github.com/bboyfeiyu/android-tech-frontier https://github.com/cjwirth/awesome-ios-ui https://github.com/Aufree/trip-to-iOS/blob/master/Top-100.md http://chuansong.me/account/awesomeport 微信推送一些技术资料 https://github.com/wasabeef/richeditor-android https://fossdroid.com android开源项目 随便写的有点乱，有时间继续补充","categories":[{"name":"android开发","slug":"android","permalink":"http://test.quanke.name/categories/android/"}],"tags":[{"name":"资料","slug":"data","permalink":"http://test.quanke.name/tags/data/"},{"name":"开源","slug":"开源","permalink":"http://test.quanke.name/tags/开源/"}],"keywords":[{"name":"android开发","slug":"android","permalink":"http://test.quanke.name/categories/android/"}]},{"title":"iOS 开发工程师自学计划","slug":"ios/ios-development-self-study-program","date":"2015-04-08T14:44:19.000Z","updated":"2018-01-29T07:18:46.576Z","comments":true,"path":"posts/41208/","link":"","permalink":"http://test.quanke.name/posts/41208/","excerpt":"","text":"预备 1、文件管理器 Finder2、iWork 使用 Numbers,Keynote,Pages3、Safari 浏览器 Mac Os 的使用，iWork 的使用 iOS 开发基础 1、Xcode、SVN、Git2、C 语言是 iOS 开发的入门基础 语言，本部分主要介绍 C语言 的基本语法，程序结构，以 及指针的各种操作。为接下 来 Objective-C 语言的学习打下基础。 1、iOS 开发的系统环境介绍、 Xcode 集成开发环境详解、常用软件的介绍2、数据类型、常量和变量、运算符、赋值语句和表达式；分支、循环3、函数，数组（一维数组、二维数组、多维数组） ，结构体4、指针数组、数组指针，结构体指针5、指向指针的指针，宏定义、枚举，const，static Objective-C 是 iOS 与 Mac OS 开发的主要语言， 它是对 C 语言的扩展，并融入了面向对 象的特点。包含封装、继 承、多态三大特性， 本部分 主要介绍 OC 的基本语法， 新 的特性，内存管理等内容 1、面向对象 （OOP） 和面向过程、 类 （Class）和对象（Object） 、类的定义2、创建对象、self 和 super 关键字、属性以及点语法 （nonatomic， assign、 retain 、 copy，readonly、readwrite）3、便利构造器、单例（Singleton）4、堆栈、内存管理（ alloc、copy、retain ，release、autorelease， strong、weak）5、键值编码 （KVC） 、 键值监听 （KVO） 、 通知中 心 （ NSNotificationCenter ）、 通 知（NSNotification）6、类目（Category） 、延展（Extention） 、协议（protocol） iOS 的基础框架，包含了 iOS 开发的基本数据类型，在 iOSSDK 中几乎全部 NS 开头的类都 属于这个框架，我们将详细介绍开发中常用的类。 1、字符串（ NSString NSMutableString) 、数值对象(NSNumber NSValue)2 、数组（ NSArray,NSMutableArray ） 、字典(NSDictionary,NSMutableDictionary) 、 集 合(NSSet,NSMutableSet) 、快速 枚举 (for…in)NSIndexPath3 、日 期 与 时 间 (NSDate) 、 日 期 格 式(NSDataFormatter)、日历 (NSCalendar)、定时器(NSTimer)4 、文 件 管 理 (NSFileManager) 、 程 序 包(NSBundle)、缓冲区(NSData)5 、网络连接 (NSURLConnection) 、网络地址(NSURL)、网络请求 (NSURLRequest)、请求回应(NSResponse)、错误信息处理(NSError)6 、MVC 编程,简单控件一:标签(UILabel)、文本输入(UITextField)、 按钮 (UIButton)、 提示框(UIAlertView、UIActionSheet)、7、使用面向对象 OOP 方法, 实施计算机 APP应用. 要求学员应用前期学习中的大部 分知识点.8、沙箱 iOS 开发高级 UIKit 处于 Cocoa 四层结构的 最上层 CocoaTouch 层， 是 iOS开发中的控件框架， 定义了 几乎全部可视化控件， 在 iOS 开发中占据绝对地位，我们 不仅会学习各个控件的用 法，而且会讲述各个控件在 不同版本系统里的样式，教 大家如何自定义控件样式。 学完他们我们就可以做自己 个性化的界面了。1、窗口(UIWindow)、视图(UIView)、应用程序(UIApplication)2 、绘图（ drawRect ） 、 QuartzCoreDemo 、CGContextRef3 、触摸 (UITouch) 、事件 (UIEvent) 、手势(UIGestureRecognizer)、 UIResponder、 消息传递、响应者链4、 UIView 以及 CALayer 动画 （CAAnimation、CABasicAnimation、 CAKeyFrameAnimation）5、活动提示(UIActivityIndicatorView)、图像(UIImageView)6、 控件二:滚动视图(UIScrollView)、 页控制器(UIPageControl) 、 开关 (UISwitch) 、 单选(UISegmentControl)、滑块(UISlider)7、控件三:多行文本(UITextView)、网页视图(UIWebView)、滚轮 (UIPickerView)、日期滚轮 (UIDatePickerView) 、 表 格 视 图(UITableView)、 表格项(UITableViewCell)8、视图控制器(UIViewController)、导航控制器 (UINavigationController) 、 标 签 控制 器(UITabBarController) 、 表 格 控 制 器(UITableViewController) 、 相 册 控 制 器(UIImagePickerController) iphone Safari 浏览器原型 App。1、结合前期所学知识，应用 UIKit 框架详解中所学的高级 UI 控件及知识点，模拟 实现Safari 浏览器 iOS 应用特性框架是对上述两 个框架之外其他框架的统 称。主要内容为：音 频、视频的播放、照相机的 使用、加速计的应用，地图 框架的使用、短信、邮件的 应用等等，而且也会介绍当 前应用开发中使用非常广泛 的开源框架，同时还将讲解 开发者帐号的注册、真机调 试、以及程序上传。1 、音 频 播放 (AVAudioPlayer) 、 视 频 播放(MPMoviePlayerViewController) 以 及 播 放ipod 音乐2、 照相机(UIImagePickerController)以及相册的使用3 、短 信(MFMessageComposeViewController) 、 邮件(MFMailComposeViewController)的使用4、加速计(UIAccelerometer)的使用、帐号注册、真机调试、上传程序5 、地图(MKMapView) 的使用以及定位 (CoreLocation)6、数据持久化（文件读写、sqlite 数据库、 归档、NSCoding 协议） 、云存储 （iCloud）7、多线程开发（NSThread、NSLock）,操作队列(NSOperationQueue)8、网络请求（GET、POST） 、xml 解析、json解析、Socket 编程 iOS 游戏开发 2D 游戏引擎的使用, 全部课程 内容以”植物大战僵尸”为例,贯穿其中 1 、 Cocos2D HelloWorld,CCDirector( 导 演类),CCScene(场景类),CCLayer2、CCSprite(精灵类),CCAction(动作)3、CCMemu(菜单),CCLabelTTF(标签)4、CCPointParticleSystem(点粒子系统)5、练习:植物大战僵尸游戏开发 C++是目前最流行的开发语言 之一,C++基本语法,C++面象对像的特性.在 XCode 下如何 使用 C++语言编程. 1、在 Xcode 下编译 C++ 程序,C++ 类 Class,成员变量,成员函数,对象的创建2、构造函数与析构函数,new delete 关键字,内存管理3、继承,函数重载,操作符重载,拷贝构造4、模版 template 与泛型5、Objective-C 与 C++混合编程 iOS 游戏开发中使用最多的物 理引擎,以愤怒的小鸟为例学习 Box2D 开发. 1、物理世界(b2World),刚体(b2Body),精灵与刚体连接2、碰撞测试(b2ContactListener)3、刚体的连接关节(b2Joint)4、练习:愤怒的小鸟开发5、OpenGL ES 开发基础 项目实训 做一个真 实项目，可以整理成教程发到博客，然后开源 从需求分析开始，然后技术调研，工期评 估、编码、测试、优化代 码、上传程序等 项目内容会包括几点: 1.网络数据解析 2.音视频播放3.微薄分享 4.LBS 定位应用 5.SQLite 数据库 项目会用到网络、数据库、各种常用控件、 以及各种 Foundation 类。 目前有 很多项目可以选择使用，比如：互动百科（新闻类应用） 、乐视 （电影类应 用） 、 创业邦 （杂志类应用） 、尚品网 （购物类应用） 、 雅座空间 （团购类 应用） 、 找地（定位类应用） 、 我是学家（教育类应用） 、 YY 客户端 （语 音类应用） 、麦咨达（条码扫描类应用） 、 中国建行 （银行类应用） 、CuteMath（游戏类应用） 、车震摇摇乐（娱乐类应用） 、新浪微博（微博类 应用）等等 支持聊天功能的相册应用 - 微相册 实现功能 主要是照片的展示，播放照片时播放音乐，音乐照片来自互联网分享照片到各大社交平台支持开放平台登录支持滑动出菜单TableView动画下拉刷新反馈建议关于 扩展功能","categories":[{"name":"android开发","slug":"android","permalink":"http://test.quanke.name/categories/android/"}],"tags":[{"name":"ios","slug":"ios","permalink":"http://test.quanke.name/tags/ios/"}],"keywords":[{"name":"android开发","slug":"android","permalink":"http://test.quanke.name/categories/android/"}]},{"title":"sublime text 2快捷键大全","slug":"sublime-text-2-shortcut key","date":"2014-11-29T19:53:51.000Z","updated":"2018-01-29T07:18:46.541Z","comments":true,"path":"posts/36179/","link":"","permalink":"http://test.quanke.name/posts/36179/","excerpt":"","text":"Ctrl+L 选择整行（按住-继续选择下行） Ctrl+KK 从光标处删除至行尾 Ctrl+Shift+K 删除整行 Ctrl+Shift+D 复制光标所在整行，插入在该行之前 Ctrl+J 合并行（已选择需要合并的多行时） Ctrl+KU 改为大写 Ctrl+KL 改为小写 Ctrl+D 选词 （按住-继续选择下个相同的字符串） Ctrl+M 光标移动至括号内开始或结束的位置 Ctrl+Shift+M 选择括号内的内容（按住-继续选择父括号） Ctrl+/ 注释整行（如已选择内容，同“Ctrl+Shift+/”效果） Ctrl+Shift+/ 注释已选择内容 Ctrl+Space 自动完成（win与系统快捷键冲突，需修改） Ctrl+Z 撤销 Ctrl+Y 恢复撤销 Ctrl+Shift+V 粘贴并自动缩进（其它兄弟写的，实测win系统自动缩进无效） Ctrl+M 光标跳至对应的括号 Alt+. 闭合当前标签 Ctrl+Shift+A 选择光标位置父标签对儿 Ctrl+Shift+[ 折叠代码 Ctrl+Shift+] 展开代码 Ctrl+KT 折叠属性 Ctrl+K0 展开所有 Ctrl+U 软撤销 Ctrl+T 词互换 Tab 缩进 Shift+Tab 去除缩进 Ctrl+Shift+UP 与上行互换 Ctrl+Shift+DOWN 与下行互换 Ctrl+K Backspace 从光标处删除至行首 Ctrl+Enter 插入行后 Ctrl+Shift Enter 插入行前 F9 行排序（按a-z）","categories":[{"name":"使用","slug":"use","permalink":"http://test.quanke.name/categories/use/"}],"tags":[],"keywords":[{"name":"使用","slug":"use","permalink":"http://test.quanke.name/categories/use/"}]},{"title":"android中textview字数过长解决方法","slug":"android/android-textview-word-too-long","date":"2014-11-02T17:28:56.000Z","updated":"2018-01-29T07:18:46.594Z","comments":true,"path":"posts/29552/","link":"","permalink":"http://test.quanke.name/posts/29552/","excerpt":"","text":"为了解决textview中内容过长的话自动换行，但是调用measureText函数时发现返回值很不准确，单位也不确定，是pixel还是dip，都不准。后来想起textview中有个内容过长加省略号的属性，即ellipsize，可以解决这个问题，用法如下：在xml中[code lang=”xml”]android:ellipsize = &quot;end&quot; 省略号在结尾android:ellipsize = &quot;start&quot; 省略号在开头android:ellipsize = &quot;middle&quot; 省略号在中间android:ellipsize = &quot;marquee&quot; 跑马灯[/code]最好加一个约束android:singleline = “true” 当然也可以用代码语句[code lang=”java”]tv.setEllipsize(TextUtils.TruncateAt.valueOf(&quot;END&quot;));tv.setEllipsize(TextUtils.TruncateAt.valueOf(&quot;START&quot;));tv.setEllipsize(TextUtils.TruncateAt.valueOf(&quot;MIDDLE&quot;));tv.setEllipsize(TextUtils.TruncateAt.valueOf(&quot;MARQUEE&quot;));[/code]最好再加一个约束tv.setSingleLine(true);不仅对于textview有此属性，对于editext也有，不过它不支持marquee","categories":[{"name":"android开发","slug":"android","permalink":"http://test.quanke.name/categories/android/"}],"tags":[],"keywords":[{"name":"android开发","slug":"android","permalink":"http://test.quanke.name/categories/android/"}]},{"title":"Android中如何修改系统时间（应用程序获得系统权限）","slug":"android/android-change-system","date":"2014-06-21T18:10:43.000Z","updated":"2018-01-29T07:18:46.592Z","comments":true,"path":"posts/7298/","link":"","permalink":"http://test.quanke.name/posts/7298/","excerpt":"","text":"在 android 的API中有提供 SystemClock.setCurrentTimeMillis()函数来修改系统时间，可惜无论你怎么调用这个函数都是没用的，无论模拟器还是真机，在logcat中总会得到”Unable to open alarm driver: Permission denied “.这个函数需要root权限或者运行与系统进程中才可以用。 本来以为就没有办法在应用程序这一层改系统时间了，后来在网上搜了好久，知道这个目的还是可以达到的。 第一个方法简单点，不过需要在Android系统源码的环境下用make来编译： 1\\. 在应用程序的AndroidManifest.xml中的manifest节点中加入android:sharedUserId=&quot;android.uid.system&quot;这个属性。 2\\. 修改Android.mk文件，加入LOCAL_CERTIFICATE := platform这一行 3\\. 使用mm命令来编译，生成的apk就有修改系统时间的权限了。 第二个方法麻烦点，不过不用开虚拟机跑到源码环境下用make来编译： 1\\. 同上，加入android:sharedUserId=&quot;android.uid.system&quot;这个属性。 2\\. 使用eclipse编译出apk文件，但是这个apk文件是不能用的。 3\\. 用压缩软件打开apk文件，删掉META-INF目录下的CERT.SF和CERT.RSA两个文件。 4\\. 使用目标系统的platform密钥来重新给apk文件签名。这步比较麻烦，首先找到密钥文件，在我的Android源码目录中的位置是&quot;build/target/product/security&quot;，下面的platform.pk8和platform.x509.pem两个文件。然后用Android提供的Signapk工具来签名，signapk的源代码是在&quot;build/tools/signapk&quot;下，用法为&quot;signapk platform.x509.pem platform.pk8 input.apk output.apk&quot;，文件名最好使用绝对路径防止找不到，也可以修改源代码直接使用。 这样最后得到的apk和第一个方法是一样的。 最后解释一下原理，首先加入android:sharedUserId=&quot;android.uid.system&quot;这个属性。通过Shared User id,拥有同一个User id的多个APK可以配置成运行在同一个进程中。那么把程序的UID配成android.uid.system，也就是要让程序运行在系统进程中，这样就有权限来修改系统时间了。 只是加入UID还不够，如果这时候安装APK的话发现无法安装，提示签名不符，原因是程序想要运行在系统进程中还要有目标系统的platform key，就是上面第二个方法提到的platform.pk8和platform.x509.pem两个文件。用这两个key签名后apk才真正可以放入系统进程中。第一个方法中加入LOCAL_CERTIFICATE := platform其实就是用这两个key来签名。 这也有一个问题，就是这样生成的程序只有在原始的Android系统或者是自己编译的系统中才可以用，因为这样的系统才可以拿到platform.pk8和platform.x509.pem两个文件。要是别家公司做的Android上连安装都安装不了。试试原始的Android中的key来签名，程序在模拟器上运行OK，不过放到G3上安装直接提示&quot;Package ... has no signatures that match those in shared user android.uid.system&quot;，这样也是保护了系统的安全。 最最后还说下，这个android:sharedUserId属性不只可以把apk放到系统进程中，也可以配置多个APK运行在一个进程中，这样可以共享数据，应该会很有用的。","categories":[{"name":"android开发","slug":"android","permalink":"http://test.quanke.name/categories/android/"}],"tags":[],"keywords":[{"name":"android开发","slug":"android","permalink":"http://test.quanke.name/categories/android/"}]},{"title":"今天发现的一些优秀的资源网站","slug":"e4-bb-8a-e5-a4-a9-e5-8f-91-e7-8e-b0-e7-9a-84-e4-b8-80-e4-ba-9b-e4-bc-98-e7-a7-80-e7-9a-84-e8-b5-84-e6-ba-90-e7-bd-91-e7-ab-99","date":"2014-02-25T01:36:16.000Z","updated":"2018-01-29T07:18:46.444Z","comments":true,"path":"posts/37568/","link":"","permalink":"http://test.quanke.name/posts/37568/","excerpt":"","text":"http://www.trinea.cn 一些开源项目 http://www.trinea.cn/android/android-open-source-projects-view/ android的一些工具 https://github.com/Trinea/android-common","categories":[{"name":"android开发","slug":"android","permalink":"http://test.quanke.name/categories/android/"}],"tags":[],"keywords":[{"name":"android开发","slug":"android","permalink":"http://test.quanke.name/categories/android/"}]},{"title":"用wifi连接电脑查看logcat的方法","slug":"e7-94-a8wifi-e8-bf-9e-e6-8e-a5-e7-94-b5-e8-84-91-e6-9f-a5-e7-9c-8blogcat-e7-9a-84-e6-96-b9-e6-b3-95","date":"2014-02-25T00:21:20.000Z","updated":"2018-01-29T07:18:46.466Z","comments":true,"path":"posts/32783/","link":"","permalink":"http://test.quanke.name/posts/32783/","excerpt":"","text":"通过wifi将Android设备连接到电脑。从SDK 的 platform-tools 目录，在命令行输入adb tcpip 5555输入：adb connect &lt;设备的IP地址&gt;:5555 ，你现在将被连接到Android设备并能像adb logcat一样发出通用的adb命令。","categories":[{"name":"android开发","slug":"android","permalink":"http://test.quanke.name/categories/android/"}],"tags":[],"keywords":[{"name":"android开发","slug":"android","permalink":"http://test.quanke.name/categories/android/"}]},{"title":"学习交流网站收藏","slug":"e5-ad-a6-e4-b9-a0-e4-ba-a4-e6-b5-81-e7-bd-91-e7-ab-99-e6-94-b6-e8-97-8f","date":"2013-03-03T22:04:53.000Z","updated":"2018-01-29T07:18:46.463Z","comments":true,"path":"posts/7532/","link":"","permalink":"http://test.quanke.name/posts/7532/","excerpt":"","text":"论坛社区: &nbsp; ◤ 安卓巴士 ◢ [一个人数较多的一个安卓开发交流论坛] ♫ ♬ ♪ &nbsp; ◤ AndroidFans ◢ [我所在一个群某人建的,也算多人吧] ♫ ♬ ♪ &nbsp; ◤ eoeAndroid ◢ [也是一个比较大的社区,源码多] ♫ ♬ ♪ &nbsp; ◤ 巨卓网 ◢ [比较新的源码交流论坛,起码不是陈旧代码] ♫ ♬ ♪ &nbsp; ◤ Mars论坛 ◢ [他做的视频教程很不错,我很喜欢看] ♫ ♬ ♪ 项目源码: &nbsp; ◤ GoogleSource ◢ [google送的开源项目,非常丰富,用git就可以下载了] ♫ ♬ ♪ &nbsp; ◤ WAP地带 ◢ [里面有大量项目,功能源码] ♫ ♬ ♪ &nbsp; ◤ 开源中国 ◢ [一个跟CSDN差不多的社区吧] ♫ ♬ ♪ 热闹的千人Q群: [86577594] -&gt; [84132937] -&gt; [199511256] -&gt; [83936534] -&gt; 适合问问题,偷窥技术,以及闲聊… &nbsp; 单独项目: &nbsp; Android PDF 阅读器 http://sourceforge.net/projects/andpdf/files/ 个人记账工具 OnMyMeans http://sourceforge.net/projects/onmymeans/develop Android电池监控 Android Battery Dog http://sourceforge.net/projects/andbatdog/ RSS阅读软件 Android RSS http://code.google.com/p/android-rss/ Android的PDF阅读器 DroidReader http://code.google.com/p/droidreader/ Android Scripting Environment http://code.google.com/p/android-scripting/ Android小游戏 Android Shapes http://sourceforge.net/projects/shapes/ Android JSON RPC http://code.google.com/p/android-json-rpc/ Android VNC http://code.google.com/p/android-vnc/ 魅族M8的Android移植 M8 Android http://code.google.com/p/m8-android-kernel/ Android 游戏 Amazed http://code.google.com/p/apps-for-android/ Android的社交网络 HelloWorld goes mobile http://sourceforge.net/projects/helloworldgm/ 手机聊天程序 Android jChat http://code.google.com/p/jchat4android/ Android的GPS轨迹记录 MyTracks http://code.google.com/p/mytracks/ Android国际象棋游戏 Honzovy achy http://sourceforge.net/projects/honzovysachy/ Android旅行记录软件 AndTripLog http://sourceforge.net/projects/andtriplog/ 音乐播放器 Ambient http://sourceforge.net/projects/ambientmp/ Android的邮件客户端 K9mail http://code.google.com/p/k9mail/ 多平台应用开发库 QuickConnect http://sourceforge.net/projects/quickconnect/ gPhone手机空战游戏 http://code.google.com/p/wireless-apps/ Android 照片小软件 Panoramio http://code.google.com/p/apps-for-android/ i-jetty http://code.google.com/p/i-jetty/ Android 小游戏 DivideAndConquer http://code.google.com/p/apps-for-android/ Android 全球时间 AndroidGlobalTime http://code.google.com/p/apps-for-android/ Android 2D游戏引擎 Android Angle http://code.google.com/p/angle/ Android Ruby http://code.google.com/p/android-ruby/ Android-N810 http://sourceforge.net/projects/android-n810/ Android的短信应用 Ecclesia http://sourceforge.net/projects/ecclesia Android平台上的JXTA客户端 Peerdroid http://code.google.com/p/peerdroid/ Android游戏引擎 libgdx http://code.google.com/p/libgdx/ Android 照片小软件 Photostream http://code.google.com/p/apps-for-android/ Alien3d logo Android 3D游戏引擎 Alien3d http://code.google.com/p/alien3d/ Winamp Remote Android Server http://sourceforge.net/projects/winampdroid Android的Facebook客户端 Andrico http://code.google.com/p/andrico/ Android Applications Manager http://sourceforge.net/projects/aam/ Java 3D图形引擎 Catcake http://code.google.com/p/catcake/ android-gcc-objc2-0 http://code.google.com/p/android-gcc-objc2-0/ 九宫格数独游戏 OpenSudoku http://code.google.com/p/opensudoku-android/ Android 铃声扩展工具 RingsExtended http://code.google.com/p/apps-for-android/ JavaEye Android client http://code.google.com/p/javaeye-android-client/ RemoteDroid http://code.google.com/p/remotedroid/ Android 小游戏 Clickin2DaBeat http://code.google.com/p/apps-for-android/ 中医大夫助理信息系统 zz-doctor http://code.google.com/p/zz-doctor/ Facebook Connect for Android http://code.google.com/p/fbconnect-android/ Android SMSPopup http://code.google.com/p/android-smspopup/ FreeTTS-Android http://sourceforge.net/projects/freettsandroidi Foursquare.com的客户端 Foursquar http://code.google.com/p/foursquared/ 条形码扫描仪 Android PC_BCR http://code.google.com/p/android-pcbcr/","categories":[{"name":"android开发","slug":"android","permalink":"http://test.quanke.name/categories/android/"}],"tags":[],"keywords":[{"name":"android开发","slug":"android","permalink":"http://test.quanke.name/categories/android/"}]},{"title":"关于HTML5令人激动的10项预测","slug":"e5-85-b3-e4-ba-8ehtml5-e4-bb-a4-e4-ba-ba-e6-bf-80-e5-8a-a8-e7-9a-8410-e9-a1-b9-e9-a2-84-e6-b5-8b","date":"2013-02-24T17:11:10.000Z","updated":"2018-01-29T07:18:46.442Z","comments":true,"path":"posts/63140/","link":"","permalink":"http://test.quanke.name/posts/63140/","excerpt":"","text":"对于 HTML5 的开发者和公司决策者们而言，现在最重要的技术是 HTML、JavaScript、CSS、移动平台和设备、以及不断改进的 HTML 平台（包括浏览器和操作系统）。这意味着，下面 10 件事情将发生在 2013 年： 1 基于HTML5移动平台的崛起 在开发跨平台 app 方面，HTML5 发挥着越来越重要的作用。目前，这种开发一般都是通过本地封装器完成的，例如 Cordova（Cordova 使得 HTML 和 JavaScript 可以在 iOS 和 Android 等平台上驱动 app）。这种技术称为混合型 app 开发。 今年，许多新兴平台把支持 HTML5 app 作为平台基本功能——不需要封装器了！这其中重要是 Google 的 Chrome OS；Firefox OS 则已经计划通过低端的中兴、TCL 设备上在欧洲开始出货；以 HTML 为中心新的平台 Tizen 得到了英特尔和三星在内的多家重量级公司支持；同样以 HTML 为中心的 Ubuntu 将带来最具流行风味的 Linux 手机；BlackBerry 10 也将 HTML 和 JavaScript 作为其下一代 app 战略的核心；还有 Windows 8，Windows 8 引入了新的 HTML、JavaScript 开发模式来开发“Windows 8 的风格”app。这些平台中，有些一定会在 2013 年取得成功。我最看好 Chrome OS 和 Tizen。 Chrome OS 有 Google 作为强大的后盾，重新修改了开发者和消费者推广方式，并具有最宽广的平台战略的优势（跨移动和桌面平台），Chrome OS 已经取得了先发优势。 而 Tizen 同时得到了英特尔、三星、NEC、松下、Sprint、华为、Vodafone 等的业界巨头最广泛的支持，并担任了 Linux 基金会工程管理的职位。Tizen 因为更加开放（更加可定制），而具有了向 Android 发起挑战的潜力。这种开发性对设备制造商非常有吸引力。 2 为Chrome定制（kit） 越来越多的网站选择只在一种浏览器上进行 app 的测试。20 世纪 90 年代是以“为 Internet Explorer 定制”为标志的，开发者们现在则以“为 Chrome 定制”来标榜他们的 app——针对 Chrome 浏览器开发，不保证一定通用。在 2013 年，这种趋势可能会进一步加速。基于 Webkit 的 Chrome 浏览器非常高效，不断的快速改进，而且几乎在所有主流操作系统（Windows、Mac、Linux、Android 和 iOS）上通用。并且，同样基于 Webkit 的 Safari 和 Blackberry 浏览器，帮助 Chrome 提供一些额外的兼容性。因此，开发人员更愿意专门为 Chrome 浏览器开发程序。虽然这样可能会疏远某些用户，但“为 Chrome 定制”可以更充分地利用 HTML5 API，节省宝贵的开发和测试时间。 3 IE 10——幸福并痛苦着 IE 10 被认为是古老 IE 浏览器的一个巨大的进步。通过对 Web 标准更深入的支持，IE 10 使 IE 浏览器进入了 HTML5 的时代。但是，面对的快速持续更新 Chrome 和 Firefox 浏览器，IE 浏览器 2013 年将再次被甩在后面。微软有将 IE 浏览器更新的更快些的希望：微软 IE9 时代建立的 HTML5 实验室在不断发布 IE10 的“实验性”改进，使其成为一个更强大的 HTML5 浏览器。虽然微软的步幅并不大，但这仍然是一个好的开始。 4。IE6、IE7和IE8的消亡 IE10 处于关注的中心，而旧版本的 IE 漫漫的消亡过程仍未完成。只有最顽固的企业和中国仍然要求支持 IE6，世界许多地方都直接跳过了 IE7。如果你还没有停止支持 IE6 和 IE7，那么在 2013 年停止吧。放弃 IE8 好像有点夸张，但是也没有什么坚持的必要。IE10 的发布使 IE8 落后了两个版本（这通常被用来当做判断是否应该放弃的标准），jQuery 2.0 将在 2013 年加入 Google app 而放弃支持 IE8。到 2013 年底，大多数开发者将发现 IE8 不值得他们浪费时间。 5 Android 2.X的消亡 Android 2.x（Eclair, Froyo and Gingerbread）看上去就像我们的手中的另一个 IE6。尽管，Google 已经开始出货 Android 4+ 的设备，但据 Google 自己的统计，截止 2012 年中期，所有的 Android 设备中 2.x 系列的 Android（主要是 2.3.x）占 90％以上！Google 未能保持其 Android 的用户群和生态系统的升级。幸运的是，2012 年的假日季（圣诞前后）似乎帮助打破这种僵局。Android 4+（Ice Cream Sandwich and Jelly Bean）的占有率在 2012 年年底飙升至近 40％。到 2013 年年底，Android 2.X 可能将占不到 15％的市场份额，而 Android 开发者将把重心切换到 4 + 版本。 6 响应式设计成为主流 到目前为止，响应式设计仍然不是 Web 开发的主流——只是“如果你有时间”，才去做的事情。这种情况将要改变。随着电脑和移动设备之间的界限越来越模糊，开发人员不得不让网站和应用程序可以动态地适应各种不可预知的屏幕尺寸和屏幕分辨率。 7 移动开发超过桌面开发 不需要高薪的分析师就能发现手机和平板电脑在增长，而传统的 PC 正在衰退。现在起，开发者将开始花更多的时间来开发用于移动设备的软件，而不是传统的 PC 程序，并从消费市场延伸到各种规模的企业，以服务所有内部和外部用户。如果你在 2013 年开发的不是移动程序，要么你是在维护传统软件，要么已经错失了良机。 8 桌面HTML应用 虽然手机应用在增长，但还没有到放弃桌面开发的时候。传统形式的桌面对许多信息产业工作者仍然非常重要。但随着 PC 变成仅是您使用的众多设备之一，开发人员会希望写的代码能跨 PC 和移动设备运行。HTML 和 JavaScript 是满足这种需求的最佳选择，比如 Chrome Packaged Apps 和 Windows Store Style (WinJS) apps 平台能让之成为可能。微软和 Google 都在推动 HTML 用于桌面应用程序的开发，开发者应及时响应并开始拥抱跨平台 HTML 和 JavaScript 桌面开发的时代。 9 SPA时代 随着 HTML 和 JavaScript 应用于桌面开发和日益复杂的移动应用程序开发，开发人员将发现他们需要新的技术来构建可维护的跨平台应用程序。得益于 Backbone, Knockout 和 Kendo UI 等功能强大的框架的支持，单页应用程序 Single Page Application（SPA）上升势头迅猛。如果“RIA（Rich Internet Applications）是在 2010 年的流行语，那么”SPA“将是 2013 年的流行语。如果你作为一个 HTML 和 JavaScript 开发人员，正在寻找一个值得学习新技术或新概念，那么在 2013 年必然是 SPA 架构。 10去掉HTML版本号 现在，W3C 已经“完成了”HTML5 规范，媒体报道和大家关注的重点将会集中在“Web 标准平台下面将推出什么”上面。W3C 已经开始致力于 HTML 5.1 标准，HTML 5.1 是下一个WHATWG（网页超文本应用技术工作组）的标准的缩影 。下一代的 HTML 平台的改进将从 HTML5 的较低级别核心（DOM 元素、CSS 样式、Simple JavaScript APIs，比如 Geolocation），转向对应用开发更为重要的改进上来（如 ShadowDOM、Web Components、CSS 布局和语音识别）。 即使版本号不来凑凑热闹，关于 HTML 讨论将会继续，HTML 技术也将继续发展。","categories":[{"name":"android开发","slug":"android","permalink":"http://test.quanke.name/categories/android/"}],"tags":[],"keywords":[{"name":"android开发","slug":"android","permalink":"http://test.quanke.name/categories/android/"}]},{"title":"数据存储方式分析","slug":"e6-95-b0-e6-8d-ae-e5-ad-98-e5-82-a8-e6-96-b9-e5-bc-8f-e5-88-86-e6-9e-90","date":"2013-01-25T22:56:07.000Z","updated":"2018-01-29T07:18:46.468Z","comments":true,"path":"posts/3455/","link":"","permalink":"http://test.quanke.name/posts/3455/","excerpt":"","text":"游戏中总是有很多相关的数据需要存储,比如编辑器产生的关卡数据,人物,物品属性的配置等等,并且现在已经不是每人都设计一种自己数据格式的时代了.程序员们是越来越懒,大家都想着一套文件格式,一套解析,处理代码能够通吃所有的程序.以下讨论,包括优缺点,都仅仅是对于游戏数据(还仅指编辑的数据)存储而言,以下都省略此前提背景,其他领域的使用本文仅供参考,游戏领域的使用本文也仅是一家之言,当然也仅供参考.首先,看看传统的数据存储解决方案. 传统数据存储解决方案EXCEL方案最大的优点是几乎人人都会更改并且可以更改而不用进一步的学习.干这行的,别说策划,即使是文秘应该起码也会EXCEL吧?缺点,需要自己写一大堆的Excel解析代码,这点是无奈的.并且,假如不想每个Excel文件都写一套解析代码的话,你就要想好一种通用,并且扩展性良好的Excel编写格式,这也不是太容易的.即使设计的Excel格式扩展性足够好,当数据慢慢复杂的时候,你会发现,事情越来越复杂…..几乎就开始将Excel做关联数据库使用了.有的时候,通过改动一些关联性很强的Excel数据来完成某个功能,甚至比你通过代码改变来实现还要复杂…..到那个时候,你才会发现,Excel已经不敷使用.最最重要的是,Excel(起码03版的是这样)是二进制数据,SVN,mercurial等版本控制工具(偏偏这就是大家项目中所用的吧)不支持merge,这样,每次多人更改,必然导致冲突,然后,手工再去痛苦的重写吧.但是,假如你碰到像我们公司说的这种,翻译组只懂使用Excel,那么你再痛苦,也就无奈去吧.这也是Excel的优点吧……..当然,从程序的角度来看,那是最大的缺点. 数据库方案数据库方案最大的优点是扩展性异常强大,数据库方案的扩展性几乎是无限的,无论多么庞大的数据量,放在数据库中总是不会显得很多,关联表格也总是能将冗余数据降到最低,并且,如此的清晰.由于现代数据库前端做的越来越好,修改数据库中的数据也不总是需要SQL语句了.最最重要的是,当你需要的时候,你还是能用SQL语句来实现你需要的最最复杂的查询,或者批量修改某些相关的数据.当然了,没有方案是完美的,用数据库方案,的确强大,但是也有强大的代价,首先,项目中得有数据库专家,能够设计足够好的表格,及写出复杂的多重嵌套SELECT语句,项目中得有人懂得使用各自语言自己的数据库接口API,并且比较郁闷的是,各种数据库的API设计还不太一样……通用的API设计往往是以低效率为代价的….当然,这些都扯远了,扯上了原来做服务器的经验了……..假如仅仅将数据库作为普通游戏数据存储的方式,缺点还没有那么夸张,并且,我们总是可以使用mySQL,SQLLite这样的开源解决方案.在各类语言中也总是有可用的相应的API可用.除了上面那些,还有个问题,即使仅仅将数据库作为普通游戏数据存储的方式,为每个需求设计一套表,写一堆的从数据库中获取数据的代码,并且,最要要是以二进制数据发布的话,你还得写一套从数据库中读数据,然后序列化成二进制数据的代码,然后,额外的,解析二进制的代码也不可少.强大的数据库解决是以庞大的人工代码量堆积起来的. 现代数据存储解决方案因为传统解决方案有着其天生的缺点,Excel对于越来越大的游戏,越来越多的游戏数据有些吃力,而是用数据库方案对于光是保存游戏数据(仅指编辑数据,不包括网游的运行时数据)又显得太过臃肿.那我们有没有更好的方法呢?先看看我们想要什么样的方案:1.有着文本存储的方式,便于开发期调试和修改,也能直观的查看到改变和开发期的版本控制merge.2.有二进制存储方式,在发布后可以使用这样的方式,减少parse时间,并且,从文本方式切换到二进制方式是有很简单解决方案的.3.parse,序列化的代码编写要足够的简单,起码不会随着数据量的扩大而扩大到难以掌握的地步.4.多语言支持,你总能在你喜欢的语言中使用5.在数据之间建立关联,嵌套关系要足够的简单,这样才能简单的表示丰富的内容,而不是通过另外再建一套数据来表示关联(就像在Excel中需要做的那样) 有方案能满足上面所有的需求吗?可以寻找一下.因为我能力有限,这里仅举较为常用的XML,JSON,Google Protobuf为例,作为比较,也作为自己选择最佳方式的参考.(在查找资料的过程过还发现了一个名叫Thrift的解决方案,有文章 的比较指出其比Google Protobuf要强大较多,因为使用较少,我不准备尝试,在此提供此信息,仅供参考) XML方案现在游戏数据中XML方案应用的应该算是非常广泛了,几乎算是事实上的工业标准?起码我的感受是这样,甚至于,Office 2007以后的通用格式都是XML化的了.是因为网页开发的太过流行,导致大家都喜欢上了尖括号横生的标记语言了吗?我不知道.但是,XML的确有其优点.在WIKI百科上,有这么一段描述:As of 2009[update] , hundreds of XML-based languages have been developed,[5] including RSS , Atom , SOAP , and XHTML . XML-based formats have become the default for most office-productivity tools, including Microsoft Office (Office Open XML ), OpenOffice.org(OpenDocument ), and Apple ‘s iWork .[6] 看看吧,应用的还真不少.首先,上述5点需求的需求1,3,4,5是较为完美的满足的.XML是写给人看的数据存储格式,虽然喜欢尖括号的人(比如我)会反感,并且因为其流行,解析XML的库也是非常丰富,各类语言对XML的支持肯定少不了,XML对于嵌套,关联的支持也是非常好的,其自描述性,能让你看到XML就能知道,它在描述什么.XML的处理都是字符串,支持unicode, wikipedia上还提供了一个有意思的例子:version =”1.0” encoding =”UTF-8” ?&gt;&lt;烏語&gt; Китайська мова&gt;中国人写的?-_-!当然,实际中,除了字符串可能会用上中文外,一般的tag我们还是习惯用英文.另外,有一点也很重要,XML是可扩展的,添加新的XML属性完全不影响原有的解析及代码的运行,直到你真的需要这个属性,然后再添加处理代码即可.但是,XML有个致命的缺点,一堆类似HTML的标记,根本就不是设计给人来写的,(当然,好用的工具另外),在阅读的时候,很显然,废数据也过多,那么,存储,传输的时候,(假如传输的真是文本的话)同样的,信噪比太低,这点我不是太喜欢.当然,最主要的是直接写XML比较麻烦.也许有强大的工具能解决此问题,但是鉴于我们公司的制度,那可能是可望而不可及的事情. JSON 方案上述5点需求的需求1,3,4,5可以得到比XML更完美的满足.得益于简单的格式,所以解析及创建都可以做的很简单的,特别是JSONCPP这个库,在使用的时候简直就像获取到JS中的Object一样,直接通过[]操作完成索引及建立操作,使用起来感觉非常爽,并且,也有XML有的可扩展性,相对来说,比起以前使用LUA做配置而言,JSON会更加简单,当然,功能也稍微弱一些,不用逻辑处理(到脚本层次)的时候,我个人认为JSON就是最合适的数据存储格式.当然,从数据处理的速度来说,可能还需要一个从JSON到二进制的转换工具,(XML也有类似问题),然后在发布期完全使用二进制.目前有点问题的就是,JSON的格式没有XML那么规范,所以常常会容易写错,然后自己还没有感觉,JSONCPP使用了MAP的特性,也就是说,使用方便,但是当[]查找不到的时候,是默认建立了空的索引,这会带来一些混乱…..在我们的项目中,使用JSON来配置界面,为UI的灵活性提供了很大的方便,并因此节省了无数代码及编译时间,此时我想起一句LUA之父说的话,只有当配置足够灵活,人们才会使用它,的确如此,当JSON的使用如此方便的时候,使用配置,而不是代码,那是享受,而不是痛苦. 另外,XML与JSON方案还有个好处,因为他们的通用性,各个项目之间的沟通也会更加简单,与人解释XML,JSON在干什么,比与人解释自己的二进制文 件在干什么要简单的多.也因为沟通更加简单,使得在通用格式上面的那一层代码也能得到更多的复用机会.甚至,我们考虑过使用其他项目中创造的用JSON实现的关键帧动画……… Google Protobuf 方案用的不多,试用了一下,谈下感想,Google在说明文档中说Google内部使用时,所有的进程间他通行,一律要求使用Google Protobuf,也可见其自有其强大之处.使用方式上与上述两个方案有比较大的不同,XML与JSON仅仅是描述数据,单纯的数据,解析的代码还是需要自己去写(尽管JSON的解析已经非常简单了)但是Google Protobuf不同,其要我们编写的是结构描述文档,并且通过其附带的工具,直接生成C++,JAVA,Python的代码(也就是Google内部使用的3语言,与我们公司完全一致),至此,不仅解析简单了,甚至结构都有了,我们需要做的是直接调用结构的接口去完成输入输出,所有的数据的getter都通过Google规定的方式进行了命名.甚至,直接将结构打包成2进制数据然后发送了.(也就是Google在文档中所描述的进程间通信).比起XML,JSon而言,此方案最大的优势在于速度,它有很好的文本格式以及二进制格式,可以很方便的切换(原生就支持),这也是3个方案中唯一满足了需求2的方案.(事实上,完全满足上述所有需求)但是,很明显的,有个缺点,(实在是没有实际使用,仅仅是通过试用感觉的),假如结构变换的话,可能得重新使用Google提供的工具,重新生成结构,这就需要重新编译代码,这是个较大的问题……………..其他的,个人感觉,Google Protobuf是非常不错的解决方案,特别是用在需要进程间通信时(比如需要进行网络通信,连打包的代码都省了). 最后的总结是,未来的趋势应该是JSON 方案吧,Google Protobuf 方案更适合需要网络通信的情况,毕竟还需要通过工具生成代码,使用的方便性来说不如JSON.","categories":[{"name":"服务端开发","slug":"service","permalink":"http://test.quanke.name/categories/service/"}],"tags":[],"keywords":[{"name":"服务端开发","slug":"service","permalink":"http://test.quanke.name/categories/service/"}]},{"title":"protobuf/json/xml/binary/Thrift数据交换 ","slug":"protobufjsonxmlbinarythrift-e6-95-b0-e6-8d-ae-e4-ba-a4-e6-8d-a2","date":"2013-01-25T22:54:41.000Z","updated":"2018-01-29T07:18:46.540Z","comments":true,"path":"posts/21633/","link":"","permalink":"http://test.quanke.name/posts/21633/","excerpt":"","text":"一条消息数据，用protobuf序列化后的大小是json的10分之一，xml格式的20分之一，是二进制序列化的10分之一，总体看来ProtoBuf的优势还是很明显的 protobuf是google提供的一个开源序列化框架，类似于XML，JSON这样的数据表示语言，详情访问protobuf的google官方网站 protobuf在google中是一个比较核心的基础库，作为分布式运算涉及到大量的不同业务消息的传递，如何高效简洁的表示、操作这些业务消息在google这样的大规模应用中是至关重要的。而protobuf这样的库正好是在效率、数据大小、易用性之间取得了很好的平衡。 protobuf简单总结如下几点： 灵活（方便接口更新）、高效（效率经过google的优化，传输效率比普通的XML等高很多）； 易于使用；开发人员通过按照一定的语法定义结构化的消息格式，然后送给命令行工具，工具将自动生成相关的类，可以支持java、c++、python等语言环境。通过将这些类包含在项目中，可以很轻松的调用相关方法来完成业务消息的序列化与反序列化工作。 多语言支持；原生支持c++,java,python个人总结的适用protobuf的场合： 需要和其它系统做消息交换的，对消息大小很敏感的。那么protobuf适合了，它语言无关，消息空间相对xml和json等节省很多。 小数据的场合。如果你是大数据，用它并不适合。 项目语言是c++,java,python的，因为它们可以使用google的源生类库，序列化和反序列化的效率非常高。其它的语言需要第三方或者自己写，序列化和反序列化的效率不保证。 总体而言，protobuf还是非常好用的，被很多开源系统用于数据通信的工具，在google也是核心的基础库。此外，还有更牛叉的facebook的thrift，2007年由Facebook开发，之后在2008年加到Apache计划中。是一个跨语言的轻量级RPC消息和数据交换框架，Thrift能生成的语言有: C++, Java, Python, PHP, Ruby, Erlang, Perl, Haskell, C#, Cocoa, Smalltalk, and OCaml，这是它的一大优点。","categories":[{"name":"服务端开发","slug":"service","permalink":"http://test.quanke.name/categories/service/"}],"tags":[],"keywords":[{"name":"服务端开发","slug":"service","permalink":"http://test.quanke.name/categories/service/"}]},{"title":"Sublime Text 2 for Linux 的安装、教程及问题汇总","slug":"sublime-text-2-for-linux-e7-9a-84-e5-ae-89-e8-a3-85-e3-80-81-e6-95-99-e7-a8-8b-e5-8f-8a-e9-97-ae-e9-a2-98-e6-b1-87-e6-80-bb","date":"2012-12-22T06:15:17.000Z","updated":"2018-01-29T07:18:46.541Z","comments":true,"path":"posts/29401/","link":"","permalink":"http://test.quanke.name/posts/29401/","excerpt":"","text":"Sublime Text 2是一款跨平台文本编辑器，支持Windows，Linux，Mac os 自从用上了Sublime Text 2这款文本编辑器后就爱不释手了，美观、大方、简介的界面，方便的操作和丰富的扩展造就了这么一款出色的文本编辑器。 开始我只在Windows系统安装使用，因为某些原因，今天在Linux下进行安装，问题还是相当多的，还是推荐大家在官方修复这些问题之前使用Vim吧。 程序是共享软件，永久免费试用！ 如果要购买，费用为：USD $59 测试平台：系统版本号：Ubuntu 12.04 Sublime Text版本号：Version 2.0.1，Build 2217 安装：Sublime Text 2在Linux下的安装还是相当简单的： 在官方网站下载Linux版本 得到一个“.tar.bz2”格式的压缩文件 进行解压 双击文件中的“sublime_text”即可打开 中文显示：软件在Linux下是无法显示中文的，可以通过如下操作解决： 菜单栏 -&gt; Preferences -&gt; Settings – User，在配置文件中增加（前半部分原本就有，可看情况进行替换）： // Settings in here override those in “Default/Base File.sublime-settings”, and // are overridden in turn by file type specific settings. Place your settings // here, to ensure they’re preserved when upgrading. { “font_face”: “WenQuanYi Micro Hei Mono” }其中“文泉驿”是著名的开源字体 http://wenq.org/ 中文输入：设置fcitx输入法的切换键，将默认的Ctrl+Space方式设置Ctrl+Shift，但是这样效果不太好，经常中文会启动不了。 可以在其他地方输入后进行复制粘贴。 在以后的Sublime Text 2或许可以得到解决。 快捷键冲突：默认的代码提示快捷键是“Ctrl+Space”，与输入法切换冲突，导致两方均失效。 可以在菜单栏 -&gt; Preferences -&gt; Key Bindings – Default 里搜索 “insert_best_completion” 出现： { “keys”: [“tab”], “command”: “insert_best_completion”, “args”: {“default”: “\\t”, “exact”: true} },改变keys的值为需要的快捷键即可，推荐：{ “keys”: [“alt+/“], “command”: “insert_best_completion”, “args”: {“default”: “\\t”, “exact”: true} }, 特色功能： 良好的扩展功能(Package) 右边没有滚动条，取而代之的是代码缩略图 强大的快捷命令：可实时搜索相应的命令、选项、Snippet 和 Syntex， 回车即可执行 即时的文件切换 随心所欲的跳转到任意文件的任意位置 多重选择(Multi-Selection)功能允许在页面中同时存在多个光标。 支持 VIM 模式 支持宏 更新非常快 …… 小技巧： 选择文字之后，按下 Tab 和 Shift + Tab 可以控制缩进。 文件无需保存就可以直接退出程序，下次启动会自动恢复。","categories":[{"name":"Go语言","slug":"golang","permalink":"http://test.quanke.name/categories/golang/"}],"tags":[],"keywords":[{"name":"Go语言","slug":"golang","permalink":"http://test.quanke.name/categories/golang/"}]},{"title":" 你知道 facebook,sina,sohu都用的啥数据库吗？不知道的话请看本文章！（35个非主流的数据库）","slug":"e4-bd-a0-e7-9f-a5-e9-81-93-facebooksinasohu-e9-83-bd-e7-94-a8-e7-9a-84-e5-95-a5-e6-95-b0-e6-8d-ae-e5-ba-93-e5-90-97-ef-bc-9f-e4-b8-8d-e7-9f-a5-e9-81-93-e7-9a-84-e8-af-9d-e8-af-b7-e7-9c-8b-e6-9c-ac","date":"2012-12-10T07:38:14.000Z","updated":"2018-01-29T07:18:46.499Z","comments":true,"path":"posts/58857/","link":"","permalink":"http://test.quanke.name/posts/58857/","excerpt":"","text":"# 35个非主流开源数据库 你知道吗？ 【IT168 评论】 几乎每个Web开发人员都有自己喜欢的数据库，或自己最熟悉的数据库，但最常见的无外乎以下几种：MySQLPostgreSQLMSSQLSQLiteMS Access或是更简单的XML，文本文件等。这些数据库有优秀的文档，背后有强大的社区支持，大部分流行的CMS都使用了其中之一或多个，它们都易于使用，大多数 托管服务供应商都提供了相应的产品，因此它们的使用量很多，名气也很大。但除了这些主流的数据库外，还有很多其它非主流数据库存在，其中有一些也开始受到 人们的高度重视，下面我们就一起来看看吧，注意本文只介绍开源数据库，说不定在下一个项目中，你就有尝试它们的冲动。1、 MongoDBMongoDB是一款开源，高性能，可扩展，无模式，面向文档(与JSON类似的数据模式)的数据库，它为时下 最流行的编程语言提供了驱动，如PHP，Python，Perl，Ruby，JavaScript，C++等，支持全文索引，自动分片，跨LAN或WAN 扩展，采用Key/Value方式存储数据。MongoDB服务端可运行在Linux、Windows或OS X平台，支持32位和64位应用。世界上最大的单词收录网站Wordnik就从MySQL转向了MongoDB。2、 HypertableHypertable是一款高性能分布式数据存储系统，旨在为应用程序提供最好的性能，可扩展性和可靠性，它建 立在Google的BigTable之上，主要面向大规模数据集应用，其目标是要成为世界上最好的大规模并发高性能数据库平台。百度目前也使用了 Hypertable，也是它的赞助商。3、Apache CouchDBApache CouchDB是一款面向文档的数据库，可以使用JavaScript通过MapReduce方法进行查询和索引，它提供了一个RESTful JSON API，因此可以在任何环境中通过HTTP访问，CouchDB内置了Web管理控制台，支持通过浏览器管理数据库。CouchDB使用Erlang编 写，Erlang是一种健壮的函数式编程语言，非常适合于构建并发的分布式系统，Erlang的设计非常灵活，其可伸缩性与可扩展性都非常棒。4、Neo4jNeo4j是一个嵌入式，基于磁盘的，支持完整事务的Java持久化引擎，它在图像中而不是表中存储数据。 Neo4j提供了大规模可扩展性，在一台机器上可以处理数十亿节点/关系/属性的图像，可以扩展到多台机器并行运行。相对于关系数据库来说，图形数据库善 于处理大量复杂、互连接、低结构化的数据，这些数据变化迅速，需要频繁的查询——在关系数据库中，这些查询会导致大量的表连接，因此会产生性能上的问题。 Neo4j重点解决了拥有大量连接的传统RDBMS在查询时出现的性能衰退问题。通过围绕图形进行数据建模，Neo4j会以相同的速度遍历节点与边，其遍 历速度与构成图形的数据量没有任何关系。此外，Neo4j还提供了非常快的图形算法、推荐系统和OLAP风格的分析，而这一切在目前的RDBMS系统中都 是无法实现的。 5、RiakRiak是一款非常适合于Web应用程序的数据库，它提供了去中心化的Key/Value存储，灵活的map /reduce引擎和友好的HTTP/JSON查询接口。它是一个真正的容错系统，不会出现单点故障，在Riak世界中，没有哪台机器是特殊的或属核心服务器 ，它们都是对等的。6、Oracle Berkeley DBOracle Berkeley DB是一系列开源的嵌入式数据库，使开发人员能够将一个快速、可伸缩、具有工业级别的可靠性和可用性的事务处理数据库引擎结合进他们的应用程序中。 Berkeley DB最先由伯克利加州大学为了移除受到AT&amp;T限制的程式码，从BSD 4.3到4.4时所改写的软件。Berkeley DB运行在大多数的操作系统 中，例如大多数的UNIX系统， 和windows系统，以及实时操作系统 。 7、 Apache CassandraCassandra是一款高可扩展性第二代分布式数据库，属于混合型的非关系的数据库，类似于Google的 BigTable，支持的数据结构非常松散，类似于JSON的BJSON格式，因此可以存储比较复杂的数据类型。Cassandra最初由 Facebook开发，后转变成了开源项目。Cassandra的主要特点就是它不是一个数据库，而是由一堆数据库节点共同构成的一个分布式网络服务，对 Cassandra 的一个写操作，会被复制到其他节点上去，对Cassandra的读操作，也会被路由到某个节点上面去读取。对于一个Cassandra群集来说，扩展性能 是比较简单的事情，只管在群集里面添加节点就可以了。Facebook，Digg，Twitter和Cisco等大型网站都使用了Cassandra。8、MemcachedMemcached是开源的分布式cache系统，现在很多的大型web应用程序包括 facebook，youtube，wikipedia，yahoo等等都在使用memcached来支持他们每天数亿级的页面访问。通过把cache层 与他们的web架构集成，他们的应用程序在提高了性能的同时，还大大降低了数据库的负载。Memcached处理的原子是每一个 key/value对，key会通过一个hash算法转化成hash-key，便于查找、对比以及做到尽可能的散列。同时，memcached用的是一个 二级散列，通过一张大hash表来维护。 9、FirebirdFirebird是一个关系数据库，可以运行在Linux，Windows和各种Unix平台 上，Firebird相对MySQL和PostgreSQL来说比较小，这也使其可以称得上是理想的嵌入式数据库，可用于与其它应用程序服务器 和应用程序捆绑。Firebird具有大部分成熟数据库所具有的功能， 比如支持存储过程、SQL兼容等。10、RedisRedis是一款快速的Key/Value数据库引擎，它在保持键值数据库简单快捷特点的同时，又吸收了部分关 系数据库的优点，从而使它的位置处于关系数据库和键值数据库之间。Redis不仅能保存Strings类型的数据，还能保存Lists类型(有序)和 Sets类型(无序)的数据，而且还能完成排序(SORT)等高级功能，在实现INCR，SETNX等功能的时候，保证了其操作的原子性，除此以外，还支 持主从复制等功能。Redis使用C语言编写，可以想memcached那样使用，放在传统数据库的前端，它支持许多编程语言，受到许多流行的项目使用， 如GitHub和Engine Yard，有一个用PHP编写的客户端叫做Rediska，专门来管理Redis数据库。11、 HBaseHBase是一个分布式，面向列存储的数据库引擎，也可以叫做Hadoop数据库，因为它是Hadoop的子项 目，HBase的目标是托管数十亿行，数百万列的大表，它提供了一个REST风格的Web服务器网关 ，支持XML，Protobuf和二进制数据编码选项。&nbsp;12、KeyspaceKeyspace 是一家叫做 Scalien 的创业公司开发的高可靠 key/value 存储系统，Keyspace 强调的技术点是高可靠性，有以下一些特点：Key/Value存储：一个 key/value 数据存储系统，只支持一些基本操作，如：SET(key, value) 和 GET(key) 等;分布式：多台机器(nodes) 同时存储数据和状态，彼此交换消息来保持数据一致，可视为一个完整的存储系统。为了更可靠，Keyspace 推荐使用奇数个 nodes，比如：3，5，7等;数据一致：所有机器上的数据都是同步更新的、不用担心得到不一致的结果，Keyspace 使用著名的 Paxos 分布式算法;冗余：所有机器(nodes)保存相同的数据，整个系统的存储能力取决于单台机器(node)的 能力;容错：如果有少数 nodes 出错，比如重启、当机、断网、网络丢包等各种 fault/fail 都不影响整个系统的运行;高可靠性：容错、冗余等保证了 Keyspace 的可靠性。 13、4store4store是一个容纳RDF数据的数据库存储和查询引擎，它使用ANSI C99编写，可在类Unix系统上运行，提供一个高性能，可扩展和稳定的平台。4store专门为无共享集群进行优化，最大可支持32节点集群，导入性能 最大可以达到120kT/s，它的查询性能也相当出众。14、MariaDBMariaDB是一个向后兼容的，旨在替换MySQL数据库的MySQL分支，它包括所有主要的开源存储引擎， 另外也开发了属于自己的Maria存储引擎。MariaDB是由原来 MySQL 的作者 Michael Widenius 创办的公司所开发的免费开源数据库服务器，与 MySQL 相比较，MariaDB 更强的地方在于：Maria 存储引擎PBXT 存储引擎XtraDB 存储引擎FederatedX 存储引擎更快的复制查询处理线程池更少的警告和bug运行速度更快更多的 Extensions (More index parts, new startup options etc)更好的功能测试数据表消除慢 查询日志的扩展统计支持对 Unicode 的排序15、DrizzleDrizzle是从MySQL衍生出来的一个数据库，但它的目的不是要取代MySQL，它的宗旨是构建一个“更 精练、更轻量、更快速”的MySQL版本，它的扩展性和易用性与MySQL相当，但为了提高性能和扩展性，它从原来的核心系统里移除了部分功能。 Drizzle是一种为云和网络程序进行了特别优化的数据库，它是为在现代多CPU /多核架构上实现大规模并发而设计的。 16、 HyperSQLHyperSQL是用Java编写的一款SQL关系数据库引擎，它的核心完全是多线程的，支持双向锁和 MVCC(多版本并发控制)，几乎完整支持ANSI-92 SQL，支持常见数据类型，最新版本增加了对BLOB和CLOB数据的支持，最高支持达64T的数据量。同时，HyperSQL也是一个不错的嵌入式数据 库。17、MonetDBMonetDB是一个高性能数据库引擎，主要用在数据挖掘，OLAP，GIS，XML Query，文本和多媒体检索等领域。MonetDB对DBMS的各个层都进行创新设计，如基于垂直分片的存储层，为现代CPU 优化的查询执行架构，自动和自助调整索引，运行时查询优化，以及模块化 的软件架构。MonetDB/SQL是MonetDB提供的关系数据库解决方案，MonetDB/XQuery是XML数据库解决方案，MonetDB Server是MonetDB的多模型数据库服务器。18、PerseverePersevere 是针对Javascript设计的基于REST的JSON数据库，分布式计算，持久对象映射的框架，提供独立的web服务器，主要用于设计富客户端应用， 可以用在任何框架和客户端上。Persevere Server是一个基于Java/Rhino的对象存储引擎，在交互式的客户端JavaScript环境中提供持久性的JSON数据格式。19、eXist-dbeXist-db是使用XML技术构建的数据库存储引擎，它根据XML数据模型存储XML数据，提供高效的，基 于索引的XQuery查询。eXist-db支持许多Web技术标准，使得它非常适合Web应用程序开发：XQuery 1.0 / XPath 2.0 / XSLT 1.0 (使用pache Xalan)或XSLT 2.0HTTP接口：REST，WebDAV，SOAP，XMLRPC，Atom发布协议XML数据库规范：XMLDB，Xupdate，XQuery更新扩展最新的1.4版本还增加了基于Apache Lucene的全文索引，轻量级URL重写和MVC框架，以及对XProc的支持。eXist-db与XQuery标准高度兼容(目前XQTS的得分是 99.4%)。20、GladiusGladius是用纯PHP编写的平面文件数据库引擎，它的SQL语法与SQL92的一个子集兼容，它捆绑了一 个轻量级的adoDB驱动。21、CloudStoreCloudStore(以前叫做Kosmos文件系统)是一个开源的高性能分布式文件系统，它是用C++编写 的，CloudStore可以和Hadoop以及Hypertable集成，这样就允许应用程序构建在那些系统上，而底层数据存储无缝地使用 CloudStore。CloudStore支持Linux和Solaris，主要用来存储Web日志和Web爬行数据。22、 OpenQMOpenQM是唯一一款同时有商业支持和免费的开源多值数据库，基于GPL协议发布，多值数据库对NoSQL运 动起到了推动作用，它自身也因速度快，体积小，比关系数据库便宜而很快得到了认可。名称OpenQM中的Open表示开源版本，QM表示商业闭源QM数据 库。商业版本支持Windows，Linux(RedHat，Fedora，Debian，Ubuntu)，FreeBSD，Mac OS X和Windows Mobile，其列表价格还不到其它多值产品的1/5，商业版本还包括一个GUI管理界面和终端模拟器，开源版本仅包括核心多值数据库引擎，主要是为开发 人员准备的。23、ScarletDMEScarletDME也是一个开源多值数据库，它是OpenQM的社区分支版，最初由Ladybridge开 发，这个项目创立于2008年11月28日，它既在独立开发自己的功能，也在为OpenQM贡献代码。这个项目最初的名字叫做Ladybridges GPL OpenQM，现在正式改为ScarletDME，其中的DME是Data Management Environment(数据管理环境)的首字母缩写。 24、SmallSQLSmallSQL是一个100%纯Java编写的轻量级数据库，一般用于嵌入式领域，兼容SQL 99标准，支持JDBC 3.0 API，定位于高端Java桌面SQL数据库。支持所有能运行Java的平台，可直接嵌入到应用程序中。不过它也有一些不足，如没有网络接口，必须安装 Java运行时，同一时间不能在多个应用程序之间共享数据库，没有用户管理。 25、LucidDBLucidDB是唯一一款专注于数据仓库和商务智能的开源RDBMS，它使用了列存储架构，支持位图索引，哈 希连接/聚合和页面级多版本，大部分数据库最初都注重事务处理能力，而分析功能都是后来才加上去的。相反，LucidDB中的所有组件从一开始就是为满足 灵活的需求，高性能数据集成和大规模数据查询而设计的，此外，其架构设计彻底从用户出发，操作简单，完全无需DBA。LucidDB对 硬件要求也极低，即使不搭建集群环境，在单一的Linux或Windows服务器上也能获得极好的性能。最新版本还加入了对Mac OS X和Windows 64位的支持，官方网站上的文档和教程也非常丰富，非常值得你体验一下。26、HyperGraphDBHyperGraphDB是一种通用的，可扩展的，可移植的，分布式，嵌入式和开源数据存储机制，它是一个图 形数据库，专门为人工智能和语义Web项目而设计，它也可用于任意规模的嵌入式面向对象的数据库。正如其名，HyperGraphDB是用来存储超图的， 但它也属于一般图形数据库家族，作为一个图形数据库，它不施加任何限制，相比其他图形数据库它的功能更丰富。HyperGraphDB 非常稳定，已经应用在多个生产环境，包括一个搜索引擎和Seco scripting IDE。它支持nix和Windows平台，需要Java 5+。27、InfoGridInfoGrid是一个互联网图形数据库，它提供了许多额外的组件，使得在图像基础上开发RESTful Web应用程序变得更加容易。InfoGrid是开源的，包括一系列项目：InfoGrid图形数据库项目 – InfoGrid的心脏GraphDatabase，可以独立使用，也可以附加到其它InfoGrid项目。InfoGrid图形数据 库网格项目 – 在GraphDatabase基础上增加了复制协议，因此多个分布式GraphDatabase就可以在一个非常大的图像管理环境中协作。InfoGrid存储项目 –象SQL数据库和分布式NoSQL哈希表那样，为存储技术提供一个抽象的通用接口，这样InfoGrid GraphDatabase就可以使用任何存储技术持久化数据。InfoGrid用户接口项目 – 将GraphDatabase中的内容以REST风格映射成浏览器可访问的URL。InfoGrid轻量级身份识别项目 – 实现以用户为中心的身份识别技术，如LID和OpenID。InfoGrid模型库项目 – 定义一个可复用对象模型库，作为InfoGrid应用程序的模式使用。InfoGrid Probe项目 – 实现Probe框架，它允许开发人员将任何互联网上的数据源当作一个图像对象看待。InfoGrid Utilities项目 – 收集InfoGrid使用的常见对象框架和实用代码。 28、Apache DerbyApache Derby是Apache DB的子项目，它完全用Java编写，是一个开源关系数据库，它的体积非常小，基础引擎加上JDBC驱动只有2.6MB，它支持SQL标准，它提供了一个 嵌入式JDBC驱动，因此可以嵌入到任何基于Java的应用程序中，Derby也支持常见的客户端/服务器模式，它也易于安装和使用。29、 hamsterdbHamsterdb是一个轻量级嵌入式NoSQL Key/Value存储引擎，它已经有5年历史，现在它的开发重点放在易用性，高性能，稳定性和可扩展性上。Hamsterdb支持事务(同一时间只能处 理一个事务)，支持内存 数据库，支持基于HTTP服务器的嵌入式 远程数据库，支持日志/恢复，AES加密，基于zlib的压缩，支持C++，Python，.NET和Java编程语言。30、 H2 DatabaseH2 Database是一个开源的Java数据库，它的速度很快，包括JDBC API，支持嵌入式和服务器模式，内存 数据库，提供了一个基于浏览器的控制台程 序，它的体积也非常小，只有一个大小约1MB的jar文件，它还支持ODBC驱动和全文搜索。31、EyeDBEyeDB是一款基于ODMG 3规范的面向对象数据库管理系统，为C++和Java提供了编程接口，它功能非常强大，并且成熟，稳定和安全，实际上，它起源于1992年的Genome View项目，1994年又进行了重写，广泛用于生物信息项目。32、txtSQLtxtSQL是一个面向对象的平面文件数据库管理系统，它使用PHP编写，支持对普通文本文件的操作，虽然是一 个文本数据库，但同样支持SQL的一个子集，并且执行效率非常高，txtSQL使用文件系统的方法与MySQL的表和数据库原理类似，它有一个类似于 phpMyAdmin管理界面。 33、db4odb4o是一个面向对象的开源数据库，允许Java和.NET开发人员用一行代码存储和检索任何应用程序对象， 无需预定义或维护一个独立的，僵化的数据模型，因为模型现在是由db4o根据需要自动创建和更新的。db4o成功的秘密是因为它的易用性，它原生为 Java和.NET设计，存储数据对象的方法直接在应用程序中定义，因此db4o很容易集成到应用程序中，由于只需要一行代码，因此执行效率非常高。34、Tokyo CabinetTokyo Cabinet是一个Kay/Value型数据库，每个Key和Value的长度都可以不同，Kay和Value既可以是二进制数据，也可以是字符串，无 数据表和数据类型的概念，记录是以哈希表、B+树和固定长度数组形式组织的。Tokyo Cabinet具有以下优点：空间利用率高 – 数据文件尺寸更小;执行效率高 – 更快的处理速度;并发性能好 – 在多线程环境性能更好;改善的可用性 – 简化的API;改善的可靠性 – 即使在发生灾难的情况下，数据文件也不会损坏;支持64位架构 – 支持海量的存储空间和巨型数据库文件。Tokyo Cabinet是用C语言编写的，为C，Perl，Ruby，Java和Lua提供了API。* 35、Voldemort项目Voldemort是一个分布式Key/Value存储系统，它具有以下特点：数据自动在多 个服务器之间复制;数据自动分区，因此每个服务器只包括整体数据的一个子集;服务器故障处理是透明的;支持插入式序列化，允许丰富的Key和Value类型，包括列表和元组，也可以集成常见的序列化框架，如Protocol Buffers，Thrift，Avro和Java Serialization数据项支持版本化，即使在故障情况下，数据完整性也可 以得到保障;每个节点都是独立的，无需其他节点协调，因此也没有中央节点;单节点性能优秀：根据机器配置、网络、磁 盘系统和数据复制因素的不同，每秒可以执行10-20k操作;支持地理分散式部署。LinkedIn目前就使用 Voldemort解决了高可伸缩性存储问题。不知道你是否一口气看完本文，我想你也一定会惊讶于这么多开源数据库吧，事实上，本文也 尚未完全罗列，欢迎你的补充。原文出处：http://phpcamp.net/toolbar/25-alternative-open-source-database-engines原文名：25+ Alternative &amp; Open Source Database Engines","categories":[{"name":"服务端开发","slug":"service","permalink":"http://test.quanke.name/categories/service/"}],"tags":[],"keywords":[{"name":"服务端开发","slug":"service","permalink":"http://test.quanke.name/categories/service/"}]},{"title":"eclipse 快捷键","slug":"eclipse-e5-bf-ab-e6-8d-b7-e9-94-ae","date":"2012-11-28T06:47:53.000Z","updated":"2018-01-29T07:18:46.509Z","comments":true,"path":"posts/29126/","link":"","permalink":"http://test.quanke.name/posts/29126/","excerpt":"","text":"熟悉eclipse开发android的一些快捷键，能很大的提高效率，分享在下面：Ctrl+1 快速修复(最经典的快捷键,就不用多说了)Ctrl+D: 删除当前行Ctrl+Alt+↓ 复制当前行到下一行(复制增加)Ctrl+Alt+↑ 复制当前行到上一行(复制增加)Alt+↓ 当前行和下面一行交互位置(特别实用,可以省去先剪切,再粘贴了)Alt+↑ 当前行和上面一行交互位置(同上)Alt+← 前一个编辑的页面Alt+→ 下一个编辑的页面(当然是针对上面那条来说了)Alt+Enter 显示当前选择资源(工程,or 文件 or文件)的属性Shift+Enter 在当前行的下一行插入空行(这时鼠标可以在当前行的任一位置,不一定是最后)Shift+Ctrl+Enter 在当前行插入空行(原理同上条)Ctrl+Q 定位到最后编辑的地方Ctrl+L 定位在某行 (对于程序超过100的人就有福音了)Ctrl+M 最大化当前的Edit或View (再按则反之)Ctrl+/ 注释当前行,再按则取消注释Ctrl+O 快速显示 OutLineCtrl+T 快速显示当前类的继承结构Ctrl+W 关闭当前EditerCtrl+K 参照选中的Word快速定位到下一个Ctrl+E 快速显示当前Editer的下拉列表(如果当前页面没有显示的用黑体表示)Ctrl+/(小键盘) 折叠当前类中的所有代码Ctrl+×(小键盘) 展开当前类中的所有代码Ctrl+Space 代码助手完成一些代码的插入(但一般和输入法有冲突,可以修改输入法的热键,也可以暂用Alt+/来代替)Ctrl+Shift+E 显示管理当前打开的所有的View的管理器(可以选择关闭,激活等操作)Ctrl+J 正向增量查找(按下Ctrl+J后,你所输入的每个字母编辑器都提供快速匹配定位到某个单词,如果没有,则在stutes line中显示没有找到了,查一个单词时,特别实用,这个功能Idea两年前就有了)Ctrl+Shift+J 反向增量查找(和上条相同,只不过是从后往前查)Ctrl+Shift+F4 关闭所有打开的EditerCtrl+Shift+X 把当前选中的文本全部变味小写Ctrl+Shift+Y 把当前选中的文本全部变为小写Ctrl+Shift+F 格式化当前代码Ctrl+Shift+P 定位到对于的匹配符(譬如{}) (从前面定位后面时,光标要在匹配符里面,后面到前面,则反之)下面的快捷键是重构里面常用的,本人就自己喜欢且常用的整理一下(注:一般重构的快捷键都是Alt+Shift开头的了)Alt+Shift+R 重命名 (是我自己最爱用的一个了,尤其是变量和类的Rename,比手工方法能节省很多劳动力)Alt+Shift+M 抽取方法 (这是重构里面最常用的方法之一了,尤其是对一大堆泥团代码有用)Alt+Shift+C 修改函数结构(比较实用,有N个函数调用了这个方法,修改一次搞定)Alt+Shift+L 抽取本地变量( 可以直接把一些魔法数字和字符串抽取成一个变量,尤其是多处调用的时候)Alt+Shift+F 把Class中的local变量变为field变量 (比较实用的功能)Alt+Shift+I 合并变量(可能这样说有点不妥Inline)Alt+Shift+V 移动函数和变量(不怎么常用)Alt+Shift+Z 重构的后悔药(Undo)编辑作用域 功能 快捷键全局 查找并替换 Ctrl+F文本编辑器 查找上一个 Ctrl+Shift+K文本编辑器 查找下一个 Ctrl+K全局 撤销 Ctrl+Z全局 复制 Ctrl+C全局 恢复上一个选择 Alt+Shift+↓全局 剪切 Ctrl+X全局 快速修正 Ctrl1+1全局 内容辅助 Alt+/全局 全部选中 Ctrl+A全局 删除 Delete全局 上下文信息 Alt+？Alt+Shift+?Ctrl+Shift+SpaceJava编辑器 显示工具提示描述 F2Java编辑器 选择封装元素 Alt+Shift+↑Java编辑器 选择上一个元素 Alt+Shift+←Java编辑器 选择下一个元素 Alt+Shift+→文本编辑器 增量查找 Ctrl+J文本编辑器 增量逆向查找 Ctrl+Shift+J全局 粘贴 Ctrl+V全局 重做 Ctrl+Y 查看作用域 功能 快捷键全局 放大 Ctrl+=全局 缩小 Ctrl+- 窗口作用域 功能 快捷键全局 激活编辑器 F12全局 切换编辑器 Ctrl+Shift+W全局 上一个编辑器 Ctrl+Shift+F6全局 上一个视图 Ctrl+Shift+F7全局 上一个透视图 Ctrl+Shift+F8全局 下一个编辑器 Ctrl+F6全局 下一个视图 Ctrl+F7全局 下一个透视图 Ctrl+F8文本编辑器 显示标尺上下文菜单 Ctrl+W全局 显示视图菜单 Ctrl+F10全局 显示系统菜单 Alt+- 导航作用域 功能 快捷键Java编辑器 打开结构 Ctrl+F3全局 打开类型 Ctrl+Shift+T全局 打开类型层次结构 F4全局 打开声明 F3全局 打开外部javadoc Shift+F2全局 打开资源 Ctrl+Shift+R全局 后退历史记录 Alt+←全局 前进历史记录 Alt+→全局 上一个 Ctrl+,全局 下一个 Ctrl+.Java编辑器 显示大纲 Ctrl+O全局 在层次结构中打开类型 Ctrl+Shift+H全局 转至匹配的括号 Ctrl+Shift+P全局 转至上一个编辑位置 Ctrl+QJava编辑器 转至上一个成员 Ctrl+Shift+↑Java编辑器 转至下一个成员 Ctrl+Shift+↓文本编辑器 转至行 Ctrl+L 搜索作用域 功能 快捷键全局 出现在文件中 Ctrl+Shift+U全局 打开搜索对话框 Ctrl+H全局 工作区中的声明 Ctrl+G全局 工作区中的引用 Ctrl+Shift+G 文本编辑作用域 功能 快捷键文本编辑器 改写切换 Insert文本编辑器 上滚行 Ctrl+↑文本编辑器 下滚行 Ctrl+↓ 文件作用域 功能 快捷键全局 保存 Ctrl+XCtrl+S全局 打印 Ctrl+P全局 关闭 Ctrl+F4全局 全部保存 Ctrl+Shift+S全局 全部关闭 Ctrl+Shift+F4全局 属性 Alt+Enter全局 新建 Ctrl+N 项目作用域 功能 快捷键全局 全部构建 Ctrl+B 源代码作用域 功能 快捷键Java编辑器 格式化 Ctrl+Shift+FJava编辑器 取消注释 Ctrl+\\Java编辑器 注释 Ctrl+/Java编辑器 添加导入 Ctrl+Shift+MJava编辑器 组织导入 Ctrl+Shift+OJava编辑器 使用try/catch块来包围 未设置，太常用了，所以在这里列出,建议自己设置。也可以使用Ctrl+1自动修正。 运行作用域 功能 快捷键全局 单步返回 F7全局 单步跳过 F6全局 单步跳入 F5全局 单步跳入选择 Ctrl+F5全局 调试上次启动 F11全局 继续 F8全局 使用过滤器单步执行 Shift+F5全局 添加/去除断点 Ctrl+Shift+B全局 显示 Ctrl+D全局 运行上次启动 Ctrl+F11全局 运行至行 Ctrl+R全局 执行 Ctrl+U 重构作用域 功能 快捷键全局 撤销重构 Alt+Shift+Z全局 抽取方法 Alt+Shift+M全局 抽取局部变量 Alt+Shift+L全局 内联 Alt+Shift+I全局 移动 Alt+Shift+V全局 重命名 Alt+Shift+R全局 重做 Alt+Shift+Y","categories":[{"name":"android开发","slug":"android","permalink":"http://test.quanke.name/categories/android/"}],"tags":[],"keywords":[{"name":"android开发","slug":"android","permalink":"http://test.quanke.name/categories/android/"}]},{"title":" ZXing改横屏识别为竖屏识别","slug":"zxing-e6-94-b9-e6-a8-aa-e5-b1-8f-e8-af-86-e5-88-ab-e4-b8-ba-e7-ab-96-e5-b1-8f-e8-af-86-e5-88-ab","date":"2012-11-28T06:47:01.000Z","updated":"2018-01-29T07:18:46.548Z","comments":true,"path":"posts/16104/","link":"","permalink":"http://test.quanke.name/posts/16104/","excerpt":"","text":"Apache License 2.0 开源的 ZXing项目 ZXing的android项目东西太多了，有很多是我们不需要的，得新建另一个项目简化它。 在开始前大致介绍一下简化ZXing需要用到各个包 、类的职责。 CaptureActivity。这个是启动Activity 也就是扫描器（如果是第一安装，它还会跳转到帮助界面）。 CaptureActivityHandler 解码处理类，负责调用另外的线程进行解码。 DecodeThread 解码的线程。 com.google.zxing.client.android.camera 包，摄像头控制包。 ViewfinderView 自定义的View，就是我们看见的拍摄时中间的框框了。 解决方法： 1.在DecodeHandler.java中，修改decode方法 PlanarYUVLuminanceSource source = CameraManager.get().buildLuminanceSource(data, width, height);为 byte[] rotatedData = new byte[data.length]; for (int y = 0; y &lt; height; y++) { for (int x = 0; x &lt; width; x++) rotatedData[x height + height - y - 1] = data[x + y width]; } int tmp = width; // Here we are swapping, that’s the difference to #11 width = height; height = tmp; PlanarYUVLuminanceSource source = CameraManager.get().buildLuminanceSource(rotatedData, width, height); 2.在CameraManager.java中，注释代码： // rect.left = rect.left cameraResolution.x / screenResolution.x; // rect.right = rect.right cameraResolution.x / screenResolution.x; // rect.top = rect.top cameraResolution.y / screenResolution.y; // rect.bottom = rect.bottom cameraResolution.y / screenResolution.y;修改为 rect.left = rect.left cameraResolution.y / screenResolution.x; rect.right = rect.right cameraResolution.y / screenResolution.x; rect.top = rect.top cameraResolution.x / screenResolution.y; rect.bottom = rect.bottom cameraResolution.x / screenResolution.y; 3.在CameraConfigurationManager.java中，在setDesiredCameraParameters方法中添加一句 camera.setDisplayOrientation(90); 4.在AndroidManifest.xml中，把Activity的属性android:screenOrientation=”landscape”改为 android:screenOrientation=”portrait” 编译运行即可！ 参考： http://code.google.com/p/zxing/issues/detail?id=178#c46 代码：https://github.com/pplante/zxing-android","categories":[{"name":"android开发","slug":"android","permalink":"http://test.quanke.name/categories/android/"}],"tags":[],"keywords":[{"name":"android开发","slug":"android","permalink":"http://test.quanke.name/categories/android/"}]},{"title":"Java:使用Executors创建和管理线程","slug":"java-e4-bd-bf-e7-94-a8executors-e5-88-9b-e5-bb-ba-e5-92-8c-e7-ae-a1-e7-90-86-e7-ba-bf-e7-a8-8b","date":"2012-11-25T05:33:57.000Z","updated":"2018-01-29T07:18:46.569Z","comments":true,"path":"posts/37465/","link":"","permalink":"http://test.quanke.name/posts/37465/","excerpt":"","text":"1. 类 Executors此类中提供的一些方法有：1.1 public static ExecutorService newCachedThreadPool()创建一个可根据需要创建新线程的线程池，但是在以前构造的线程可用时将重用它们。对于执行很多短期异步任务的程序而言，这些线程池通常可提高程序性能。 1.2 public static ExecutorService newFixedThreadPool(int nThreads)创建一个可重用固定线程数的线程池，以共享的无界队列方式来运行这些线程。 1.3 public static ExecutorService newSingleThreadExecutor()创建一个使用单个 worker 线程的 Executor，以无界队列方式来运行该线程。 这三个方法都可以配合接口ThreadFactory的实例一起使用。并且返回一个ExecutorService接口的实例。2. 接口 ThreadFactory根据需要创建新线程的对象。使用线程工厂就无需再手工编写对 new Thread 的调用了，从而允许应用程序使用特殊的线程子类、属性等等。此接口最简单的实现就是：[code lang=”java”]class SimpleThreadFactory implements ThreadFactory { public Thread newThread(Runnable r) { return new Thread(r); } }[/code]3. 接口ExecutorService该接口提供了管理终止的方法。4.创建标准线程池启动线程4.1 提供一个简单的实现Runnable接口的线程[code lang=”java”]MyThread.javapackage com.zj.concurrency.executors; public class MyThread implements Runnable { private int count = 1, number; public MyThread(int num) { number = num; System.out.println(&amp;quot;Create Thread-&amp;quot; + number); } public void run() { while (true) { System.out.println(&amp;quot;Thread-&amp;quot; + number + &amp;quot; run &amp;quot; + count+&amp;quot; time(s)&amp;quot;); if (++count == 3) return; } } }[/code]这个线程会打印出相应的创建和执行信息。 4.2使用CachedThreadPool启动线程[code lang=”java”]CachedThreadPool.javapackage com.zj.concurrency.executors;import java.util.concurrent.ExecutorService;import java.util.concurrent.Executors; public class CachedThreadPool { public static void main(String[] args) { ExecutorService exec = Executors.newCachedThreadPool(); for (int i = 0; i &lt; 5; i++) exec.execute(new MyThread(i)); exec.shutdown(); }}[/code]结果：Create Thread-0Create Thread-1Create Thread-2Create Thread-3Thread-0 run 1 time(s)Thread-0 run 2 time(s)Thread-1 run 1 time(s)Thread-1 run 2 time(s)Thread-2 run 1 time(s)Thread-2 run 2 time(s)Create Thread-4Thread-4 run 1 time(s)Thread-4 run 2 time(s)Thread-3 run 1 time(s)Thread-3 run 2 time(s) 4.3 使用FixedThreadPool启动线程[code lang=”java”]FixedThreadPool.javapackage com.zj.concurrency.executors;import java.util.concurrent.ExecutorService;import java.util.concurrent.Executors; public class FixedThreadPool { public static void main(String[] args) { ExecutorService exec = Executors.newFixedThreadPool(2); for (int i = 0; i &lt; 5; i++) exec.execute(new MyThread(i)); exec.shutdown(); }}[/code]结果：Create Thread-0Create Thread-1Create Thread-2Create Thread-3Create Thread-4Thread-0 run 1 time(s)Thread-0 run 2 time(s)Thread-2 run 1 time(s)Thread-2 run 2 time(s)Thread-3 run 1 time(s)Thread-3 run 2 time(s)Thread-4 run 1 time(s)Thread-4 run 2 time(s)Thread-1 run 1 time(s)Thread-1 run 2 time(s) 4.4 使用SingleThreadExecutor启动线程[code lang=”java”]SingleThreadExecutor.javapackage com.zj.concurrency.executors;import java.util.concurrent.ExecutorService;import java.util.concurrent.Executors; public class SingleThreadExecutor { public static void main(String[] args) { ExecutorService exec = Executors.newSingleThreadExecutor(); for (int i = 0; i &lt; 5; i++) exec.execute(new MyThread(i)); exec.shutdown(); }}[/code]结果：Create Thread-0Create Thread-1Create Thread-2Create Thread-3Create Thread-4Thread-0 run 1 time(s)Thread-0 run 2 time(s)Thread-1 run 1 time(s)Thread-1 run 2 time(s)Thread-2 run 1 time(s)Thread-2 run 2 time(s)Thread-3 run 1 time(s)Thread-3 run 2 time(s)Thread-4 run 1 time(s)Thread-4 run 2 time(s)5.配合ThreadFactory接口的使用我们试图给线程加入daemon和priority的属性设置。5.1设置后台线程属性[code lang=”java”]DaemonThreadFactory.javapackage com.zj.concurrency.executors.factory;import java.util.concurrent.ThreadFactory; public class DaemonThreadFactory implements ThreadFactory { public Thread newThread(Runnable r) { Thread t = new Thread(r); t.setDaemon(true); return t; }} [/code]5.2 设置优先级属性最高优先级MaxPriorityThreadFactory.java[code lang=”java”]package com.zj.concurrency.executors.factory;import java.util.concurrent.ThreadFactory; public class MaxPriorityThreadFactory implements ThreadFactory { public Thread newThread(Runnable r) { Thread t = new Thread(r); t.setPriority(Thread.MAX_PRIORITY); return t; }}[/code]最低优先级MinPriorityThreadFactory.java[code lang=”java”]package com.zj.concurrency.executors.factory;import java.util.concurrent.ThreadFactory; public class MinPriorityThreadFactory implements ThreadFactory { public Thread newThread(Runnable r) { Thread t = new Thread(r); t.setPriority(Thread.MIN_PRIORITY); return t; }}[/code]5.3启动带有属性设置的线程[code lang=”java”]ExecFromFactory.javapackage com.zj.concurrency.executors;import java.util.concurrent.ExecutorService;import java.util.concurrent.Executors;import com.zj.concurrency.executors.factory.DaemonThreadFactory;import com.zj.concurrency.executors.factory.MaxPriorityThreadFactory;import com.zj.concurrency.executors.factory.MinPriorityThreadFactory; public class ExecFromFactory { public static void main(String[] args) throws Exception { ExecutorService defaultExec = Executors.newCachedThreadPool(); ExecutorService daemonExec = Executors .newCachedThreadPool(new DaemonThreadFactory()); ExecutorService maxPriorityExec = Executors .newCachedThreadPool(new MaxPriorityThreadFactory()); ExecutorService minPriorityExec = Executors .newCachedThreadPool(new MinPriorityThreadFactory()); for (int i = 0; i &lt; 10; i++) daemonExec.execute(new MyThread(i)); for (int i = 10; i &lt; 20; i++) if (i == 10) maxPriorityExec.execute(new MyThread(i)); else if (i == 11) minPriorityExec.execute(new MyThread(i)); else defaultExec.execute(new MyThread(i)); }}[/code]结果：Create Thread-0Create Thread-1Create Thread-2Create Thread-3Thread-0 run 1 time(s)Thread-0 run 2 time(s)Thread-1 run 1 time(s)Thread-1 run 2 time(s)Thread-2 run 1 time(s)Thread-2 run 2 time(s)Create Thread-4Thread-4 run 1 time(s)Thread-4 run 2 time(s)Create Thread-5Thread-5 run 1 time(s)Thread-5 run 2 time(s)Create Thread-6Create Thread-7Thread-7 run 1 time(s)Thread-7 run 2 time(s)Create Thread-8Thread-8 run 1 time(s)Thread-8 run 2 time(s)Create Thread-9Create Thread-10Thread-10 run 1 time(s)Thread-10 run 2 time(s)Create Thread-11Thread-9 run 1 time(s)Thread-9 run 2 time(s)Thread-6 run 1 time(s)Thread-6 run 2 time(s)Thread-3 run 1 time(s)Thread-3 run 2 time(s)Create Thread-12Create Thread-13Create Thread-14Thread-12 run 1 time(s)Thread-12 run 2 time(s)Thread-13 run 1 time(s)Thread-13 run 2 time(s)Create Thread-15Thread-15 run 1 time(s)Thread-15 run 2 time(s)Create Thread-16Thread-16 run 1 time(s)Thread-16 run 2 time(s)Create Thread-17Create Thread-18Create Thread-19Thread-14 run 1 time(s)Thread-14 run 2 time(s)Thread-17 run 1 time(s)Thread-17 run 2 time(s)Thread-18 run 1 time(s)Thread-18 run 2 time(s)Thread-19 run 1 time(s)Thread-19 run 2 time(s)Thread-11 run 1 time(s)Thread-11 run 2 time(s)","categories":[{"name":"服务端开发","slug":"service","permalink":"http://test.quanke.name/categories/service/"}],"tags":[],"keywords":[{"name":"服务端开发","slug":"service","permalink":"http://test.quanke.name/categories/service/"}]},{"title":"解决Eclipse无法打开“Failed to load the JNI shared library”","slug":"e8-a7-a3-e5-86-b3eclipse-e6-97-a0-e6-b3-95-e6-89-93-e5-bc-80-e2-80-9cfailed-to-load-the-jni-shared-library-e2-80-9d","date":"2012-11-24T23:42:58.000Z","updated":"2018-01-29T07:18:46.508Z","comments":true,"path":"posts/28354/","link":"","permalink":"http://test.quanke.name/posts/28354/","excerpt":"","text":"这是因为JDK配置错误所导致的现象。 一般说来，新购笔记本会预装64位的windows系统，而在网上下载软件时，32位会优先出现在页面中（现在来说是这个情况，但我认为未来64位会越来越普及）。 如果你是64位的系统，却安装了32位的JDK，就会导致上面的情况。 解决办法如下： 卸载掉原来安装的32位的JDK，然后安装64位的JDK到电脑中。 重新修改path 和 classpath 两个环境变量。因为在64系统当中，32位软件回安装到program files （86）文件夹，64位软件会安装到program files 文件夹，当你先前安装32JDK时，你设置的环境变量路径当中当然会包括“program files （86）”，而这时JDK已经转移到“program files”中了，修改过来即可。 注意你两次安装的JDK版本号，不一定相同，因为安装时会根据你的版本号建立JDK文件夹，如果两次的版本号不同，在环境变量里也要修改。现在，Eclipse应该可以正常使用了，快去练习Java程序吧！ 扩展阅读： 32位与64位操作系统 JDK——Java开发套件下载链接： 64位JDK下载 Oracle官方下载","categories":[{"name":"随笔","slug":"essay","permalink":"http://test.quanke.name/categories/essay/"}],"tags":[],"keywords":[{"name":"随笔","slug":"essay","permalink":"http://test.quanke.name/categories/essay/"}]},{"title":" go语言教程","slug":"go-e8-af-ad-e8-a8-80-e6-95-99-e7-a8-8b","date":"2012-11-22T17:31:11.000Z","updated":"2018-01-29T07:18:46.511Z","comments":true,"path":"posts/23178/","link":"","permalink":"http://test.quanke.name/posts/23178/","excerpt":"","text":"http://www.yiibai.com/go","categories":[{"name":"Go语言","slug":"golang","permalink":"http://test.quanke.name/categories/golang/"}],"tags":[],"keywords":[{"name":"Go语言","slug":"golang","permalink":"http://test.quanke.name/categories/golang/"}]},{"title":"Windows8鼠标和键盘快捷操作","slug":"windows8-e9-bc-a0-e6-a0-87-e5-92-8c-e9-94-ae-e7-9b-98-e5-bf-ab-e6-8d-b7-e6-93-8d-e4-bd-9c","date":"2012-11-21T19:28:13.000Z","updated":"2018-01-29T07:18:46.553Z","comments":true,"path":"posts/53863/","link":"","permalink":"http://test.quanke.name/posts/53863/","excerpt":"","text":"有关在 Windows 中使用鼠标和键盘的大多数方法和技巧基本保持不变（特别是在桌面中）。 下面的一些方法介绍了如何通过鼠标和键盘快捷方式来使用 Windows 8 和 Windows RT 的新功能，以及如何在新环境中找到一些熟悉的功能。Win8之家(Win8e.com)搜集整理 操作使用鼠标使用鼠标打开超级按钮（“搜索”、“共享”、“开始”、“设备”和“设置”）。指向右上角或右下角以查看超级按钮。 （尝试移动到角落中让鼠标指针消失。） 当超级按钮出现时，沿着边缘向上或向下移动，以单击所需的超级按钮。所有超级按钮：Win键+C“搜索”按钮：Win键+Q“共享”按钮：Win键+H“开始”按钮：Win键“设备”按钮：Win键+K“设置”按钮：Win键 +I在你的电脑（应用、设置和文件）、Web 或应用中搜索。指向右上角或右下角以查看超级按钮。 （尝试移动到角落中让鼠标指针消失。） 当超级按钮出现时，沿着边缘向上或向下移动，单击“搜索”，然后输入你的搜索词。 如果要搜索设置、文件或其他应用，请单击该选项。如果已在“开始”屏幕中，则可以直接输入搜索词。如果要查看你的电脑上所有应用的列表，请右键单击“开始”屏幕，然后单击“所有应用”。在应用内搜索或查找某应用：Windows 徽标键 +Q搜索设置：Win键 +W搜索文件：Win键 +F转到“开始”屏幕。指向左下角。 当出现“开始”时，单击左下角。指向右上角或右下角以查看超级按钮。 （尝试移动到角落中让鼠标指针消失。） 当超级按钮出现时，沿着边缘向上或向下移动，然后单击“开始”。按键盘上的 Windows 徽标键转至命令和上下文菜单。右键单击以查看命令和上下文菜单。 在项目上右键单击通常会弹出特定于该项目的选项。Win键 +Z使用 Tab 或箭头键突出显示内容，然后按空格键或 Enter。在最近使用的应用之间切换。若要切换到最近使用的应用，请指向左上角。 （尝试将鼠标指针移动到角落中让鼠标指针消失。） 当出现上一个应用时，单击该角落。若要切换到其他应用，请指向左上角，然后稍微向下移动一点。 当出现其他应用时，单击所需的应用。Win键 +Tab贴靠一个应用，以便并排使用两个应用。注意：你的屏幕分辨率必须至少为 1366 x 768 才能贴靠应用。 检查此设置的步骤：通过以下方式打开“屏幕分辨率”：从屏幕的右边缘向中间轻扫，点击“搜索”（如果使用鼠标，则指向屏幕的右上角，然后将指针向下移动，再单击“搜索”），在搜索框中输入“显示”，然后依次点击或单击“设置”和“显示”。桌面被视为一个应用。将指针移动到左上角直至第二个应用出现，然后将该应用拖动到屏幕的左侧或右侧直至该应用后出现一个开口。你也可以指向左上角，然后将指针向下移动以查看最近使用的应用。 单击并拖动要贴靠的应用。保持该应用的大小不变，或调整该应用的大小使其占据屏幕的三分之二或布满整个屏幕。Win键 +句点打开桌面。转到“开始”屏幕，然后单击“桌面”磁贴。Win键 +D放大或缩小在“开始”屏幕上，使用右下角的缩放图标 或 Ctrl+滚轮。Ctrl+加号即可放大Ctrl+减号即可缩小关闭应用指向屏幕的顶部边缘，然后单击应用并将其拖动到屏幕的底部。你还可以通过指向左上角并向下拉来关闭最近使用的应用。 右键单击要关闭的应用， 然后选择“关闭”。Alt+F4Alt+F4指向右上角或右下角以查看超级按钮。 （尝试移动到角落中让鼠标指针消失。） 当超级按钮出现时，沿着边缘向上或向下移动，然后单击“设置”。 单击“电源”，然后选择关机选项。十种关机方法1. 按 Ctrl+Alt+Del。2. 使用 Tab 键移动到“电源”图标。 将显示关机选项列表。3. 使用向上或向下键移动到所需选项。4. 按 Enter。","categories":[{"name":"使用","slug":"use","permalink":"http://test.quanke.name/categories/use/"}],"tags":[],"keywords":[{"name":"使用","slug":"use","permalink":"http://test.quanke.name/categories/use/"}]},{"title":" ImageView控件开发滤镜效果","slug":"imageview-e6-8e-a7-e4-bb-b6-e5-bc-80-e5-8f-91-e6-bb-a4-e9-95-9c-e6-95-88-e6-9e-9c","date":"2012-11-21T18:31:54.000Z","updated":"2018-01-29T07:18:46.512Z","comments":true,"path":"posts/32992/","link":"","permalink":"http://test.quanke.name/posts/32992/","excerpt":"","text":"实现过程说明：使用设置图片对象的ColorFilter属性，把ColorMatrixColorFilter设置灰度通道，传递到ColorFilter属性中注意两点：1 图片滤镜效果，只是在图层上面 加了一层效果，不是对图片的实际修改\\如果对单个图片加滤镜效果后，其他地方使用到这个图片也会变成带滤镜效果。下面是实际实现代码[code lang=”java”]public final float[] BT_SELECTED = new float[] {1,0,0,0,99,0,1,0,0,99,0,0,1,0,99,0,0,0,1,0};public final float[] BT_NOT_SELECTED = new float[] {1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,1,0};;public final static float[] BT_SELECTED1 = new float[] {.338f, 0.339f, 0.332f, 0, 0,.338f, 0.339f, 0.332f, 0, 0,.338f, 0.339f, 0.332f, 0, 0,, 0, 0, 1, 0}; @Overridepublic void onCreate(Bundle savedInstanceState) {super.onCreate(savedInstanceState);setContentView(R.layout.main); ImageView ib2;ib1 = (ImageView) findViewById(R.id.imageViewt);ib2 = (ImageView) findViewById(R.id.imageView2); ib1.setOnTouchListener(new ImageView.OnTouchListener(){@Overridepublic boolean onTouch(View v, MotionEvent event) {if (event.getAction() == MotionEvent.ACTION_DOWN) { ib1.setImageResource(R.drawable.icon1);ib1.getDrawable().setColorFilter(new ColorMatrixColorFilter(BT_SELECTED)); ib1.setImageDrawable(ib1.getDrawable());} else if (event.getAction() == MotionEvent.ACTION_UP) {ib1.getDrawable().clearColorFilter(); ib1.getDrawable().setColorFilter(new ColorMatrixColorFilter(BT_NOT_SELECTED));ib1.setImageResource(R.drawable.icon2);}return false;}}); }[/code]","categories":[{"name":"android开发","slug":"android","permalink":"http://test.quanke.name/categories/android/"}],"tags":[],"keywords":[{"name":"android开发","slug":"android","permalink":"http://test.quanke.name/categories/android/"}]},{"title":"程序中如何获取Android的Root权限","slug":"e7-a8-8b-e5-ba-8f-e4-b8-ad-e5-a6-82-e4-bd-95-e8-8e-b7-e5-8f-96android-e7-9a-84root-e6-9d-83-e9-99-90","date":"2012-11-21T18:09:26.000Z","updated":"2018-01-29T07:18:46.469Z","comments":true,"path":"posts/5630/","link":"","permalink":"http://test.quanke.name/posts/5630/","excerpt":"","text":"我们知道Android手机操作系统采用的是Linux内核，Linux中最高的系统权限就是Root，这就类似与Windows中的Administrator系统管理员权限，也就是操作系统的最高权限。由于Root的权限过高，因此手机产商一般都不允许用户直接拥用Root权限，以防止用户修改系统内置的业务跟程序。但是对于用户来说，当然希望能拥有Root权限以将手机修改成自己的一种特色，因为有Root权限则可以任意修改手机的所有文件跟程序，让手机更加个性化。那么我们在Android开发中如何获取Android的Root权限呢？下面是主要的简单代码。[code lang=”java”]Process process = null; try{ process = Runtime.getRuntime().exec(&quot;su&quot;); //这里是主要程序代码ATAAW.COM process.waitFor(); }catch(Exception e){ e.printStackTrace(); }finally { process.destroy(); }[/code]","categories":[{"name":"android开发","slug":"android","permalink":"http://test.quanke.name/categories/android/"}],"tags":[],"keywords":[{"name":"android开发","slug":"android","permalink":"http://test.quanke.name/categories/android/"}]},{"title":"android入门：zxing学习笔记（一）","slug":"android/android-e5-85-a5-e9-97-a8-ef-bc-9azxing-e5-ad-a6-e4-b9-a0-e7-ac-94-e8-ae-b0-ef-bc-88-e4-b8-80-ef-bc-89","date":"2012-11-15T02:11:11.000Z","updated":"2018-01-29T07:18:46.579Z","comments":true,"path":"posts/2577/","link":"","permalink":"http://test.quanke.name/posts/2577/","excerpt":"","text":"对于刚开始学习android开发的童鞋们来说，若有一个简单而又全面的android工程能来剖析，那就是再好不过了，zxing就是不错得例子。 zxing的源码可以到google code上下载，整个源码check out 下来，里面有各个平台的源码，ios的，android的。当然我们需要的就是android代码。 将android的工程导入到eclipse中，导入完成后，eclipse会显示各种错误，这是缺少core文件夹里面的核心库文件所致，在project中创建文件夹core，再将zxing源码中得core文件夹下得代码导入进来，这样就可以了。 如果遇到unable resolved target-X，则是你的avd版本问题，可以在project.propertities修改target值。clean下就ok。 如上的都是zxing android代码分析的准备，下面的则是正式开始。 如上图：为整个android工程的代码，android入门就重这些代码着手。其中主要关注的是android，camera，encode，result文件夹。 程序启动的流程：加载main activity，在此类中创建CaptureActivityHandler对象，该对象启动相机，实现自动聚焦，创建DecodeThread线程，DecodeThread创建Decodehandler，这个对象就获取从相机得到的原始byte数据，开始解码的第一步工作，从获取的byte中解析qr图来，并解析出qr图中的字符，将这块没有分析的字符抛送到CaptureActivityHandler中handle，该类调用main activity的decode函数完成对字符的分析，最后显示在界面上（刷新UI，最好在UI线程里完成）。这样一个解析qr图的过程并完成。 下面具体分析整个过程。重点之处有main activity,camera. 程序启动的第一个activity便是：CaptureActivity,有点类似于c中的main函数，在此是main activity。这个acitvity做的主要的事便是：加载扫描各种条形码，二维码的一个界面，启动一个处理获取一维码二维码信息的线程，完成对于获取的图像信息进行解码，最后再将解码的信息显示在界面上。 完成界面的加载主要在于onCreate，和onResume函数中，这涉及到了一个activity的生命周期，以后再具体分析。首先调用onCreate，再调用onResume，在onResume中会判断这个activity是由什么启动的，可能是其他的app触发了，也可能是用户直接启动的。这样就初始化了三个变量，一是source，便是启动activity的源，一是decodeFormats，指出解码的方式，是qr，还是其他的等等，最后一个是：charactreset，即是对于这些生成qr图的字符的编码方式。若没有对core中得代码修改，用该程序解析GB2312编码的字符则会乱码。乱码的解决后面将提到。 界面的加载中有两个很关键的类。surfaceview 和 ViewFinderView，前面的是用来加载从底层硬件获取的相机取景的图像，后面的是自定义的view，实现了扫描时的界面，不停的刷新，并将识别的一些数据，如定位的点回调显示在界面上。 来自：http://www.cnblogs.com/liuan/archive/2012/01/05/2312714.html","categories":[{"name":"android开发","slug":"android","permalink":"http://test.quanke.name/categories/android/"}],"tags":[],"keywords":[{"name":"android开发","slug":"android","permalink":"http://test.quanke.name/categories/android/"}]},{"title":"迅速开始使用Cloud Foundry的入门文档.","slug":"e8-bf-85-e9-80-9f-e5-bc-80-e5-a7-8b-e4-bd-bf-e7-94-a8cloud-foundry-e7-9a-84-e5-85-a5-e9-97-a8-e6-96-87-e6-a1-a3","date":"2012-11-15T00:10:48.000Z","updated":"2018-01-29T07:18:46.506Z","comments":true,"path":"posts/33755/","link":"","permalink":"http://test.quanke.name/posts/33755/","excerpt":"","text":"http://cloudfoundry-doc.csdn.net/","categories":[{"name":"服务端开发","slug":"service","permalink":"http://test.quanke.name/categories/service/"}],"tags":[],"keywords":[{"name":"服务端开发","slug":"service","permalink":"http://test.quanke.name/categories/service/"}]},{"title":"深度剖析CloudFoundry的架构设计","slug":"e6-b7-b1-e5-ba-a6-e5-89-96-e6-9e-90cloudfoundry-e7-9a-84-e6-9e-b6-e6-9e-84-e8-ae-be-e8-ae-a1","date":"2012-11-15T00:07:39.000Z","updated":"2018-01-29T07:18:46.574Z","comments":true,"path":"posts/3386/","link":"","permalink":"http://test.quanke.name/posts/3386/","excerpt":"","text":"VMware在今年4月份突然发布了业内第一个开源的PaaS——CloudFoundry。发布至今的这几个月里，笔者一直关注它的演进，并从它的架构设计中获益良多，觉得有必要写出来与大家分享一下。 本文会分为两个部份：第一部份主要介绍CloudFoundry的架构设计，从它所包含的模块介绍起，到各部份的消息流向，各模块如何协调合作；第二部份会在第一部份的基础上，以如何在你的数据中心里面用CloudFoundry部署一个私有PaaS为目标，把第一部分介绍到的架构知识使用起来。 第一部份讲的很多内容，会引用Pat在10月12日的VMwareCloud Forum上面关于CloudFoundry架构的演讲。Pat是CloudFoundry Core的负责人，他的那次演讲很值得一听。如果你当时在场，并且理解他所说的内容，本部份可以选择直接跳过。我除了会把说的内容讲具体点外，不太可能可以讲得比他好。 一、架构及模块 从总体地看，CloudFoundry的架构如下： 这个架构图以及下文所用到的各模块架构图均来自Pat的PPT。从上图能够看到CloudFoundry主要有以下几大组件组成： 1、 Router：顾名思义，Router组件在CloudFoundry中是对所有进来的Request进行路由。进入Router的request主要有两类：首先是来自VMCClient或者STS的，由CloudFoundry使用者发出的，管理型指令。 例如：列出你所有apps的vmcapps，提交一个apps等等。这类request会被路由到AppLife Management组件，又叫CloudController组件去；第二类是外界对你所部署的apps访问的request。这部份requests会被路由到Appexecution，又或者叫做DEAs的组件去。所有进入CloudFoundry系统的requests都会经过Router组件，看到这里可能会有朋友会担心Router成为单点，从而成为整个云的瓶颈。 但是CloudFoundry作为云系统，其设计的核心就是去单点依赖，组件平行扩充，且可替代的以保证扩展性，这是CloudFoundry，甚至所有云计算系统的设计原则，后文会讨论CloudFoundry如何做到这点，目前只要知道，系统可以部署多个Routers共同处理进来的requests，但是Router上层的LoadBalance不在CloudFoundry的实现范围，CloudFoundry只保证所有的request是无状态的，这样就使上层均衡附载选择面非常非常大了，例如可以通过DNS做，也可以部署硬件的LoadBalancer，或者简单点，弄台ngnix作负载均衡器，都是可行的。 Router组件，目前版本是对nginx的一个简单封装。熟悉ngnix的朋友应该知道，它可以一个套接字文件（.sock文件）作为输入输出。所有安装CloudFoundry的Router组件服务器都会安装一个nginx，其ngnix.conf文件有以下配置： 从整体的来看，Router组件的结构如下： 外界httprequest进入CloudFoundry服务器，nginx会首先接到request，nginx通过sock与router.rb进行交互，于是真正处理请求的是Router组件。router.rb里面根据传入的url，用户名密码等，进行逻辑判断，到CloudController组件或者DEA组件取数据并且返通过与niginx连接的.sock文件返回。 router.rb是对nginx进行了逻辑封装。熟悉CloudFoundry的朋友肯定知道，CloudFoundry给每一个app分配了一个url访问，如果直接使用VMware所托管的CloudFoundry.com的话，那你的app的url可能就是xxx.cloudfoundry.com，无论通过命令给你的app扩展了多少个instances，都是从这个url访问的，这里面的url转换路由就是由router.rb实现的。 2、DEA(Droplet Execution Agency): 首先要解析下什么叫做Droplet。Droplet在CloudFoundry的概念里面是指一个把你提交的源代码，以及CloudFoundry配套好的运行环境，再加上一些管理脚本，例如Start/Stop这些小脚本全部压缩好在一起的tar包。还有一个概念，叫做Stagingapp，就是指制作上面描述这个包，然后把它存储好的过程。CloudFoundry会自动保存这个Droplet，直到你start一个app的时候，一台部署了DEA模块的服务器会来拿一个Droplet的copy去运行。所以如果你扩展你的app到10个instances，那这个Droplet就被会复制十份，让10个DEA服务器拿去运行。 下图是DEA模块的架构图： Cloud Controller模块（下面会介绍）会发送start/stop等基本的apps管理请求给DEA，dea.rb接收这些请求，然后从NFS里面找到合适的Droplet。前面说到Droplet其实是一个带有运行脚本的，带运行环境的tar包，DEA只需要把它拿过来解压，并即行里面的start脚本，就可以让这个app跑起来。到此，app算是可以访问，并start起来了，换句话说就是有这台服务器的某一个端口已经在待命，只要有request从这个端口进来，这个app就可以接收并返回正确的信息。 接着dea.rb要做些善后的工作：1、把这个信息告诉Router模块。我们前面说到，所有进入CloudFoundry的requests都是由Router模块处理并转发的，包括用户对app的访问request，一个app起来后，需要告诉router，让它根据loadbalance等原则，把合适的request转进来，使这个app的instance能够干起活；2、一些统计性的工作，例如要把这个用户又新部署了一个app告诉CloudController，以作quota控制等；3、把运行信息告诉HealthManager模块，实时报告该app的instance运行情况。另外DEA还要负责部份对Droplet的查询工作，譬如，如果用户通过CloudController想查询一个app的log信息，那DEA需要从该Droplet里面取到log返回等等。 3、CloudController：CloudController是CloudFoundry的管理模块。主要工作包括： a) 对apps的增删改读； b) 启动、停止应用程序； c) Staging apps（把apps打包成一个droplet）； d) 修改应用程序运行环境，包括instance、mem等等； e) 管理service，包括service与app的绑定等； f) Cloud环境的管理； g) 修改Cloud的用户信息； h) 查看Cloud Foundry，以及每一个app的log信息。 这似乎有点复杂，但简单的说，可以很简单：就是与VMC和STS交互的服务器端。VMC和STS与CloudFoundry通信采用的是restful接口，另一方面CloudController是一个典型的Rubyon Rails项目，从VMC或者STS接到JSON格式的协议，然后写入CloudController Database，并发消息到各模快去控制管理整个云。和其他ROR项目一样，CloudController的所有API可以从conf/routes.rb里看到。开放的Restful接口好处在于第三方应用开发和集成，企业在用CloudFoundry部署私有云的时候，可以通过这些接口来自动化控制管理整个Cloud环境。这部份内容将在第二部份论述。 下图是Cloud Controller的架构图： 图中Health Manager和DEA是外部模块，CCDatabase就是CloudController Database，这个是整个CloudFoundry不能做HP的地方。CloudController Database的并发性不会很多，应用级别的数据库访问是由底下的Service模块处理的，这个数据库存的是Cloud的配置信息。读操作主要来自DEA启动，作为初始化DEA的依据；以及healthmanager模块会从这里读取预期的状态信息，这部份数据会与从DEA得到的实际状态信息进行比对。 NFS是多个CloudController的共享存储，CloudController其中一个重要工作就是StagingApps。Droplets的存储是在集群环境的唯一的。而CloudController是集群运行，换言之，就是每一个控制Request可能由不同的CloudController处理，假设一个简单的用户场景：我们需要部署一个app到CloudFoundry中。我们在敲完那条简单的push命令后，VMC开始工作，在做完一轮的用户鉴权、查看所部署的apps数量是否超过预定数额，问了一堆相关app的问题后，需要发4个指令： 1．发一个POST到”apps”，创建一个app; 2．发一个PUT到”apps/:name/application”，上传app; 3．发一个GET到”apps/:name/”，取得app状态，看看是否已经启动； 4．如果没有启动，发一个PUT到”apps/:name/”，使其启动。 如果第2和第4步由不同的Cloud Controller来处理，而又无法保证他们能找到同一个Droplet，那第4步将会因为找不到对应的Droplet而启动失败。如何保证这一连串指令过来所指向的Droplet都是同一个呢？使用NFS，使CloudController共享存储是最简单的方法。但是这个方法在安全性等方面并不完美。在10月12日的VMwareCloud Forum上，Pat告诉我们下一版本的CloudFoundry这里将会有大调整，但是在那部份代码公开前，我不方便在这评价太多。 4、HealthManager: 做的事情不复杂，简单的说是从各个DEA里面拿到运行信息，然后进行统计分析，报告等。统计数据会与CloudController的设定指标进行比对，并提供Alert等。HealthManager模块目前还不是十分完善，但是CloudManage栈里面，自动化health管理、分析是一个很重要的领域，而这方面可以扩展的地方也很多，结合OrchestrationEngine可以使云自管理、自预警；而与BI方面技术结合，可以统计运营情况，合理分配资源等。这方面CloudFoundry还在发展之中。 5、Services:Cloud Foundry的Service模块从源代码控制上看就知道是一个独立的、可Plugin的模块，以方便第三方把自己的服务整合入CloudFoundry生态系统。在Github上看到service是与CloudFoundry Core项目vcap独立的一个repository，为vcap-service。Service模块其中设计原则是方便第三方服务提供商提供服务。在这方面CloudFoundry做得很成功，从Github上看，已经有以下服务提供：a)MongoDB; b) mysql; c) neo4j; d) PostgreSql; e) RabbitMQ; f) Redis; g)vBlob。基类都是放在base文件夹中。 第三方如果需要自己开发CloudFoundry的服务，需要继承改写它里面的两个基础类：Node和Gateway；而里面一些操作，如：Provision，可以在base的provisioner.rb基础上加入自己的逻辑，同样的还有Service_Error和Service_Message等。关于如何写自己的Service，ELC的博客会推出相应文章详细论述，并不在本文的讨论范围里面，从架构了解上来说，只要知道服务间的关系，知道个服务与base间透过继承关系来横向扩充，而CloudFoundry与apps调用Service是通过base来完成这一简单的架构方法即可。 6、NATS(Message bus): 从CloudFoundry的总架构图看，位于各模块中心位置的是一个叫nats的组件。NATS是由CloudFoundry的架构师Derek开发的一个轻量级的，支持发布、订阅机制的消息系统。Github开源地址是：https://github.com/derekcollison/nats。其核心基于EventMachine开发，代码量不多，可以下载下来慢慢研究。 CloudFoundry是一个多模块的分布式系统，支持模块自发现，错误自检，且模块间低耦合。其核心原理就是基于消息发布订阅机制。每个台服务器上的每个模块会根据自己的消息类别，向MessageBus发布多个消息主题；而同时也向自己需要交互的模块，按照需要的信息内容的消息主题订阅消息。譬如：一个DEA被加入CloudFoundry集群中，它需要向大家吼一下，以表明它已经准备好服务了，它会发布一个主题是”dea.start”的消息： @ hello_message_json中包括DEA的UUID,ip, port, 版本信息等内容。 再例如，CloudController需要启动一个Droplet的instance： a)首先一个DEA在启动的时候，会首先会对自己UUID的消息主题进行订阅。 其他模块需要通过’’dea.#{uuid}.start”这个主题发送消息来使它启动，一旦这个DEA接收到消息，就会触发process_dea_start(msg)这个方法来处理启动所需要的工作。 b)Cloud Controller或者其他模块发送消息，让UUID为xxx的DEA启动。 c)DEA模块接收到消息后，就会触发process_dea_start(msg)方法。msg是由其他模块发送过来的消息内容，包括：droplet_id,instance_index, service, runtime等内容，process_dea_start会取得这些启动DEA必须的信息，然后进行一系列操作，例如从NFS中取得Droplet，解压，修改必要环境配置，运行启动脚本等等。等一切都准备好后，然后需要给Router发个消息，告诉它这个Droplet已经随时准备好报效国家，以后有相应的request记得让它来处理。 d)Router模块在启动时就已经订阅”router.register”消息主题。 收到前面DEA发出的信息后，会触发register_droplet方法，去绑定Droplet。到此启动一个Droplet的instance工作完成。 我们可以看到整个CloudFoundry的核心就是一套消息系统，如果想了解CloudFoundry的来龙去脉，去跟踪它里面复杂的消息机制是非常好的方法。另一方面，CloudFoundry是一套基于消息的分布式系统，面向消息的架构是它节点横向扩展，组件自发现等云特性的基础。 Cloud Foundry的架构简单介绍至此，其实作为第一款开源的PaaS，CloudFoundry架构有很多可以学习借鉴的地方，很多细节上的处理是很精妙的，这些内容如果有可能会在后续文章继续探讨，本文题虽为深入CloudFoundry，其实也只是浅尝即止，把总体架构介绍一下，目标在于使我们有足够的背景知识去用CloudFoundry搭建企业内部的私有PaaS。总结一下，笔者从CloudFoundry的结构中学到的东西： 1、基于消息的多组件架构是实现集群的简单、且有效方法。消息可以使集群节点间解耦，使自注册，自发现这些在大规模数据中心中很重要的功能得到实现； 2、适当的抽象层，模板模式的使用，方便第三方可以方便在CloudFoundry开发扩展功能。CloudFoundry在DEA及Service层都做了抽象层处理，相对应地使开发者可以容易地为CloudFoundry开发Runtime和Service。例如，在CloudFoundry刚推出的时候，只支持Node.js,Java, Ruby，但第三方提供商、开源社区快速跟进，为CloudFoundry添加了PHP,Python的支持。这得益于CloudFoundry精巧的DEA架构设计，如何开发新的Runtime支持，会在后续博文中有所论述. 二、源码导读 笔者一直觉得深入理解一个技术的最好方法就是读它的源码，而CloudFoundry是完全开源的PaaS平台，而因为刚发展起来，代码量不多，主要作者们的代码功力也相当不错，读起来很舒服，很适合研读。而不得不再次表扬一下它完全基于消息机制的架构设计，对组件扩展性，第三方接入等方面做得很好，读者可以从中学到不少思想性的东西。笔者很推荐大家去读一下它的源代码。你可以在Github上找到CloudFoundry的全部代码：https://github.com/cloudfoundry，你会看到几个不同的Repositories，它们分别是： 1、vcap: Cloud Foundry的Core，又或者称作Kernel； 2、vcap-service: Cloud Foundry的Service组件。Cloud Foundry的service是作为插件提供的，这出于它方便第三方开发service而设计的； 3、vmc: VMware Cloud CLI. 是一个Ruby应用，与Cloud Foundry的CLI交互。主要通过分析用户输入的CLI，向CloudFoundry发送Restful请求； 4、vcap-java: 如果你的app是用java开发，且需要与Cloud Foundry交互，例如取得当前serviceserver的ip地址等，你可能需要这个jar，里面对我们Java开发常用框架有所支持，它底层也是对CloudFoundry的Restful请求的包装； 5、vcap-java-client: Cloud Foundry的Restful API的Java封装，与上面的项目不一样，它只是个简单的读取CloudFoundry信息，并放如JavaBean中； 6、vcap-test: Cloud Foundry的test cases; 7、vcap-test-assets: Cloud Foundry一些apps示例。 原文链接：http://qing.weibo.com/2294942122/88ca09aa330004r8.html","categories":[{"name":"服务端开发","slug":"service","permalink":"http://test.quanke.name/categories/service/"}],"tags":[],"keywords":[{"name":"服务端开发","slug":"service","permalink":"http://test.quanke.name/categories/service/"}]},{"title":"Paas","slug":"paas","date":"2012-11-14T23:55:06.000Z","updated":"2018-01-29T07:18:46.532Z","comments":true,"path":"posts/43816/","link":"","permalink":"http://test.quanke.name/posts/43816/","excerpt":"","text":"PaaS是Platform-as-a-Service的缩写，意思是平台即服务。Paas - 概述 计算机技术 PaaS（Platform-as-a-Service：平台即服务） 全称:(Platform as a service) 中文: 平台即服务 PaaS的优势(1张) 所谓PaaS实际上是指将软件研发的平台（计世资讯定义为业务基础平台）作为一种服务，以SaaS的模式提交给用户。因此，PaaS也是SaaS模式的一种应用。但是，PaaS的出现可以加快SaaS的发展，尤其是加快SaaS应用的开发速度。在2007年国内外SaaS厂商先后推出自己的PAAS平台。 PAAS之所以能够推进SaaS的发展，主要在于它能够提供企业进行定制化研发的中间件平台，同时涵盖数据库和应用服务器等。PAAS可以提高在Web平台上利用的资源数量。例如，可通过远程Web服务使用数据即服务（Data-as-a-Service：数据即服务），还可以使用可视化的API，甚至像800app的PAAS平台还允许你混合并匹配适合你应用的其他平台。用户或者厂商基于PaaS平台可以快速开发自己所需要的应用和产品。同时，PaaS平台开发的应用能更好地搭建基于SOA架构的企业应用。 此外，PAAS对于SaaS运营商来说，可以帮助他进行产品多元化和产品定制化。例如 Salesforce的PAAS平台让更多的ISV成为其平台的客户，从而开发出基于他们平台的多种SaaS应用，使其成为多元化软件服务供货商（Multi Application Vendor），而不再只是一家CRM随选服务提供商。而国内的SaaS厂商800app通过PAAS平台，改变了仅是CRM供应商的市场定位，实现了 BTO(Built to order:按订单生产)，和在线交付流程。使用800app的PAAS开发平台，用户不再需要任何编程即可开发包括CRM、OA、HR、SCM、进销存管理等任何企业管理软件，而且不需要使用其他软件开发工具并立即在线运行。 面向个人的EC站点(electronic commerce site)的巨头公司 Amazon，把最初为了自己公司的运营用的构筑起来的系统平台，进行出租，用户可以自由选择操作系统和中间软件，以这样的方式提供硬件以及软件平台作为服务，最初被海外以一些冒险事业的企业所使用。从2006年开始 [Amazon EC] [Amazon S3]开始作为服务推向市场。 还有现代软件业霸主同时又是次时代计算的先驱的Google,大家都知道在世界上构筑以及运行了非常多的数据中心。以搜索引擎以及新的广告模式而闻名。他们使用便宜的计算机和强有力的中间件，以及自己的技术装备出了世界上最强大的数据中心，以及超高性能的并行计算群。 2008年4月发表的PaaS服务[Google App Engine]和Amazon 的 EC2,S3,SimpleDB等服务拥有相似的功能。这些稳定的平台上同样搜索引擎，GMail等服务也在运行。同样以ASP~SaaS成功的Salesforce，2007年开始用于提供SaaS的系统基盘对外公开，用Force这个名称开始进入PaaS业务。他所提供的PaaS服务里采用Java类似的语言Apex以及Eclipse开发平台，整合的开发环境也作为服务进行提供(Development as a Service)。Google/Amazon/Salesforce这三个软件巨头非常的重视PaaS这种新的商业模式，Amazon的PaaS服务为了用户可以自由的组合服务提供了更多的自由度，Google的话提供了更多的服务使用户能够方便的使用，去掉了一些繁琐的作业。Google/Salesforce的PaaS不仅是基础硬件的提供开发环境的同样被提供属于真正的平台作为一种服务(PaaS)Paas - APaaS和IPaaS 简单的说，PaaS平台就是指云环境中的应用基础设施服务，也可以说是中间件即服务。PaaS平台在云架构中位于中间层，其上层是SaaS，其下层是IaaS。在传统On-Premise部署方式下，应用基础设施即中间件的种类非常多， 有应用服务器，数据库，ESBs, BPM, Portal, 消息中间件，远程对象调用中间件等等。对于PaaS平台，Gartner把它们分为两类，一类是应用部署和运行平台APaaS（application platform as a service)，另一类是集成平台IPaaS（integration as a service）。 人们经常说的PaaS平台基本上是指APaaS，如Force.com和Google App Engine。 Paas - 公有云PaaS平台和企业级PaaS平台 云计算起源于大型互联网企业。对于互联网企业，成本压力和指数级的业务增长压力使他们关注于物理资源的利用率和应用的可扩展性。在应用服务器这层，通过Cluster Session来实现水平扩展；在数据存储这层，采用基于BASE模型的NOSQL数据存储来实现扩展。目前互联网企业主导面向公众服务的公有云PaaS平台，如Google App Engine和Amazon Beanstalk。对于公有云PaaS平台，PaaS就是云环境下的应用部署平台。（1）基于商业软件的部署方式：Application - Framework/Libs - Websphere/Weblogic + RMBMS（2）基于开源软件的部署方式：Application - Frameworks/Libs - Tomcat/JBoss + RDBMS（3）云环境下的部署方式：Application - Frameworks/Libs - PaaS(Goole App Engine, Amazon) 这种情况下，PaaS实质上就是一个预先装好的Web Container和一组公共服务，如数据存储服务(不一定是关系型数据库)、消息队列、集中式session及cache等等。对于个人用户或者简单应用来说，公有云PaaS平台使得开发人员仅关注应用逻辑开发本身，不用把精力花费在基础实施和应用的扩展和维护上。 所谓企业级PaaS平台，主要包含两类，一是大型企业内部的私有云PaaS平台，另一类是面向ISV厂商的PaaS平台。然而对于企业级PaaS平台，PaaS不仅仅是云环境下的应用部署平台。 抛开安全问题不讲，私有云PaaS平台和公有云PaaS有如下核心区别：（1）复杂的多租户模型：对于公有云PaaS平台，其租户模型是 （用户-&gt; 应用 -&gt; 应用实例），一个用户可以部署多个应用，每个应用可以有多个运行时实例，应用实例共享资源池。对于一个大型企业，一个大部门可能是一个租户，大部门下面的子部门也是一个租户；或者一个SaaS应用系统的一个实例就是一个租户。对于租户的资源使用，大部门租户是共享资源池里面的资源，也可能某些关键租户需要独占一些资源以保证安全。（2）已有应用的兼容：企业的历史应用都是基于关系型数据库的，某些PaaS平台不支持关系型数据存储，即使是简单的已有应用都无法迁移到PaaS平台上。（3）复合应用的构建: 企业On-Premise应用在很长一段时间内都是要存在的，私有云PaaS平台要成为On-Premise和公有云之间的桥梁。私有云PaaS平台除了是应用部署平台外，还需要提供集成和方便构建复合应用的能力，就是Gartner所提的iPaaS能力。 企业级PaaS平台不仅仅是应用部署平台，而且是复杂多租户环境和复杂应用环境下的共享基础设施平台，是On-Premise部署通往公有云部署的必经之路。 CloudTao PaaS平台是国内第一个企业级PaaS平台，其构建原则是：（1）开放、简单、一致、轻量的架构 - 构建平台的核心是标准，aPaaS的核心是应用运行时环境及数据存储服务，标准是Servlet和SQL，但PaaS平台需要的是 这两个标准的轻量级实现。（2）细粒度的资源隔离 - 在多租户的实现方面，介于基于虚拟机的隔离与共享一切资源之间，在资源利用率、安全、可扩展性几个方面中取得平衡。（3）真正的跨平台及分布式架构 - CloudTao只依赖于JVM，无单点故障，可实现水平线性扩展。（4）对历史应用的兼容 - 已有应用无需改动或者极少改动即可迁移至PaaS平台，从而共享PaaS平台资源并可以容易的扩展。 CloudTao PaaS平台的主要技术特性是：（1）多层次的多租户实现 - 多层次的多租户能够满足不同的应用场景，能够满足各种不同的企业/ISV需求。（2）支持不同类型的数据存储 - 支持关系型数据库及NOSQL数据存储。对于关系型数据库，能够实现轻量级多租户关系型数据库系统至传统关系型数据库的平滑迁移。（3）开发SDK - 基于Maven的本地开发SDK，提供自定义插件方便开发人员部署和调试应用。（4）统一监控及计量 - 监控应用的运行情况，JVM运行时信息，系统资源消耗，日志及HTTP请求处理统计等。","categories":[{"name":"服务端开发","slug":"service","permalink":"http://test.quanke.name/categories/service/"}],"tags":[],"keywords":[{"name":"服务端开发","slug":"service","permalink":"http://test.quanke.name/categories/service/"}]},{"title":"为 iPhone / iOS 应用开发者和游戏开发者提供教程（国外牛逼博客）","slug":"e4-b8-ba-iphone-ios-e5-ba-94-e7-94-a8-e5-bc-80-e5-8f-91-e8-80-85-e5-92-8c-e6-b8-b8-e6-88-8f-e5-bc-80-e5-8f-91-e8-80-85-e6-8f-90-e4-be-9b-e6-95-99-e7-a8-8b-ef-bc-88-e5-9b-bd-e5-a4-96-e7-89-9b","date":"2012-11-14T22:12:57.000Z","updated":"2018-01-29T07:18:46.440Z","comments":true,"path":"posts/8361/","link":"","permalink":"http://test.quanke.name/posts/8361/","excerpt":"","text":"http://www.raywenderlich.com","categories":[{"name":"ios开发","slug":"ios","permalink":"http://test.quanke.name/categories/ios/"}],"tags":[],"keywords":[{"name":"ios开发","slug":"ios","permalink":"http://test.quanke.name/categories/ios/"}]},{"title":"android 界面适配处理记录","slug":"android/android-e7-95-8c-e9-9d-a2-e9-80-82-e9-85-8d-e5-a4-84-e7-90-86-e8-ae-b0-e5-bd-95","date":"2012-11-14T21:41:16.000Z","updated":"2018-01-29T07:18:46.588Z","comments":true,"path":"posts/16209/","link":"","permalink":"http://test.quanke.name/posts/16209/","excerpt":"","text":"android 界面琐碎，各种分辨率，各种destiny 当然,按照官方的处理方法，图片可以分别准备几套分辨率不同的图片放几个drawable 文件夹下，而不同的界面布局也可以写几套xml 分别放于不同的llayout 文件夹下，当图片比较多时，达到几兆或者更大，上面的处理方法会让apk变得很大，显的很冗余。写xml文件时，我们一般采用相对分辨率dip ，dip与像素之间的转化公式不知道的大家可以查下，这里就不说了px = dip*destiny/160 destiny 是每英寸的像素点数这几个参数可以手动计算，也可以通过程序获得，虽然目前几种获取屏幕参数的方法在几种设备上，各种山寨非山寨得出的准确性有待考究。在淘宝的热卖手机中取了几个参数，目前市面常见的手机或者说销量高的手机， 按照上面的公式把像素转化为dip ，由于一般的手机的分辨率 长宽比还是比较接近的，所以测出虽然手机的destiny从210到300不等（题外话：其实300已经接近或超出人眼能识别的极限了）但算出来 x轴即横线dip一般大于320 位于320 到370 之间，纵向640左右，，所以写xml时可以把处理的面积设成 320 *620 左右，再适当的调整 ，而对于图片较多，其实可以选相对适中的分辨率 图片，然后涉及到图片的控件吧相应属性设置如下android:layout_width=”20dip”android:layout_height=”20dip”android:scaleType=”fitCenter”后面的数值可调，看你想要的大小， 这样图片会自动居中填满你指定的区域，一般手机是没问题（其实也就随便找了3部手机测了测）。对于实在前面算出的横向和纵向分辨率大的 ，可以在java层一开始读取xml文件之前判断一下 读取不同的xml文件，至于图片要求不是特别高清的，上面的处理其实程序自动伸缩的 效果就可以了，当然 你可以测试下。当然有特别要求的图片 可以相应的放不同的文件夹（没测过），这样，至少减少图片的数量 xml文件的数量 处理起来比较简单，当然pad没做相应调查，目前也值做了手机的适配。只是今天突然有点忘记，记录一下，不知道的了解下，知道的 一笑而过就好了","categories":[{"name":"android开发","slug":"android","permalink":"http://test.quanke.name/categories/android/"}],"tags":[],"keywords":[{"name":"android开发","slug":"android","permalink":"http://test.quanke.name/categories/android/"}]},{"title":"android 屏幕适配问题","slug":"android/android-e5-b1-8f-e5-b9-95-e9-80-82-e9-85-8d-e9-97-ae-e9-a2-98","date":"2012-11-14T21:29:23.000Z","updated":"2018-01-29T07:18:46.580Z","comments":true,"path":"posts/56812/","link":"","permalink":"http://test.quanke.name/posts/56812/","excerpt":"","text":"如何将一个应用程序适配在不同的手机上，虽然这不算是一个技术问题，但是对于刚刚做屏幕的开发人员来说，还真不是一件多么简单的事情。 首先：你需要在AndroidManifest.xml文件的元素如下添加子元素[code lang=”xml”]&lt;supports-screens android:largeScreens=&quot;true&quot; android:normalScreens=&quot;true&quot; android:anyDensity=&quot;true&quot; android:smallScreens=&quot;true&quot;&gt;&lt;/supports-screens&gt;[/code] 名如其意，以上是为我们的屏幕设置多分辨率支持（更准确的说是适配大、中、小三种密度）。android:anyDensity=&quot;true&quot; ，这一句对整个的屏幕都起着十分重要的作用，值为true，我们的应用程序当安装在不同密度的手机上时，程序会分别加载hdpi,mdpi,ldpi文件夹中的资源。 相反，如果值设置为false，即使我们在hdpi,mdpi,ldpi文件夹下拥有同一种资源，那么应用也不会自动地去相应文件夹下寻找资源，这种情况都是出现在高密度，以及低密度的手机上，比如说一部240×320像素的手机，如果设置android:anyDensity=”false”，Android系统会将240 x 320(低密度)转换为 320×480(中密度)，这样的话，应用就会在小密度手机上加载mdpi文件中的资源。 2.细心的人会发现自android2.0开始之后drawable文件被三个文件夹drawable-hdpi,drawable-mdpi,drawable-ldpi三个文件夹所取代，有些编程人员为了让应用程序默认地加载某些图片，他们会特意地去在android2.0之后的应用程序中重新创建drawable文件夹，其实这样做完全没有必要，通过第一段的分析我们得知，android:anyDensity=”false”，则应用会将大小密度转变成中密度，从而去加载mdpi中的资源。这里同样，当android:anyDensity=”false”，则应用会去加载mdpi中的资源。 总结一下： 第一：android:anyDensity=”true”，系统会依据屏幕密度，自动去找对应的文件夹 第二：android:anyDensity=”false”, (1) 如果drawable-hdpi,drawable-mdpi,drawable-ldpi三个文件夹中有同一张图片资源的不同密度表示，那么系统会去加载drawable_mdpi文件夹中的资源 (2) 如果drawable-hpdi中有高密度图片，其它两个文件夹中没有对应图片资源，那么系统会去加载drawable-hdpi中的资源。 (3) 如果drawable-hdpi,drawable-mdpi中有图片资源，drawable-ldpi中没有对应的图片资源，那么系统会加载drawable-mdpi文件夹中的资源 3. 注意上图各种文件夹的不同表示。 drawable-hdpi 该图片即适用于横屏，也适用于竖屏 drawable-land-hdpi,当屏幕为横屏，且为高密度时，加载此文件夹中的资源 drawable-port-hdpi,当屏幕为竖屏，且为高密度时，加载此文件夹中的资源 3. 有时候会根据需要在代码中动态地设置某个值，比如地图，地图的pin和地图的地址提示框的相对偏移量在不同密度的手机上是不同的。这时候可以通过以下方法求出屏幕密度： [code lang=”java”]DisplayMetrics metric = new DisplayMetrics();getWindowManager().getDefaultDisplay().getMetrics(metric); int densityDpi = metric.densityDpi; // 屏幕密度DPI（120 / 160 / 240） [/code] 然后可以在代码中为这几种密度分别设置便宜量 但是这种方法最好不要使用，最好的方式是在xml文件中不同密度的手机进行分别设置。 这里地图的偏移量可以在values-hpdi,values-mdpi,values-ldpi三种文件夹中的dimens.xml文件进行设置 值得一提的是： &lt;dimen name=&quot;bitmap_common_topoffset&quot;&gt;40dp&lt;/dimen&gt; &lt;dimen name=&quot;bitmap_common_bottomoffset&quot;&gt;-14dp&lt;/dimen&gt; 这里的负数是完全起作用的，系统会认为它是一个负值 4. 各大手机厂商对于Android操作系统都有或多或少的改动，当然这些改动会对我们应用程序产生某些影响 比如： （1）系统源代码中连接music服务的aidl文件所在包名：com.android.music （2）LG则可能将该aidl文件修改所在的包（例如修改为 com.android.music.player），并且修改其中的文件内容（增加一个方法，或者减少几个方法，或者修改方法名称）那么我们的应用要想在LG的手机上发布，那么我们就必须改变所要连接的aidl文件,必须跟LG厂商修改的完全一致。 5. 国际化问题. 有时候在xml中设置了相应的语言，但是为什么当我们更改语言之后，UI显示仍然不起作用？ 不要怀疑是系统出了问题，这与我们在代码中引用values/string.xml中字符串的方式有关。 错误的方式： 1. 声明全局变量 private static String tempStr; 2. 在onCreate方法中对该变量赋值 tempStr = context.getString(R.string.test); 3. 在更新UI的方法（非onCreate方法）中引用该变量。 textView.setText(tempStr); 原因是由于，当修改本地语言时，onCreate不会再被执行一遍. 变量tempStr 依然会使用页面刚启动时加载的默认英语。 正确的方式： 直接进行第三步：textView.setText(context.getString(R.string.test));","categories":[{"name":"android开发","slug":"android","permalink":"http://test.quanke.name/categories/android/"}],"tags":[],"keywords":[{"name":"android开发","slug":"android","permalink":"http://test.quanke.name/categories/android/"}]},{"title":"AHK 懒人包 – AutoHotKey 汉化版 + 教程","slug":"ahk--autohotkey","date":"2012-11-13T01:48:50.000Z","updated":"2018-01-29T07:18:46.439Z","comments":true,"path":"posts/1029/","link":"","permalink":"http://test.quanke.name/posts/1029/","excerpt":"","text":"标题已经告诉你大部分了。我要告诉大家的是，小众软件出品的 AHK 懒人包中有什么好东西。哈哈。 打包了连载于小众软件和煎蛋的全部 AHK 快餐店教程。 快餐店教程的全部脚本，在文中脚本这个文件夹里。 AutoHotKey 汉化版 由 BLooM2 制作。我从官方下载了最新的 AutoHotKey 整合在 AutoHotKey 中文版的文件夹里。 还附上了 ahk 中文论坛翻译的 AutoHotKey 帮助文件，AutoHotkey 1.0.48.05准中文版(已增加搜索和书签功能) 下载(3.4 MB): Go Everbox | Downdao | baidu | 官方网站 | 来自小众软件","categories":[{"name":"随笔","slug":"essay","permalink":"http://test.quanke.name/categories/essay/"}],"tags":[],"keywords":[{"name":"随笔","slug":"essay","permalink":"http://test.quanke.name/categories/essay/"}]},{"title":"Android 之ExpandableListView几个特殊的属性","slug":"android/android-e4-b9-8bexpandablelistview-e5-87-a0-e4-b8-aa-e7-89-b9-e6-ae-8a-e7-9a-84-e5-b1-9e-e6-80-a7","date":"2012-11-12T02:17:22.000Z","updated":"2018-01-29T07:18:46.578Z","comments":true,"path":"posts/65447/","link":"","permalink":"http://test.quanke.name/posts/65447/","excerpt":"","text":"1. 设置ExpandableListView 默认是展开的:先实例化 exListView然后 exListView.setAdapter(exlvAdapter); //遍历所有group,将所有项设置成默认展开 int groupCount = exListView.getCount(); for (int i=0; i&lt;groupCount; i++) { exListView.expandGroup(i); }; 2. 去掉ExpandableListView 默认的箭头 用到ExpandableListView时有个箭头图标系统自带的在你自定义布局也不能去掉只要设置一个属性即可，如下： settingLists.setGroupIndicator(null); ~~~~~此处就是设置自定义的箭头图标的。置空则没有了。 也可以自定义（但是位置还是在那个地方不推荐）如下：首先，自定义一个expandablelistviewselector.xml文件，具体内容如下：Java代码&lt;?xml version=”1.0” encoding=”utf-8”?&gt; 加一句代码如下：settingLists.setGroupIndicator(this.getResources().getDrawable(R.layout.expandablelistviewselector));大功告成3. 将默认的箭头修改到右边显示: 1首先 ExpandableListView elistview; elistview.setGroupIndicator(null);//将控件默认的左边箭头去掉，2在 自定义的继承自BaseExpandableListAdapter的adapter中有一个方法/** 父类view*/ @Override public View getGroupView(int groupPosition, boolean isExpanded, View convertView, ViewGroup parent) { Log.i(&quot;zhaoxiong&quot;,&quot;parent view&quot;); LinearLayout parentLayout=(LinearLayout) View.inflate(context, R.layout.wowocoupons_parent_item, null); TextView parentTextView=(TextView) parentLayout.findViewById(R.id.parentitem); parentTextView.setText(parentlist.get(groupPosition)); ImageView parentImageViw=(ImageView) parentLayout.findViewById(R.id.arrow); //判断isExpanded就可以控制是按下还是关闭，同时更换图片 if(isExpanded){ parentImageViw.setBackgroundResource(R.drawable.arrow_down); }else{ parentImageViw.setBackgroundResource(R.drawable.arrow_up); } return parentLayout; }","categories":[{"name":"android开发","slug":"android","permalink":"http://test.quanke.name/categories/android/"}],"tags":[],"keywords":[{"name":"android开发","slug":"android","permalink":"http://test.quanke.name/categories/android/"}]},{"title":"Android EditText得到和失去焦点时，自定义处理内容","slug":"android/android-edittext-e5-be-97-e5-88-b0-e5-92-8c-e5-a4-b1-e5-8e-bb-e7-84-a6-e7-82-b9-e6-97-b6-ef-bc-8c-e8-87-aa-e5-ae-9a-e4-b9-89-e5-a4-84-e7-90-86-e5-86-85-e5-ae-b9","date":"2012-11-12T02:00:34.000Z","updated":"2018-01-29T07:18:46.593Z","comments":true,"path":"posts/52157/","link":"","permalink":"http://test.quanke.name/posts/52157/","excerpt":"","text":"当android的Edittext得到/失去焦点时，需要自定义一些处理内容时，需要对EditText对象的Focus进行监听处理。在Activity中，做以下处理：1.取得EditText对象。2.为取得的对象添加setOnFocusChangeListener()，重写里面的方法。如下：[code lang=”java”]EditText loginPwd = (EditText) findViewById(R.id.editText);editText.setOnFocusChangeListener(new android.view.View.OnFocusChangeListener() { @Override public void onFocusChange(View v, boolean hasFocus) { if(hasFocus) {// 此处为得到焦点时的处理内容} else {// 此处为失去焦点时的处理内容} }});[/code]","categories":[{"name":"android开发","slug":"android","permalink":"http://test.quanke.name/categories/android/"}],"tags":[],"keywords":[{"name":"android开发","slug":"android","permalink":"http://test.quanke.name/categories/android/"}]},{"title":"如何让edittext在activity起始的时候不自动获得焦点？","slug":"e5-a6-82-e4-bd-95-e8-ae-a9edittext-e5-9c-a8activity-e8-b5-b7-e5-a7-8b-e7-9a-84-e6-97-b6-e5-80-99-e4-b8-8d-e8-87-aa-e5-8a-a8-e8-8e-b7-e5-be-97-e7-84-a6-e7-82-b9-ef-bc-9f","date":"2012-11-11T23:57:30.000Z","updated":"2018-01-29T07:18:46.465Z","comments":true,"path":"posts/45580/","link":"","permalink":"http://test.quanke.name/posts/45580/","excerpt":"","text":"在AndroidManifest.xml里的Activity定义里添加进这个属性[code lang=”xml”]android:windowSoftInputMode=&quot;adjustResize|stateHidden&quot;[/code]或者在onCreate 里添加进[code lang=”java”]getWindow().setSoftInputMode(WindowManager.LayoutParams.SOFT_INPUT_STATE_HIDDEN | WindowManager.LayoutParams.SOFT_INPUT_ADJUST_UNSPECIFIED);[/code]有时候在某些手机上只添加stateHidden也许无效，需要加入下面这段 EditText始终不弹出软件键盘例：EditText edit=(EditText)findViewById(R.id.edit);edit.setInputType(InputType.TYPE_NULL); 让EditText失去焦点，使用EditText的clearFocus方法例如：EditText edit=(EditText)findViewById(R.id.edit);edit.clearFocus();","categories":[{"name":"android开发","slug":"android","permalink":"http://test.quanke.name/categories/android/"}],"tags":[],"keywords":[{"name":"android开发","slug":"android","permalink":"http://test.quanke.name/categories/android/"}]},{"title":"[转]一个当了爹的程序员的自白","slug":"e8-bd-ac-e4-b8-80-e4-b8-aa-e5-bd-93-e4-ba-86-e7-88-b9-e7-9a-84-e7-a8-8b-e5-ba-8f-e5-91-98-e7-9a-84-e8-87-aa-e7-99-bd","date":"2012-11-09T21:19:43.000Z","updated":"2018-01-29T07:18:46.512Z","comments":true,"path":"posts/65152/","link":"","permalink":"http://test.quanke.name/posts/65152/","excerpt":"","text":"我喜爱我的工作，我喜爱我的事业，我喜爱解决难题，我喜爱开发漂亮的软件。这些仅仅次于我对我的小女儿的喜爱。 前几年年轻些时，我是一个到公司最早，编一天的程序，最后一个离开公司的程序员，回到家后上网，继续编程，直到深夜。开发什么并不重要，我只是想编程。然后一件奇妙的事情发生了。我和老婆有了一个孩子。 当知道珍妮怀孕了后，我欣喜若狂。并不是因为得到这样的一个结果是一个不容易的过程，而是我一直都想要个孩子。我想做一名父亲。不，我想当一名好父亲。我发誓，我向我未出生的孩子发誓，我将会是，最起码，是一个一直在她身边，只属于她的好父亲。 对于这样的诺言，你可能会想“哪你还去不去工作了？程序员这种以咖啡因做动力、经常加班加点、动不动就最后决战的职业是不允许你以一句‘我要回家和孩子一起吃饭‘就能应付的。”的确是这样。对于我，这是一个”什么更重要”的问题，我有一个简单的理由：如果你把工作搞砸了，你总可以再找另外一个工作，但如果你把家庭关系搞砸了，特别是跟孩子的关系，你永远无法弥补，你会一辈子背负这个债务。 所以，我的选择是，每天都要在家里花些时间陪我的女儿，即使是这样做对我的事业有负面的影响。我每天早上6：30-6：45到公司，结结实实的工作9小时，下午4点钟左右离开公司回家。从4：30到7：30的时间是专享的，它属于我的女儿。这样做了之后，最难处理的部分是，和我一起工作的很多人是在西海岸的(从时区习惯上，他们比我们会晚几个小时)，很自然，他们经常会把会议时间安排在太平洋标准时间的下午2点或3点。这直接跟我设定的和我的女儿一起玩耍的时间有冲突，所以，我会尽量要求重新安排这样的会议，或直接不参加。当然，我会尽量照顾到工作，如果有事情是非常的重要，我还是会到场的，不论是什么时间。我是非常坚持我的作息安排，原因就是我上面提到过的思想认识。一旦把女儿放上来床，我就可以和妻子一起自由安排余下的时间，有必要的话也会开发点程序。在晚上8点或9点被打电话去和西海岸的团队开会的事情再也没有发生过。 起初，留下我的兄弟们在公司干活，我却独自回家，这让我内疚很多。尤其是在一次工作互查的过程中有人反馈说，作为一个团队的领导，当团队不得不加班时，领导最好也应该随团队一起加班。但是，如果你看一下我的时间分配，每天超过9小时花在工作上，只有3小时留给我的女儿。如果有人说这不公平，那这最不公平的是对我的女儿。 这样做了之后，我发现，离开键盘一段时间，反而会增加我的工作效率。我回到家，和女儿玩耍，吃完饭，给她洗澡，给她读童话，抱她上床。所有的这些时间里，我的大脑并没有停止，潜意识里仍在整理分析遇到的问题，思索解决的方案。有大量的科学研究表明，当你想解决一个难题时，停下来休息一下是对你解决这个问题有好处的。加之，有些事情是可以提振你的精神的，比如和一个2岁的孩子玩耍。 的确，我的代码的产出量不再向以前那样丰硕，一定程度上是因为这些日子里我更多的把时间花在指导上，但同时也是因为我的代码写的更精简、更好了。 我发现的另外一个好处是，我不再有筋疲力尽的感觉了。赶任务、加班加点给你带来的危害很大。如今，我来到公司，精神饱满、思路清晰，能扎扎实实的工作。但你每天工作20小时的疯狂加班时，实际上只有很少的时间是有效率的(甚至完全没有效率！)疲劳过度后你的大脑是混沌的，除了工作做不好，工作之外的所有事情都会受到影响。更糟糕的是，这种影响还会自我放大。因为你想拼命的完成一个需求不合理或计划评估错误的项目,你必然会弄得精疲力竭，这样又会导致你在下一个计划上完不成任务而加班加点，你进入了一个恶性循环。 即使你没有像我这样好的理由，你也要严格限制你的加班加点。你甚至会发现，当拿出一些时间花在一些有益的业余爱好上后，你的工作反而会做的更好。如果你对我的建议感兴趣，那就买一本37signals公司的那个家伙写的Rework(重来)这本书。里面有很多这方面的东西。","categories":[{"name":"随笔","slug":"essay","permalink":"http://test.quanke.name/categories/essay/"}],"tags":[],"keywords":[{"name":"随笔","slug":"essay","permalink":"http://test.quanke.name/categories/essay/"}]},{"title":"真希望我第一次创业时就知道的事","slug":"e7-9c-9f-e5-b8-8c-e6-9c-9b-e6-88-91-e7-ac-ac-e4-b8-80-e6-ac-a1-e5-88-9b-e4-b8-9a-e6-97-b6-e5-b0-b1-e7-9f-a5-e9-81-93-e7-9a-84-e4-ba-8b","date":"2012-11-09T17:35:41.000Z","updated":"2018-01-29T07:18:46.504Z","comments":true,"path":"posts/44941/","link":"","permalink":"http://test.quanke.name/posts/44941/","excerpt":"","text":"我们常常事后诸葛亮。当你回头看看之前做过的项目或努力，你总能更好地意识到什么事重要、什么事不重要。 在创业上也是一样的。在一项事业上奋斗了一两年或更多的时间后，你总能更好地意识到一些事是值得担心的，而另一些事其实没什么大不了。 既然创业者是最有资格给其他创业者在如何开始创业上提供建议的，我决定去问25名创业者同一个问题：你希望当年第一次创业时就已经了解的事是什么？而下面是就是这个问题的集合。或许这对刚刚开始创业或正在准备创业的你会有价值： Dan Martell Clarity创始人： 在开始时，你很可能不知道怎样把事情做对，这其实没什么关系。 直到我真正着手创业时，我才意识到实际上并不需要在一开始就知道该怎么做——你需要的只是学会快速地把正确答案给找出来。如果你能够专注于学习并获取正确的建议——那你将可以接受任何挑战。一旦你意识到这点，你会感到解放。Neil Patel Crazy Egg联合创始人：我希望我当时能知道怎么做定价测试。当我们第一次发布产品时，我们的定价是基于我们自己想要的定价，而实际上优化价格可以达到最大收入和利润。 我们的顾客群当时要求价格低一些，因为他们的这个需求很旺，我们照做了。尽管这么做增加了整体的注册人数，但我们的整体收入减少了。如果我们能在当时知道定价测试，我们就不会犯这么大的错误。Nick Francis Help Scout的CEO兼联合创始人：我希望我当时能够知道，获得一名顾客、让他为你的产品买单并且像你所希望的觉得产品很棒是一件很难的事。 大部分的创始人都将获得顾客作为预料中的结局，而实际上要达到所预想的顾客数，最短可能都需要两到三年。这个过程的每个环节对公司来说都是巨大的挑战。不会这么快就实现。 在早期顾客获得上的一些小建议： 1）和目标市场中愿意和你聊的每个人都聊一聊。要比他们自己更了解他们的需求。你最有价值的洞察将会来自每天和顾客的聊天。 2）对潜在顾客进行营销是一系列的实验。在你开始之前，先定义好成功和失败分别是怎样。当实验完成，就可以往复进行了。 3）你周围的团队成员和顾问会追究你的业务度量和财政情况。业务的成功和失败取决于这些人。你需要完全地信任他们，因为你没时间去做监视。Allan Branch ，LessAccounting联合创始人：我和我的商业伙伴Steve Bristol在创业的头一年里花了大量的时间在工作上。我们曾经每周工作80小时以上。这样的工作让我们身心疲惫，也让我们意识到，即使我们花了40 x 2的时间，公司也不会因此增速2倍。事实上，我们那额外的40小时比头40小时的效率要低。而且根本就不会有完成工作的时候，你永远都完不成所有测试，所有的功能，完成完美的设计。最后一次在将近凌晨4点的时候，我们合上了笔记本，回家。永远不要忘记，工作是为了让你的个人生活更有收获的一部分。 而且我也不再关心我会不会变得有名，不去想自己是否会变得极其富有或能上封面杂志。我更在意怎么让我们的顾客和员工感到开心。而在我变得出名时，我唯一担心的人就是我的孩子和妻子。即使现在32岁了，我依旧努力让我的父母为我感到骄傲。但我已经卸下了要将公司做成价值5亿美元公司的负担，我也为我成为这家不知名软件公司的创始人搞到高兴。 其他小建议： 1）只招那些你会希望在个人时间里愿意和他相处的人 2）前十位员工会决定整个公司的基调。 3）不要招那些因为工资而和你一块工作的人Leo Widrich Buffer联合创始人：我最希望自己在创业时就能了解的事，是你周围的人会比你所想象得更能影响你的成功。看看你每天日常工作中和谁一起，和那些实干家一起工作会成就你的事业并且让你有更重要的自我提升，而和空谈家一块只会毁掉你。所以要精挑细选地招人，就像Jim Robn说过的：“你，是你最常待在一起的五个人的平均值。”Renee Warren，Onboardly的联合创始人：我希望我当时可以更好的了解我时间的价值。一场10分钟的聊天常常会变成非常漫长的聊天，而且你很容易就答应去这么做。我花了好几年的时间，才学会拒绝那些会分散我注意力的事。拒绝开会、拒绝采访并且拒绝额外的项目（额外的钱）。当我完成了我每天的任务列表后，我的整天、整周、整个月都变了。在我完成工作之后，我才会接受那些机会。 而这些意识来自我的爷爷，他曾经跟我说“如果你不提早10分钟，你就会迟到10分钟。”他这么说的原因有很多，可能意味着出席会议、赶飞机、打电话、去健身等等。 总而言之，我最希望我在创业时就能了解的事就是：时间是你最宝贵的一样东西，请确保你的时间投资是明智的。Poornima Vijayashankar ，BizeeBee联合创始人兼CEO：我知道开发产品需要时间，但我也希望我在当时就能够知道，让用户接受一个产品也需要时间。尽管你可能会有一些执着使用你产品的早期用户，但主流的接受需要花很长的时间，也需要很多的努力。主流接受需要那些不是早期用户的人们，那些不愿意改变的人，去发现你的产品，理解其中的价值主张，并愿意去尝试它，然后才是真正地使用它并买下它，并最后发展到成为一位愿意和别人谈论它的粉丝。这个周期需要好一段时间，因为它需要一个稳定的产品，让用户可以和你的公司和产品发展关系，并最终在关系够好的情况下愿意和别人谈论。 尽管在营销上的努力可以为周期埋下种子，但为了让主流接受成为可能，大部分时间还是需要花在产品没有上市的时候。只付出不获得的时间过程对于创始人来说是艰难的，因为作为创始人你会希望一切在你的控制之内，并且让计划实现。但有时候你需要的就是耐心和等待！Ari Tulla ，BetterDoctor联合创始人兼CEO：尽可能快地建立一个公众可用原型，然后再去迭代它。 我们在BetterDoctor上的计划是在两个月内做出第一代最小可行的原型产品（Minimum viable product, MVP）然后将它推向市场。我们把它做出来了，但因为他的可行性不够，我们只好把它放在封闭测试当中。封闭测试意味着非常少的用户以及非常少的真实反馈。 所以到最后，我们花了超过6个月的时间才最终推出了我们第一个beta版产品（依旧是个MVP）。而现在，也就是一年后，我们推出了针对全国的BetterDoctor搜索服务，并且有了一个稳定的平台。现在我们能在几天内推出新功能，并通过真实的用户做立即测试。 要知道，年是个很长的时间单位，如果有什么方法可以尽快让你的产品传到顾客手上，那你就应该去尝试。Andrew Angus ，Switch Video联合创始人兼CEO：我希望我在当时能够知道这个机会有多大，让我可以更好地计划利用它。现在我的公司老了、更结构化了，这可以让我更好地专注在策略上。如果我可以在一开始的时候就做到往回走一步、发展并投资一个更好的计划，我可能会我避免犯下的一堆错误。不过这些错误也成为了我学习中的一部分，这让我觉得我会继续变得成功（因为我会犯的错少了。）Mike Arsenault ，Rejoiner联合创始人：永远不要猜价格。有很多方法可以检测你的产品定价，但很多第一次创业的人们（包括我自己）总是默认为“价格”就是自己所认为的顾客愿意给的价格。另外，把精力放在你为你的顾客所创造的价值上，而不是你提供产品或服务时需要花的成本。 市面上有很多帮你针对目标市场、建立理想价格结构的整体设计方案。这和找出哪个产品功能是顾客认为最有价值的一样重要。 将支付意愿的数据和你顾客最想要的功能结合起来，你就有一个帮你发现定价结构的落地方案，而这个结构会吸引正确的用户并为你的生意带来最多的利润。Ethan Bloch ，Flowtown联合创始人：不要通过那些没做成过、或没有在你想实现领域上做事的人获取建议。Kapil Kale ，GiftRocket联合创始人：Idea是很棒的，但同时，在发行之前回头想想产品也是非常重要的。问问自己，谁会用这个产品，他们都是怎么听说到它的？ 很多时候，这些问题都会揭示出那些你需要建立在产品当中的关键功能，这些功能会让一位用户因为它很有用而告诉了他的朋友。Bo Lu ，FutureAdvisor联合创始人兼CEO：及时回头想想。 第一次创业的人常常会在他们作为创始人的头一段时间内担心一些没必要担心的事。我今天和一些创业者聊天，问到我最多的问题大概是“怎么合法地建一家公司”，“是不是应该辞掉现在的工作还是等等看有没有奖金”。而经验显示，这些事情根本就不会建成或毁掉公司。所以，我希望第一次创业的人可以在他们作为创始人的关键的头几天里想想他们的顾客。了解什么是顾客需要的，做到理解竞争对手并保持优于竞争对手才是会让你建成或毁掉公司的问题。这么做的最好方法就是及时回头想想。假设四年后的今天你已经拥有了一家成功的公司，问问你自己：“那个曾经让我整夜辗转反侧的苦恼问题到现在还是我的问题吗？”这个问题的答案通常是“no”。Dharmesh Shah，HubSpot的联合创始人兼CTO：选择一个大的、不断增长并且对于你来说是有明显优势的市场是很重要的。还有，要保证自己掌握着自己的命运，而不是过分地依赖其他人。Blake Williams，Keepsy联合创始人：通过让别人看你的计划，寻找出有关你计划的最关键观点。通常来说，新手创业者会爱上一个idea，然后寻求朋友或同事的支持。但毕竟，有谁会希望一个羽翼未丰的想法被反对者扼杀呢？不过，你应该去找的就是这种人。 让他们从头到尾地去毁你的计划和设计。如果你发现自己同意他们的观点并同样存在疑问，那你的计划（或者你）可能就是不能成行的。但如果你可以反复地有信念维护它，那你可能有勇气去克服你将面临的长久、艰难的苦差，这意味着这个计划或许能做得起来。Otto Hilska， Flowdock创始人兼CEO：众所周知，“不成熟的优化是万恶之源”，但我当时没有意识到，在我们花了大量时间和不同的数据库打交道之前，我们会不会有顾客。在开始的时候，你真的可以用一个半生熟的产品去验证你的假设。Rami Essaid ，Distil联合创始人兼CEO我希望在我第一次创业时就知道的事，是如何设置清楚且可以衡量的目标。任何创业公司都有的问题，就是它们有百万个未知数。当你在建立自己公司的时候，你可以试着尽可能多地回答这些问题。而一旦你回答得够多，你就已经知道你想做些什么。这个方法容易让人迷失。而为了确保你不会迷失，你需要设置清楚的目标并且能够衡量你的行为是否成功。如果你看到有些东西不起作用，那当务之急就是尽快地识别并纠正问题或快速改变方向。目标和指标是这么做的唯一方法。Alex Schiff Fetchnotes联合创始人兼CEO：我希望以前有人能教我的事情，就是你应该优化速度而不是成本。创业公司的一切都与速度以及你快速转移的能力有关。我们曾经在获得融资前自力更生过很长的时间，所以我们别无选择地变得超级节俭，但我还是希望我能在之前就了解速度的重要性，因为它会让事情变得不同。如果你花了一个小时的时间去编写程序达到一个月省20块的效果，那它根本就不值得。Jason Traff ，Leaky创始人：从MIT出来，我获得了不少有关创业的好建议，包括了特别保护权的重要性，团队化学反应以及如何做一个好产品。我希望我能在当初了解更多创业生活中的情感变化。通常电影或电视剧里的创业公司，总是一群20多岁的年轻人天天踢足球，夜夜办派对的景象。他们很少在这些高情绪中展示出人们的低落。 我的人生在我开了Leaky后，得到了很多以前从未有过并且频繁激烈的拒绝。在无数的拒绝之后，我学会了：你需要用毅力去看开暂时的情绪高低，并知道没有什么收获或者挫折会是永久性的。否则，这些情绪将无法在第二天早上从床上爬起来。Tri Tran， Munchery联合创始人兼CEO：这当中会有很多的起起落落。当你感到在往下走时，保持平静，要知道事情会变得更好。当你在往上走时，享受那个时刻，但同时也将这种能量存下来应对不好的时候。 我很幸运地在不同的创业公司工作过，知道大概会发生什么。 准备去成立你的第一家创业公司可能是你在人生中做过的最难的事。它并不总会那么迷人。你需要寻求你伴侣的支持，你要有充分信任并能很好协作的联合创始人。但最后，你会想象不到还有什么职业经历会比成立自己的公司更好。Ash Rust ，SendHub联合创始人：专注比你想象得更重要。Gautam Gupta ，NatureBox创始人：创立NatureBox是让我最难忘的经历了。我永远都会为有机会建立它而心存感激。我认为对于创始人来说很重要的，就是要知道成立一家公司的时机。这会带来你情绪上的高叠起伏。管理你的情绪状态会变得很难但很重要。当你触及低谷，记得提醒自己这只是路上的一个颠簸。 你可以放松，将时间花在不该担心的事情上。你会经常受到好消息和坏消息，你还会感到你的生活依赖于你公司的成功，但在这些之后，记得保持你清醒的头脑和执行力。Walter Chen， iDoneThis联合创始人兼CEO：我希望我当初会知道，运营一个创业团队会很像做父母。你要检查他们，你会想知道他们在干什么，你会担心他们在开车的时候Skype语音。而且你还需要经常大喊：“所有人安静！”而有的时候，你必须提醒他们在晚饭之前完成他们的工作。另外一些时候，你会想让他们娱乐放松，所以你带他们去看电影或去玩卡丁车。 作为一位创业公司创始人，你希望帮助你的团队去认清他们在工作上的强项，并支持他们。你希望他们去犯错并从错误中学习，而不是羞愧地逃避。你不做决定，而是问：“你怎么看？”你要对他们的情绪流动敏感，你要知道他们什么时候是气馁或沮丧的。你自己也会感到沮丧，但你的会将这些情绪更有建设性地表达给他们。毕竟，就像所有父母那样，你希望他们开心，并且成功。因为我就是个家长。Rick Perreault， Unbounce联合创始人兼CEO：我希望我当初会知道，准确的度量会有多重要，这样我们就可以更容易地对我们的第一次报告做支持。这两年中，我已经听过很多次“因为app的原因，我们不能很好地做跟踪。”如果我们在之前就决定好哪些关键度量是需要跟踪的，并根据需要做app，我们可能就不用那么痛苦了。Elizabeth Yin ：我成立的第一家公司是一个社交购物应用，那基本上就是个灾难。我们将我们所认为的优秀工具给做了出来，但却没人想用。我们花了大概2万美元并且用了将近一年半的时间。通过这个经验，我意识到最难的部分不是技术，而是知道用户需求。 如果我当时能够换种方式做，我就会在把产品做出来之前先用小样测试市场，我就会创建登录页面捕捉潜在用户的联系方式并已经和他们在谈了。我就会做个假按钮来衡量需求。简单来说，我希望我在当初就能够在做产品之前先测试一下市场。原文来自： DavidHauser 创业者David Hauser的个人博客","categories":[{"name":"随笔","slug":"essay","permalink":"http://test.quanke.name/categories/essay/"}],"tags":[],"keywords":[{"name":"随笔","slug":"essay","permalink":"http://test.quanke.name/categories/essay/"}]},{"title":"android语音录制和压缩","slug":"android/android-e8-af-ad-e9-9f-b3-e5-bd-95-e5-88-b6-e5-92-8c-e5-8e-8b-e7-bc-a9","date":"2012-11-07T20:16:09.000Z","updated":"2018-01-29T07:18:46.600Z","comments":true,"path":"posts/7191/","link":"","permalink":"http://test.quanke.name/posts/7191/","excerpt":"","text":"因为上一篇博客代码有点太多，就单开了，这两天主要在看android语音录制和压缩转码相关知识，前段时间看见腾讯官方微博宣布，已经开放出即使聊天软件正在等待审批，但这个直接影响电话运营商，能通过的可能性应该不大，但我对这方面的技术很有兴趣，所以就试试看。其中涉及到很多声音方面的处理问题，在android中有两个类可以录制语音：AudioRecord和MediaRecorder，MediaRecorder主要是录制音频并写入文件，而AudioRecord主要是录制音频流，录制的音频流为pcm格式，关于pcm格式可以自行搜索一下，在传输过程中可以转换为amr格式，但没有相关可以类库有点麻烦，另外iphone不支持播放amr格式音频，如果需要跨两个平台可以使用AAC，压缩比也不错，音质也很好，我还没有测试过，网上评议而已。编码方面大家都推荐speex，我看了一下，需要是用System.loadLibrary加载进speex提供的类库。下面记录一下写的一个边录制边播放的一段代码吧 [code lang=”java”] import java.io.IOException; import android.app.Activity;import android.os.Bundle;import android.os.Looper;import android.os.Process;import android.util.Log;import android.view.MotionEvent;import android.view.View;import android.widget.Button;import android.widget.Toast; import android.media.AudioFormat;import android.media.AudioManager;import android.media.AudioRecord;import android.media.AudioTrack;import android.media.MediaRecorder; public class VoiceHcentActivity extends Activity { static { System.loadLibrary(&amp;quot;media_jni&amp;quot;); } public int frequency = 8000; private int rBufferSize, pBufferSize; private Button startSpeech; private AudioRecord recorder; private VoiceSpeech vspeech; private AudioTrack player; private boolean stopSpeech = false; /** Called when the activity is first created. */ @Override public void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.main); init(); test(); } public void init(){ try{ startSpeech = (Button)findViewById(R.id.StartSpeech); //设置播放器缓冲区大小 pBufferSize = AudioTrack.getMinBufferSize(frequency, AudioFormat.CHANNEL_CONFIGURATION_MONO, AudioFormat.ENCODING_PCM_16BIT); //获取播放器对象 player = new AudioTrack(AudioManager.STREAM_MUSIC, frequency, AudioFormat.CHANNEL_CONFIGURATION_MONO, AudioFormat.ENCODING_PCM_16BIT, pBufferSize, AudioTrack.MODE_STREAM); //设置录音缓冲区大小 rBufferSize = AudioRecord.getMinBufferSize(frequency, AudioFormat.CHANNEL_CONFIGURATION_MONO, AudioFormat.ENCODING_PCM_16BIT); //获取录音机对象 recorder = new AudioRecord(MediaRecorder.AudioSource.MIC, frequency, AudioFormat.CHANNEL_CONFIGURATION_MONO, AudioFormat.ENCODING_PCM_16BIT, rBufferSize); }catch (Exception e) { String msg = &amp;quot;ERROR init: &amp;quot;+e.getStackTrace(); VoiceHcentActivity.this.toastMsg(msg); } } /** * 开始录音 */ public void startRecord(){ stopSpeech = false; vspeech = new VoiceSpeech(); vspeech.start(); } /** * 结束录音 */ public void stopRecord() { stopSpeech = true; } /** * 开始播放录音 */ public void startPlay(){ //设置播放器音量 player.setStereoVolume(0.7f, 0.7f); player.play(); } /** * 结束播放录音 */ public void stopPlay(){ player.stop(); } public void test(){ startSpeech.setOnTouchListener(new View.OnTouchListener() { public boolean onTouch(View arg0, MotionEvent arg1) { switch (arg1.getAction()) { case MotionEvent.ACTION_DOWN: //开始说话 startPlay(); startRecord(); toastMsg(&amp;quot;starting record!&amp;quot;); break; case MotionEvent.ACTION_UP: //停止说话 Log.i(&amp;quot;hcent&amp;quot;, &amp;quot;111&amp;quot;); stopPlay(); Log.i(&amp;quot;hcent&amp;quot;, &amp;quot;222&amp;quot;); stopRecord(); toastMsg(&amp;quot;stoped record!&amp;quot;); break; default: break; } return false; } }); } public class VoiceSpeech extends Thread{ @Override public void run() { super.run(); try { byte[] tempBuffer, readBuffer = new byte[rBufferSize]; int bufResult = 0; recorder.startRecording(); while(!stopSpeech){ bufResult = recorder.read(readBuffer, 0, rBufferSize); if(bufResult&amp;gt;0 &amp;amp;&amp;amp; bufResult%2==0){ tempBuffer = new byte[bufResult]; System.arraycopy(readBuffer, 0, tempBuffer, 0, rBufferSize); player.write(tempBuffer, 0, tempBuffer.length); } Log.d(&amp;quot;hcent&amp;quot;, &amp;quot;get read:&amp;quot;+bufResult+&amp;quot;___&amp;quot;+readBuffer.length); } recorder.stop(); Looper.prepare(); VoiceHcentActivity.this.toastMsg(&amp;quot;AudioSpeech have ended!&amp;quot;); Looper.loop(); } catch (Exception e) { String msg = &amp;quot;ERROR AudioRecord: &amp;quot;+e.getStackTrace(); Looper.prepare(); VoiceHcentActivity.this.toastMsg(msg); Looper.loop(); } } } @Override protected void onDestroy(){ player.release(); recorder.release(); super.onDestroy(); Process.killProcess(Process.myPid()); } public void toastMsg(String msg){ Toast.makeText(this, msg, Toast.LENGTH_SHORT).show(); Log.e(&amp;quot;hcent&amp;quot;, msg); } }[/code]","categories":[{"name":"android开发","slug":"android","permalink":"http://test.quanke.name/categories/android/"}],"tags":[],"keywords":[{"name":"android开发","slug":"android","permalink":"http://test.quanke.name/categories/android/"}]},{"title":"音频压缩工具——Speex的使用","slug":"e9-9f-b3-e9-a2-91-e5-8e-8b-e7-bc-a9-e5-b7-a5-e5-85-b7-e2-80-94-e2-80-94speex-e7-9a-84-e4-bd-bf-e7-94-a8","date":"2012-11-07T20:13:24.000Z","updated":"2018-01-29T07:18:46.509Z","comments":true,"path":"posts/30169/","link":"","permalink":"http://test.quanke.name/posts/30169/","excerpt":"","text":"在Android开发中，需要录音并发送到对方设备上。这时问题来了，手机常会是GPRS、3G等方式上网，所以节省流量是非常关键的，使用Speex来压缩音频文件，可以将音频压文件小数倍。 1.去Speex官网下载最新Speex源码。 2.创建一个新的应用（我创建的应用名为Audio），并创建一个jni目录（$project/jni）。 3.把speex源码目录下的libspeex和include目录及其子目录文件全部拷贝到$project/jni目录下 [code lang=”java”]（$project/jni/libspeex and $project/jni/include）。[/code] 4.在jni目录下新增Android.mk文件，编辑内容如下 [code lang=”java”]LOCAL_PATH := $(call my-dir) include $(CLEAR_VARS)&amp;nbsp;LOCAL_MODULE &amp;nbsp; &amp;nbsp;:= libspeexLOCAL_CFLAGS = -DFIXED_POINT -DUSE_KISS_FFT -DEXPORT=&quot;&quot; -UHAVE_CONFIG_HLOCAL_C_INCLUDES := $(LOCAL_PATH)/include&amp;nbsp;LOCAL_SRC_FILES := &amp;nbsp;\\./speex_jni.cpp \\./libspeex/bits.c \\./libspeex/buffer.c \\./libspeex/cb_search.c \\./libspeex/exc_10_16_table.c \\./libspeex/exc_10_32_table.c \\./libspeex/exc_20_32_table.c \\./libspeex/exc_5_256_table.c \\./libspeex/exc_5_64_table.c \\./libspeex/exc_8_128_table.c \\./libspeex/fftwrap.c \\./libspeex/filterbank.c \\./libspeex/filters.c \\./libspeex/gain_table.c \\./libspeex/gain_table_lbr.c \\./libspeex/hexc_10_32_table.c \\./libspeex/hexc_table.c \\./libspeex/high_lsp_tables.c \\./libspeex/jitter.c \\./libspeex/kiss_fft.c \\./libspeex/kiss_fftr.c \\./libspeex/lpc.c \\./libspeex/lsp.c \\./libspeex/lsp_tables_nb.c \\./libspeex/ltp.c \\./libspeex/mdf.c \\./libspeex/modes.c \\./libspeex/modes_wb.c \\./libspeex/nb_celp.c \\./libspeex/preprocess.c \\./libspeex/quant_lsp.c \\./libspeex/resample.c \\./libspeex/sb_celp.c \\./libspeex/scal.c \\./libspeex/smallft.c \\./libspeex/speex.c \\./libspeex/speex_callbacks.c \\./libspeex/speex_header.c \\./libspeex/stereo.c \\./libspeex/vbr.c \\./libspeex/vq.c \\./libspeex/window.c&amp;nbsp;include $(BUILD_SHARED_LIBRARY)[/code] 5.在jni目录下新增Application.mk文件，编辑内容如下 [code lang=”java”]APP_ABI := armeabi armeabi-v7a[/code] 6.在$project/jni/include/speex/目录下新增speex_config_types.h文件，编辑内容如下 [code lang=”java”] #ifndef SPEEX_TYPES_H #define SPEEX_TYPES_Htypedef short spx_int16_t;typedef unsigned short spx_uint16_t;typedef int spx_int32_t;typedef unsigned int spx_uint32_t; #endif[/code] 7.创建JNI包装类speex_jni.cpp，用来调用Speex中的C代码函数，编辑内容如下 [code lang=”c”]#include &lt;jni.h&gt; #include &lt;string.h&gt; #include &lt;unistd.h&gt; #include &lt;speex/speex.h&gt; static int codec_open = 0; static int dec_frame_size;static int enc_frame_size; static SpeexBits ebits, dbits;void enc_state;void dec_state; static JavaVM *gJavaVM; extern &quot;C&quot;JNIEXPORT jint JNICALL Java_com_audio_Speex_open (JNIEnv *env, jobject obj, jint compression) { int tmp; if (codec_open++ != 0) return (jint)0; speex_bits_init(&amp;amp;ebits); speex_bits_init(&amp;amp;dbits); enc_state = speex_encoder_init(&amp;amp;speex_nb_mode); dec_state = speex_decoder_init(&amp;amp;speex_nb_mode); tmp = compression; speex_encoder_ctl(enc_state, SPEEX_SET_QUALITY, &amp;amp;tmp); speex_encoder_ctl(enc_state, SPEEX_GET_FRAME_SIZE, &amp;amp;enc_frame_size); speex_decoder_ctl(dec_state, SPEEX_GET_FRAME_SIZE, &amp;amp;dec_frame_size); return (jint)0; } extern &quot;C&quot;JNIEXPORT jint Java_com_audio_Speex_encode (JNIEnv *env, jobject obj, jshortArray lin, jint offset, jbyteArray encoded, jint size) { jshort buffer[enc_frame_size]; jbyte output_buffer[enc_frame_size]; int nsamples = (size-1)/enc_frame_size + 1; int i, tot_bytes = 0; if (!codec_open) return 0; speex_bits_reset(&amp;amp;ebits); for (i = 0; i &amp;lt; nsamples; i++) { env-&amp;gt;GetShortArrayRegion(lin, offset + i*enc_frame_size, enc_frame_size, buffer); speex_encode_int(enc_state, buffer, &amp;amp;ebits); } //env-&amp;gt;GetShortArrayRegion(lin, offset, enc_frame_size, buffer); //speex_encode_int(enc_state, buffer, &amp;amp;ebits); tot_bytes = speex_bits_write(&amp;amp;ebits, (char *)output_buffer, enc_frame_size); env-&amp;gt;SetByteArrayRegion(encoded, 0, tot_bytes, output_buffer); return (jint)tot_bytes; } extern &quot;C&quot;JNIEXPORT jint JNICALL Java_com_audio_Speex_decode (JNIEnv *env, jobject obj, jbyteArray encoded, jshortArray lin, jint size) { jbyte buffer[dec_frame_size]; jshort output_buffer[dec_frame_size]; jsize encoded_length = size; if (!codec_open) return 0; env-&amp;gt;GetByteArrayRegion(encoded, 0, encoded_length, buffer); speex_bits_read_from(&amp;amp;dbits, (char *)buffer, encoded_length); speex_decode_int(dec_state, &amp;amp;dbits, output_buffer); env-&amp;gt;SetShortArrayRegion(lin, 0, dec_frame_size, output_buffer); return (jint)dec_frame_size; } extern &quot;C&quot;JNIEXPORT jint JNICALL Java_com_audio_getFrameSize (JNIEnv *env, jobject obj) { if (!codec_open) return 0; return (jint)enc_frame_size; } extern &quot;C&quot;JNIEXPORT void JNICALL Java_com_audio_Speex_close (JNIEnv *env, jobject obj) { if (--codec_open != 0) return; speex_bits_destroy(&amp;amp;ebits); speex_bits_destroy(&amp;amp;dbits); speex_decoder_destroy(dec_state); speex_encoder_destroy(enc_state); }[/code] 8.在Java层创建Speex工具类，内容如下 [code lang=”java”]package com.audio; class Speex { /* quality * 1 : 4kbps (very noticeable artifacts, usually intelligible) * 2 : 6kbps (very noticeable artifacts, good intelligibility) * 4 : 8kbps (noticeable artifacts sometimes) * 6 : 11kpbs (artifacts usually only noticeable with headphones) * 8 : 15kbps (artifacts not usually noticeable) */ private static final int DEFAULT_COMPRESSION = 8; Speex() { } public void init() { load(); open(DEFAULT_COMPRESSION); } private void load() { try { System.loadLibrary(&amp;quot;speex&amp;quot;); } catch (Throwable e) { e.printStackTrace(); } } public native int open(int compression); public native int getFrameSize(); public native int decode(byte encoded[], short lin[], int size); public native int encode(short lin[], int offset, byte encoded[], int size); public native void close(); }[/code] 9.打开cygwin工具，切换到项目目录（我项目是在F:\\workspace\\Audio），输入$NDK/ndk-build cygwin工具的安装与配置，可以看这篇文章——使用NDK与环境搭建 会在项目中生成libs目录和libspeex.so文件，这就是Speex类中System.loadLibrary(“speex”);代码引用的，系统会根据操作系统由”speex”找到对应的动态库libspeex.so，Windows下是.dll文件，linux下是.so文件。 当前，我的项目结构如下图","categories":[{"name":"android开发","slug":"android","permalink":"http://test.quanke.name/categories/android/"}],"tags":[],"keywords":[{"name":"android开发","slug":"android","permalink":"http://test.quanke.name/categories/android/"}]},{"title":"android 使用NDK与环境搭建","slug":"android/android-e4-bd-bf-e7-94-a8ndk-e4-b8-8e-e7-8e-af-e5-a2-83-e6-90-ad-e5-bb-ba","date":"2012-11-07T20:02:00.000Z","updated":"2018-01-29T07:18:46.578Z","comments":true,"path":"posts/33762/","link":"","permalink":"http://test.quanke.name/posts/33762/","excerpt":"","text":"一、NDK介绍 使用NDK，并不会给我们程序提高执行性能，反而会使程序复杂化。因此，尽量避免使用NDK，除非你真的需要使用本地库（通常是C/C++库），不要因为擅长使用C/C++编程而使用NDK。 Android提供了两种使用本地代码的方式1.通过JNI调用本地代码 2.通过NativeActivity类调用本地代码（从2.3版本开始支持） NDK 提供了一系列的工具，帮助开发者快速开发 C （或 C++ ）的动态库，并能自动将 so 和java 应用一起打包成 apk 。这些工具对开发者的帮助是巨大的。NDK 集成了交叉编译器，并提供了相应的 mk 文件隔离 CPU 、平台、 ABI 等差异，开发人员只需要简单修改 mk 文件（指出 “ 哪些文件需要编译 ” 、 “ 编译特性要求 ” 等），就可以创建出 so 。 NDK 可以自动地将 so 和 Java 应用一起打包，极大地减轻了开发人员的打包工作 。 比较简单的说， NDK 是一套交叉编译工具，它可以帮你把你用 C 或 C++ 书写的代码，编译为 .so （类似与 win 下的 .dll ）格式的文件，使你可以在你的 Android 程序当中用 Java 语言（ JNI ）调用这些代码。 二：Windows平台安装cygwin由于 NDK 编译代码时必须要用到 make 和 gcc ，所以你必须先搭建一个 linux 环境， cygwin 是一个在 windows 平台上运行的 unix 模拟环境 , 它对于学习 unix/linux 操作环境，或者从 unix 到 windows 的应用程序移植，非常有用。通过它，你就可以在不安装 linux 的情况下使用 NDK 来编译 C 、 C++ 代码了。下面我们一步一步的安装 cygwin 吧。1.在cygwin主页下载setup.exe 2.双击安装setup.exe 3.选择安装目录 4.选择下载网址，http://mirrors.163.com比较快 5.安装向导提示是第一次安装，这个不用管它，直接点“确定” 6.选择安装包，这里要把Devel包由Default改成Install 7.正在安装，时间有点长，估计要2个小时左右（根据网络而定） &nbsp; 8.测试cygwin是否安装好了运行cygwin，在弹出的命令行窗口输入：cygcheck -c cygwin命令 &nbsp; 三、配置NDK环境变量1.在cygwin的安装目录，找到home\\&lt;PC用户名&gt;.bash_profile文件（我是在C:\\cygwin\\home\\user.bash_profile），有时候安装home目录下是空的，可以自行创建&lt;PC用户名&gt;目录，并将cygwin\\etc\\skel.bash_profile文件拷贝过来。2.打开bash_profile文件，添加如下两行，例如：NDK=/cygdrive/h/android-ndk-r7export NDK NDK这个名字可以随便取，路径格式为/cygdrive/&lt;你的盘符&gt;/&lt;android ndk 目录&gt;注意：用某些编辑器编辑bash_profile文件，会导致问题，如用写字板、VC++6。可以用Uedit、UltraEdit的dos格式编辑 3.测试环境是否配置好了，打开cygwin，输入cd $NDK，出现/cygdrive/h/android-ndk-r7信息表示配置好了。如下图 注意：如果第2步用写字板打开编辑bash_profile文件，输入cd $NDK时会显示no such file or directory，说明配置不成功四、用NDK来编译程序1.现在我们用安装好的NDK来编译一个简单的程序，我们选择ndk自带的例子hello-jni，我的位于H:\\android-ndk-r7\\samples\\hello-jni(根据你具体的安装位置而定)，2.运行cygwin，输入命令cd /cygdrive/h/android-ndk-r7/samples/hello-jni，进入到H:\\android-ndk-r7\\samples\\hello-jni目录。3.输入$NDK/ndk-build，执行成功后，它会自动生成一个libs目录，把编译生成的.so文件放在里面。($NDK是调用我们之前配置好的环境变量，ndk-build是调用ndk的编译程序)4.此时去hello-jni的libs目录下看有没有生成的.so文件，如果有，你的ndk就运行正常了 五、在eclipse中集成c/c++开发环境1.装Eclipse的C/C++环境插件：CDT，这里选择在线安装。首先登录http://www.eclipse.org/cdt/downloads.php，找到对应你Eclipse版本的CDT插件的在线安装地址。2.然后点Help菜单，找到Install New Software菜单3.点击Add按钮，把取的地址填进去，出来插件列表后，选Select All，然后选择下一步即可完成安装4.安装完成后，在eclispe中右击新建一个项目，如果出现了c/c++项目，则表明你的CDT插件安装成功了 &nbsp; 六、配置C/C++的编译器1.打开eclipse，导入ndk自带的hello-jni例子，右键单击项目名称，点击Properties，弹出配置界面，之后再点击Builders，弹出项目的编译工具列表，之后点击New，新添加一个编译器，点击后出现添加界面，选择Program，点击OK2.出现了添加界面，首先给编译配置起个名字，如：C_Builder设置Location为&lt;你cygwin安装路径&gt;\\bin\\bash.exe程序，例如：C:\\cygwin\\bin\\bash.exe设置Working Directory为&lt;你cygwin安装路径&gt;\\bin目录，例如：C:\\cygwin\\bin设置Arguments为 –login -c “cd /cygdrive/F/workspace/hello-jni &amp;&amp; $NDK/ndk-build” 上面的配置中 /cygdrive/F/workspace/hello-jni是你当前要编译的程序的目录，$NDK是之前配置的ndk的环境变量，这两个根据你具体的安装目录进行配置，其他的不用变，Arguments这串参数实际是 给bash.exe命令行程序传参数，进入要编译的程序目录，然后运行ndk-build编译程序 3.接着切换到Refresh选项卡，给Refresh resources upon completion打上钩4.然后切换到Build Options选项卡，勾选上最后三项5.之后点击Specify Resources按钮，选择资源目录，勾选你的项目目录即可6.最后点击Finish，点击OK一路把刚才的配置都保存下来，注意：如果你配置的编译器在其它编译器下边，记得一定要点Up按钮，把它排到第一位，否则C代码的编译晚于Java代码的编译，会造成你的C代码要编译两次才能看到最新的修改 7.编译配置完成，现在来测试一下是否可以自动编译，打开项目jni目录里的hello-jni.c文件把提示Hello from JNI!改成其他的文字：如：Hello，Automatic Compile.，然后再模拟器中运行你的程序，如果模拟器中显示了你最新修改的文字，说明环境搭建完成！","categories":[{"name":"android开发","slug":"android","permalink":"http://test.quanke.name/categories/android/"}],"tags":[],"keywords":[{"name":"android开发","slug":"android","permalink":"http://test.quanke.name/categories/android/"}]},{"title":"声音压缩库 Speex ","slug":"e5-a3-b0-e9-9f-b3-e5-8e-8b-e7-bc-a9-e5-ba-93-speex","date":"2012-11-07T19:31:49.000Z","updated":"2018-01-29T07:18:46.467Z","comments":true,"path":"posts/14090/","link":"","permalink":"http://test.quanke.name/posts/14090/","excerpt":"","text":"Speex是一套专门用于压缩声音的库,由于其专门针对声音,所以压缩声音的性能非常高.Speex由于其压缩性能,及0.80版后的跨平台的性能,所以在网络声音的传输中有很大的价值.但是需要注意的是speex只能对声音进行压缩,不支持音乐的压缩,如果你需要音乐的压缩你或许需要用vorbis库. 支持包括Linux、BSD、MacOS 以及 Symbian 系统。","categories":[{"name":"android开发","slug":"android","permalink":"http://test.quanke.name/categories/android/"}],"tags":[],"keywords":[{"name":"android开发","slug":"android","permalink":"http://test.quanke.name/categories/android/"}]},{"title":"Android录制声音 录音输输出格式","slug":"android/android-e5-bd-95-e5-88-b6-e5-a3-b0-e9-9f-b3-e5-bd-95-e9-9f-b3-e8-be-93-e8-be-93-e5-87-ba-e6-a0-bc-e5-bc-8f","date":"2012-11-07T19:24:41.000Z","updated":"2018-01-29T07:18:46.583Z","comments":true,"path":"posts/53934/","link":"","permalink":"http://test.quanke.name/posts/53934/","excerpt":"","text":"Table 1. Core media format and codec support. &nbsp; TypeFormat / CodecEncoderDecoderDetailsSupported File Type(s) / Container FormatsAudioAAC LC/LTP••Mono/Stereo content in any combination of standard bit rates up to 160 kbps and sampling rates from 8 to 48kHz• 3GPP (.3gp)• MPEG-4 (.mp4, .m4a)• ADTS raw AAC (.aac, decode in Android 3.1+, encode in Android 4.0+, ADIF not supported)• MPEG-TS (.ts, not seekable, Android 3.0+)HE-AACv1 (AAC+)•HE-AACv2 (enhanced AAC+)•AMR-NB••4.75 to 12.2 kbps sampled @ 8kHz 3GPP (.3gp)AMR-WB••9 rates from 6.60 kbit/s to 23.85 kbit/s sampled @ 16kHz 3GPP (.3gp)FLAC•(Android 3.1+)Mono/Stereo (no multichannel). Sample rates up to 48 kHz (but up to 44.1 kHz is recommended on devices with 44.1 kHz output, as the 48 to 44.1 kHz downsampler does not include a low-pass filter). 16-bit recommended; no dither applied for 24-bit. FLAC (.flac) onlyMP3•Mono/Stereo 8-320Kbps constant (CBR) or variable bit-rate (VBR) MP3 (.mp3)MIDI•MIDI Type 0 and 1. DLS Version 1 and 2. XMF and Mobile XMF. Support for ringtone formats RTTTL/RTX, OTA, and iMelody• Type 0 and 1 (.mid, .xmf, .mxmf)• RTTTL/RTX (.rtttl, .rtx)• OTA (.ota)• iMelody (.imy)Vorbis•• Ogg (.ogg)• Matroska (.mkv, Android 4.0+)PCM/WAVE•8- and 16-bit linear PCM (rates up to limit of hardware) WAVE (.wav)ImageJPEG••Base+progressive JPEG (.jpg)GIF•GIF (.gif)PNG••PNG (.png)BMP•BMP (.bmp)WEBP•(Android 4.0+)•(Android 4.0+) WebP (.webp)VideoH.263••• 3GPP (.3gp)• MPEG-4 (.mp4)H.264 AVC•(Android 3.0+)•Baseline Profile (BP)• 3GPP (.3gp)• MPEG-4 (.mp4)• MPEG-TS (.ts, AAC audio only, not seekable, Android 3.0+)MPEG-4 SP•3GPP (.3gp)VP8•(Android 2.3.3+)Streamable only in Android 4.0 and above• WebM (.webm)• Matroska (.mkv, Android 4.0+) Video Encoding RecommendationsTable 2, below, lists examples of video encoding profiles and parameters that the Android media framework supports for playback. In addition to these encoding parameter recommendations, a device’s availablevideo recording profiles can be used as a proxy for media playback capabilities. These profiles can be inspected using the[CamcorderProfile](http://blog.csdn.net/zqiang_55/reference/android/media/CamcorderProfile.html) class, which is available since API level 8. Table 2. Examples of supported video encoding parameters. &nbsp; SD (Low quality) SD (High quality) HD (Not available on all devices) Video codec H.264 Baseline Profile H.264 Baseline Profile H.264 Baseline Profile Video resolution 176 x 144 px 480 x 360 px 1280 x 720 px Video frame rate 12 fps 30 fps 30 fps Video bitrate 56 Kbps 500 Kbps 2 Mbps Audio codec AAC-LC AAC-LC AAC-LC Audio channels 1 (mono) 2 (stereo) 2 (stereo) Audio bitrate 24 Kbps 128 Kbps 192 KbpsFor video content that is streamed over HTTP or RTSP, there are additional requirements:","categories":[{"name":"android开发","slug":"android","permalink":"http://test.quanke.name/categories/android/"}],"tags":[],"keywords":[{"name":"android开发","slug":"android","permalink":"http://test.quanke.name/categories/android/"}]},{"title":"Android开发中网络请求的压缩 ── GZip的使用","slug":"android/android-e5-bc-80-e5-8f-91-e4-b8-ad-e7-bd-91-e7-bb-9c-e8-af-b7-e6-b1-82-e7-9a-84-e5-8e-8b-e7-bc-a9-e2-94-80-e2-94-80-gzip-e7-9a-84-e4-bd-bf-e7-94-a8","date":"2012-11-07T18:58:23.000Z","updated":"2018-01-29T07:18:46.586Z","comments":true,"path":"posts/42283/","link":"","permalink":"http://test.quanke.name/posts/42283/","excerpt":"","text":"gzip是GNUzip的缩写，它是一个GNU自由软件的文件压缩程序。 HTTP协议上的GZIP编码是一种用来改进WEB应用程序性能的技术。一般服务器中都安装有这个功能模块的，服务器端不需做改动。 当浏览器支持gzip 格式的时候， 服务器端会传输gzip格式的数据。 从Http 技术细节上讲，就是 http request 头中 有 “Accept-Encoding”, “gzip” ，response 中就有返回头Content-Encoding=gzip 。 我们现在从浏览器上访问玩啥网站都是gzip格式传输的。 但是我们现在Android 客户端，没有用gzip 格式访问。 同样的的道理，我们可以在android 客户端 request 头中加入 “Accept-Encoding”, “gzip” ，来让服务器传送gzip 数据。 具体代码如下。[code lang=”java”] private String getJsonStringFromGZIP(HttpResponse response) { String jsonString = null; try { InputStream is = response.getEntity().getContent(); BufferedInputStream bis = new BufferedInputStream(is); bis.mark(2); // 取前两个字节 byte[] header = new byte[2]; int result = bis.read(header); // reset输入流到开始位置 bis.reset(); // 判断是否是GZIP格式 int headerData = getShort(header); // Gzip 流 的前两个字节是 0x1f8b if (result != -1 &amp;&amp; headerData == 0x1f8b) { LogUtil.d(&quot;HttpTask&quot;, &quot; use GZIPInputStream &quot;); is = new GZIPInputStream(bis); } else { LogUtil.d(&quot;HttpTask&quot;, &quot; not use GZIPInputStream&quot;); is = bis; } InputStreamReader reader = new InputStreamReader(is, &quot;utf-8&quot;); char[] data = new char[100]; int readSize; StringBuffer sb = new StringBuffer(); while ((readSize = reader.read(data)) &gt; 0) { sb.append(data, 0, readSize); } jsonString = sb.toString(); bis.close(); reader.close(); } catch (Exception e) { LogUtil.e(&quot;HttpTask&quot;, e.toString(),e); } LogUtil.d(&amp;quot;HttpTask&amp;quot;, &amp;quot;getJsonStringFromGZIP net output : &amp;quot; + jsonString ); return jsonString; } private int getShort(byte[] data) { return (int)((data[0]&amp;lt;&amp;lt;8) | data[1]&amp;amp;0xFF); } [/code]参考 ，注意实际使用中，我发现gzip 流前两个字节是0x1e8b ，不是0x1f8b .后来检查一下code ，代码处理错误，加上第二个字节的时候需 &amp;0xFF 0x1f8b 可参考标准 http://www.gzip.org/zlib/rfc-gzip.html#file-format","categories":[{"name":"android开发","slug":"android","permalink":"http://test.quanke.name/categories/android/"}],"tags":[],"keywords":[{"name":"android开发","slug":"android","permalink":"http://test.quanke.name/categories/android/"}]},{"title":"安卓自带的主题android:theme","slug":"e5-ae-89-e5-8d-93-e8-87-aa-e5-b8-a6-e7-9a-84-e4-b8-bb-e9-a2-98androidtheme","date":"2012-11-07T17:58:44.000Z","updated":"2018-01-29T07:18:46.464Z","comments":true,"path":"posts/27720/","link":"","permalink":"http://test.quanke.name/posts/27720/","excerpt":"","text":"[code lang=”xml”] android:theme=&quot;@android:style/Theme.Dialog&quot; 将一个Activity显示为能话框模式 android:theme=&quot;@android:style/Theme.NoTitleBar&quot; 不显示应用程序标题栏 android:theme=&quot;@android:style/Theme.NoTitleBar.Fullscreen&quot; 不显示应用程序标题栏，并全屏 android:theme=&quot;Theme.Light&quot; 背景为白色 android:theme=&quot;Theme.Light.NoTitleBar&quot; 白色背景并无标题栏 android:theme=&quot;Theme.Light.NoTitleBar.Fullscreen&quot; 白色背景，无标题栏，全屏 android:theme=&quot;Theme.Black&quot; 背景黑色 android:theme=&quot;Theme.Black.NoTitleBar&quot; 黑色背景并无标题栏 android:theme=&quot;Theme.Black.NoTitleBar.Fullscreen&quot; 黑色背景，无标题栏，全屏 android:theme=&quot;Theme.Wallpaper&quot; 用系统桌面为应用程序背景 android:theme=&quot;Theme.Wallpaper.NoTitleBar&quot; 用系统桌面为应用程序背景，且无标题栏 android:theme=&quot;Theme.Wallpaper.NoTitleBar.Fullscreen&quot; 用系统桌面为应用程序背景，无标题栏，全屏 android:theme=&quot;Translucent&quot; 背景为透明 android:theme=&quot;Theme.Translucent.NoTitleBar&quot; 透明背景并无标题栏 android:theme=&quot;Theme.Translucent.NoTitleBar.Fullscreen&quot; 透明背景并无标题栏，全屏 android:theme=&quot;Theme.Panel&quot; 内容容器 android:theme=&quot;Theme.Light.Panel&quot; 背景为白色的内容容器[/code]","categories":[{"name":"android开发","slug":"android","permalink":"http://test.quanke.name/categories/android/"}],"tags":[],"keywords":[{"name":"android开发","slug":"android","permalink":"http://test.quanke.name/categories/android/"}]},{"title":"Android：invalidate()和postInvalidate() 的区别及使用","slug":"android/android-ef-bc-9ainvalidate-e5-92-8cpostinvalidate-e7-9a-84-e5-8c-ba-e5-88-ab-e5-8f-8a-e4-bd-bf-e7-94-a8","date":"2012-11-07T17:57:34.000Z","updated":"2018-01-29T07:18:46.592Z","comments":true,"path":"posts/60638/","link":"","permalink":"http://test.quanke.name/posts/60638/","excerpt":"","text":"Android提供了Invalidate方法实现界面刷新，但是Invalidate不能直接在线程中调用，因为他是违背了单线程模型：Android UI操作并不是线程安全的，并且这些操作必须在UI线程中调用。invalidate()是用来刷新View的，必须是在UI线程中进行工作。比如在修改某个view的显示时，调用invalidate()才能看到重新绘制的界面。invalidate()的调用是把之前的旧的view从主UI线程队列中pop掉。 一个Android 程序默认情况下也只有一个进程，但一个进程下却可以有许多个线程。在这么多线程当中，把主要是负责控制UI界面的显示、更新和控件交互的线程称为UI线程，由于onCreate()方法是由UI线程执行的，所以也可以把UI线程理解为主线程。其余的线程可以理解为工作者线程。invalidate()得在UI线程中被调动，在工作者线程中可以通过Handler来通知UI线程进行界面更新。 而postInvalidate()在工作者线程中被调用 利用invalidate()刷新界面 实例化一个Handler对象，并重写handleMessage方法调用invalidate()实现界面刷新;而在线程中通过sendMessage发送界面更新消息。[code lang=”java”]// 在onCreate()中开启线程 new Thread(new GameThread()).start();、 // 实例化一个handler Handler myHandler = new Handler() {// 接收到消息后处理public void handleMessage(Message msg) {switch (msg.what) {case Activity01.REFRESH:mGameView.invalidate(); // 刷新界面break;} super.handleMessage(msg);}}; class GameThread implements Runnable {public void run() {while (!Thread.currentThread().isInterrupted()) {Message message = new Message();message.what = Activity01.REFRESH;// 发送消息Activity01.this.myHandler.sendMessage(message);try {Thread.sleep(100);} catch (InterruptedException e) {Thread.currentThread().interrupt();}}}} [/code]使用postInvalidate()刷新界面 使用postInvalidate则比较简单，不需要handler，直接在线程中调用postInvalidate即可。 [code lang=”java”]class GameThread implements Runnable {public void run() {while (!Thread.currentThread().isInterrupted()) {try {Thread.sleep(100);} catch (InterruptedException e) {Thread.currentThread().interrupt();} // 使用postInvalidate可以直接在线程中更新界面mGameView.postInvalidate();}}}[/code]","categories":[{"name":"android开发","slug":"android","permalink":"http://test.quanke.name/categories/android/"}],"tags":[],"keywords":[{"name":"android开发","slug":"android","permalink":"http://test.quanke.name/categories/android/"}]},{"title":"Android压缩图片的几种方法和实例demo","slug":"android/android-e5-8e-8b-e7-bc-a9-e5-9b-be-e7-89-87-e7-9a-84-e5-87-a0-e7-a7-8d-e6-96-b9-e6-b3-95","date":"2012-11-07T17:49:11.000Z","updated":"2018-01-29T07:18:46.585Z","comments":true,"path":"posts/37524/","link":"","permalink":"http://test.quanke.name/posts/37524/","excerpt":"","text":"在移动设备上进行图片相关软件的开发，一定得先压缩图片，毕竟移动设备的内存有限，稍不注意就会导致内存溢出，刚好用到这里，就学习了一下相关的压缩图片，现在总结出来和大家共享。 一般情况下，我们要将图片按照固定大小取缩略图，一般取缩略图的方法是使用 BitmapFactory的decodeFile方法，然后通过传递进去 BitmapFactory.Option类型的参数进行取缩略图，在Option中，属性值inSampleSize表示缩略图大小为原始图片大小的几分之一，即如果这个值为2，则取出的缩略图的宽和高都是原始图片的1/2，图片大小就为原始大小的1/4。 Options中有个属性inJustDecodeBounds，SDK中的英文引用如下：If set totrue, the decoder will return null (no bitmap), but the out… fields will stillbe set, allowing the caller to query the bitmap without having to allocate thememory for its pixels.大致意思就是说如果该值设为true那么将不返回实际的bitmap不给其分配内存空间而里面只包括一些解码边界信息即图片大小信息，那么相应的方法也就出来了，通过设置inJustDecodeBounds为true，获取到outHeight(图片原始高度)和 outWidth(图片的原始宽度)，然后计算一个inSampleSize(缩放值)，然后就可以取图片了，这里要注意的是，inSampleSize 可能小于0，必须做判断。 BitmapFactory.Options options = new BitmapFactory.Options(); options.inJustDecodeBounds = true; pic[i] = BitmapFactory.decodeFile(path[i], options); //此时返回bm为空 options.inJustDecodeBounds = false; //缩放比 int be = (int)(options.outHeight / (float)215); if (be &lt;= 0) be = 1; options.inSampleSize = be; options.inSampleSize = computeSampleSize(options, -1, 300*350); //重新读入图片，注意这次要把options.inJustDecodeBounds 设为 false哦 pic[i] = BitmapFactory.decodeFile(path[i], options); 这是option的UML图： 这样出来的图片一般不会失真，但是当你压缩的长宽比例相差较大时还会有失真现象。 这个是等比例缩放:bitmap = Bitmap.createScaledBitmap(bitmap, width, height, false);width和height是缩放后的大小，true表示过滤，可消除锯齿感。 newBitmap = Bitmap.createBitmap(oldBitmap, 0, 0, width, height, matrix, true);//用距阵的方式缩放 这个是截取图片某部分:bitmap = Bitmap.createBitmap(bitmap, x, y, width, height);，意思是从（x，y）开始截取width宽和height高大小的图片。 这些就是android系统中压缩图片的几个方法了。 &nbsp; 实例&nbsp;[code lang=”java”]//对图片进行压缩 BitmapFactory.Options options = new BitmapFactory.Options(); options.inJustDecodeBounds = true; //获取这个图片的宽和高 Bitmap bitmap = BitmapFactory.decodeFile(&amp;quot;/sdcard/dcim/Camera/hello.jpg&amp;quot;,options);//此时返回bm为空 options.inJustDecodeBounds =false; //计算缩放比 int be = (int)(options.outHeight / (float)200); if(be &amp;lt;= 0) be =1; options.inSampleSize =be; //重新读入图片，注意这次要把options.inJustDecodeBounds设为false哦 bitmap = BitmapFactory.decodeFile(&amp;quot;/sdcard/dcim/Camera/hello.jpg&amp;quot;,options); int w = bitmap.getWidth(); int h=bitmap.getHeight(); System.out.println(w+&amp;quot; &amp;quot;+h); myImageView.setImageBitmap(bitmap); //保存入sdCard File file2= new File(&amp;quot;/sdcard/dcim/Camera/test.jpg&amp;quot;); try { FileOutputStream out = new FileOutputStream(file2); if(bitmap.compress(Bitmap.CompressFormat.JPEG, 100, out)){ out.flush(); out.close(); } } catch (Exception e) { // TODO: handle exception } //读取sd卡 File file =new File(&amp;quot;/sdcard/dcim/Camera/test.jpg&amp;quot;); int maxBufferSize = 16 * 1024; int len = 0; ByteArrayOutputStream outStream = new ByteArrayOutputStream(); BufferedInputStream bufferedInputStream; try { bufferedInputStream = new BufferedInputStream(new FileInputStream(file)); int bytesAvailable = bufferedInputStream.available(); int bufferSize = Math.min(bytesAvailable, maxBufferSize); byte[] buffer = new byte[bufferSize]; while ((len = bufferedInputStream.read(buffer)) != -1) { outStream.write(buffer, 0, bufferSize); } data = outStream.toByteArray(); outStream.close(); bufferedInputStream.close(); } catch (FileNotFoundException e) { e.printStackTrace(); } catch (IOException e) { e.printStackTrace(); } [/code]","categories":[{"name":"android开发","slug":"android","permalink":"http://test.quanke.name/categories/android/"}],"tags":[],"keywords":[{"name":"android开发","slug":"android","permalink":"http://test.quanke.name/categories/android/"}]},{"title":"Codecademy Linux版诞生，国内IT培训师推出Linux免费在线视频学习及问答网站","slug":"codecademy-linux-e7-89-88-e8-af-9e-e7-94-9f-ef-bc-8c-e5-9b-bd-e5-86-85it-e5-9f-b9-e8-ae-ad-e5-b8-88-e6-8e-a8-e5-87-balinux-e5-85-8d-e8-b4-b9-e5-9c-a8-e7-ba-bf-e8-a7-86-e9-a2-91-e5-ad-a6-e4-b9-a0","date":"2012-11-06T18:16:51.000Z","updated":"2018-01-29T07:18:46.438Z","comments":true,"path":"posts/26550/","link":"","permalink":"http://test.quanke.name/posts/26550/","excerpt":"","text":"试想这样一幅场景，你可以在地铁上啃注册会计师，在公交车上学Linux，在排队的间歇学学法律，是不是很美？而随着移动互联网的发展和各类在线教育平台的崛起，这个场景正在逐渐变成现实。在国内的各类在线教育平台相继推出的热潮中，十月底，又一家垂直领域的在线教育平台LinuxCast诞生了——这家网站由国内的一名兼具线下培训经验及线上系统运维、开发经验的创业者推出，聚焦Linux在线视频教育，堪称国内的Linux版Codecademy。 LinuxCast的功能目前主要分为三块：以Linux视频教程主打的课程库，围绕IT技术各类话题的课程播客，以及围绕课程学习的问答社区。打开网站后，你需要根据自己的需求和对Linux的熟悉程度选择相应级别的课程（目前包括入门基础、系统服务、认证考试和高级管理四类），选好之后（比如入门基础）就可以学习该级别的所有课程了。目前，每个课程视频都包含了简单的课程介绍、你在课程中能学到什么、有多少人在学习这类信息，点击即可观看视频。而在你的个人页面，你也可以看到自己选择的课程数量，提出的问题、获得的成就，以及不同级别的课程完成进度。 另外，网站的IT视频博客会每日更新，问答社区则模仿了stackoverflow风格，突显内容，并会对内容进行一定的过滤。尽管网站的视频是录播的，但你在观看视频的时候可以提问，这个提问会关联到网站的问答社区。除此之外，团队现在还在开发一个在线实验平台，这个实验平台可以为用户提供几十到上百个虚拟主机，让用户测试自己的项目，进一步打通学习链条。 在国外，像这样的现在编程学习平台就包括上面提到的趣味编程网站Codecademy和Treehouse。Codecademy在今年六月份刚刚获得一轮1000万美元的融资，并新增了中文、俄语、日语、西班牙语和德语5个语言版本，不过目前针对的都是开发而非运维，也没有Linux相关的课程。而Treehouse也在今年的四月份拿到475万美元的融资。在国内，泛类的在线教育平台就包括传课、多贝等。不过，国内专注于Linux视频教学的在线学习网站似乎还没有，而线上已有的Linux资料多为文字类，生硬晦涩，为数不多的Linux视频也多是培训机构放出的宣传性视频，或是国外英文版，缺少成套的、体系化的课程。 而说到为什么要做这么一个网站，除了上面的原因外，网站创始人苏勇称，这更多地是基于他自己之前在线下做IT培训的经验。他做过一个线下的IT培训机构，尽管这个培训机构也能赚到钱，但却存在两个明显的弊端：超高的场地成本和讲师成本，除了对培训机构本身不利以外，这部分成本也会转嫁到学生的学费上来。苏勇自己评价说，做线下培训，投入产出比太低。 但是，线上平台却给人更多的想象力。线上的视频可以重复录放、从线上扩展到全国，不仅课程传授的成本降低了，学生学习的费用也更低。另外，苏勇说，对那些在职人员来说，线上的教育平台还有线下机构给不了的时间灵活度。 尽管LinuxCast在上月28号刚刚上线，但是从界面上可以看到，它的Linux基本操作课程已经有656人在学习，而单个IT播客的视频点播次数通常也在一两百次。对于一个上线不到十天的网站，这个数据已经相当不错。 目前，网站上的课程都是苏勇一个人录制的，这不禁让人联想到早期的可汗学院。不过，苏勇本人在互联网行业做了很多年。最初是做开发，编写过国内第一套NDS开发教程，之后又转行做过网络、服务器运维，再之后在IT培训做了三年。他拿过红帽的RHCA、RHCE认证，以及思科的CCIE、CCSP认证。可以说，苏勇是一个既有培训经验、又有互联网基因的创业者。另外，他花了半年时间学习ruby on rails，才有了现在的这个网站。 而说到网站的盈利模式，苏勇称目前还在逐渐摸索。现阶段，网站的所有课程都是免费的，但是苏勇称当课程数量和用户基数足够大时，应该会将20%到30%的高端课程做成订阅付费制。订阅用户除了可以享受无限制的课程学习以外，还可以享受网站的人工问答服务。他可能会请一部分的兼职讲师，在固定时段给学生答疑。而这部分的费用，比起在线下做培训机构聘请讲师，还是要低很多。总归，他希望能将网站的服务做上来，而不单单是做课程。而他们最终开发出的在线实验平台，未来也可能对测试项目的用户实行按小时收费。但对于收费标准的设计，他也有自己的担心——因为国内的用户习惯还没有建立。对他来说，如何让用户不为那些实际不需花钱的服务付费，然后又为那些实际应该花钱的服务付费，也是他思考的问题。 因为网站刚刚上线，苏勇目前还没有进行大规模的推广，想先进一步完善网站的功能。他只是在上线头两天在v2ex和ruby-china两个网站发了两个帖子。结果，在那两天，网站的PV已经过万，独立访客也达到两千人。苏勇说，他现在想做的，并非是像之前创业那样，给一大批用户发上无数封邮件，而是直接锁定目标客户，并引导用户去分享他们的产品。因为，从之前的反馈来看，用户认可他们的产品。","categories":[{"name":"随笔","slug":"essay","permalink":"http://test.quanke.name/categories/essay/"}],"tags":[],"keywords":[{"name":"随笔","slug":"essay","permalink":"http://test.quanke.name/categories/essay/"}]},{"title":"Android编程容易犯的错误","slug":"android/android-e7-bc-96-e7-a8-8b-e5-ae-b9-e6-98-93-e7-8a-af-e7-9a-84-e9-94-99-e8-af-af","date":"2012-11-06T18:12:24.000Z","updated":"2018-01-29T07:18:46.589Z","comments":true,"path":"posts/49833/","link":"","permalink":"http://test.quanke.name/posts/49833/","excerpt":"","text":"1.设置TextView的文本颜色[code lang=”java”]TextView tv;…tv.setTextColor(R.color.white);[/code]其实这样设置的颜色是 R.color.white的资源ID值所代表的颜色值，而不是资源color下的white颜色值：正确的做法如下： [code lang=”java”]tv.setTextColor(getResources().getColor(R.color.white));[/code]这个出错的概率满高的，就是因为二者都是int类，导致编译器不报错。 2.读取Cursor中的值 [code lang=”java”]Uri uri;Cursor cursor = contentResolver.query(uri, null,null,null,null);if(cursor !=null){ String name = cursor.getString(1);// curosr.close(); cursor =null;}[/code] 上面语句中的，执行到cursor.getString(1)部分就会报异常，异常是: Caused by: android.database.CursorIndexOutOfBoundsException: Index -1 requested, with a size of 4 编译没有问题，只有在运行的时候才会发现。 正确的做法是： [code lang=”java”]Uri uri;Cursor cursor = contentResolver.query(uri, null,null,null,null);if(cursor !=null){ if(cursor.moveToFirst()){ String name = cursor.getString(1);// } curosr.close(); cursor =null;}[/code]或者: [code lang=”java”]Uri uri;Cursor cursor = contentResolver.query(uri, null,null,null,null);if(cursor !=null){ while(cursor.moveToNext()){ String name = cursor.getString(1);// } curosr.close(); cursor =null;}[/code]3.不要使用标有Deprecated的函数或者类,比如不要使用android.telephony.gsm.SmsMessage，而应该用android.telephony.SmsMessage,这样避免采用不同的3G协议时不会出现问题。 4.SQLite中的查询条件，比如一个叫name的字段，其字段类型为TEXT,如果我们要判断其name不等某个值(如zhangsan),写出如下的语句: [code lang=”java”]name &lt;&gt; ‘zhangsan’[/code]但是，这样写的语句，如果碰到name值为空的时候，就有问题，即name为空时 以上的布尔值为false，而不是true. 原因很可能，SQLite中的判断函数采用类似写法: [code lang=”java”]boolean judge(String self, String conditions){ if(null == self) return false; return self.equalsIgnoreCase(conditions);}[/code]其中 self为数据库中name的值，而conditions为上面示例中的 zhangsan。 所以，以上查询条件的正确写法是: [code lang=”java”]name &lt;&gt; ‘zhangsan’ or name is null[/code]除非你也想过滤掉name 为空的记录。 5.如下所示，想要在按钮显示”删 除”（没错删除中间有个空格）,以下的字符串资源是错误的： [code lang=”java”]&lt;string name=&quot;button_delete_text&quot;&gt;删 除&lt;/string&gt;[/code]这样的出来，最终看不到中间的空格，应该是Android SDK编译的时候，会自动过滤掉String中的空格部分，所以应该采用以下的方式: [code lang=”java”]&lt;string name=&quot;button_delete_text&quot;&gt;删\\u0020除&lt;/string&gt;[/code]类似地，其他的特殊符号都可以用\\u00XX来转义，如 ‘ —- \\u0027, &lt; —– \\u003C, &gt; —- \\u003E 。 6. context的问题: 如果在一个非Activity的context里面调用startActivity，那么其intent必须设置： [code lang=”java”]intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);[/code] 否则，会报如下类似的错误： [code lang=”java”]Calling startActivity() from outside of an Activity context requires the FLAG_ACTIVITY_NEW_TASK flag.[/code] 而我们还要提防系统控件中的隐性调用startActivity: [code lang=”java”]TextView tv = new TextView(mContext);tv.setAutoLinkMask(Linkify.ALL);tv.setText(content);[/code]当content内容中有电话号码/邮件/URL时，并且mContext不是非Acitvity的context，而是app的context时[code lang=”java”](XXXActivity.this.getApplicationContext()),[/code]就会出现如下的错误：[code lang=”java”]android.util.AndroidRuntimeException: Calling startActivity() from outside of an Activitycontext requires the FLAG_ACTIVITY_NEW_TASK flag. Is this really what you want?E/AndroidRuntime(10382): at android.app.ContextImpl.startActivity(ContextImpl.java:622)E/AndroidRuntime(10382): at android.content.ContextWrapper.startActivity(ContextWrapper.java:258)E/AndroidRuntime(10382): at android.text.style.URLSpan.onClick(URLSpan.java:62)[/code]由于URLSpan.onClick中调用startActivity是由系统控制的，所以我们必须传入activity的contex,才不会出现如上的异常，导致程序退出。 7. 另外一个context的问题：如果你在一个单实例的对象中，有个注册监听器的行为的话，那么传给这个单实例 对象的context，就必须是ApplicationContext了，否则会出现:receiver leak的错误。 8. 控件有时不能充满整个屏幕: [code lang=”java”]LinearLayout panel = new LinearLayout(this);LinearLayout.LayoutParams llp = new LinearLayout.LayoutParams( LinearLayout.LayoutParams.FILL_PARENT, LinearLayout.LayoutParams.FILL_PARENT);panel.setLayoutParams(llp);root.addView(panel);[/code] 而应该是： [code lang=”java”]LinearLayout panel = new LinearLayout(this);LinearLayout.LayoutParams llp = new LinearLayout.LayoutParams( LinearLayout.LayoutParams.FILL_PARENT, LinearLayout.LayoutParams.FILL_PARENT);root.addView(panel. llp);[/code]9.按照以下的方式启动service，但是service没有起来[code lang=”java”] Intent service = new Intent(this, FuncService.class); startService(service);[/code]很有可能是忘了在AndroidManifest.xml中注册FuncService[code lang=”xml”]&lt;service android:name=&quot;com.android.example.FuncService&quot;/&gt;[/code] 10.TextView中为什么会在有些行尾出现”…”字符,当然不是所有手机都是有问题，本来笔者刚开始也以为可能是 手机的ROM问题,认真review了代码，发现如下的代码：[code lang=”java”] mIntroView = (TextView) findViewById(R.id.description); mIntroView.setEllipsize(TruncateAt.END);[/code]问题是上面的第2行，之前是因为要限定文本的行数，后来去掉限制，没有去掉以上的代码。 该行代码会导致很多的ROM上：只要一个文本行的文字在一个手机屏幕行显示不下的话，就自动在 行尾截断并在行尾添加”…”,而之前没有问题是因为：全部显示的时候，我调用了如下方法：[code lang=”java”]mIntro.setMaxLines(Integer.MAX_VALUE);[/code] 11.不要太相信工具，比如Eclipse里面的断点遇到多线程什么，经常不起作用/走不到，这时候别太早下结论断点地方出错了， 所以每个工程都应该有日志的开关，通过查看日志来确认，某个路径是否走到或者某个变量的值，。。。","categories":[{"name":"android开发","slug":"android","permalink":"http://test.quanke.name/categories/android/"}],"tags":[],"keywords":[{"name":"android开发","slug":"android","permalink":"http://test.quanke.name/categories/android/"}]},{"title":"android monkey测试工具简介与实例","slug":"android/android-monkey-e6-b5-8b-e8-af-95-e5-b7-a5-e5-85-b7-e7-ae-80-e4-bb-8b-e4-b8-8e-e5-ae-9e-e4-be-8b","date":"2012-11-06T17:54:34.000Z","updated":"2018-01-29T07:18:46.599Z","comments":true,"path":"posts/63825/","link":"","permalink":"http://test.quanke.name/posts/63825/","excerpt":"","text":"Monkey测试简介当Monkey程序在模拟器或设备运行的时候，如果用户出发了比如点击，触摸，手势或一些系统级别的事件的时候，它就会 产生随机脉冲，所以可以用Monkey用随机重复的方法去负荷测试你开发的软件. 最简单的方法就是用用下面的命令来使用Monkey，这个命令将会启动你的软件并且触发500个事件. $ adb shell monkey -v -p your.package.name 500更多的关于命令Monkey的命令的信息，可以查看UI/ApplicationExerciser Monkey documentation page. com.android.stk com.android.htmlviewer com.android.globalsearch com.android.gpstest com.android.googlesearch wnc.w88.engineermode com.android.calculator2 com.android.inputmethod.latin com.svox.pico com.android.soundrecorder com.android.packageinstaller android.tts com.android.spare_parts com.android.globaltime com.android.sdksetup com.quicinc.bluetooth com.android.email com.qualcomm.qx.neocore com.android.development com.android.term com.android.server.vpn com.android.contacts com.android.camera wnc.w88.factorymode com.android.providers.applicati com.android.providers.settings com.android.voicedialer com.android.phone com.android.providers.contacts com.android.launcher com.android.mms com.android.providers.telephony com.android.providers.userdicti com.android.providers.media com.android.providers.calendar com.android.calendar com.android.providers.drm com.android.providers.downloads com.android.alarmclock com.android.settings com.android.qualcomm com.android.browser com.android.musicMonkey是一个命令行工具，可以运行在模拟器里或实际设备中。它向系统发送伪随机的用户事件流，实现对正在开发的应 用程序进行压力测试。Monkey包括许多选项，它们大致分为四大类：· 基本配置选项，如设置尝试的事件数量。 · 运行约束选项，如设置只对单独的一个包进行测试。 · 事件类型和频率。 · 调试选项。在Monkey运行的时候，它生成事件，并把它们发给系统。同时，Monkey还对测试中的系统进行监测，对下列三种情况进 行特殊处理： · 如果限定了Monkey运行在一个或几个特定的包上，那么它会监测试图转到其它包的操作，并对其进行阻止。 · 如果应用程序崩溃或接收到任何失控异常，Monkey将停止并报错。 · 如果应用程序产生了应用程序不响应(application not responding)的错误，Monkey将会停止并报错。 按照选定的不同级别的反馈信息，在Monkey中还可以看到其执行过程报告和生成的事件。Monkey基本用法 可以通过开发机器上的命令行或脚本来启动Monkey。由于Monkey运行在模拟器/设备环境中，所以必须用其环境中的shell 来进行启动。可以通过在每条命令前加上adb shell来达到目的，也可以进入Shell后直接输入Monkey命令。基本语法如下： $ adb shell monkey [options] 如果不指定options，Monkey将以无反馈模式启动，并把事件任意发送到安装在目标环境中的全部包。下面是一个更为典 型的命令行示例，它启动指定的应用程序，并向其发送500个伪随机事件： $ adb shell monkey -p your.package.name -v 500 命令选项参考 下表中列出了Monkey命令行可用的全部选项。 类别选项说明 常规--help列出简单的用法。 -v命令行的每一个-v将增加反馈信息的级别。Level 0(缺省值)除启动提示、测试完成和最终结果之外，提供较少信息。Level 1提供较为详细的测试信息，如逐个发送到Activity的事件。Level 2提供更加详细的设置信息，如测试中被选中的或未被选 中的Activity。 事件-s &lt;seed&gt;伪随机数生成器的seed值。如果用相同的seed值再次运行Monkey，它将生成相同的事件序列。 –throttle &lt;milliseconds&gt;在事件之间插入固定延迟。通过这个选项可以减缓Monkey的执行速度。如果不指定该选项，Monkey将不会被延迟，事件 将尽可能快地被产成。 –pct-touch &lt;percent&gt;调整触摸事件的百分比(触摸事件是一个down-up事件，它发生在屏幕上的某单一位置)。 –pct-motion &lt;percent&gt;调整动作事件的百分比(动作事件由屏幕上某处的一个down事件、一系列的伪随机事件和一个up事件组成)。 –pct-trackball &lt;percent&gt;调整轨迹事件的百分比(轨迹事件由一个或几个随机的移动组成，有时还伴随有点击)。 –pct-nav &lt;percent&gt;调整“基本”导航事件的百分比(导航事件由来自方向输入设备的up/down/left/right组成)。 –pct-majornav &lt;percent&gt;调整“主要”导航事件的百分比(这些导航事件通常引发图形界面中的动作，如：5-way键盘的中间按键、回退按键、菜单按 键) –pct-syskeys &lt;percent&gt;调整“系统”按键事件的百分比(这些按键通常被保留，由系统使用，如Home、Back、Start Call、End Call及音量控制键)。 –pct-appswitch &lt;percent&gt;调整启动Activity的百分比。在随机间隔里，Monkey将执行一个startActivity()调用，作为最大程度覆盖包中全部Activity的 一种方法。 –pct-anyevent &lt;percent&gt;调整其它类型事件的百分比。它包罗了所有其它类型的事件，如：按键、其它不常用的设备按钮、等等。 约束限制-p &lt;allowed-package-name&gt;如果用此参数指定了一个或几个包，Monkey将只允许系统启动这些包里的Activity。如果你的应用程序还需要访问其它包 里的Activity(如选择取一个联系人)，那些包也需要在此同时指定。如果不指定任何包，Monkey将允许系统启动全部包里 的Activity。要指定多个包，需要使用多个 -p选项，每个-p选项只能用于一个包。 -c &lt;main-category&gt;如果用此参数指定了一个或几个类别，Monkey将只允许系统启动被这些类别中的某个类别列出的Activity。如果不指定任 何类别，Monkey将选 择下列类别中列出的Activity： Intent.CATEGORY_LAUNCHER或Intent.CATEGORY_MONKEY。要 指定多个类别，需要使用多个-c选项，每个-c选 项只能用于一个类别。 调试–dbg-no-events设置此选项，Monkey将执行初始启动，进入到一个测试Activity，然后不会再进一步生成事件。为了得到最佳结果，把它 与-v、一个或几个包约 束、以及一个保持Monkey运行30秒或更长时间的非零值联合起来，从而提供一个环境，可以监视 应用程序所调用的包之间的转换。 –hprof设置此选项，将在Monkey事件序列之前和之后立即生成profiling报告。这将会在data/misc中生成大文件(~5Mb)，所以要 小心使用它。 –ignore-crashes通常，当应用程序崩溃或发生任何失控异常时，Monkey将停止运行。如果设置此选项，Monkey将继续向系统发送事件， 直到计数完成。 –ignore-timeouts通常，当应用程序发生任何超时错误(如“Application Not Responding”对话框)时，Monkey将停止运行。如果设置此选项 ，Monkey将继续向系统发送事件，直到计数完成。 –ignore-security-exceptions通常，当应用程序发生许可错误(如启动一个需要某些许可的Activity)时，Monkey将停止运行。如果设置了此选项， Monkey将继续向系统发送事件，直到计数完成。 –kill-process-after-error通常，当Monkey由于一个错误而停止时，出错的应用程序将继续处于运行状态。当设置了此选项时，将会通知系统停止发 生错误的进程。注意，正常的(成功的)结束，并没有停止启动的进程，设备只是在结束事件之后，简单地保持在最后的状 态。 –monitor-native-crashes监视并报告Android系统中本地代码的崩溃事件。如果设置了–kill-process-after-error，系统将停止运行。 –wait-dbg停止执行中的Monkey，直到有调试器和它相连接。monkey [-p ALLOWED_PACKAGE [-p ALLOWED_PACKAGE] …][-c MAIN_CATEGORY [-c MAIN_CATEGORY] …][–ignore-crashes] [–ignore-timeouts][–ignore-security-exceptions] [–monitor-native-crashes][–kill-process-after-error] [–hprof][–pct-touch PERCENT] [–pct-motion PERCENT][–pct-trackball PERCENT] [–pct-syskeys PERCENT][–pct-nav PERCENT] [–pct-majornav PERCENT][–pct-appswitch PERCENT] [–pct-flip PERCENT][–pct-anyevent PERCENT][–wait-dbg] [–dbg-no-events] [-f scriptfile][–port port][-s SEED] [-v [-v] …] [–throttle MILLISEC]COUNT讲了这么多，好像很枯燥，很难懂，即使看完了选项也不知道如何使用首先我们应该明白我们不可能使用monkey来制定做一样测试，重复做很多次，因为monkey是伪随机的，就是说虽然有一 定规律可循，但是并不是我们就可以指定动作，但是我们可以通过添加命令选项来将操作限制在一定的范围内。monkey -v -p com.android.camera –throttle 5000 –pct-anyevent 100 500这条命令的解释是：-v显示默认程度的信息；-p com.android.camera是指定测试的程序，// Allowing start of Intent { act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] cmp=com.android.camera/.Camera } in package com.android.camera这是开始测试的camera的内容–throttle 5000 设定延时–pct-anyevent 100设定启动activity的百分比为100%如果没有指定，我们可以看到在开始执行的时候8个事件（上面的选项中有介绍）的百分比如下： monkey -v -p com.android.camera –throttle 5000 500monkey -v -p com.android.camera –throttle 5000 500:Monkey: seed=0 count=500:AllowPackage: com.android.camera:IncludeCategory: android.intent.category.LAUNCHER:IncludeCategory: android.intent.category.MONKEY// Event percentages:// 0: 15.0%// 1: 10.0%// 2: 15.0%// 3: 25.0%// 4: 15.0%// 5: 2.0%// 6: 2.0%// 7: 1.0%// 8: 15.0% 指定事件之后 monkey -v -p com.android.camera –throttle 5000 –pct-anyevent 100 500monkey -v -p com.android.camera –throttle 5000 –pct-anyevent 100 500:Monkey: seed=0 count=500:AllowPackage: com.android.camera:IncludeCategory: android.intent.category.LAUNCHER:IncludeCategory: android.intent.category.MONKEY// Event percentages:// 0: 0.0%// 1: 0.0%// 2: 0.0%// 3: 0.0%// 4: 0.0%// 5: 0.0%// 6: 0.0%// 7: 0.0%// 8: 100.0% 最后count就是事件数设定为500 MONKEY 测试实例接下来看一个实例 Monkey 的用法是$ adb shell monkey -p your.package.name -v 500 ，首先，我们要找到应用程序在Emulator中所对应的包名，我一开始是一个个目录找得，前7步完成了这项工作，最终发现应用程序包都在 data/data下，你可以在shell中cd data/data，然后ls查看当前Emulator中的所有应用程序包。 假如我们想对SDK中的APIDemos做压力测试， 1.在Eclipse中新建工程，将 F:\\android-sdk-windows \\platforms\\android-2.0\\samples\\ApiDemos添加到工程中点击运行，此时，他的APK应该加载到了Emulator 上 2.在命令行输入adb shell 3.输入ls查看当前文件夹下的目录，执行结果如下 C:\\Documents and Settings\\Administrator&gt;adb shell lslssqlite_stmt_journalsconfigcachesdcarddetcsystemsyssbinprocinit.rcinit.goldfish.rcinitdefault.propdatarootdev 4.应用程序包都在data下，我们输入cd data进入data文件夹，如下 cd datacd data 5.输入ls查看文件夹下的内容，如下所示： lslsmisclocaldataapp-privateapppropertyanrbackupdontpanicdalvik-cachesystemlost+found 6.还有个data，所有的应用程序就在这个data下了， 进入这个data，然后输入ls如下： cd datacd data lslscom.android.mmscom.android.providers.applicationscom.android.globalsearchcom.android.calculator2com.android.spare_partscom.android.gesture.buildercom.android.musiccom.android.sdksetupcom.android.packageinstallercom.android.fallbackcom.android.providers.settingscom.android.providers.drmcom.android.developmentcom.android.providers.telephonycom.android.inputmethod.pinyincom.android.htmlviewercom.android.settingscom.android.netspeedcom.android.providers.userdictionarycom.android.browsercom.android.contactscom.android.alarmclockcom.android.cameracom.android.providers.contactsjp.co.omronsoft.openwnncom.android.launchercom.android.phonecom.android.soundrecordercom.google.android.providers.enhancedgooglesearchcom.svox.picocom.android.customlocalecom.android.termcom.android.providers.downloadscom.android.providers.mediacom.android.emailandroid.ttscom.android.inputmethod.latincom.android.server.vpncom.example.android.apis 7.最后一个就是我们刚才加载的APIDemo的应用程序包 8.可以直接输入monkey -p com.example.android.apis -v 50，结果如下，也可以退出shell，在命令行输入，adb shell monkey -p com.example.android.apis -v 500 ，运行过程中，Emulator中的应用程序在不断地切换画面，可以看一下，呵呵：） monkey -p com.example.android.apis -v 50monkey -p com.example.android.apis -v 50:Monkey: seed=0 count=50:AllowPackage: com.example.android.apis:IncludeCategory: android.intent.category.LAUNCHER:IncludeCategory: android.intent.category.MONKEY// Event percentages:// 0: 15.0%// 1: 10.0%// 2: 15.0%// 3: 25.0%// 4: 15.0%// 5: 2.0%// 6: 2.0%// 7: 1.0%// 8: 15.0%:Switch: #Intent;action=android.intent.action.MAIN;category=android.intent.category.LAUNCHER;launchFlags=0x10000000;component=com.example.android.apis/.ApiDemos;end// Allowing start of Intent { act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] cmp=com.example.android.apis/.ApiDemos } in package com.example.android.apis:Sending Pointer ACTION_MOVE x=-4.0 y=2.0:Sending Pointer ACTION_UP x=0.0 y=0.0// Allowing start of Intent { cmp=com.example.android.apis/.ApiDemos } in package com.example.android.apis:Sending Pointer ACTION_DOWN x=207.0 y=282.0:Sending Pointer ACTION_UP x=189.0 y=289.0// Allowing start of Intent { cmp=com.example.android.apis/.app.Intents } inpackage com.example.android.apis:Sending Pointer ACTION_DOWN x=95.0 y=259.0:Sending Pointer ACTION_UP x=95.0 y=259.0:Sending Pointer ACTION_DOWN x=295.0 y=223.0:Sending Pointer ACTION_UP x=290.0 y=213.0:Sending Pointer ACTION_MOVE x=-5.0 y=3.0ropped: keys=0 pointers=0 trackballs=0 flips=0 Network stats: elapsed time=3799ms (3799ms mobile, 0ms wifi, 0ms not connected)// Monkey finished","categories":[{"name":"android开发","slug":"android","permalink":"http://test.quanke.name/categories/android/"}],"tags":[],"keywords":[{"name":"android开发","slug":"android","permalink":"http://test.quanke.name/categories/android/"}]},{"title":"android中的spannable String 使用记录","slug":"spannablestring-e8-ae-b0-e5-bd-95","date":"2012-11-05T07:02:48.000Z","updated":"2018-01-29T07:18:46.537Z","comments":true,"path":"posts/15972/","link":"","permalink":"http://test.quanke.name/posts/15972/","excerpt":"","text":"SpannableStringTextView是用来显示文本的，有时需要给TextView中的个别字设置为超链接，或者设置个别字的颜色、字体等，那就需要用到Spannable对象，可以借助Spannable对象实现以上设置[code lang=”java”]myTextView = (TextView) this.findViewById(R.id.myTextView); //创建一个 SpannableString对象SpannableString sp = new SpannableString(&quot;这句话中有百度超链接,有高亮显示，这样，或者这样，还有斜体.&quot;);//设置超链接sp.setSpan(new URLSpan(&quot;http://www.baidu.com&amp;quot;), 5, 7,Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);//设置高亮样式一sp.setSpan(new BackgroundColorSpan(Color.RED), 17 ,19,Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);//设置高亮样式二sp.setSpan(new ForegroundColorSpan(Color.YELLOW),20,24,Spannable.SPAN_EXCLUSIVE_INCLUSIVE);//设置斜体sp.setSpan(new StyleSpan(android.graphics.Typeface.BOLD_ITALIC), 27, 29, Spannable.SPAN_EXCLUSIVE_INCLUSIVE);//SpannableString对象设置给TextViewmyTextView.setText(sp);//设置TextView可点击myTextView.setMovementMethod(LinkMovementMethod.getInstance());[/code]textview显示不同的颜色、样式来表示，需要用到SpannableString对象来处理下面是从网上找的一段代码，已验证过：[code lang=”java”]mTextView = (TextView)findViewById(R.id.test);SpannableString tSS = new SpannableString(“SpannableString学习中”);tSS.setSpan(new BackgroundColorSpan(Color.RED), 0, 2, Spannable.SPAN_EXCLUSIVE_EXCLUSIVE); //红色高亮tSS.setSpan(new UnderlineSpan(), 15, 18,Spannable.SPAN_EXCLUSIVE_EXCLUSIVE); //下划线tSS.setSpan(new StyleSpan(android.graphics.Typeface.BOLD_ITALIC), 2, 5, Spannable.SPAN_EXCLUSIVE_EXCLUSIVE); //斜体mTextView.setText(tSS);[/code]关键方法：[code lang=”java”]public void setSpan (Object what, int start, int end, int flags)[/code]主要是start跟endstart是起始位置,无论中英文，都算一个。从0开始计算起。end是结束位置，所以处理的文字，包含开始位置，但不包含结束位置。 下面解决点击不同文字跳转到不同activity的问题：直接贴代码：[code lang=”java”]import android.app.Activity;import android.os.Bundle;import android.text.SpannableString;import android.text.Spanned;import android.text.method.LinkMovementMethod;import android.text.style.ClickableSpan;import android.view.View;import android.view.View.OnClickListener;import android.widget.LinearLayout;import android.widget.TextView;import android.widget.Toast;public class TextViewJump2Activity extends Activity {/* Called when the activity is first created. /private TextView mClickableText;@Overridepublic void onCreate(Bundle savedInstanceState) {super.onCreate(savedInstanceState);LinearLayout layout = new LinearLayout(this);mClickableText = new TextView(this);mClickableText.setClickable(true);mClickableText.setTextSize(20); layout.addView(mClickableText);setContentView(layout);mClickableText.setText(getClickableSpan());mClickableText.setMovementMethod(LinkMovementMethod.getInstance());}private SpannableString getClickableSpan() {View.OnClickListener l = new View.OnClickListener() {//如下定义自己的动作public void onClick(View v) {Toast.makeText(TextViewJump2Activity.this, &quot;Click Success&quot;, Toast.LENGTH_SHORT).show();//在这里就可以做跳转到activity或者弹出对话框的操作了}};SpannableString spanableInfo = new SpannableString(&quot;This is a test, Click Here!&quot;);int start = 16;int end = spanableInfo.length();spanableInfo.setSpan(new Clickable(l), start, end,Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);return spanableInfo;}}class Clickable extends ClickableSpan implements OnClickListener {private final View.OnClickListener mListener;public Clickable(View.OnClickListener l) {mListener = l;}@Overridepublic void onClick(View v) {mListener.onClick(v);}}[/code]转自：http://blog.csdn.net/rockcoding/article/details/7231756","categories":[{"name":"android开发","slug":"android","permalink":"http://test.quanke.name/categories/android/"}],"tags":[],"keywords":[{"name":"android开发","slug":"android","permalink":"http://test.quanke.name/categories/android/"}]},{"title":"RelativeLayout的基本属性用法以及代码实现","slug":"relativelayout","date":"2012-11-04T19:13:31.000Z","updated":"2018-01-29T07:18:46.533Z","comments":true,"path":"posts/50246/","link":"","permalink":"http://test.quanke.name/posts/50246/","excerpt":"","text":"RelativeLayout，顾名思义，就是以“相对”位置/对齐 为基础的布局方式。android.widget.RelativeLayout 有个 继承自android.view.ViewGroup.LayoutParams 的内嵌类 LayoutParams，使用这个类的实例调用 RelativeLayout.addView 就可以实现“相对布局”。他比LinearLyout更灵活的为控件布置位置. 在新版本中属性的设置可能有变化，具体请看官方api RelativeLayout 的属性：// 相对于给定ID控件 android:layout_above 将该控件的底部置于给定ID的控件之上; android:layout_below 将该控件的底部置于给定ID的控件之下; android:layout_toLeftOf 将该控件的右边缘与给定ID的控件左边缘对齐; android:layout_toRightOf 将该控件的左边缘与给定ID的控件右边缘对齐; android:layout_alignBaseline 将该控件的baseline与给定ID的baseline对齐; android:layout_alignTop 将该控件的顶部边缘与给定ID的顶部边缘对齐; android:layout_alignBottom 将该控件的底部边缘与给定ID的底部边缘对齐; android:layout_alignLeft 将该控件的左边缘与给定ID的左边缘对齐; android:layout_alignRight 将该控件的右边缘与给定ID的右边缘对齐; // 相对于父组件 android:layout_alignParentTop 如果为true,将该控件的顶部与其父控件的顶部对齐; android:layout_alignParentBottom 如果为true,将该控件的底部与其父控件的底部对齐; android:layout_alignParentLeft 如果为true,将该控件的左部与其父控件的左部对齐; android:layout_alignParentRight 如果为true,将该控件的右部与其父控件的右部对齐; // 居中 android:layout_centerHorizontal 如果为true,将该控件的置于水平居中; android:layout_centerVertical 如果为true,将该控件的置于垂直居中; android:layout_centerInParent 如果为true,将该控件的置于父控件的中央; // 指定移动像素 android:layout_marginTop 上偏移的值; android:layout_marginBottom 下偏移的值; android:layout_marginLeft 左偏移的值; android:layout_marginRight 右偏移的值; example: android:layout_below = “@id/*“ android:layout_alignBaseline = “@id/*“ android:layout_alignParentTop = true android:layout_marginLeft = “10px” 以下是代码中的用法： [code lang=”java”]import android.app.Activity;import android.os.Bundle;import android.widget.;import android.view.; public class RLTest extends Activity { private RelativeLayout rl; private Button btn1; private Button btn2; private Button btn3; private Button btn4; private static final int ID_BTN1 = 1; private static final int ID_BTN2 = 2; private static final int ID_BTN3 = 3; private static final int ID_BTN4 = 4; /** Called when the activity is first created. */ @Override public void onCreate(Bundle icicle) { super.onCreate(icicle); rl = new RelativeLayout(this); btn1 = new Button(this); btn1.setText(&amp;quot;----------------------&amp;quot;); btn1.setId(ID_BTN1); RelativeLayout.LayoutParams lp1 = new RelativeLayout.LayoutParams(ViewGroup.LayoutParams.WRAP_CONTENT, ViewGroup.LayoutParams.WRAP_CONTENT); lp1.addRule(RelativeLayout.ALIGN_WITH_PARENT_TOP); lp1.addRule(RelativeLayout.CENTER_HORIZONTAL, RelativeLayout.TRUE); // btn1 位于父 View 的顶部，在父 View 中水平居中 rl.addView(btn1, lp1 ); btn2 = new Button(this); btn2.setText(&amp;quot;|\\n|\\n|\\n|\\n|\\n|&amp;quot;); btn2.setId(ID_BTN2); RelativeLayout.LayoutParams lp2 = new RelativeLayout.LayoutParams(ViewGroup.LayoutParams.WRAP_CONTENT, ViewGroup.LayoutParams.WRAP_CONTENT); lp2.addRule(RelativeLayout.POSITION_BELOW, ID_BTN1); lp2.addRule(RelativeLayout.ALIGN_LEFT, ID_BTN1); // btn2 位于 btn1 的下方、其左边和 btn1 的左边对齐 rl.addView(btn2, lp2); btn3 = new Button(this); btn3.setText(&amp;quot;|\\n|\\n|\\n|\\n|\\n|&amp;quot;); btn3.setId(ID_BTN3); RelativeLayout.LayoutParams lp3 = new RelativeLayout.LayoutParams(ViewGroup.LayoutParams.WRAP_CONTENT, ViewGroup.LayoutParams.WRAP_CONTENT); lp3.addRule(RelativeLayout.POSITION_BELOW, ID_BTN1); lp3.addRule(RelativeLayout.POSITION_TO_RIGHT, ID_BTN2); lp3.addRule(RelativeLayout.ALIGN_RIGHT, ID_BTN1); // btn3 位于 btn1 的下方、btn2 的右方且其右边和 btn1 的右边对齐（要扩充） rl.addView(btn3,lp3); btn4 = new Button(this); btn4.setText(&amp;quot;--------------------------------------------&amp;quot;); btn4.setId(ID_BTN4); RelativeLayout.LayoutParams lp4 = new RelativeLayout.LayoutParams(ViewGroup.LayoutParams.WRAP_CONTENT, ViewGroup.LayoutParams.WRAP_CONTENT); lp4.addRule(RelativeLayout.POSITION_BELOW, ID_BTN2); lp4.addRule(RelativeLayout.CENTER_HORIZONTAL, RelativeLayout.TRUE); // btn4 位于 btn2 的下方，在父 Veiw 中水平居中 rl.addView(btn4,lp4); setContentView(rl); } }[/code]","categories":[{"name":"android开发","slug":"android","permalink":"http://test.quanke.name/categories/android/"}],"tags":[],"keywords":[{"name":"android开发","slug":"android","permalink":"http://test.quanke.name/categories/android/"}]},{"title":"Android下基于XML的Graphics （转）","slug":"android/android-xml-graphics","date":"2012-11-04T19:01:07.000Z","updated":"2018-01-29T07:18:46.596Z","comments":true,"path":"posts/18810/","link":"","permalink":"http://test.quanke.name/posts/18810/","excerpt":"","text":"原文地址：http://qq361119908.iteye.com/blog/656281 以前作图一般有两种方式：1、UI把图形设计好我们直接贴。2对于那些简单的图形，如矩形、扇形这样的图形，一般的系统的API会提供这样的接口。但是在Android下，有第三种画图方式，介于二者之间，结合二者的长处。如下的代码：这是一个Progress的style里面的代码，描述的是进度条的未达到的图形。原本以为这是一个图片，后来仔细的跟踪代码，发现居然是xml。像这种shape corners gradient等等这还是第一次碰到。shape 表示是一个图形，corners表示是有半径为5像素的圆角，gradient表示一个渐变。这样作图简单明了，并且可以做出要求很好的图形，并且节省资源。属性 android:shape=”rectangle” 表示 默认的是长方形。 gradient 产生颜色渐变 ,属性 android:angle 表示从哪个角度开始变，貌似只有90的整数倍可以 。 #ff4100ff蓝色 #ff4100ff绿色 &lt;solid android:color=&quot;#ff4100ff&quot;/&gt;实心的 填充里面 &lt;stroke 描边，采用那样的方式将外形轮廓线画出来 android:dashWidth=&quot;3dp&quot; android:dashGap=&quot;2dp&quot; 默认值为0 android:width=&quot;2dp&quot; android:color=&quot;#FF00ff00&quot; 笔的粗细， android:dashWidth=&quot;5dp&quot; android:dashGap=&quot;5dp&quot; 实现“- - -”这样的效果。 dashWidth指的是一条小横线的宽度 android:dashGap 指的是小横线与小横线的间距。","categories":[{"name":"android开发","slug":"android","permalink":"http://test.quanke.name/categories/android/"}],"tags":[],"keywords":[{"name":"android开发","slug":"android","permalink":"http://test.quanke.name/categories/android/"}]},{"title":"[转]WebP格式图片的新功能","slug":"e8-bd-acwebp-e6-a0-bc-e5-bc-8f-e5-9b-be-e7-89-87-e7-9a-84-e6-96-b0-e5-8a-9f-e8-83-bd","date":"2012-11-03T19:30:43.000Z","updated":"2018-01-29T07:18:46.514Z","comments":true,"path":"posts/13961/","link":"","permalink":"http://test.quanke.name/posts/13961/","excerpt":"","text":"自从我们宣布WebP格式图片后，我们一直在努力提高和增强WebP。今天，我们很高兴分享一些关于WebP的新的功能和扩展。 新功能 WebP的压缩算法有了显著的提高，同时完全保持了与以前版本的兼容。在解码方面，亦有所增强。 新的解码方式，可以逐步从网络上下载图片到您的计算机中，这一特性在Chrome 12以上的浏览器中得到应用，用户不必等待下载整个图片。 在编码方面，我们更加注重压缩图片的细节。对于其中的每一个环节，我们调整压缩和过滤图片的不同部分，重新分配，以达到最好的效果。WebP现在能够保留图像的原始许多细节。 更多支持 Chrome浏览器和Opera浏览器现在原生支持WebP图片。Gmail和Picasa网络相册也可以分享、发送和接收WebP图片。WebP格式图片已经应用于Google搜索结果的即时预览功能中，这样可以增加用户访问的速度。 如果你想使用或编辑WebP图片，你可以使用Pixelmator，ImageMagick软件，或Photoshop专门针对WebP的开发插件和Java VP8的解码器。在开源社区，Mac用户可使用MacPorts Mac OS X的软件包，Linux用户可使用Debian，或openSUSE和Gentoo的包，Apache HTTP服务器包亦可使用。Windows用户，可以下载WebP编解码器。在微软Office 2010，Windows媒体中心和照片编辑等软件中，将会支持解码WebP。 好了。这些新功能让你我感到非常的兴奋，一如既往的，谢谢你们的反馈和对开源社区的源码贡献。 via Chromium官方博客 转载文章请注明：文章转载自：Chrome迷 (http://www.chromi.org)本文标题：WebP格式图片的新功能本文地址：http://www.chromi.org/archives/11920","categories":[{"name":"随笔","slug":"essay","permalink":"http://test.quanke.name/categories/essay/"}],"tags":[],"keywords":[{"name":"随笔","slug":"essay","permalink":"http://test.quanke.name/categories/essay/"}]},{"title":"android ListView 布局属性","slug":"android/android-listview-e5-b8-83-e5-b1-80-e5-b1-9e-e6-80-a7","date":"2012-11-03T00:19:39.000Z","updated":"2018-01-29T07:18:46.590Z","comments":true,"path":"posts/20159/","link":"","permalink":"http://test.quanke.name/posts/20159/","excerpt":"","text":"去除listview缓存颜色，当然也可以改缓存颜色，此时将缓存色设成透明的 （设置滑动时生成的item底色为透明，以此来显示父控件的背景）: listview.setCacheColorHint(0); 或者， android:cacheColorHint=”#00000000” 去除view与view之间的阴影在xml中配置: android:fadingEdge=”none” 去除listview边界线，null可以设成其他drawable中的资源可以设置间隔线样式: listview.setDivider(null); 设置ListView中Item被选中（聚焦）时的底色: android:listSelector=”@android:color/transparent” 去除ListView滑动时的滚动条: android:scrollbars=”none” 其他ListView相关设置： android:scrollbarThumbHorizontal=”” //滚动轴游标 android:scrollbarTrackVertical=”” //滚动轴背景、 对应分辨率 120dpi对象ldpi，160dpi对应mdpi，240dpi对应hdpi","categories":[{"name":"android开发","slug":"android","permalink":"http://test.quanke.name/categories/android/"}],"tags":[],"keywords":[{"name":"android开发","slug":"android","permalink":"http://test.quanke.name/categories/android/"}]},{"title":"编译Android出错：Unable to execute dex: Java heap space ","slug":"e7-bc-96-e8-af-91android-e5-87-ba-e9-94-99-ef-bc-9aunable-to-execute-dex-java-heap-space","date":"2012-11-02T22:15:16.000Z","updated":"2018-01-29T07:18:46.468Z","comments":true,"path":"posts/49391/","link":"","permalink":"http://test.quanke.name/posts/49391/","excerpt":"","text":"昨天在编译运行(Run As Android Application)同事写的应用(移植)时，提示Unable to execute dex: Java heap space，刚开始以为是Android SDK没装好，于是我写了个Hello Android程序来验证，Hello Android可以运行。 于是，我Google了一下，据说是因为升级了ADT缘故(好像是Android小组的回复)，将最新的ADT换回之前的，或者使用Android小组(?)说的Fix了的版本就可以了(这一点我没有试验)。 其实，继续使用ADT14也是可以的，这需要修改Eclipse的配置文件，也就是网上很多人说的那样，修改Eclipse安装目录下eclipse.ini文件: 1)在文件开头添加 -vmD:\\Program Files\\Java\\jre6\\bin\\javaw.exe 其中，D:\\Program Files\\Java\\jre6是本人机器上JRE的路径，需要根据实际情况修改 2)搜索–launcher.XXMaxPermSize，将其下一行的 256m 改为 512m 其中，红色标出的部分可能不同的Eclipse版本，数字(256)不同。 3)搜索-vmargs -vmargs-Xms40m-Xmx384m 将 -Xms40m-Xmx384m 改为 -Xms512m-Xmx1024m 并在其后加上 -XX:MaxPermSize=256m 同上，可能不同版本的Eclipse，红色标出的部分，数字(40和384)会不同。 然后重启Eclipse，编译出错的工程即可。 出处：http://blog.sina.com.cn/s/blog_69b1501d01013b00.html","categories":[{"name":"android开发","slug":"android","permalink":"http://test.quanke.name/categories/android/"}],"tags":[],"keywords":[{"name":"android开发","slug":"android","permalink":"http://test.quanke.name/categories/android/"}]},{"title":"Android View如何获取焦点","slug":"android/android-view-e5-a6-82-e4-bd-95-e8-8e-b7-e5-8f-96-e7-84-a6-e7-82-b9","date":"2012-11-02T20:32:54.000Z","updated":"2018-01-29T07:18:46.597Z","comments":true,"path":"posts/53237/","link":"","permalink":"http://test.quanke.name/posts/53237/","excerpt":"","text":"Android新启动Activity，dialog或者其他窗体中中包含EditText， 新启动的activity的焦点默认在EditText上，这是android系统会弹出软键盘，挤压activity本来的界面，影响美观。 因此最好在新窗体创建时，最好在onCreate()方法中将焦点放在另一个view上. view使用requestFocus()焦点，但是如果让button或者textView之类控件直接使用requestFocus()方法，则无法获取焦点，焦点会依然在editText上。 只能在使用View的requestFocus()方法之前调用下面2个方法，view才可获取焦点: [code lang=”java”] view.setFocusable(true); view.setFocusableInTouchMode(true); [/code] 然后调用 requestFocus()即可获取焦点。","categories":[{"name":"android开发","slug":"android","permalink":"http://test.quanke.name/categories/android/"}],"tags":[],"keywords":[{"name":"android开发","slug":"android","permalink":"http://test.quanke.name/categories/android/"}]},{"title":"android编程中设置文本的中文字体","slug":"android/android-e7-bc-96-e7-a8-8b-e4-b8-ad-e8-ae-be-e7-bd-ae-e6-96-87-e6-9c-ac-e7-9a-84-e4-b8-ad-e6-96-87-e5-ad-97-e4-bd-93","date":"2012-11-02T17:25:18.000Z","updated":"2018-01-29T07:18:46.582Z","comments":true,"path":"posts/48895/","link":"","permalink":"http://test.quanke.name/posts/48895/","excerpt":"","text":"请将ttf字体文件放入sdcard的文件夹中（放到程序里面也可以，这是只是演示） [code lang=”java”]text1.setTypeface(Typeface.createFromFile(&quot;/mnt/sdcard/font/SIMLI.ttf&quot;)); [/code] 效果如下图","categories":[{"name":"android开发","slug":"android","permalink":"http://test.quanke.name/categories/android/"}],"tags":[],"keywords":[{"name":"android开发","slug":"android","permalink":"http://test.quanke.name/categories/android/"}]},{"title":"Android歌词秀设计思路（1）SafetyTimer","slug":"android/android-e6-ad-8c-e8-af-8d-e7-a7-80-e8-ae-be-e8-ae-a1-e6-80-9d-e8-b7-af-ef-bc-881-ef-bc-89safetytimer","date":"2012-11-01T22:17:42.000Z","updated":"2018-01-29T07:18:46.584Z","comments":true,"path":"posts/40606/","link":"","permalink":"http://test.quanke.name/posts/40606/","excerpt":"","text":"原创作品，允许转载，转载时请务必以超链接形式标明文章 原始出处 、作者信息和本声明。否则将追究法律责任。http://craftsman1970.blog.51cto.com/3522772/659906","categories":[{"name":"android开发","slug":"android","permalink":"http://test.quanke.name/categories/android/"}],"tags":[],"keywords":[{"name":"android开发","slug":"android","permalink":"http://test.quanke.name/categories/android/"}]},{"title":"iOS开发者论坛-iPhone开发，iPad开发，iOS开发交流，iOS代码实例，应用分享，业界新闻！","slug":"ios-e5-bc-80-e5-8f-91-e8-80-85-e8-ae-ba-e5-9d-9b-iphone-e5-bc-80-e5-8f-91-ef-bc-8cipad-e5-bc-80-e5-8f-91-ef-bc-8cios-e5-bc-80-e5-8f-91-e4-ba-a4-e6-b5-81-ef-bc-8cios-e4-bb-a3-e7-a0-81-e5-ae-9e-e4-be-8b","date":"2012-10-30T00:05:53.000Z","updated":"2018-01-29T07:18:46.568Z","comments":true,"path":"posts/23519/","link":"","permalink":"http://test.quanke.name/posts/23519/","excerpt":"","text":"iOS开发者社区致力于打造iPhone开发 / iPad开发社区，希望更多的开发者能找到交流的地方，在这里能找到很多代码实例，项目案例，开发书籍，教程以及视频教程等内容，保证让开发者能找到想要的东西！ www.codeios.com","categories":[{"name":"ios开发","slug":"ios","permalink":"http://test.quanke.name/categories/ios/"}],"tags":[],"keywords":[{"name":"ios开发","slug":"ios","permalink":"http://test.quanke.name/categories/ios/"}]},{"title":"xCode 4.X 免证书真机发布及调试","slug":"xcode-4-x-e5-85-8d-e8-af-81-e4-b9-a6-e7-9c-9f-e6-9c-ba-e5-8f-91-e5-b8-83-e5-8f-8a-e8-b0-83-e8-af-95","date":"2012-10-30T00:04:04.000Z","updated":"2018-01-29T07:18:46.555Z","comments":true,"path":"posts/935/","link":"","permalink":"http://test.quanke.name/posts/935/","excerpt":"","text":"由于没有购买苹果的开发者证书，所以目前大多数开发环境都是使用以下的方式实现开发与真机测试（本文部分摘自网络） 【2012年3月15日更新】：目前我使用的是Xcode4.3.1 mac os 10.7.3 最简单的办法就是让xcode不检查签名，直接编译发布。 1、 修改SDKSettings.plist文件：进入SDK目录：xcode4.3版本以前是：/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS4.3（可能是5.0/4.2等）.sdk/xcode4.3及以上版本的目录是：/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS5.1.sdk 打开该目录下的SDKSettings.plist文件，把其中所有的包含REQUIRED的项的值改成NO（在实际就是有2项值需要修改：CODE_SIGNING_REQUIRED和ENTITLEMENTS_REQUIRED）。 2、工程的配置修改：对每个工程进行修改，把所有的Code Signing Identity 全部改为 Don’t Code Sign &nbsp; &nbsp; 旧的方法可以参考： &nbsp; 使用环境：越狱过的iPhone 机器 Mac OS 10.6.8 xCode 4.0.1 及Xcode4.0.2 &nbsp; &nbsp; 操作步骤过程： （一）制作证书 1、 打开 Finder－&gt;应用程序－&gt;实用工具 -&gt; 钥匙串访问 2、单击：”钥匙串访问”选择 “证书” 再选择”创建证书”过程如下图： 3、证书名称必须填写为：”iPhone Developer” ，（不能随便填写）然后点击”创建”。(如图） (二)修改xcode配置文件 注意：由于这些配置文件是系统文件，修改系统文件需要管理员权限才可以进行操作，所以保存的时候不能直接保存，会遇到系统提示”你没有修改此文件得权限”，但可以保存一个副本。可以先修改这个副本，然后再复制到原先的目录，系统会提示你是否修改替换，选择”替换”，这时候是需要管理员密码才可以覆盖原来的文件，输入密码后，修改完成。 1.修改SDKsettings.plist文件。 找到 “ /Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS4.3.sdk “下得 SDKSettings.plist 文件，修改”Default Properties “项下面得 “CODE_SIGNING_REQUIRED “得值为：NO。 2.修改”/Developer/Platforms/iPhoneOS.platform/Info.plist”文件（用文本编辑器或者Xcode打开）： 增加两项： PROVISIONING_PROFILE_ALLOWED = NO PROVISIONING_PROFILE_REQUIRED = NO 效果如下图所示： 然后将所有”XCiPhoneOSCodeSignContext”替换为”XCCodeSignContext”。 3.修改好配置文件后重启xcode，修改项目的属性 1）点击 项目图标，找到”Build Settings” 找到 “Code Sign Identity” 按照下面得方式设置一下就可以 了。 2） 设置工程属性： 3）然后点击 “Run” 我们会看到工程正在编译，然后弹出如图提示（两次）：我们选择 “总是允许” 4）在项目中添加一个Entitlement.plist文件，设置允许调试。 注：若不操作该步可能连接真机调试的时候还会出现一个错误：Error launching remote program: failed to get the task for process xxx 操作步骤：在Xcode4.X 中这样做： a.在工程中按照这个执行创建一个名为：Entitlement.plist 文件In the File Menu, select New File -&gt; iPhone OS -&gt; Code Signing -&gt; Entitlements. Name the file “Entitlements.plist” and click ‘Finish’. b.打开 这个 “Entitlement.plist”文件，将 “Can be debugged”属性值改为 “YES”。 c.将Code Signing Entitlements 那项得值改为刚刚新建得”Entitlements.plist”. 4。提示选择完后：可以看到 我们就可以看到 程序可以出现在 你得iphone上了。 当你运行程序时，可以通过 organizer 看到你得iphone 运行时打印出来得Log。","categories":[{"name":"ios开发","slug":"ios","permalink":"http://test.quanke.name/categories/ios/"}],"tags":[],"keywords":[{"name":"ios开发","slug":"ios","permalink":"http://test.quanke.name/categories/ios/"}]},{"title":"自由梦","slug":"e8-87-aa-e7-94-b1-e6-a2-a6","date":"2012-10-29T22:44:57.000Z","updated":"2018-01-29T07:18:46.470Z","comments":true,"path":"posts/21492/","link":"","permalink":"http://test.quanke.name/posts/21492/","excerpt":"","text":"夜的微光里有着无限的迷茫 萤火虫在黑暗里漫无目的的舞动着 即使恶魔也无法掩饰 那来自自己眼中的两束绿光 绝望的人们感到了暗夜里滋生着希望 封存的太久了 光明将厚厚的壁障膨胀 纵然是铁壁铜墙 那供魔鬼进出的门也会在开合时 仍然有光亮的泄出 整个世界颠倒了 在恐惧颤栗中 人们忍受着寒冷、寂寞、惊悚 时刻让神经紧张着 肉体上的痛苦是不安情绪的释放 精神上的折磨如同在炼狱中生活 内心的阴冷让更多的人 化作了为虎作伥的厉鬼 他们比魔鬼更让人刻骨铭心的恐惧 魔鬼锁起了光明 光明带走了自由 恶魔们活动在阳光下 体面的装扮让他们看上去更象人类 道貌岸然里过着人一样的生活 它们时刻担心着光明的泄露 睡觉时都睁着一只圆眼 他们害怕所有的人 更让他们害怕的是来自同类中的枭雄 只有魔鬼才可以轻意的制服魔鬼 活着的钟馗让鬼们害怕 死去的钟馗才是鬼们真正的克星 觉醒的过程需要经历一段漫长的艰辛 摸索着前进会有更多的鲜血 将这牢狱般的生活浸泡 房顶不破 墙壁不坏 鲜血也会让这牢狱的地面下沉 最后将这黑暗之屋葬送 殉难者中挺起的是 一个个追寻着光明脖颈 那些来自魔鬼阵营中的魔鬼们的鲜血 与抗争者们是一样的殷红 也是同样汇成浸塌这屋子的一份力量 没有不倒塌的房子 只有倒塌了再重建起来 灾难中的人们在麻木中缓慢地觉醒着 当光明降临时的喜悦还没有平静 新的房子又在人们的诧异中重新建了起来 不要相信别人会给你带来什么 号召你起来推翻魔鬼的 更多的时候也是魔鬼 魔鬼和基督的区别就是 基督把自己送上了祭坛 而魔鬼是鼓惑别人为他上祭坛 善良的人们啊 总是被利用 光明迟迟地难以等到 总是在一出现就被遮盖 人们生活在被欺骗中 沉默中不再相信任何的许诺 冷眼注视着一出出闹剧的表演 华丽中无法掩饰丑陋与拙劣 等待着技穷之后将骷髅现出 无声的抗议将深藏着的愤怒堆积 暴发时化作震动天地的怒吼 在这声音里 无论这黑屋是如何的坚固 爆碎声中还世界一个朗朗乾坤 光明会将自由带来 世界因魔鬼再无法变回魔鬼 迎来期盼已久的梦想 长久的等待 长久的等待 等来的是真实的自由","categories":[{"name":"随笔","slug":"essay","permalink":"http://test.quanke.name/categories/essay/"}],"tags":[],"keywords":[{"name":"随笔","slug":"essay","permalink":"http://test.quanke.name/categories/essay/"}]},{"title":"认识HTML5的WebSocket ","slug":"e8-ae-a4-e8-af-86html5-e7-9a-84websocket","date":"2012-10-29T21:50:00.000Z","updated":"2018-01-29T07:18:46.471Z","comments":true,"path":"posts/39609/","link":"","permalink":"http://test.quanke.name/posts/39609/","excerpt":"","text":"在HTML5规范中，我最喜欢的Web技术就是正迅速变得流行的WebSocket API。WebSocket提供了一个受欢迎的技术，以替代我们过去几年一直在用的Ajax技术。这个新的API提供了一个方法，从客户端使用简单的语法有效地推动消息到服务器。让我们看一看HTML5的WebSocket API：它可用于客户端、服务器端。而且有一个优秀的第三方API，名为Socket.IO。 一、什么是WebSocket API? WebSocket API是下一代客户端-服务器的异步通信方法。该通信取代了单个的TCP套接字，使用ws或wss协议，可用于任意的客户端和服务器程序。WebSocket目前由W3C进行标准化。WebSocket已经受到Firefox 4、Chrome 4、Opera 10.70以及Safari 5等浏览器的支持。 WebSocket API最伟大之处在于服务器和客户端可以在给定的时间范围内的任意时刻，相互推送信息。WebSocket并不限于以Ajax(或XHR)方式通信，因为Ajax技术需要客户端发起请求，而WebSocket服务器和客户端可以彼此相互推送信息；XHR受到域的限制，而WebSocket允许跨域通信。 Ajax技术很聪明的一点是没有设计要使用的方式。WebSocket为指定目标创建，用于双向推送消息。 二、WebSocket API的用法 只专注于客户端的API，因为每个服务器端语言有自己的API。下面的代码片段是打开一个连接，为连接创建事件监听器，断开连接，消息时间，发送消息返回到服务器，关闭连接。 [Copy to clipboard] [ - ] CODE: // 创建一个Socket实例 var socket = new WebSocket(‘ws://localhost:8080’); // 打开Socket socket.onopen = function(event) { // 发送一个初始化消息 socket.send(‘I am the client and I\\’m listening!’); // 监听消息 socket.onmessage = function(event) { console.log(‘Client received a message’,event); }; // 监听Socket的关闭 socket.onclose = function(event) { console.log(‘Client notified socket has closed’,event); }; // 关闭Socket…. //socket.close() }; 让我们来看看上面的初始化片段。参数为URL，ws表示WebSocket协议。onopen、onclose和onmessage方法把事件连接到Socket实例上。每个方法都提供了一个事件，以表示Socket的状态。 onmessage事件提供了一个data属性，它可以包含消息的Body部分。消息的Body部分必须是一个字符串，可以进行序列化/反序列化操作，以便传递更多的数据。 WebSocket的语法非常简单，使用WebSockets是难以置信的容易……除非客户端不支持WebSocket。IE浏览器目前不支持WebSocket通信。如果你的客户端不支持WebSocket通信，下面有几个后备方案供你使用： Flash技术 —— Flash可以提供一个简单的替换。 使用Flash最明显的缺点是并非所有客户端都安装了Flash，而且某些客户端，如iPhone/iPad，不支持Flash。 AJAX Long-Polling技术 —— 用AJAX的long-polling来模拟WebSocket在业界已经有一段时间了。它是一个可行的技术，但它不能优化发送的信息。也就是说，它是一个解决方案，但不是最佳的技术方案。 由于目前的IE等浏览器不支持WebSocket，要提供WebSocket的事件处理、返回传输、在服务器端使用一个统一的API，那么该怎么办呢？幸运的是，Guillermo Rauch创建了一个Socket.IO技术。 三、带Socket.IO的WebSocket Socket.IO是Guillermo Rauch创建的WebSocket API，Guillermo Rauch是LearnBoost公司的首席技术官以及LearnBoost实验室的首席科学家。Socket.IO使用检测功能来判断是否建立WebSocket连接，或者是AJAX long-polling连接，或Flash等。可快速创建实时的应用程序。Socket.IO还提供了一个NodeJS API，它看起来非常像客户端API。 建立客户端Socket.IO Socket.IO可以从GitHub下载，可以把socket.io.js文件包含到页面中： [Copy to clipboard] [ - ] CODE: [/code 此时，Socket.IO在此页面上是有效的，是时候创建Socket了： [code][/code] // 创建Socket.IO实例，建立连接 var socket= new io.Socket(‘localhost’,{ port: 8080 }); socket.connect(); // 添加一个连接监听器 socket.on(‘connect’,function() { console.log(‘Client has connected to the server!’); }); // 添加一个连接监听器 socket.on(‘message’,function(data) { console.log(‘Received a message from the server!’,data); }); // 添加一个关闭连接的监听器 socket.on(‘disconnect’,function() { console.log(‘The client has disconnected!’); }); // 通过Socket发送一条消息到服务器 function sendMessageToServer(message) { socket.send(message); } Socket.IO简化了WebSocket API，统一了返回运输的API。传输包括： WebSocket Flash Socket AJAX long-polling AJAX multipart streaming IFrame JSONP polling 你还可以设置任意的Socket.IO构造器的第二个选项，选项包括： port - 待连接的端口 transports - 一个数组，包含不同的传输类型 transportOptions - 传输的参数使用的对象，带附加属性 Socket.IO还提供了由本地WebSocket API提供的普通连接、断开连接、消息事件。Socket还提供了封装每个事件类型的方法。 四、NodeJS和Socket.IO联合开发 Socket.IO提供的服务器端解决方案，允许统一的客户端和服务器端的API。使用Node，你可以创建一个典型的HTTP服务器，然后把服务器的实例传递到Socket.IO。从这里，你创建连接、断开连接、建立消息监听器，跟在客户端一样。 一个简单的服务器端脚本看起来如下： [Copy to clipboard] [ - ] CODE: // 需要HTTP 模块来启动服务器和Socket.IO var http= require(‘http’), io= require(‘socket.io’); // 在8080端口启动服务器 var server= http.createServer(function(req, res){ // 发送HTML的headers和message res.writeHead(200,{ ‘Content-Type’: ‘text/html’ }); res.end(‘ Hello Socket Lover!‘); }); server.listen(8080); // 创建一个Socket.IO实例，把它传递给服务器 var socket= io.listen(server); // 添加一个连接监听器 socket.on(‘connection’, function(client){ // 成功！现在开始监听接收到的消息 client.on(‘message’,function(event){ console.log(‘Received message from client!’,event); }); client.on(‘disconnect’,function(){ clearInterval(interval); console.log(‘Server has disconnected’); }); }); 你可以运行服务器部分，假定已安装了NodeJS，从命令行执行： [Copy to clipboard] [ - ] CODE: node socket-server.js 现在客户端和服务器都能来回推送消息了！在NodeJS脚本内，可以使用简单的JavaScript创建一个定期消息发送器： [Copy to clipboard] [ - ] CODE: // 创建一个定期（每5秒）发送消息到客户端的发送器 var interval= setInterval(function() { client.send(‘This is a message from the server! ‘ + new Date().getTime()); },5000); 服务器端将会每5秒推送消息到客户端！ 五、dojox.Socket和Socket.IO Persevere的创建者Kris Zyp创建了dojox.Socket。dojox.Socket以Dojo库一致的方式封装了WebSocket API，用于在客户端不支持WebSocket时，使用long-polling替代。 下面是怎样在客户端使用dojox.Socket和在服务器端使用Socket.IO的例子： [Copy to clipboard] [ - ] CODE: var args, ws= typeof WebSocket!= ‘undefined’; var socket= dojox.socket(args= { url: ws? ‘/socket.io/websocket’ : ‘/socket.io/xhr-polling’, headers:{ ‘Content-Type’:’application/x-www-urlencoded’ }, transport: function(args, message){ args.content = message; // use URL-encoding to send the message instead of a raw body dojo.xhrPost(args); }; }); var sessionId; socket.on(‘message’, function(){ if (!sessionId){ sessionId= message; args.url += ‘/‘ + sessionId; }else if(message.substr(0, 3) == ‘~h~’){ // a heartbeat } }); dojox.socket.Reconnect还创建了在套接字失去连接时自动重连。期待包含dojox.Socket的Dojo 1.6版本早日发布。 六、实际应用和WebSocket资源 有很多WebSocke的实际应用。WebSocket对于大多数客户机-服务器的异步通信是理想的，在浏览器内聊天是最突出的应用。WebSocket由于其高效率，被大多数公司所使用。 WebSocket资源 Socket.IO站点：http://socket.io/ WebSocket的Wikipedia：http://en.wikipedia.org/wiki/WebSockets WebSockets.org站点：http://www.websockets.org/ Dojo WebSocket站点：http://www.sitepen.com/blog/2010/10/31/dojo-websocket/","categories":[{"name":"服务端开发","slug":"service","permalink":"http://test.quanke.name/categories/service/"}],"tags":[],"keywords":[{"name":"服务端开发","slug":"service","permalink":"http://test.quanke.name/categories/service/"}]},{"title":"[转]程序猿 技术不是你的全部","slug":"e8-bd-ac-e7-a8-8b-e5-ba-8f-e7-8c-bf-e6-8a-80-e6-9c-af-e4-b8-8d-e6-98-af-e4-bd-a0-e7-9a-84-e5-85-a8-e9-83-a8","date":"2012-10-29T00:14:23.000Z","updated":"2018-01-29T07:18:46.500Z","comments":true,"path":"posts/3448/","link":"","permalink":"http://test.quanke.name/posts/3448/","excerpt":"","text":"在学校的时候，曾一度的迷恋技术，认为掌握了技术后就非常牛X，可以到外面做些项目，从中获取一些报酬，自己更是乐此不疲。并且认为看了很多的技术书籍，学了很多的语言，看了许多牛X技术的底层原理，就自认为自己在这方面是专家权威，高智商的人。当然，可能你希望大家叫你大神、大牛、精英、前辈，自己的虚荣心都得到了小小的满足。 千万不要认为技术牛X了就可以从屌丝变身高富帅，不懂技术的人没有前途 总所周知，程序猿是一个高薪的职业。但是，只有你真正的进入这个行业你才清楚，这个看上去还不错的薪水，你却付出了超过薪水价值的代价。创业型与游戏型公司里面的项目小组一般是5~10个人，因为他们需要快速的开发以应对多变的市场波动，所以程序猿的每天工作时长都在12小时以上，身体和精神收到摧残不说。作为程序猿的你很少有时间去陪陪自己的家人、自己的女友。除了自己工作和技术上的朋友，很少有时间去拓宽自己的朋友圈。久而久之，很多程序猿不爱说话，不爱出门，最终成为宅男。每当想出去走走，散散心，体会体会下什么才是生活而不是生存，你会发现你不仅没有时间，连个志同道合的朋友都找不出来。 反而一些整天跑市场、接待客户的人，在其中锻炼出来了自己的口才，拓展了自己的交际圈，相信假以时日他们必定能够成就一番事业。 别误认为懂技术的人智商高，别认为懂技术的人才有发言权 学生时代可能你还会因为自己懂了一门语言，就可以按照自己的想法为自己写写应用，觉得编程是一件挺神奇的事情。工作之后你会发现，人员的分工是很精细的，策划、运维、测试、美术、推广、程序。程序猿所要做的事情，就是使用最好的技术手段去完成策划交给的任务，最快的最好的方法修复测试提交的bug。一些技术上比较困难的问题，很难实现的功能，你也许会与策划争执个半天，并且嗤之以鼻的认为这些叫你干活的人，都不清楚什么是Java什么是C#。懂技术并不表明你就比别人有多厉害，只是分工不同。看似只用接个电话，写写word就能完成的工作，也许作为程序猿的你也真的干不来。 工作一年以上之后，你会发现，你所需要敲代码的时间比较少，Copy、Paste的时间比较多。很少会有时间去研究下当初自己喜欢的计算机组成、Operating System，因为这些公司中的项目用不上，自己仅剩的技术上的梦想没有了。会感觉自己是否如同卓别林电影《摩登时代》中别捆绑在流水线中重复工作的机器人？半个多世纪过去了科技是进步了，但人们机械工作的模式依然原地踏步。 程序猿—&gt;项目经理—&gt;业务管理，这个并不一定是你的发展方向 很多干了多年的程序猿都去转管理去了,并且很多打算做程序员的人都是以管理职业为目标从而进入程序猿行业的。为什么要转管理，因为程序猿都很苦逼，需要巨大的脑力、并且需要不停歇的学习以防别人超越，但是随着年龄的增大一直burn down下去明显是承受不住的，所以大部分人选择做管理。更多的是因为，程序猿在外界看来也就是一个普通的职员，除了薪水还不错之外，得不到外界人的尊重。每当我跟朋友说，我是做游戏开发的时候，他就会问我，您会写外挂吗？你有时间帮我装装系统吗？在中国 程序猿≠科研人员、程序猿≠科学家，你根本得不到外界人们的认同，于是大家渴望能够成为经理。 其实经理并不比程序猿轻松，他需要思考的东西更多，领导能力（leadership）、表达能力（speech）、控制能力（control）一个都不能少，至少我的经理是这样的。 总结： ①正确的权衡自己的工作与生活的时间，你有家人、爱人、朋友，你需要生存，但更需要懂得如果去生活。偶尔去去旅行、陪陪父母，常锻炼锻炼自己的身体。没有他们，你程序写得再牛X也没有用。你是靠程序生存，并不是抱着他过一辈子。 ②需要有 “剑指苍天，舍我其谁” 的万丈豪情 ，更需要 “注视凝神”的去聆听别人的意见和建议。别人的意见往往很重要，能干加巧干的完成自己工作，才是好程序猿，机械式的重复，只会磨灭自己的意志。 ③需要对自己有一个职业规划，知道自己想干什么，自己还缺少什么，接下来的日子里需要学习什么。对不注重员工发展的公司千万别去，因为那里没有希望。 Ps.我的实习总结，不关于技术，更多的是感悟~~。","categories":[{"name":"随笔","slug":"essay","permalink":"http://test.quanke.name/categories/essay/"}],"tags":[],"keywords":[{"name":"随笔","slug":"essay","permalink":"http://test.quanke.name/categories/essay/"}]},{"title":"Android应用程序发布渠道商大全","slug":"android/android-e5-ba-94-e7-94-a8-e7-a8-8b-e5-ba-8f-e5-8f-91-e5-b8-83-e6-b8-a0-e9-81-93-e5-95-86-e5-a4-a7-e5-85-a8","date":"2012-10-28T19:58:07.000Z","updated":"2018-01-29T07:18:46.581Z","comments":true,"path":"posts/56281/","link":"","permalink":"http://test.quanke.name/posts/56281/","excerpt":"","text":"1.安智市场地址：http://www.goapk.com/login.php安智市场是目前国内应该算装机量最大的市场了，国内品牌大多数的手机都没有携带Google的市场，所以除了google市场外，应该是国内最重要的一个渠道了，审核一般1-2个工作日。 2.安卓市场地址：http://sc.hiapk.com安卓市场的量是国内仅次于安智市场的，所以也是开发者必不可少的一个渠道，审核一般1-2个工作日，但我最近的一次发布审核了近一个礼拜，不知何故。 3.Google市场地址：https://market.android.com/publishandroid的官方市场，应该说还是蛮重要的一个渠道，但是其注册比较麻烦，需要先注册一个Google CheckOut账户并支付25美元，必须要一张支持Visa的信用卡，然后找一个香港或国外的地址来注册，国内的地址和电话是通不过的，本人使用的是中国银行的国航联名Visa信用卡，google的香港一个地址及电话。android市场的好处就是不要审核直接上线，但你最好去了解一下它的协议内容，如果违反了其条款会将你的应用下架并无法再次上架，多次被下架会导致账号被封。如果你是一个多语言版本的应用，那么它是必不可少的一个渠道了，需要注意的是中国的账户是无法进行发布收费应用的，你需要使用其他支持国家的账户及他国收款信用卡，具体收费应用本人没有经验，请相关人士补充。 3.应用汇地址:http://www.appchina.com/market/dev/index.action应用汇的量也还算可以，属于应该考虑的一个渠道，审核一般1-2个工作日。 4.腾讯手机应用平台地址：http://tap.3g.qq.com:8080/腾讯平台的量也算不错的，虽然跟安智和安卓没法比（目前），但其因为有庞大的用户群体及目前砸钱的推广模式，也是一个必要的渠道，其审核包括审核-测试-上架，一般至少需要3-4个工作日。之前本人注册的时候是需要他们主动发邮件给你，然后你回复信息再由其开账户，但刚才访问有注册信息页面了。 5.91手机商城地址：http://market.sj.91.com/Users/Login.aspx91因为开发有91手机助手及不少手机应用，所以这个渠道也是不能忽略的一个渠道，审核一般2-3个工作日吧，但其提交应用页面比较让人蛋疼，你编辑不好还会打回来。 6.智汇云地址：http://developer.huaweidevice.com/智汇云是华为的市场，因为国内华为的手机市场占有量还可以，加上其C8600和C8650两款手机是电信的0元签约套餐机，销售量不容小看，所以智汇云的用户量还是比较可观的。华为的审核会稍微久一些，可能会要5个工作日以上，好像其测试人员会在他们的所有机器上做测试，并找出适合运行机型。 7.N多网地址：http://www.nduoa.com/signinN多量相对来说就会少上不少了，如果你有足够的精力，那这个渠道还是可以用起来的，审核1-2工作日吧。 8.机锋网地址：http://dev.gfan.com/个人以为跟N多差不多，量也不是很大。 9.联想商城地址：http://developer.lenovomm.com/developer/联想商城之所以放在这里，是因为我的应用一直没上线，所以量未知。联想商城需要提交固定的圆底的图标，另外其审核和测试非常仔细和严格，我的因为一个功能在其机器上一直不理想而一直未获通过。需要说明的是，联想的测试会给出一份详尽的报告，告诉你功能缺陷、Crash出现频率等，其内容会仔细说明具体步骤及结果，所以不失为一个很好的免费测试渠道。一般审核周期在3个工作日以上 10.木蚂蚁地址：http://dev.mumayi.com/developers/这个更蛋疼一点，没有提交平台，只有个提交页面，提交应用后无法查询，但木蚂蚁又还稍微有点量(单从他们的下载统计来看，但这些数据有很大的水分里，本人因为其提交方式一直没上去，反而是他们主动收录我的应用的)所有大家自己看着办吧。 11.eoe亿优地址:http://www.eoemarket.com/亿优的量也是少的可怜。但好像不要审核，自己看着办了。 12.其他剩下还有搜狐、网易应用、安智迷、三星App(英文)、MOTO app（英文）、安卓星空、爱米吧等等这些大家可以都去尝试下，另外有些论坛的渠道，如果有精力也可以去看看。","categories":[{"name":"android开发","slug":"android","permalink":"http://test.quanke.name/categories/android/"}],"tags":[],"keywords":[{"name":"android开发","slug":"android","permalink":"http://test.quanke.name/categories/android/"}]},{"title":"设置打开新Activity的动画效果","slug":"e8-ae-be-e7-bd-ae-e6-89-93-e5-bc-80-e6-96-b0activity-e7-9a-84-e5-8a-a8-e7-94-bb-e6-95-88-e6-9e-9c","date":"2012-10-28T19:41:30.000Z","updated":"2018-01-29T07:18:46.507Z","comments":true,"path":"posts/46264/","link":"","permalink":"http://test.quanke.name/posts/46264/","excerpt":"","text":"package com.jay.demo; import android.app.Activity; import android.content.Intent; import android.os.Bundle; import android.view.View; import android.view.View.OnClickListener; import android.widget.Button; public class HomeActivity extends Activity { /** Called when the activity is first created. */ @Override public void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.layout1); Button gotoBtn = (Button) findViewById(R.id.gotobtn); gotoBtn.setOnClickListener(listener); } private OnClickListener listener = new OnClickListener() { @Override public void onClick(View v) { Intent intent = new Intent(HomeActivity.this, SecondActivity.class); startActivityForResult(intent, 0); // HomeActivity.this.finish(); int version = Integer.valueOf(android.os.Build.VERSION.SDK); if(version &gt; 5 ){ overridePendingTransition(R.anim.zoomin, R.anim.zoomout); } // HomeActivity.this.finish(); } }; }","categories":[{"name":"android开发","slug":"android","permalink":"http://test.quanke.name/categories/android/"}],"tags":[],"keywords":[{"name":"android开发","slug":"android","permalink":"http://test.quanke.name/categories/android/"}]},{"title":"世界顶级精英们的人生哲学","slug":"e4-b8-96-e7-95-8c-e9-a1-b6-e7-ba-a7-e7-b2-be-e8-8b-b1-e4-bb-ac-e7-9a-84-e4-ba-ba-e7-94-9f-e5-93-b2-e5-ad-a6","date":"2012-10-28T19:19:15.000Z","updated":"2018-01-29T07:18:46.441Z","comments":true,"path":"posts/59345/","link":"","permalink":"http://test.quanke.name/posts/59345/","excerpt":"","text":"1.别为你自己和别人下定论，你所看到听到的可能只是一面，为这个失去可能的朋友，很不值。2.你可以有喝醉的时候，我们可以接受，但是你要明白和真正的朋友一醉才能让伤心事方休，否则，你只会是别人的谈资和笑柄。3.如果你的个性让很多人对你敬而远之，那么你的个性是失败的，个性的成功在于能吸引，而不是能排斥。4.别怕丢人，如果你实在不行就别怕丢人，行的话，建议你们-去追求丢人，那是一种成功的尝试，至于为此笑话你的人，你可以把他们从你将来人生对手的名单中排除了，所以你也不要笑话那些上台丢人的人。 5.你的确要学得有心计，但是记住，永远记住，在社会上要胜利的唯一的方法永远只是一个，那就是实力，永远不用怀疑。6.你可以看不惯一些东西，但是你应该学会接受，让自己去适应环境，因为环境永远不会来适应你，但要和同流合污划清界限。7.好汉不吃眼前亏，但是在很多时候，要冷静下来，多收集一些数据材料，想更明白点再说，别去争论，可以回忆一下，你会发现，人不可能赢得争论，可以说，争论所提级的话题都是不值得去争论的。8.要有精英意识，没有不可能的事情，真的没有!莫过于梗直，莫过于圆滑，外圆内方即可。9.遇到可相信的朋友时，要好好和他相处下去。因为在人的一生中，可遇到知己真的不易。 10.没有什么东西比围观者们更能提高你的保龄球的成绩了。所以，平常不要吝惜你的喝彩声。11.把未出口的“不”改成：“这需要时间”、“我尽力”、“我不确定”、“当我决定后，会给你打电话”……12.你在表演或者是讲演的时候，只要有一个人在听也要用心的继续下去，即使没有人喝采也要演，因为这是你成功的道路，是你成功的摇篮，你不要看的人成功，而是要你成功。13.不要期望所有人都喜欢你，那是不可能的，让大多数人喜欢就是成功的表现，不要把别人的好，视为理所当然，要知道感恩。14.每个人都有孤独的时候，要学会忍受孤独，这样才会成熟起来。不要因为寂寞而乱了方寸，而去做无聊无益的事情，白白浪费了宝贵的时间。15.管住自己的嘴巴，不要谈论自己，更不要议论别人。谈论自己往往会自大虚伪，在名不副实中失去自己。议论别人往往陷入鸡毛蒜皮的是非口舌中纠缠不清。 16.写出你一生要做的事情，人生要有目标，要有计划，要有提醒，要有紧迫感。一个又一个小目标串起来，就成了你一生的大目标。生活富足了，环境改善了，不要忘了那张薄薄的单子。17.有资格坐轿的人，争着抬轿的很多，你再凑热闹，别人也未必注意你，不妨扶一下旁边那个走得筋疲力尽的人，对于他，每一次帮助都意味着一种人世的温暖。18.不论你在什麽时候开始，重要的是开始之後就不要停止。不论你在什麽时候结束，重要的是结束之後就不要悔恨，有理想在的地方，地狱就是天堂，有希望在的地方，痛苦也成欢乐，从绝望中寻找希望，人生终将辉煌。19.当你能飞的时候就不要放弃飞。当你能梦的时候就不要放弃梦。当你能爱的时候就不要放弃爱。 20.如你想要拥有完美无暇的友谊，可能一辈子找不到朋友。21.世上最累人的事，莫过於虚伪的过日子，活出真实的自己。22.在有多个出席者的场合，主动介绍自己的朋友给其他人，或者主动在你认识的朋友之间穿针引线。23.在受到别人对自己的相貌、事情、人品赞扬时，不要表现出理所当然的样子，也不要假意否认，合适的方式是表示感谢，尤其感谢朋友的肯定与支持。24.虽然在商言商，但是我们要尽量不谈回报地先为别人做点什么，这样就赢得了在心理上比别人优越的债权感。一个人的社会地位是别人对他负有的社会债务感的总和。25.不逃课的学生不是好学生。什么课都不逃，跟什么课都逃掉没什么两样。一定要掌握学习的主动性，不要像读中学一样被老师牵着鼻子走。逃课没有错，但是不要逃错课。同时，既要逃课，又要让老师给高分。 26.做事不如做人，人脉决定成败。一个人有多少钱并不是指他拥有多少钱的所有权，而是指他拥有多少钱的使用权。一个人具备多少能力，不只是说他一个人的时候能做什么，还包括他能通过别人做什么。27. 大学期间一定要多去图书馆多去自习室。很多书你现在不读，一辈子就再也没有机会去读了。虽然不是每本书看了都一定有用，但是，因为你不知道究竟哪本书以后 会有用，所以只好多看书，并且抛弃那些过于XXXXX.尽管每次网到鱼的不过是一个网眼，但要想捕到鱼，就必须要编织一张网。28.养成个人风格，找出你所喜欢的，不论是衣着或是爱好，哪怕是与众不同的小习惯也好。没有个性的人无法踏入社会的顶层。29.学会授权他人，许多人不肯或不能这样做，因此始终被钉在从属的职位上。授权他人是成功的一半，一个事无巨细，不能将工作授权别人的人，注定会遇到极大的障碍。30.长相出众最好，如果长得不好，就让自己有才气，如果才气也没有，那就要经常微笑。气质是首要，你的形象价值100万美元。32. 远离搬弄是非、挑拨离间之人，手段高的，用小人以驱驰，能力高的，还小人以颜色，品德高的，待小人以宽容，血压高的，怕只有被小人气死的份儿了，宁得罪十 个君子，也不要得罪一个小人。对社会的简单形容就是：全是人、全是人、全是人——但社会肯定会分出层次，只有一个办法，那就是竞争，你必须努力，必须使自 己成为社会的强者，强者才能拥有一切，而不是金钱可以买到一切，否则结局就是被压在社会的底层","categories":[{"name":"随笔","slug":"essay","permalink":"http://test.quanke.name/categories/essay/"}],"tags":[],"keywords":[{"name":"随笔","slug":"essay","permalink":"http://test.quanke.name/categories/essay/"}]},{"title":"[转]Android研究笔记一-Android的价值观","slug":"e8-bd-acandroid-e7-a0-94-e7-a9-b6-e7-ac-94-e8-ae-b0-e4-b8-80-android-e7-9a-84-e4-bb-b7-e5-80-bc-e8-a7-82","date":"2012-10-28T19:04:00.000Z","updated":"2018-01-29T07:18:46.506Z","comments":true,"path":"posts/3905/","link":"","permalink":"http://test.quanke.name/posts/3905/","excerpt":"","text":"Intent, Activity, Action这些都是用户概念。使用用户概念而不是技术概念给组件命名，是Android之所以是一个伟大的操作系统的根本原因。在Android里面，一切都是面向用户的。 比如Intent意图，显然是一个用户概念。程序员是没有这样的概念的。这种命名方式的存在，逼使得程序员“使用”用户的语言进行编程，而不是功能式的编程。它事实上已经升华为一种服务式的编程，即：我写的东西不是为了实现某个功能，而是为了实现用户的欲望。是一次非常重要的语义升级。因此说，在Android里面，已经不是面向OO。其面向的已经是用户。是真正的面向用户编程。面向用户并不意味着反OO，只是意味着它的层次比OO更高。 这是由移动平台的本质决定的：移动平台相对于桌面系统，它更像是一个用户的附属品而不是一个工作站。因为对于工作站来说，工作是其中心。而定义一个工作有很多种方法，可以从不同的语义层次进行定义。但更贴近用户的移动系统，显然使用纯粹的用户语义是唯一合适的选择。 文章来自：http://my.oschina.net/digerl/blog/85520","categories":[{"name":"android开发","slug":"android","permalink":"http://test.quanke.name/categories/android/"}],"tags":[],"keywords":[{"name":"android开发","slug":"android","permalink":"http://test.quanke.name/categories/android/"}]},{"title":"Github for Windows使用图文教程","slug":"github-for-windows-e4-bd-bf-e7-94-a8-e5-9b-be-e6-96-87-e6-95-99-e7-a8-8b","date":"2012-10-27T19:13:36.000Z","updated":"2018-01-29T07:18:46.511Z","comments":true,"path":"posts/3833/","link":"","permalink":"http://test.quanke.name/posts/3833/","excerpt":"","text":"Git已经变得非常流行，连Codeplex现在也已经主推Git。Github上更是充斥着各种高质量的开源项目，比如ruby on rails，cocos2d等等。 对于习惯Windows图形界面的程序员来讲，Github的使用是需要点时间和耐心的，然而最近Github发布了Github for Windows 则大大降低了学习成本和使用难度，他甚至比SVN都简单，好吧，你不信，我们来一步一步过一面： 在http://windows.github.com/下载Github for Windows，然后安装就不说了 登陆，安装好后打开GitHub，用你的GitHub账号登陆。需要注意的事，Github for Windows会帮你创建SSH Key，你打开邮件应该会收到邮件帮你创建SSH Key的信息，这也省了不少事： 创建一个仓库。点击上面的 “+Add” 按钮创建一个新的仓库，输入相关信息： 新建的仓库还没有真正地提交到本地仓库，相当于这只是一个new的修改，github简化了一些操作过程，对于任何修改，只需要添加评论就可以提交到本地仓库，然后这个时候才可以提交到远程仓库，所以我们来添加一条评论： 在每次添加一个评论之后，就相当于向本地仓库提交了一本版本，之后，就可以选择一个版本向远处仓库提交了。 这个时候我们就可以Publish一个仓库了，Publish之后按钮就变成in sync文字，表示以后的修改提交就是同步，这个时候你到你的github上看应该就会多一个仓库了： 添加项目，仓库在本地保存在一个文件夹中，Github for windows会监视这个文件夹，任何修改都会在仓库中看到，然后像上面一样添加评论就可以将修改提交到本地仓库，这里我们打开仓库目录，往里面添加一个项目： 将修改提交到本地仓库，回到Github for windows中，已经可以看到刚才添加的项目了，同样，提交注释提交到本地仓库： 最后，点击sync将本地仓库提交到github 7. 参与开源项目协同开发： github现在已经深度支持Windows开发者了，现在每个在github的开源项目前面都有一个“Clone in Windows”的按钮，我们可以Clone任何我们感兴趣的开源项目，然后在地进行修改，参与开源项目的开发。 点击该按钮之后，浏览器会要求打开Github for Windows，并下载项目至本地，新建一个本地仓库： 总结：github for Windows简化了一些概念和操作，并且几乎所有主要操作都通过图形界面来完成，基本上能完成日常写作了。这些主要的简化包括： 将push到远程仓库简化为一个同步按钮 将提交到本地仓库简化为只需要对一些列修改添加评论 更多的，还包括分支的建立和管理，这部分自己去探索吧，总之，github for Windows确实是一个非常好的工具。","categories":[{"name":"git","slug":"git","permalink":"http://test.quanke.name/categories/git/"}],"tags":[],"keywords":[{"name":"git","slug":"git","permalink":"http://test.quanke.name/categories/git/"}]},{"title":"[转]程序员加油站，不是人人都懂的学习要点","slug":"e8-bd-ac-e7-a8-8b-e5-ba-8f-e5-91-98-e5-8a-a0-e6-b2-b9-e7-ab-99-ef-bc-8c-e4-b8-8d-e6-98-af-e4-ba-ba-e4-ba-ba-e9-83-bd-e6-87-82-e7-9a-84-e5-ad-a6-e4-b9-a0-e8-a6-81-e7-82-b9","date":"2012-10-25T22:49:54.000Z","updated":"2018-01-29T07:18:46.505Z","comments":true,"path":"posts/34614/","link":"","permalink":"http://test.quanke.name/posts/34614/","excerpt":"","text":"学习是一种基础性的能力。然而，“吾生也有涯，而知也无涯。”，如果学习不注意方法，则会“以有涯随无涯，殆矣”。 一.学习也是一种能力 看到这个标题，有人会说：“学习，谁不会?”的确，学习就像吃饭睡觉一样，是人的一种本能，人人都有学习的能力。我们在刚出生的时候，什么也不知道，是一张真正的白纸，我们靠学习的本能，学会了走路、说话、穿衣服…后来，我们上学了，老师把书本上的知识一点一点灌输到我们的脑子里，我们掌握的知识越来越多，与此同时，我们学习能力却好像越来越差了，习惯了被别人喂饱，似乎忘记了怎么来喂自己了。 学习本来只是一种本能，算不上什么能力，然而，经过二十多年的不断学习，学习反而成为了一种真正的能力，因为我们慢慢失去了它，它就更显得珍贵。 在学校里我们基本上被动式学习，然而走出了象牙塔之后，不会再有人对你负责，不会有人主动教你，我们需要主动的学习。所谓的学习能力，其实就是自主学习的能力。 几年前，曾有一本风靡管理界的书，叫《第五项修炼》，这本书倡导建立学习型组织，因为从长远来看，一个组织唯一可持续的竞争优秀，就是比竞争对手更快更好的学习能力。 一个公司如此，一个人又何尝不是如此?众所周知现在是一个知识爆炸的时候代，知识更新非常快。据说，一个大学毕业生所学习到的知识，在毕业之后的2年内，有效的不过剩下5%，更何况我们的学校与社会需要严重脱轨。我们赖以立足的，不在于我们现在掌握了多少知识，而是我们有多强的学习能力! 学习不但是一种能力，而且是一种至关重要的能力，而这种能力的核心，就是学习的方法和心态。 二.买书是最划算的投资 古人云：“书中自有黄金屋，书中自的颜如玉。”这说明先贤们早就认识到，买书是最划算的投资了。 当我刚出道的时候，拿着非常微薄的工资，有一次我向主管抱怨道：“现在的书真贵啊，这点工资连饭都吃不起，更别说买书了!”主管对我说：“不要吝惜买书的钱，宁可忍着不吃饭，也不要忍着不买书，因为买书是回报率的最高的投资了。” 主管的话让我非常震动。后来，我看到喜欢的书时，再有没有手软过。我不断的学习，开发能力也不断的提高，工资水平也获得了大幅度的提高。一年后，我一个月工资的涨幅，就足够买两年的书了。你说，还有比这更划算的投资吗? 一本书，哪怕只有一页纸是有用的，它将所产生的潜在价值，也会远远超过书本身的价格。当然，书不在多，能踏踏实实消化掉一本好书，可能比泛泛而读10本普通书，要更有价值得多。 三.多读经典书 十年前，我刚进入IT行业的时候，真是求知渴，每星期都要往购书中心跑，可惜的是，那时给程序员看的书不像现在这么多，高质量的书就更少了。当时我印象中比较经典的书籍就是《Windows程序设计》、《COM本质论》、《Java编程思想》，还有就是谭浩强的《C语言程序设计》。其它充斥书架的，就是类似于《21天精通XXX》、《XXX从入门到精通》、《XX宝典》这样的书籍。 回首往昔，令我比较郁闷的一件事就是在我最有学习动力的时候，看的高质量的书籍太少，就好像是在长身体的时候，天天吃的是没营养的泡面。当然，这跟没有人指导也有很大的关系，独自一个人学习，让我走了很多的弯路。 软件开发方面的书籍，我大致将其分为三类： (1)浅显的入门类书籍。 这类书的标题往往是《XX天精通XXX》、《XXX从入门到精通》、《XX开发实战》等，这类书往往从软件的安装讲起，喜欢翻译帮助文件。有人批评这类书为烂书、毫无价值，这并不公平。至少我本人，也曾从这些书中学到一些东西。即使是21天系列书，也有适合看的人群，只不过，它一般也就只能看21天而已，过后就可以扔到垃圾堆。这类书只适于还没有入门的初学者，从中学到一些入门的招式。这种书在刚起步的时候一般买上一本就可以了。如果你善于使用搜索引擎，这一本书也可以省了。 (2)国内外高手写的实战类书籍。 这类书实战性很强，把技术及原理讲得很透彻。比如《windows环境下32位汇编语言程序设计》、《深入解析MFC》、《Delphi深度探索》、《深入浅出WPF》、《深入剖析Asp.net组件设计》等。以前这类书都是从国外翻译或从台湾引进，现在国内高手越来越多，出自国内作者的也越来越多。这类书如果在你学习的每个方向看个两三本，并且通过实践消化掉，那么毫无疑问，你会成为一个优秀的程序员。 (3)国外大牛写的、揭露本质、有丰富思想的书。 这类书就是所谓的经典书了，例如《代码大全》、《编程珠玑》、《设计模式》、《重构》、《代码整洁之道》等。经典书就像一个有深度、有思想的朋友，他会给你启发、每次阅读都会有新的收获，这类书具有真正的收藏价值。看经典书永远是正确的选择，它绝不会浪费你的时间，因为经典书是无数人沙里淘金、帮你挑选过的结果。 然而，阅读这类书并不是一件容易的事情，读者需要有丰富的开发经验，才能与作者产生共鸣。真正能消化经典书的人其实不多，这就好像饮酒，一个新手无论如何也品不出葡萄美酒的醇香。在酒桌上，人人都把杯中酒一饮而尽，当有人点评“这个酒不错”的时候，我只能无奈的苦笑一番，真的是甘苦自知。 如果一本经典书你看得很辛苦，很有可能就是因为你功力未够，这种情况下不要着急，慢点来，不妨先将其先束之高阁，多看看第二类实战型书籍，过一段时间再回头来看，也许你会有新的惊喜。 四.不要在上班时间看书 一个善于学习的人，首先要善于利用一切时间来学习。不知是伟大的雷锋叔叔还是鲁迅爷爷曾经说过：“时间就像海绵里的水，只要愿挤，总还是有的。”然而，当我们从上班时间中挤时间学习时，就千万要注意了，不要在上班时间看书! 上班时间看书不但是一件很敏感的事情，而且非常吸引眼球，很快就会引起周遭的不爽。首先老板心里不爽，他想：“我给你钱是让你来工作的，不是来学习的!”;其次同事们也不爽：“我们工作都做不完，瞧，这小子真闲哪!”用不了多久，你就会成为被众人排斥的异类。 当然，你可能会说，“我工作已经做完了，经理没有安排，当然可以学习了”，其实不然。你完成了一件事情，不等于所有的事情都完成了。一个优秀的员工，应该是主动要工作，而不是被动的等工作。工作完成以后，你至少还可以： (1)主动汇报给你的经理，请他来检查你的成果，并安排新的任务; (2)如果公司这一段时间确实比较闲，没有什么具体的任务，可以进行代码重构、优化; (3)你还可以主动请缨，承担额外的工作或更艰巨的任务。 (4)如果一定要学习，也只能对着电脑屏幕来学习，纸质书最多只能拿来翻阅一下，而不能一直捧着，以免影响到其他人的情绪。 五、只学习与工作相关的东西 我曾发现不少程序员在学习方面找不到方向，一会学学C#，一会学学Java，看了最新的编程语言排行榜，又觉得该学C++。这样左抓抓，右挠挠，只会让你觉得更痒。 学习最忌三心二意。俗话说：“伤其十指不如断其一指”，每门都学一点，还不如专心学好一个方向。这个道理谁都懂，可是又该学哪个方向呢?难道只能跟着感觉走吗? 不!最实际的方向，应该跟着工作走，工作需要什么，我们就学什么，把工作需要的技能熟练掌握。我们为什么要学习和工作弱相关的东西呢?是为了转行或跳槽吗?可是，如果我们连现在本职工作都不能做好，又怎么能保证到新的岗位、用新学的技能就可以做得更好呢? 学习与工作需要的的东西，有很多好处： 首先，可以集中精力，在某一方面钻研得更加深入。所谓“百招会不如一招绝”，有了绝招，你还怕不能在“武林”立足吗?《天龙八部》中的慕容复武功博学无比，最后还不是被只会一招六脉神剑的段誉打得落花流水? 其次，可以学得更快、更深入，因为学习更具有针对性，而且可以立即在工作中运用，可以马上检验出学习的效果，对存在的问题可以进行深入的研究，因此掌握的知识也会更加的牢固。 第三，学习与工作结合在一起，工作时间也就成了学习时间，这样突破了三个8小的限制。有人说，我们每天所有拥有的时间可以分为三个8小时，工作8小时，睡觉8小时，另外还有8小时自己可以自由支配的时间。工作和睡觉的两个8小时大家都一样，决定人生高度的是另外这个8小时。当我们把学习的焦点放到与工作相关的知识上时，工作时间中的很大一部分，同时也就成了宝贵的学习时间，这真是一举两得的美事啊。 六.织网式的学习 知识的广度和深度都很重要。作为一个程序员，深入把握技术细节，是写出优质代码的保证。但对于一个项目经理而言，知识的广度更显重要。项目中碰到的问题往往是综合性的，只有具有广博的知识，才能快速的对问题进行分析和定位。在程序员通往项目经理的道路上，我们必须有意识的扩大自己的知识面，形成更完善的知识体系。 每个人的知识体系就好比是一张网，我们学习其实就是要织这样一张网。 我曾看过渔网的编织过程，渔网虽大，也是一个结点起步，一个点一个点的编出来的，编织的过程中，始终只有一根主线。 学习又何尝不是这样，知识体系的大网也是由许多小的结点组成，要结这样一张网，只能由一个点起步。牵住一条主线，织出一个个的点，由点带出面，最后才能形成这张大网。 我曾经编写过一个网络信息采集软件，这个软件可以从具有列表页网站中按字段设置采集信息，支持自定义字段、页面多级关联、下载附件、支持多种数据库、可视化定义等特性。刚开始时，觉得这个软件也是一个比较大的功能点而已，后来发现这个不起眼的功能关联着大量的知识点，在开发过程中， 我顺藤摸瓜，各个击破，对很多知识点进行了细致的学习研究，软件开发完成后，个人的知识体系网也进一步得到了补充和完善。 图1 由知识点形成知识网 七.问题是最好的学习机会 日本经营之神松下幸之助曾经说过：“工作就是不断发现问题、分析问题、最终解决问题的一个过程，晋升之门将永远为那些随时解决问题的人敞开着。”可见，工作过程中有问题是正常，没有问题那才是真正的问题。在发生问题能时，能勇于面对问题、解决问题的人，才是公司真正的核心骨干。 现实中，很多人总是千方百计回避问题，当上司安排一项艰巨的任务时，也是想尽办法推托。殊不知，对于个人而言，其实问题是最好的学习机会。往往那些愿意接受困难工作的人，能力会变得越来越强，那就是因为他们在克服困难的过程中取得了巨大的进步。 有一次，一位项目经理对我说：“有一个问题，客户有一台HP服务器要装磁盘阵列，没人会做，怎么办啊?”“可以学啊，没有人愿意去吗?”“我都问了，没人想去。”“哦，正好明天我有时间，我也没装过磁盘阵列，那我明天去学着弄一下。”我说的是真心话。第二天早上，当我准备出发时，项目经理告诉我不用我去了，因为项目组好几个同事都想去“学着弄一下”。 结果服务器很快就装好了，远远没有之前大家想像的那么困难嘛。更重要的是，在解决这个问题的过程中，大家都学会了怎么装磁盘阵列。 碰到困难时，迎难而上吧，千万不要拒绝这个最好的学习机会! 八.经常思考总结 子曰：“学而不思则罔”。只学习不思考，就会迷惑，难以把握事情的本质。这就好比一个学武之人，只习得其形，而未得其神，难以成为真正的高手。 一个程序员从入门，到成为高手的过程中，往往要经过几次顿悟。顿悟会让你跳出知识的丛林，一切豁然开朗，仿佛打通了全身的奇经八脉一般奇妙。记得我有一次，顿悟到了一个很简单的结论：“原来高级编程语言中的类库是封装了Windows API来实现的。”后来碰到一些自带类库无法实现的功能时，我就会想到，其实可以通过调用Windows API来实现。利用这个思路，我解决了一些看起来很难的问题，得到老板的赏识，从而很快获得提升。 顿悟非常可贵，然而它不是随便发生的，而是经过一次次苦苦思索之后、灵光闪现的结果。思考的过程，其实就是将外在的知识内化为自己的知识的过程，而顿悟，则是批量的实现这种内化，将无数个知识点连接在一起，达到融会贯通的境界。 九、克服“高原现象” 爱学习的人都会有这样的经历，学习持续了一段时间之后，往往会有一个瓶颈期，长时间似乎很久没有什么进步，于是内心非常着急。 这种情况实际上这是由人的学习规律决定的一种“高原现象”。据研究，学习者在刚开始进步快，随后有一个明显的或长或短的进步停顿期，后期进步慢，中间的停顿期叫高原期。 图2 技能学习练习曲线在我看来，高原期实质是一个消化期，由于前期的学习积累了太多的知识点，这些知识点在大脑中乱作一团，还没有形成一个知识体系。这时需要一定的时间来消化它，将它融会贯通，经常思考总结可以快速帮你跨过高原期。 在处于高原期的时候，还可以换一个相关的方向来学习，例如编程语言学不下去了，你可以学习一下设计模式，设计模式也学不下去了，再换成数据库。通过学习这些相关的知识，不但补齐了知识体系中的短板，而且各个知识点之间可以互相启发，帮助你实现顿悟，跨过高原期。 十、学习要有好心态 (1)学习要静心 急于求成是学习过程中普遍存在的一种心态。这可以理解，毕竟作为一个程序员，要学的东西实在太多了，而社会又是那样的浮躁，让人觉得一切都是那样的不安全、不确定，似乎只有学得快一点，才能跟上社会的脚步。 可是“欲速则不达”，想快快的学，往往会形成东一榔头、西一棒槌的学习方式，每一个点都没有吃透。心沉不下去，知识也会沉不下去。要想成为真正的高手，只能静下心来，一步一个脚印的攀登。 (2)学习是一个持续一生的过程 人生的过程，就是一个自我完善过程。 孔子曾经说：“吾十有五而志于学，三十而立，四十而不惑，五十而知天命，六十而耳顺，七十而从心所欲，不逾矩。”可见孔子也不是天生的圣人，也在不停的学习、进步，从“志于学”到最后“从心所欲，不逾矩”，孔子一共花了55年的时间。 作为一个程序员，更是需要不断更新自己的知识。我们所知道的东西，就像一个白色的圆圈，圈外则是黑暗的未知的世界。当圆圈越大，所接触到的黑暗部分就越多。我们只有不停的学习，打破更多的黑暗，找到更多光明。 (3)保持饥饿，保持愚蠢 看了《乔布斯传》之后，我最喜欢的一句话是“求知若饥，虚心若愚”(Stay Hungry,Stay Foolish)，其实我更喜欢它更原生态的翻译“保持饥饿，保持愚蠢”。我们只有认识到自己还很饥饿和愚蠢，才会像没吃饱一样，由衷的需要学习、爱上学习。 当然，知易行难，知行合一才是学习的最高境界。我也始终是一个学习者，一直在路上。","categories":[{"name":"随笔","slug":"essay","permalink":"http://test.quanke.name/categories/essay/"}],"tags":[],"keywords":[{"name":"随笔","slug":"essay","permalink":"http://test.quanke.name/categories/essay/"}]},{"title":"OpenCore介绍","slug":"opencore-e4-bb-8b-e7-bb-8d","date":"2012-10-24T06:46:33.000Z","updated":"2018-01-29T07:18:46.530Z","comments":true,"path":"posts/45509/","link":"","permalink":"http://test.quanke.name/posts/45509/","excerpt":"","text":"一、OpenCore简介 OpenCore是Android的多媒体核心，采用C++实现，定义了全功能的操作系统移植层（OSCL），各种基本的功能均被封装成类的形式，各层次之间的接口多使用继承等方式。 从宏观上来看，它主要包含了两大方面的内容： PVPlayer：提供媒体播放器的功能，完成各种音频(Audio)、视频(Video)流的回放(Playback)功能。 PVAuthor：提供媒体流记录的功能，完成各种音频(Audio)、视频(Video)流的以及静态图像捕获功能 。 二、OpenCore在Android系统中的位置 首先来一张抽象一点的图（如下）： 从上图我们可以感觉到OpenCore封装了一些接口给应用程序。具体是什么呢？下面以音频/视频播放器为例，看看具体的过程： 其中， VideoView.java 是一个media集成的高层的JAVA类，这个类的文件在/frameworks/base/core/java/android/widget/。它集成了MediaPlayer和SurfaceView的类，可以作为一个UI元素（View）直接放在界面中，用于视频的播放。 MediaPlayer.java和MediaRecorder.java 为基本的处理音频数据的Java类，它里面直接调用很多本地接口。 android_media_MediaPlayer.cpp 和android_media_MediaRecorder.cpp 封装了相应的JNI接口。 三、多媒体播放的过程 视频文件（流）播放过程就像一个状态机。图形如下，其中椭圆形代表MediaPlayer类的状态；线代表状态变化，由源状态指向目标状态，它旁边标注有状态变化的条件，其中单箭头的线表示同步（synchronous）方法调用，双箭头表示异步（asynchronous）方法调用。这幅状态运行图显示了视频播放时的各种状态之间的切换方法，除此之外，为了方便用户处理，在一些状态下，系统会调用回调函数，只要用户提前注册好相应的回调函数即可。状态回调函数注册方法ErrorOnErrorListener.onError()setOnErrorListener(android.media.MediaPlayer.OnErrorListener)PreparedOnPreparedListener.onPrepared()setOnPreparedListener(android.media.MediaPlayer.OnPreparedListener)StartedOnBufferingUpdateListener.onBufferingUpdate()setOnBufferingUpdateListener(OnBufferingUpdateListener)使用seekTo(int)后OnSeekComplete.onSeekComplete()setOnSeekCompleteListener(OnSeekCompleteListener)PlaybackCompletedOnCompletionListener.onCompletion()setOnCompletionListener(OnCompletionListener) 四、OpenCore内部的重要概念 OSCL ：Operating System Compatibility Library (操作系统兼容库)，包含了一些操作系统底层的操作，为了更好地在不同操作系统移植。包含了基本数据类型、配置、字符串工具、IO、错误处理、线程等内容，类似一个基础的C++库。PVMF ：PacketVideo Multimedia Framework(PV多媒体框架)，在框架内实现一个文件解析(parser) 和组成(composer) 、编解码 的NODE ，也可以继承其通用的接口，在用户层实现一些NODE。 五、OpenCore的内部调度过程 PlayerDriver创建后进入OSCL 线程来处理消息，engine 创建完各个node 节点并将其连接起来，剩下的就是node间的通讯问题，各node状态变化会触发oscl对其下一次调度，参与到oscl调度中的模块都必须提供一个Run函数 ，oscl会去call这个函数。 内部流程图如下： 文件的播放过程如下： 判断源文件的格式，根据文件格式创建对应的文件解析节点ParseNode： PVPlayerRecognizerRegistry负责文件格式识别，并将结果返回给PVPlayerEngine； 通过文件解析节点（ParseNode）来完成音视频文件格式的解析，并将文件中的音频、视频数据送到对应的解码节点进行解码； 解码节点（DecNode）通过调用底层的opencoreMAX 通用接口实现媒体数据的解码；对于一个普通的视频文件，存在2个解码节点：音频解码节点 和视频解码节点 ； 六、解码的内部流程： 参考OpenMax 的相关介绍。 七、Android上的视频输出方案 为了使opencore的视频播放支持Android系统，谷歌定义了两套视频输出方案，一种是由硬件 厂商实现硬件加速的视频输出（ libopencorehw.so ），硬件视频输出里面可以调用硬件Overlay模块对输出的视频数据进行硬件混叠，这样输出效率会非常的高；另外一种为谷歌定义的软视频输出，该软视频输出定义为AndroidSurfaceOutput 类，这种方案中系统会调用SurfaceFilnger对输出视频数据进行混叠，该混叠为软件混叠，执行效率比较低。 八、OpenCore的测试方式参考《Build OpenCORE 2.05 on x86 Linux .PDF》和《pvplayer_engine_unit_test_guide.pdf》","categories":[{"name":"android开发","slug":"android","permalink":"http://test.quanke.name/categories/android/"}],"tags":[],"keywords":[{"name":"android开发","slug":"android","permalink":"http://test.quanke.name/categories/android/"}]},{"title":"oauth服务端开发","slug":"oauth-e6-9c-8d-e5-8a-a1-e7-ab-af-e5-bc-80-e5-8f-91","date":"2012-10-23T23:55:22.000Z","updated":"2018-01-29T07:18:46.531Z","comments":true,"path":"posts/50522/","link":"","permalink":"http://test.quanke.name/posts/50522/","excerpt":"","text":"使用开源实现，比如 spring-security-oauth 项目，或者apache Amber 等等。","categories":[{"name":"服务端开发","slug":"service","permalink":"http://test.quanke.name/categories/service/"}],"tags":[],"keywords":[{"name":"服务端开发","slug":"service","permalink":"http://test.quanke.name/categories/service/"}]},{"title":"android使用mina需要注意的问题","slug":"android/android-e4-bd-bf-e7-94-a8mina-e9-9c-80-e8-a6-81-e6-b3-a8-e6-84-8f-e7-9a-84-e9-97-ae-e9-a2-98","date":"2012-10-22T19:45:12.000Z","updated":"2018-01-29T07:18:46.577Z","comments":true,"path":"posts/12875/","link":"","permalink":"http://test.quanke.name/posts/12875/","excerpt":"","text":"1.第三方jar包的使用 如果在Java Build Path中使用Add External JARs这种方式，运行时会有找不到类的错误（我的上面有，如果你没出现，恭喜你），上网查了几种方式，我这边运行通过的方式如下： 在项目中建个lib文件夹，把需要的jar包复制进去，在 Java Build Path中使用 Add JARs ，选择项目下的lib包中的jar文件即可，发布apk文件时会自动打包进去。 网上还有一种方式，在 Java Build Path 中使用 Add Library， 选择 User Libaray -&gt; 新建一个User Libaray的方式，这种我没试，有通过的同志们说下。软件开发 本人推荐项目建文件夹的方式。 2. mina包的使用之日志 我使用的是mina2.0.2，如果没有特殊需求，使用mina-core-2.0.2核心包就可以了。 关键点在这里： mina中使用slf4j作为日志框架（不知道slf4j的同志们请google下）， 这个只是一个日志框架，是没有实现的，你需要一个具体的实现，比如说log4j（具体使用方法我就不说了，很简单，实在不知道给我发站内信）。使用mina必须把slf4j的jar包也引入，那么你也要引入一个实现日志的包，在普通客户端开发这个不是问题，但在android中，已经有了一个日志实现，而且配合logcat，其功能是很强大的，那么怎么配合slf4j来使用呢？（ps：slf4j是必须的，mina要用到） 这里就要感谢网络了，我在slf4j的官网居然发现有一个slf4j-android的jar包http://www.slf4j.org/android/ 同志们可以去看看，（强烈推荐去看看）下载这个包，引入到项目中，注意啊，这个包是不能和slf4j-api包共存的，我的解决方式是只使用slf4j-android这个包，其余的日志相关的包都删除，（其实别的日志包也没什么用，我们有android提供的日志类），这样mina就不会报日志类找不到的错误了，而且日志都输出到logcat，调试程序也方便。这方面我们要感谢slf4j，如果没有这个实现，mina使用就麻烦了，我能想到的方式就只有更改mina源代码，重新编译了，当然你也可以自己提供日志实现类。 android的日志类中有一个限制，tag不能超过23个字符（你不知道tag，我也不知道该怎么说了…），slf4j也给解决了，官网上面有介绍。（再建议看下官网） 3. mina包的使用之NioSocketConnectortp-link 在android2.1中好像没有问题，但在android2.2中会有Bad address family的异常，这个异常是由于IPv6引起的，这个bug已经在 http://code.google.com/p/android/issues/detail?id=9431 （同志们看看吧），android2.2不支持IPV6,在使用nio 时会有问题，有建议是使用io，可以解决，但我们如果一定要使用nio呢，解决方法如下： 设置系统属性： System.setProperty(“java.net.preferIPv6Addresses”, “false”); 就这一行解决问题，有同志可能要问，在哪加啊？系统开始的地方加，比如说是service，在onCreate（）中启动mina前加上就行，activity中也一样。","categories":[{"name":"android开发","slug":"android","permalink":"http://test.quanke.name/categories/android/"}],"tags":[],"keywords":[{"name":"android开发","slug":"android","permalink":"http://test.quanke.name/categories/android/"}]},{"title":" Android TTS 的开发 ","slug":"android/android-tts-e7-9a-84-e5-bc-80-e5-8f-91","date":"2012-10-16T22:18:06.000Z","updated":"2018-01-29T07:18:46.594Z","comments":true,"path":"posts/15957/","link":"","permalink":"http://test.quanke.name/posts/15957/","excerpt":"","text":"1、首先要tts是否有所需语言的语音数据，如果没有需安装它[code lang=”java”] Intent checkIntent = new Intent(); checkIntent.setAction(TextToSpeech.Engine.ACTION_CHECK_TTS_DATA); startActivityForResult(checkIntent, MY_DATA_CHECK_CODE); private TextToSpeech mTts; protected void onActivityResult(int requestCode, int resultCode, Intent data) { if (requestCode == MY_DATA_CHECK_CODE) { if (resultCode == TextToSpeech.Engine.CHECK_VOICE_DATA_PASS) { // success, create the TTS instance mTts = new TextToSpeech(this, this); } else { // missing data, install it Intent installIntent = new Intent(); installIntent.setAction( TextToSpeech.Engine.ACTION_INSTALL_TTS_DATA); startActivity(installIntent); } } } [/code] 2、设置地区（语言） [code lang=”java”] mTts.setLanguage(Locale.US);[/code] 3、判断是否支持某地区的语言 [code lang=”java”] mTts.isLanguageAvailable(Locale.FRANCE))[/code] 或[code lang=”java”] mTts.isLanguageAvailable(new Locale(&quot;spa&quot;, &quot;ESP&quot;)))[/code] 或[code lang=”java”] mTts.isLanguageAvailable(new Locale(&amp;quot;spa&amp;quot;)) [/code]如果没有语言数据，会返回TextToSpeech.LANG_MISSING_DATA，否则返回ACTION_CHECK_TTS_DATA 4、处理发音[code lang=”java”] String myText1 = &amp;quot;Did you sleep well?&amp;quot;; String myText2 = &amp;quot;I hope so, because it&apos;s time to wake up.&amp;quot;; mTts.speak(myText1, TextToSpeech.QUEUE_FLUSH, null); mTts.speak(myText2, TextToSpeech.QUEUE_ADD, null); [/code] 5、加参数 [code lang=”java”] HashMap&amp;lt;String, String&amp;gt; myHashAlarm = new HashMap(); myHashAlarm.put(TextToSpeech.Engine.KEY_PARAM_STREAM, String.valueOf(AudioManager.STREAM_ALARM)); mTts.speak(myText1, TextToSpeech.QUEUE_FLUSH, myHashAlarm); mTts.speak(myText2, TextToSpeech.QUEUE_ADD, myHashAlarm); [/code] 6、加完成监听 [code lang=”java”] mTts.setOnUtteranceCompletedListener(this); myHashAlarm.put(TextToSpeech.Engine.KEY_PARAM_STREAM, String.valueOf(AudioManager.STREAM_ALARM)); mTts.speak(myText1, TextToSpeech.QUEUE_FLUSH, myHashAlarm); myHashAlarm.put(TextToSpeech.Engine.KEY_PARAM_UTTERANCE_ID, &amp;quot;end of wakeup message ID&amp;quot;); // myHashAlarm now contains two optional parameters mTts.speak(myText2, TextToSpeech.QUEUE_ADD, myHashAlarm); public void onUtteranceCompleted(String uttId) { if (uttId == &amp;quot;end of wakeup message ID&amp;quot;) { playAnnoyingMusic(); } } [/code] 7、将发音录入文件 [code lang=”java”] HashMap&amp;lt;String, String&amp;gt; myHashRender = new HashMap(); String wakeUpText = &amp;quot;Are you up yet?&amp;quot;; String destFileName = &amp;quot;/sdcard/myAppCache/wakeUp.wav&amp;quot;; myHashRender.put(TextToSpeech.Engine.KEY_PARAM_UTTERANCE_ID, wakeUpText); mTts.addSpeech(wakeUpText, destFileName); mTts.speak(wakeUpText, TextToSpeech.QUEUE_ADD, myHashAlarm); [/code] 8、关闭tts[code lang=”java”] mTts.shutdown(); mTts.synthesizeToFile(wakuUpText, myHashRender, destFileName); [/code]","categories":[{"name":"android开发","slug":"android","permalink":"http://test.quanke.name/categories/android/"}],"tags":[],"keywords":[{"name":"android开发","slug":"android","permalink":"http://test.quanke.name/categories/android/"}]},{"title":"Go 语言中文社区","slug":"go-e8-af-ad-e8-a8-80-e4-b8-ad-e6-96-87-e7-a4-be-e5-8c-ba","date":"2012-10-15T18:39:19.000Z","updated":"2018-01-29T07:18:46.510Z","comments":true,"path":"posts/52774/","link":"","permalink":"http://test.quanke.name/posts/52774/","excerpt":"","text":"Go 中文社区Go官方网站 http://golang.org/Go中文官网 http://golang-china.org/中文论坛(测试中…) http://bbs.golang-china.org/中文用户讨论组(邮件) https://groups.google.com/group/golang-china/中文翻译(SVN) http://code.google.com/p/golang-china/GitHub与Google Code同步(GIT) http://github.com/border/golang-chinaQQ群: 102319854（申请加入请到中文论坛留言） Go中文文档翻译计划 Install Go 初稿完成Go Tutorial 初稿完成Effective Go 初稿25%翻译的详细信息参考 翻译计划 http://code.google.com/p/golang-china/wiki/TranslationProject","categories":[{"name":"Go语言","slug":"golang","permalink":"http://test.quanke.name/categories/golang/"}],"tags":[],"keywords":[{"name":"Go语言","slug":"golang","permalink":"http://test.quanke.name/categories/golang/"}]},{"title":"开源书籍《Go Web 编程》","slug":"e5-bc-80-e6-ba-90-e4-b9-a6-e7-b1-8d-e3-80-8ago-web-e7-bc-96-e7-a8-8b-e3-80-8b","date":"2012-09-30T20:05:20.000Z","updated":"2018-01-29T07:18:46.464Z","comments":true,"path":"posts/12549/","link":"","permalink":"http://test.quanke.name/posts/12549/","excerpt":"","text":"《Go Web 编程》以下是作者原话，与cndemoz.com无关 因为自己对Web开发比较感兴趣，所以最近抽空在写一本开源的书籍《Go Web编程》《Build Web Application with Golang》。写这本书不表示我能力很强，而是我愿意分享，和大家一起分享Go写Web应用的一些东西。 对于从PHP/Python/Ruby转过来的同学了解Go怎么写Web应用开发的 对于从C/C++转过来的同学了解Web到底是怎么运行起来的我一直认为知识是用来分享的，让更多的人分享自己拥有的一切知识这个才是人生最大的快乐。 这本书目前我放在Github上，我现在基本每天晚上抽空会写一些，时间有限、能力有限，所以希望更多的朋友参与到这个开源项目中来。 撰写方法文件命名每个章节建立一个md文件，如第11章的第3节，则建立11.3.md。 代码文件代码文件置于src目录之下。每小节代码按目录存放。如第11章的第3节的代码保存于src/11.3/目录下。在正文中按需要添加代码。 格式规范正文请参看已有章节的规范，要注意的是，每个章节在底部都需要有一个links节，包含“目录”，“上一节”和“下一节”的链接。 代码代码要go fmt后提交。注释文件注明其所属章节。 如何编译build.go依赖markdown的一个解析包，所以第一步先 go get github.com/russross/blackfriday 这样读者就可以把相应的Markdown文件编译成html文件，执行go build build.go，执行生成的文件，就会在底目录下生成相应的html文件 如何编译目前可以把相应的Markdown编译成html文件，执行go build build.go，执行生成的文件，就会在底目录下生成相应的html文件。 致谢首先要感谢Golang-China的QQ群102319854，里面的每一个人都很热心，同时要特别感谢几个人 四月份平民 (review代码) Hong Ruiqi (review代码) BianJiang (编写go开发工具Vim和Emacs的设置) Oling Cat(review代码) Wenlei Wu(提供一些图片展示) 授权许可除特别声明外，本书中的内容使用CC BY-SA 3.0 License（创作共用 署名-相同方式共享3.0许可协议）授权，代码遵循BSD 3-Clause License（3项条款的BSD许可协议）。 开始阅读开始阅读","categories":[{"name":"Go语言","slug":"golang","permalink":"http://test.quanke.name/categories/golang/"}],"tags":[],"keywords":[{"name":"Go语言","slug":"golang","permalink":"http://test.quanke.name/categories/golang/"}]},{"title":"ubuntu GIT 安装与使用","slug":"ubuntu-git-e5-ae-89-e8-a3-85-e4-b8-8e-e4-bd-bf-e7-94-a8","date":"2012-09-30T19:56:12.000Z","updated":"2018-01-29T07:18:46.558Z","comments":true,"path":"posts/65055/","link":"","permalink":"http://test.quanke.name/posts/65055/","excerpt":"","text":"1.安装程序 sudo apt-get install git sudo apt-get install git-core2.那通过命令更新版本库git clone git://git.kernel.org/pub/scm/git/git.git3.创建一个新版本库mkdir gittutorch cd gitturtorch git-init-db这样，一个空的版本库就创建好了，并在当前目录中创建一个叫 .git 的子目录。你可以用 ls -a 查看一下，并请注意其中的三项内容： 一个叫 HEAD 的文件，我们现在来查看一下它的内容： $ cat .git/HEAD现在 HEAD 的内容应该是这样： ref: refs/heads/master我们可以看到，HEAD 文件中的内容其实只是包含了一个索引信息，并且，这个索引将总是指向你的项目中的当前开发分支。一个叫 objects 的子目录，它包含了你的项目中的所有对象，我们不必直接地了解到这些对象内容，我们应该关心是存放在这些对象中的项目的数据。一个叫 refs 的子目录，它用来保存指向对象的索引。具体地说，子目录 refs 包含着两个子目录叫 heads 和 tags，就像他们的名字所表达的意味一样：他们存放了不同的开发分支的头的索引, 或者是你用来标定版本的标签的索引。请注意：master 是默认的分支，这也是为什么 .git/HEAD 创建的时候就指向 master 的原因，尽管目前它其实并不存在。 git 将假设你会在 master 上开始并展开你以后的工作，除非你自己创建你自己的分支。另外，这只是一个约定俗成的习惯而已，实际上你可以将你的工作分支叫任何名字，而不必在版本库中一定要有一个叫 master 的分支，尽管很多 git 工具都认为 master 分支是存在的。现在已经创建好了一个 git 版本库，但是它是空的，还不能做任何事情，下一步就是怎么向版本库植入数据了。第四步：植入内容跟踪信息：git-add：为了简明起见，我们创建两个文件作为练习： $ echo “Hello world” &gt; hello $ echo “Silly example” &gt; example我们再用 git-add 命令将这两个文件加入到版本库文件索引当中： $ git-add hello examplegit-add 实际上是个脚本命令，它是对 git 内核命令 git-update-index 的调用。因此上面的命令和下面的命令其实是等价的： $ git-update-index –add hello example如果你要将某个文件从 git 的目录跟踪系统中清除出去，同样可以用 git-update-index 命令。例如： $ git-update-index –force-remove foo.cgit-add 可以将某个目录下的所有内容全都纳入内容跟踪之下，例如： git-add ./path/to/your/wanted 。但是在这样做之前，应该注意先将一些我们不希望跟踪的文件清理掉，例如，gcc 编译出来的 .o 文件，vim 的交换文件 ..swp 之类。应该建立一个清晰的概念就是，git-add 和 git-update-index 只是刷新了 git 的跟踪信息，hello 和 example 这两个文件中的内容并没有提交到 git 的内容跟踪范畴之内。第五步：提交内容到版本库：git-commit既然我们刷新了 Git 的跟踪信息，现在我们看看版本库的状态： $ git-status我们能看到 git 的状态提示：# Initial commit## Updated but not checked in:(will commit)# new file: examplenew file: hello#提示信息告诉我们版本库中加入了两个新的文件，并且 git 提示我们提交这些文件，我们可以通过 git-commit 命令来提交： $ git-commit -m “Initial commit of gittutor reposistory”第六步：查看当前的工作：git-diffgit-diff 命令将比较当前的工作目录和版本库数据库中的差异。现在我们编辑一些文件来体验一下 git 的跟踪功能。 $ echo “It’s a new day for git” &gt;&gt; hello我们再来比较一下，当前的工作目录和版本库中的数据的差别。 $ git-diff差异将以典型的 patch 方式表示出来：diff –git a/hello b/helloindex 802992c..8fdaa4e 100644— a/hello+++ b/hello@@ -1 +1,2 @@Hello world+It’s a new day for git此时，我们可以再次使用组合命令 git-update-index 和 git-commit 将我们的工作提交到版本库中。 $ git-update-index hello $ git-commit -m “new day for git”实际上，如果要提交的文件都是已经纳入 git 版本库的文件，那么不必为这些文件都应用 git-update-index 命令之后再进行提交，下面的命令更简捷并且和上面的命令是等价的。 $ git-commit -a -m “new day for git”一些命令：初始化git数据库 $ git-init-db添加文件 $ git-add hello.c查看修改、提交记录 $ git-log创建分支 $ git-branch roredu查看分支 $ git-branch masterroredu切换工作分支 $ git-checkout roreduSwitched to branch “roredu” $ git-branchmaster roredu提交到当前工作分支并书写标记。 $ git-commit -a创建xux分支对于master的补丁文件。 $ git-format-patch master roredu配置开发者自己的签名和email。 $ git-config –global user.name “roredu” $ git-config –global user.email “roredu@gmail.com”修改文件名 $ git-mv roredu.c helight.c删除文件 $ git-rm roredu.c协同工作，下载项目：git-clone ssh@wtb:192.168.0.21/home/wtb/NetBeansProjects/project1这里wtb是用户名， 192.168.0.21是项目所在机器的IP 后面跟着的是项目目录和名称","categories":[{"name":"git","slug":"git","permalink":"http://test.quanke.name/categories/git/"}],"tags":[],"keywords":[{"name":"git","slug":"git","permalink":"http://test.quanke.name/categories/git/"}]},{"title":"Windows下Git的安装和配置","slug":"windows-e4-b8-8bgit-e7-9a-84-e5-ae-89-e8-a3-85-e5-92-8c-e9-85-8d-e7-bd-ae","date":"2012-09-30T19:08:38.000Z","updated":"2018-01-29T07:18:46.544Z","comments":true,"path":"posts/29409/","link":"","permalink":"http://test.quanke.name/posts/29409/","excerpt":"","text":"Git是Linux的创始人Linus Torvalds在2006年开发的，Linus自嘲说是一个“傻瓜内容跟踪器”。在Windows下使用Git，可以使用 Cygwin + Git，也可以使用 Msys + Git。 Cygwin太庞大了，我更倾向于使用小巧的Msys。 使用Msys + Git的话，也有两个选择：msys-cn + git，或者 msysgit。 # 安装msys-cn + gitMsys-cn是Msys的中文化项目，托管在Google Code上，里面提供了一个软件包管理器mpkg，同时提供了一系列实用工具，其中就包括git。 msys-cn的主页：http://code.google.com/p/msys-cn 下载msys-cn： http://msys-cn.googlecode.com/files/MSYS-Update.7z 下载完毕解压缩，运行msys.bat进入命令行界面。运行下面的命令来在线安装git：$ mpkg –install git如果网速太慢，可以下载git.mpkg文件后再安装。下载地址：http://msys-cn.googlecode.com/files/git.mpkg$ mpkg –add git如果一切顺利，现在就可以运行git命令了。# 安装msysgitmsysgit是直接将git整合到msys里的一个项目，也是托管在Google Code上： http://code.google.com/p/msysgit 下载最新版本的安装程序，安装即可。注意安装时最好选择默认的设置，这样保证不和系统的cmd命令冲突。 安装完毕在开始菜单里会有Git菜单，里面有Git Bash和Git GUI。点击Git Bash进入msysgit命令行环境。 msysgit中文输入输出可能会出现以下几方面的问题： ls输出乱码在用户主目录下新建一个bash配置文件.bashrc来保存配置信息：$ echo “alias ls=’ls –show-control-chars –color=auto’” &gt;&gt; ~/.bashrc 命令行中不能输入中文：修改 /etc/inputrc：set output-meta onset convert-meta off git st输出中文显示为UNICODE编码：$ git config –system core.quotepath false git log 输出显示为乱码：在~/.bashrc中增加less命令的编码设置：$ echo export LESSCHARSET=utf-8 &gt;&gt; ~/.bashrc以上的根目录指msysgit的安装目录，默认安装目录是C:Program FilesGit。默认用户主目录是我的文档。 msysgit默认集成open ssh客户端。要访问github上的项目，需要使用ssh-keygen来生成本地公私钥对，添加公钥到github上，就可以在本地提交了。 msysgit还带一个简单的图形界面，可以用来方便地浏览项目的历史，但用它来做日常的提交就不太合适了。你可能想到了TortoiseSVN，类似这样的图形界面才好用。幸好Tortoise也有Git版本：TortoiseGit。# 安装TortoiseGitTortoiseGit 也是托管在Google Code上的开源项目：http://code.google.com/p/tortoisegit TortoiseGit只是Git的前端，要使用它，首先要安装msysgit。这个前面已提到了。 下载最新版的TortoiseGit安装： http://tortoisegit.googlecode.com/files/TortoiseGit-1.6.2.0-32bit.msi 安装完毕以后需要设置TortoiseGit和MsysGit关联。在开始菜单里找到TortoiseGit-&gt;Settings，General选项里输入Git的路径即可。 和msysgit不同，TortoiseGit使用内置的puttygen来生成公私钥对，私钥的扩展名为ppk。要想用TortoiseGit管理GitHub上的项目，则需要将puttygen生成的公钥添加到github上去。 tortoisegit密钥配置参见 http://rongjih.blog.163.com/blog/static/335744612010619111042465/不过可以修改使用msysgit的ssh，在设置-&gt;Network里，修改SSH Client 为msysgit的ssh.exe路径： c:\\ Program Files\\Git\\bin\\ssh.exe即可。","categories":[{"name":"git","slug":"git","permalink":"http://test.quanke.name/categories/git/"}],"tags":[],"keywords":[{"name":"git","slug":"git","permalink":"http://test.quanke.name/categories/git/"}]},{"title":"如何成为优秀的软件模型设计者?","slug":"e5-a6-82-e4-bd-95-e6-88-90-e4-b8-ba-e4-bc-98-e7-a7-80-e7-9a-84-e8-bd-af-e4-bb-b6-e6-a8-a1-e5-9e-8b-e8-ae-be-e8-ae-a1-e8-80-85","date":"2012-09-25T19:43:14.000Z","updated":"2018-01-29T07:18:46.462Z","comments":true,"path":"posts/38796/","link":"","permalink":"http://test.quanke.name/posts/38796/","excerpt":"","text":"模型设计是软件架构师所需具备的基本技能之一，本文是一篇不错的关于如何成为优秀模型设计者的文章，希望对大家有所帮助！ ——Sunny 我们期待自己成为一个优秀的软件模型设计者，但是，要怎样做，又从哪里开始呢？ 将下列原则应用到你的软件工程中，你会获得立杆见影的成果。 1. 人远比技术重要 你开发软件是为了供别人使用，没有人使用的软件只是没有意义的数据的集合而已。许多在软件方面很有成就的行家在他们事业的初期却表现平平，因为他们那时侯将主要精力都集中在技术上。显然，构件（components），EJB（Enterprise Java Beans）和代理（agent）是很有趣的东西。但是对于用户来说，如果你设计的软件很难使用或者不能满足他们的需求，后台用再好的技术也于事无补。多花点时间到软件需求和设计一个使用户能很容易理解的界面上。 2. 理解你要实现的东西 好的软件设计人员把大多数时间花费在建立系统模型上，偶尔写一些源代码，但那只不过是为了验证设计过程中所遇到的问题。这将使他们的设计方案更加可行。 3. 谦虚是必须的品格 你不可能知道一切，你甚至要很努力才能获得足够用的知识。软件开发是一项复杂而艰巨的工作，因为软件开发所用到的工具和技术是在不断更新的。而且，一个人也不可能了解软件开发的所有过程。在日常生活中你每天接触到的新鲜事物可能不会太多。但是对于从事软件开发的人来说，每天可以学习很多新东西（如果愿意的话）。 4. 需求就是需求 如果你没有任何需求，你就不要动手开发任何软件。成功的软件取决于时间（在用户要求的时间内完成）、预算和是否满足用户的需求。如果你不能确切知道用户需要的是什么，或者软件的需求定义，那么你的工程注定会失败。 5. 需求其实很少改变，改变的是你对需求的理解 Object ToolSmiths公司的Doug Smith常喜欢说：“分析是一门科学，设计是一门艺术”。他的意思是说在众多的“正确”分析模型中只存在一个最“正确”分析模型可以完全满足解决某个具体问题的需要（我理解的意思是需求分析需要一丝不苟、精确的完成,而设计的时候反而可以发挥创造力和想象力 - 译者注）。 如果需求经常改动，很可能是你没有作好需求分析，并不是需求真的改变了。 你可以抱怨用户不能告诉你他们想得到什么，但是不要忘记，收集需求信息是你工作。 你可以说是新来的开发人员把事情搞得一团糟，但是，你应该确定在工程的第一天就告诉他们应该做什么和怎样去做。 如果你觉得公司不让你与用户充分接触，那只能说明公司的管理层并不是真正支持你的项目。 你可以抱怨公司有关软件工程的管理制度不合理，但你必须了解大多同行公司是怎么做的。 你可以借口说你们的竞争对手的成功是因为他们有了一个新的理念，但是为什么你没先想到呢？ 需求真正改变的情况很少，但是没有做好需求分析工作的理由却很多。 6. 经常阅读 在这个每日都在发生变化的产业中，你不可能在已取得的成就上陶醉太久。 每个月至少读2、3本专业杂志或者1本专业书籍。保持不落伍需要付出很多的时间和金钱，但会使你成为一个很有实力的竞争者。 7. 降低软件模块间的耦合度 高耦合度的系统是很难维护的。一处的修改引起另一处甚至更多处的变动。 你可以通过以下方法降低程序的耦合度：隐藏实现细节，强制构件接口定义，不使用公用数据结构，不让应用程序直接操作数据库（我的经验法则是：当应用程序员在写SQL代码的时候，你的程序的耦合度就已经很高了）。 耦合度低的软件可以很容易被重用、维护和扩充。 8. 提高软件的内聚性 如果一个软件的模块只实现一个功能，那么该模块具有高内聚性。高内聚性的软件更容易维护和改进。 判断一个模块是否有高的内聚性，看一看你是否能够用一个简单的句子描述它的功能就行了。如果你用了一段话或者你需要使用类似“和”、“或”等连词，则说明你需要将该模块细化。 只有高内聚性的模块才可能被重用。 9. 考虑软件的移植性 移植是软件开发中一项具体而又实际的工作，不要相信某些软件工具的广告宣传（比如java 的宣传口号write once run many ? 译者注）。 即使仅仅对软件进行常规升级，也要把这看得和向另一个操作系统或数据库移植一样重要。 记得从16位Windows移植到32位windows的“乐趣”吗 ？当你使用了某个操作系统的特性，如它的进程间通信(IPC)策略，或用某数据库专有语言写了存储过程。你的软件和那个特定的产品结合度就已经很高了。 好的软件设计者把那些特有的实现细节打包隐藏起来，所以，当那些特性该变的时候，你的仅仅需要更新那个包就可以了。 10. 接受变化 这是一句老话了：唯一不变的只有变化。 你应该将所有系统将可能发生的变化以及潜在需求记录下来,以便将来能够实现（参见“Architecting for Change”，Thinking Objectively, May 1999） 通过在建模期间考虑这些假设的情况，你就有可能开发出足够强壮且容易维护的软件。设计强壮的软件是你最基本的目标。 11. 不要低估对软件规模的需求 Internet 带给我们的最大的教训是你必须在软件开发的最初阶段就考虑软件规模的可扩充性。 今天只有100人的部门使用的应用程序，明天可能会被有好几万人的组织使用，下月，通过因特网可能会有几百万人使用它。 在软件设计的初期，根据在用例模型中定义的必须支持的基本事务处理，确定软件的基本功能。然后，在建造系统的时候再逐步加入比较常用的功能。 在设计的开始考虑软件的规模需求，避免在用户群突然增大的情况下，重写软件。 12. 性能仅仅是很多设计因素之一 关注软件设计中的一个重要因素–性能，这好象也是用户最关心的事情。一个性能不佳的软件将不可避免被重写。 但是你的设计还必须具有可靠性，可用性，便携性和可扩展性。你应该在工程开始就应该定义并区分好这些因素，以便在工作中恰当使用。性能可以是，也可以不是优先级最高的因素，我的观点是，给每个设计因素应有的考虑。 13. 管理接口 “UML User Guide”（Grady Booch，Ivar Jacobson和Jim Rumbaugh ,Addison Wesley, 1999）中指出，你应该在开发阶段的早期就定义软件模块之间的接口。 这有助于你的开发人员全面理解软件的设计结构并取得一致意见，让各模块开发小组相对独立的工作。一旦模块的接口确定之后，模块怎样实现就不是很重要了。 从根本上说，如果你不能够定义你的模块“从外部看上去会是什么样子”，你肯定也不清楚模块内要实现什么。 14. 走近路需要更长的时间 在软件开发中没有捷径可以走。 缩短你的在需求分析上花的时间，结果只能是开发出来的软件不能满足用户的需求，必须被重写。 在软件建模上每节省一周，在将来的编码阶段可能会多花几周时间，因为你在全面思考之前就动手写程序。 你为了节省一天的测试时间而漏掉了一个bug，在将来的维护阶段，可能需要花几周甚至几个月的时间去修复。与其如此，还不如重新安排一下项目计划。 避免走捷径，只做一次但要做对（do it once by doing it right）。 15. 别信赖任何人 产品和服务销售公司不是你的朋友，你的大部分员工和高层管理人员也不是。 大部分产品供应商希望把你牢牢绑在他们的产品上，可能是操作系统，数据库或者某个开发工具。 大部分的顾问和承包商只关心你的钱并不是你的工程（停止向他们付款，看一看他们会在周围呆多长时间）。 大部分程序员认为他们自己比其他人更优秀，他们可能抛弃你设计的模型而用自己认为更好的。 只有良好的沟通才能解决这些问题。 要明确的是，不要只依靠一家产品或服务提供商，即使你的公司（或组织）已经在建模、文档和过程等方面向那个公司投入了很多钱。 16. 证明你的设计在实践中可行 在设计的时候应当先建立一个技术原型， 或者称为“端到端”原型。以证明你的设计是能够工作的。 你应该在开发工作的早期做这些事情，因为，如果软件的设计方案是不可行的，在编码实现阶段无论采取什么措施都于事无补。技术原型将证明你的设计的可行性，从而，你的设计将更容易获得支持。 17. 应用已知的模式 目前，我们有大量现成的分析和设计模式以及问题的解决方案可以使用。 一般来说，好的模型设计和开发人员，都会避免重新设计已经成熟的并被广泛应用的东西。 http://www.ambysoft.com/processPatternsPage.html 收藏了许多开发模式的信息。 18. 研究每个模型的长处和弱点 目前有很多种类的模型可以使用。用例捕获的是系统行为需求，数据模型则描述支持一个系统运行所需要的数据构成。你可能会试图在用例中加入实际数据描述，但是，这对开发者不是非常有用。同样，数据模型对描述软件需求来说是无用的。每个模型在你建模过程中有其相应的位置，但是，你需要明白在什么地方，什么时候使用它们。 19. 在现有任务中应用多个模型 当你收集需求的时候，考虑使用用例模型，用户界面模型和领域级的类模型。 当你设计软件的时候，应该考虑制作类模型，顺序图、状态图、协作图和最终的软件实际物理模型。 程序设计人员应该慢慢意识到，仅仅使用一个模型而实现的软件要么不能够很好地满足用户的需求，要么很难扩展。 20. 教育你的听众 你花了很大力气建立一个很成熟的系统模型，而你的听众却不能理解它们，甚至更糟－连为什么要先建立模型都不知道。那么你的工作是毫无意义的。 教给你开发人员基本的建模知识；否则，他们会只看看你画的漂亮图表，然后继续编写不规范的程序。 另外， 你还需要告诉你的用户一些需求建模的基础知识。给他们解释你的用例(uses case)和用户界面模型，以使他们能够明白你要表达地东西。当每个人都能使用一个通用的设计语言的时候（比如UML-译者注），你的团队才能实现真正的合作。 21. 用工具的傻瓜还是傻瓜 你给我CAD/CAM工具，请我设计一座桥。但是，如果那座桥建成的话，我肯定不想当第一个从桥上过的人，因为我对建筑一窍不通。 使用一个很优秀的CASE工具并不能使你成为一个建模专家，只能使你成为一个优秀CASE工具的使用者。成为一个优秀的建模专家需要多年的积累，不会是一周针对某个价值几千美元工具的培训。一个优秀的CASE工具是很重要，但你必须学习使用它，并能够使用它设计它支持的模型。 22. 理解完整的过程 好的设计人员应该理解整个软件过程，尽管他们可能不是精通全部实现细节。 软件开发是一个很复杂的过程，还记得《object-oriented software process》第36页的内容吗？除了编程、建模、测试等你擅长工作外，还有很多工作要做。 好的设计者需要考虑全局。必须从长远考虑如何使软件满足用户需要，如何提供维护和技术支持等。 23. 常做测试，早做测试 如果测试对你的软件来说是无所谓的，那么你的软件多半也没什么必要被开发出来。 建立一个技术原型供技术评审使用，以检验你的软件模型。 在软件生命周期中，越晚发现的错误越难修改，修改成本越昂贵。尽可能早的做测试是很值得的。 24. 把你的工作归档 不值得归档的工作往往也不值得做。归档你的设想，以及根据设想做出的决定；归档软件模型中很重要但不很明显的部分。 给每个模型一些概要描述以使别人很快明白模型所表达的内容。 25. 技术会变，基本原理不会 如果有人说“使用某种开发语言、某个工具或某某技术，我们就不需要再做需求分析，建模，编码或测试”。不要相信，这只说明他还缺乏经验。抛开技术和人的因素，实际上软件开发的基本原理自20世纪70年代以来就没有改变过。你必须还定义需求，建模，编码，测试，配置，面对风险，发布产品，管理工作人员等等。 软件建模技术是需要多年的实际工作才能完全掌握的。好在你可以从我的建议开始，完善你们自己的软件开发经验。 从鸡汤开始，加入自己的蔬菜。然后，开始享受你自己的丰盛晚餐吧。 【转自：http://dev.yesky.com/SoftChannel/72342389024358400/20050115/1901524.shtml】","categories":[{"name":"软件工程","slug":"se","permalink":"http://test.quanke.name/categories/se/"}],"tags":[],"keywords":[{"name":"软件工程","slug":"se","permalink":"http://test.quanke.name/categories/se/"}]},{"title":"android Animation 动画效果介绍","slug":"android/android-animation","date":"2012-09-04T06:38:33.000Z","updated":"2018-01-29T07:18:46.575Z","comments":true,"path":"posts/58864/","link":"","permalink":"http://test.quanke.name/posts/58864/","excerpt":"","text":"Android的animation由四种类型组成XML中 alpha 渐变透明度动画效果scale 渐变尺寸伸缩动画效果translate 画面转换位置移动动画效果rotate 画面转移旋转动画效果 JavaCode中AlphaAnimation 渐变透明度动画效果ScaleAnimation 渐变尺寸伸缩动画效果TranslateAnimation 画面转换位置移动动画效果RotateAnimation 画面转移旋转动画效果 Android动画模式 Animation主要有两种动画模式： 一种是tweened animation(渐变动画)XML中 JavaCodealpha AlphaAnimationscale ScaleAnimation 一种是frame by frame(画面转换动画)XML中 JavaCodetranslate TranslateAnimationrotate RotateAnimation 如何在XML文件中定义动画 ① 打开Eclipse，新建Android工程② 在res目录中新建anim文件夹③ 在anim目录中新建一个myanim.xml(注意文件名小写)④ 加入XML的动画代码 [code lang=”xml”]&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt; &lt;set xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&amp;gt; &lt;alpha/&gt; &lt;scale/&gt; &lt;translate/&gt; &lt;rotate/&gt; &lt;/set&gt;[/code]Android动画解析–XML [code lang=”xml”]&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt; &lt;set xmlns:android=&quot;http://schemas.android.com/apk/res/android&amp;quot; &gt; &lt;alpha android:fromAlpha=&quot;0.1&quot; &lt;!–fromAlpha(浮点型值) 属性为动画起始时透明度, 0.0表示完全透明 –&gt; android:toAlpha=&quot;1.0&quot; &lt;!– toAlpha(浮点型值) 属性为动画结束时透明度, 1.0表示完全不透明. fromAlpha 和 toAlpha 的取值在0.0-1.0之间的float数据类型的数字 –&gt; android:duration=&quot;3000&quot;&lt;!– duration(长整型值) 属性为动画持续时间,时间以毫秒为单位–&gt; /&gt; &lt;/set&gt;[/code] [code lang=”xml”]&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt; &lt;set xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&amp;gt; &lt;scale android:interpolator= &quot;@android:anim/accelerate_decelerate_interpolator&quot; android:fromXScale=&quot;0.0&quot; android:toXScale=&quot;1.4&quot; android:fromYScale=&quot;0.0&quot; android:toYScale=&quot;1.4&quot; android:pivotX=&quot;50%&quot; android:pivotY=&quot;50%&quot; android:fillAfter=&quot;false&quot; android:duration=&quot;700&quot; /&gt; &lt;/set&gt; &lt;!– 尺寸伸缩动画效果 scale 属性：interpolator 指定一个动画的插入器 在我试验过程中，使用android.res.anim中的资源时候发现 有三种动画插入器: accelerate_decelerate_interpolator 加速-减速 动画插入器 accelerate_interpolator 加速-动画插入器 decelerate_interpolator 减速- 动画插入器 其他的属于特定的动画效果 浮点型值： fromXScale 属性为动画起始时 X坐标上的伸缩尺寸 toXScale 属性为动画结束时 X坐标上的伸缩尺寸 fromYScale 属性为动画起始时Y坐标上的伸缩尺寸 toYScale 属性为动画结束时Y坐标上的伸缩尺寸 说明: 以上四种属性值 0.0表示收缩到没有 1.0表示正常无伸缩 值小于1.0表示收缩 值大于1.0表示放大 pivotX 属性为动画相对于物件的X坐标的开始位置 pivotY 属性为动画相对于物件的Y坐标的开始位置 说明: 以上两个属性值 从0%-100%中取值 50%为物件的X或Y方向坐标上的中点位置 长整型值： duration 属性为动画持续时间 说明: 时间以毫秒为单位 布尔型值: fillAfter 属性 当设置为true ，该动画转化在动画结束后被应用 –&gt;[/code] [code lang=”xml”]&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt; &lt;set xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&amp;gt; &lt;translate android:fromXDelta=&quot;30&quot; android:toXDelta=&quot;-80&quot; android:fromYDelta=&quot;30&quot; android:toYDelta=&quot;300&quot; android:duration=&quot;2000&quot; /&gt; &lt;!– translate 位置转移动画效果 整型值: fromXDelta 属性为动画起始时 X坐标上的位置 toXDelta 属性为动画结束时 X坐标上的位置 fromYDelta 属性为动画起始时 Y坐标上的位置 toYDelta 属性为动画结束时 Y坐标上的位置 注意: 没有指定fromXType toXType fromYType toYType 时候， 默认是以自己为相对参照物 长整型值： duration 属性为动画持续时间 说明: 时间以毫秒为单位 –&gt; &lt;/set&gt;[/code] [code lang=”xml”]&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt; &lt;set xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&amp;gt; &lt;rotate android:interpolator=&quot;@android:anim/accelerate_decelerate_interpolator&quot; android:fromDegrees=&quot;0&quot; android:toDegrees=&quot;+350&quot; android:pivotX=&quot;50%&quot; android:pivotY=&quot;50%&quot; android:duration=&quot;3000&quot; /&gt; &lt;!– rotate 旋转动画效果 属性：interpolator 指定一个动画的插入器 在我试验过程中，使用android.res.anim中的资源时候发现 有三种动画插入器: accelerate_decelerate_interpolator 加速-减速 动画插入器 accelerate_interpolator 加速-动画插入器 decelerate_interpolator 减速- 动画插入器 其他的属于特定的动画效果 浮点数型值: fromDegrees 属性为动画起始时物件的角度 toDegrees 属性为动画结束时物件旋转的角度 可以大于360度 说明: 当角度为负数——表示逆时针旋转 当角度为正数——表示顺时针旋转 (负数from——to正数:顺时针旋转) (负数from——to负数:逆时针旋转) (正数from——to正数:顺时针旋转) (正数from——to负数:逆时针旋转) pivotX 属性为动画相对于物件的X坐标的开始位置 pivotY 属性为动画相对于物件的Y坐标的开始位置 说明: 以上两个属性值 从0%-100%中取值 50%为物件的X或Y方向坐标上的中点位置 长整型值： duration 属性为动画持续时间 说明: 时间以毫秒为单位 –&gt; &lt;/set&gt;[/code]如何使用XML中的动画效果[code lang=”java”]public static Animation loadAnimation (Context context, int id) //第一个参数Context为程序的上下文 //第二个参数id为动画XML文件的引用 //例子： myAnimation= AnimationUtils.loadAnimation(this,R.anim.my_action); //使用AnimationUtils类的静态方法loadAnimation()来加载XML中的动画XML文件[/code] 如何在Java代码中定义动画[code lang=”java”]//在代码中定义 动画实例对象 private Animation myAnimation_Alpha; private Animation myAnimation_Scale; private Animation myAnimation_Translate; private Animation myAnimation_Rotate; //根据各自的构造方法来初始化一个实例对象 myAnimation_Alpha=new AlphaAnimation(0.1f, 1.0f); myAnimation_Scale =new ScaleAnimation(0.0f, 1.4f, 0.0f, 1.4f, Animation.RELATIVE_TO_SELF, 0.5f, Animation.RELATIVE_TO_SELF, 0.5f); myAnimation_Translate=new TranslateAnimation(30.0f, -80.0f, 30.0f, 300.0f); myAnimation_Rotate=new RotateAnimation(0.0f, +350.0f, Animation.RELATIVE_TO_SELF,0.5f,Animation.RELATIVE_TO_SELF, 0.5f);[/code]Android动画解析–JavaCode AlphaAnimation ① AlphaAnimation类对象定义[code lang=”java”]private AlphaAnimation myAnimation_Alpha;[/code]② AlphaAnimation类对象构造[code lang=”java”]AlphaAnimation(float fromAlpha, float toAlpha) //第一个参数fromAlpha为 动画开始时候透明度 //第二个参数toAlpha为 动画结束时候透明度 myAnimation_Alpha=new AlphaAnimation(0.1f, 1.0f); //说明: // 0.0表示完全透明 // 1.0表示完全不透明[/code] ③ 设置动画持续时间[code lang=”java”]myAnimation_Alpha.setDuration(5000); //设置时间持续时间为 5000毫秒[/code]ScaleAnimation ① ScaleAnimation类对象定义[code lang=”java”]private AlphaAnimation myAnimation_Alpha;[/code]② ScaleAnimation类对象构造[code lang=”java”]ScaleAnimation(float fromX, float toX, float fromY, float toY, int pivotXType, float pivotXValue, int pivotYType, float pivotYValue) //第一个参数fromX为动画起始时 X坐标上的伸缩尺寸 //第二个参数toX为动画结束时 X坐标上的伸缩尺寸 //第三个参数fromY为动画起始时Y坐标上的伸缩尺寸 //第四个参数toY为动画结束时Y坐标上的伸缩尺寸 /说明: 以上四种属性值 0.0表示收缩到没有 1.0表示正常无伸缩 值小于1.0表示收缩 值大于1.0表示放大 / //第五个参数pivotXType为动画在X轴相对于物件位置类型 //第六个参数pivotXValue为动画相对于物件的X坐标的开始位置 //第七个参数pivotXType为动画在Y轴相对于物件位置类型 //第八个参数pivotYValue为动画相对于物件的Y坐标的开始位置 myAnimation_Scale =new ScaleAnimation(0.0f, 1.4f, 0.0f, 1.4f, Animation.RELATIVE_TO_SELF, 0.5f, Animation.RELATIVE_TO_SELF, 0.5f);[/code]③ 设置动画持续时间[code lang=”java”]myAnimation_Scale.setDuration(700); //设置时间持续时间为 700毫秒[/code]TranslateAnimation ① TranslateAnimation类对象定义[code lang=”java”]private AlphaAnimation myAnimation_Alpha;[/code]② TranslateAnimation类对象构造[code lang=”java”]TranslateAnimation(float fromXDelta, float toXDelta, float fromYDelta, float toYDelta) //第一个参数fromXDelta为动画起始时 X坐标上的移动位置 //第二个参数toXDelta为动画结束时 X坐标上的移动位置 //第三个参数fromYDelta为动画起始时Y坐标上的移动位置 //第四个参数toYDelta为动画结束时Y坐标上的移动位置[/code]③ 设置动画持续时间[code lang=”java”]myAnimation_Translate.setDuration(2000); //设置时间持续时间为 2000毫秒[/code]RotateAnimation ① RotateAnimation类对象定义[code lang=”java”]private AlphaAnimation myAnimation_Alpha;[/code]② RotateAnimation类对象构造[code lang=”java”]RotateAnimation(float fromDegrees, float toDegrees, int pivotXType, float pivotXValue, int pivotYType, float pivotYValue) //第一个参数fromDegrees为动画起始时的旋转角度 //第二个参数toDegrees为动画旋转到的角度 //第三个参数pivotXType为动画在X轴相对于物件位置类型 //第四个参数pivotXValue为动画相对于物件的X坐标的开始位置 //第五个参数pivotXType为动画在Y轴相对于物件位置类型 //第六个参数pivotYValue为动画相对于物件的Y坐标的开始位置 myAnimation_Rotate=new RotateAnimation(0.0f, +350.0f, Animation.RELATIVE_TO_SELF,0.5f,Animation.RELATIVE_TO_SELF, 0.5f);[/code]③ 设置动画持续时间[code lang=”java”]myAnimation_Rotate.setDuration(3000); //设置时间持续时间为 3000毫秒[/code]如何使用Java代码中的动画效果 使用从View父类继承过来的方法startAnimation()来为View或是子类View等等添加一个动画效果[code lang=”java”]public void startAnimation (Animation animation)[/code]","categories":[{"name":"android开发","slug":"android","permalink":"http://test.quanke.name/categories/android/"}],"tags":[],"keywords":[{"name":"android开发","slug":"android","permalink":"http://test.quanke.name/categories/android/"}]},{"title":"使用android新版本（adt20）开发工具出现NoClassDefFoundError解决方案","slug":"e4-bd-bf-e7-94-a8android-e6-96-b0-e7-89-88-e6-9c-ac-ef-bc-88adt20-ef-bc-89-e5-bc-80-e5-8f-91-e5-b7-a5-e5-85-b7-e5-87-ba-e7-8e-b0noclassdeffounderror-e8-a7-a3-e5-86-b3-e6-96-b9-e6-a1-88","date":"2012-08-28T19:24:04.000Z","updated":"2018-01-29T07:18:46.443Z","comments":true,"path":"posts/25638/","link":"","permalink":"http://test.quanke.name/posts/25638/","excerpt":"出现问题： 在使用新版本开发有时候会莫名其妙的来一个“没有发现类异常” java.lang.NoClassDefFoundError: *检查了老久还是不知道怎么回事。 查出问题： 开始我是: 右击jar文件-&gt;Build Path -&gt;Add Build Path，就是这一步出现的问题 解决问题：","text":"出现问题： 在使用新版本开发有时候会莫名其妙的来一个“没有发现类异常” java.lang.NoClassDefFoundError: *检查了老久还是不知道怎么回事。 查出问题： 开始我是: 右击jar文件-&gt;Build Path -&gt;Add Build Path，就是这一步出现的问题 解决问题：在adt20的版本里不要手动添加jar包，只需要在项目的根目录下新建一个libs的目录，把需要加入的jar包放到libs目录下即可。 如果还有其他原因导致NoClassDefFoundError，欢迎留言","categories":[{"name":"android开发","slug":"android","permalink":"http://test.quanke.name/categories/android/"}],"tags":[],"keywords":[{"name":"android开发","slug":"android","permalink":"http://test.quanke.name/categories/android/"}]},{"title":"Linux(Ubuntu)下配置Android环境变量","slug":"linuxubuntu-e4-b8-8b-e9-85-8d-e7-bd-aeandroid-e7-8e-af-e5-a2-83-e5-8f-98-e9-87-8f","date":"2012-08-27T23:04:46.000Z","updated":"2018-01-29T07:18:46.528Z","comments":true,"path":"posts/12999/","link":"","permalink":"http://test.quanke.name/posts/12999/","excerpt":"","text":"前提条件： eclipse，adt都装好了，可以开发android应用程序，但是不能在命令行操作，不能直接执行adb，android等命令 开始配置： 按住Ctrl+Alt+T打开命令行， 然后输入 sudo gedit /etc/profile打开配置文件，加入android的配置信息，最后的样子是 #Set jdk1.7.0_04 Environment export JAVA_HOME=/usr/lib/jvm/jdk1.7.0_04 export ANDROID_HOME=/home/gaialine/android-sdks export JRE_HOME=${JAVA_HOME}/jre export CLASSPATH=.:${JAVA_HOME}/lib:${JRE_HOME}/lib export PATH=${JAVA_HOME}/bin:$PATH:${ANDROID_HOME}/tools:${ANDROID_HOME}/platform-tools 然后保存，一定要记得重启电脑才能生效。 **注意：** 配置完成后要重启电脑 配置PATH的时候不要吧，已经有的配置删除，要加一个“：”再写自己的配置信息 在配置android的PATH的时候有两个目录，${ANDROID_HOME}/tools:${ANDROID_HOME}/platform-tools**小结：** 其实这里面就包含了，java的环境变量的配置，android环境变量的配置和java的一样，都是在/etc/profile里配置。","categories":[{"name":"android开发","slug":"android","permalink":"http://test.quanke.name/categories/android/"}],"tags":[],"keywords":[{"name":"android开发","slug":"android","permalink":"http://test.quanke.name/categories/android/"}]},{"title":"linux配置java环境变量","slug":"linux-e9-85-8d-e7-bd-aejava-e7-8e-af-e5-a2-83-e5-8f-98-e9-87-8f","date":"2012-08-27T19:09:51.000Z","updated":"2018-01-29T07:18:46.529Z","comments":true,"path":"posts/58426/","link":"","permalink":"http://test.quanke.name/posts/58426/","excerpt":"","text":"一. 解压安装jdk在shell终端下进入jdk-6u14-linux-i586.bin文件所在目录，执行命令 ./jdk-6u14-linux-i586.bin 这时会出现一段协议，连继敲回车，当询问是否同意的时候，输入yes，回车。之后会在当前目录下生成一个jdk1.6.0_14目录，你可以将它复制到 任何一个目录下。 二. 需要配置的环境变量1. PATH环境变量。作用是指定命令搜索路径，在shell下面执行命令时，它会到PATH变量所指定的路径中查找看是否能找到相应的命令程序。我们需要把 jdk安装目录下的bin目录增加到现有的PATH变量中，bin目录中包含经常要用到的可执行文件如javac/java/javadoc等待，设置好 PATH变量后，就可以在任何目录下执行javac/java等工具了。2. CLASSPATH环境变量。作用是指定类搜索路径，要使用已经编写好的类，前提当然是能够找到它们了，JVM就是通过CLASSPTH来寻找类的。我们 需要把jdk安装目录下的lib子目录中的dt.jar和tools.jar设置到CLASSPATH中，当然，当前目录“.”也必须加入到该变量中。3. JAVA_HOME环境变量。它指向jdk的安装目录，Eclipse/NetBeans/Tomcat等软件就是通过搜索JAVA_HOME变量来找到并使用安装好的jdk。 三. 三种配置环境变量的方法 1. 修改/etc/profile文件如果你的计算机仅仅作为开发使用时推荐使用这种方法，因为所有用户的shell都有权使用这些环境变量，可能会给系统带来安全性问题。·用文本编辑器打开/etc/profile·在profile文件末尾加入：export JAVA_HOME=/usr/share/jdk1.6.0_14export PATH=$JAVA_HOME/bin:$PATHexport CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar·重新登录·注解a. 你要将 /usr/share/jdk1.6.0_14改为你的jdk安装目录b. linux下用冒号“:”来分隔路径c. $PATH / $CLASSPATH / $JAVA_HOME 是用来引用原来的环境变量的值在设置环境变量时特别要注意不能把原来的值给覆盖掉了，这是一种常见的错误。d. CLASSPATH中当前目录“.”不能丢,把当前目录丢掉也是常见的错误。e. export是把这三个变量导出为全局变量。f. 大小写必须严格区分。 2. 修改.bash_profile文件 这种方法更为安全，它可以把使用这些环境变量的权限控制到用户级别，如果你需要给某个用户权限使用这些环境变量，你只需要修改其个人用户主目录下的.bash_profile文件就可以了。·用文本编辑器打开用户目录下的.bash_profile文件·在.bash_profile文件末尾加入： export JAVA_HOME=/usr/share/jdk1.6.0_14export PATH=$JAVA_HOME/bin:$PATHexport CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar ·重新登录 3. 直接在shell下设置变量不赞成使用这种方法，因为换个shell，你的设置就无效了，因此这种方法仅仅是临时使用，以后要使用的时候又要重新设置，比较麻烦。只需在shell终端执行下列命令：export JAVA_HOME=/usr/share/jdk1.6.0_14export PATH=$JAVA_HOME/bin:$PATHexport CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar 四. 测试jdk1. 用文本编辑器新建一个Test.java文件，在其中输入以下代码并保存：[code lang=”java”]public class test { public static void main(String args[]) { System.out.println(&quot;A new jdk test !&quot;); }}[/code]2. 编译：在shell终端执行命令 javac Test.java3. 运行：在shell终端执行命令 java Test当shell下出现“A new jdk test !”字样则jdk运行正常。 五. 卸载jdk·找到jdk安装目录的_uninst子目录·在shell终端执行命令./uninstall.sh即可卸载jdk。","categories":[{"name":"android开发","slug":"android","permalink":"http://test.quanke.name/categories/android/"}],"tags":[],"keywords":[{"name":"android开发","slug":"android","permalink":"http://test.quanke.name/categories/android/"}]},{"title":"android应用从零开始到发布","slug":"android/android-e5-ba-94-e7-94-a8-e4-bb-8e-e9-9b-b6-e5-bc-80-e5-a7-8b-e5-88-b0-e5-8f-91-e5-b8-83","date":"2012-08-27T06:35:37.000Z","updated":"2018-01-29T07:18:46.582Z","comments":true,"path":"posts/61425/","link":"","permalink":"http://test.quanke.name/posts/61425/","excerpt":"android应用从零开始到发布 android应用从零开始到发布要经历几个过程： 1．搭建android开发环境。 2．开发应用（中间很多步省略）。 3．发布。","text":"android应用从零开始到发布 android应用从零开始到发布要经历几个过程： 1．搭建android开发环境。 2．开发应用（中间很多步省略）。 3．发布。1步我们这里不谈，可以到我的博客里面找找，2步的话这里也说不清楚，我们主要谈谈第三步，怎么发布我们的应用。 假设程序开发好了，只等发布了，你还要做几件事： 1．准备好程序的截图： 截图可以使用豌豆夹，或者直接使用eclipse截图，在androd市场只能上传两张图片，所以一定要选择两张有代表性的，可以吸引用户的图片，android市场只接受320480和480854像素的图片。 2．写好程序简介： android市场最多只许325个字符，所以在写简介的时候要字字斟酌，最好在后面加上你应用的网址，有更加详细的介绍。 3．做数字签名导出程序： 做数字签名是这篇文章主要介绍的，在Android系统中，所有安装到系统的应用程序都必有一个数字证书，此数字证书用于标识应用程序的作者和在应用程序之间建立信任关系,如果一个permission的protectionLevel为signature，那么就只有那些跟该permission所在的程序拥有同一个数字证书的应用程序才能取得该权限。Android使用Java的数字证书相关的机制来给apk加盖数字证书，要理解android的数字证书，需要先了解以下数字证书的概念和java的数字证书机制。Android系统要求每一个安装进系统的应用程序都是经过数字证书签名的，数字证书的私钥则保存在程序开发者的手中。Android将数字证书用来标识应用程序的作者和在应用程序之间建立信任关系，不是用来决定最终用户可以安装哪些应用程序。这个数字证书并不需要权威的数字证书签名机构认证，它只是用来让应用程序包自我认证的。 同一个开发者的多个程序尽可能使用同一个数字证书，这可以带来以下好处。 (1)有利于程序升级，当新版程序和旧版程序的数字证书相同时，Android系统才会认为这两个程序是同一个程序的不同版本。如果新版程序和旧版程序的数字证书不相同，则Android系统认为他们是不同的程序，并产生冲突，会要求新程序更改包名。 (2)有利于程序的模块化设计和开发。Android系统允许拥有同一个数字签名的程序运行在一个 进程中，Android程序会将他们视为同一个程序。所以开发者可以将自己的程序分模块开发，而用户只需要在需要的时候下载适当的模块。 (3)可以通过权限(permission)的方式在多个程序间共享数据和代码。Android提供了基于数字证书的权限赋予机制，应用程序可以和其他的程序共享概功能或者数据给那那些与自己拥有相同数字证书的程序。如果某个权限(permission)的protectionLevel是signature，则这个权限就只能授予那些跟该权限所在的包拥有同一个数字证书的程序。 在签名时，需要考虑数字证书的有效期： (1)数字证书的有效期要包含程序的预计生命周期，一旦数字证书失效，持有改数字证书的程序将不能正常升级。 (2)如果多个程序使用同一个数字证书，则该数字证书的有效期要包含所有程序的预计生命周期。 (3)Android Market强制要求所有应用程序数字证书的有效期要持续到2033年10月22日以后。 Android数字证书包含以下几个要点： (1)所有的应用程序都必须有数字证书，Android系统不会安装一个没有数字证书的应用程序 (2)Android程序包使用的数字证书可以是自签名的，不需要一个权威的数字证书机构签名认证 (3)如果要正式发布一个Android ，必须使用一个合适的私钥生成的数字证书来给程序签名，而不能使用adt插件或者ant工具生成的调试证书来发布。 (4)数字证书都是有有效期的，Android只是在应用程序安装的时候才会检查证书的有效期。如果程序已经安装在系统中，即使证书过期也不会影响程序的正常功能。 (5)Android使用标准的java工具 Keytool and Jarsigner 来生成数字证书，并给应用程序包签名。 (6）使用zipalign优化程序。 Android系统不会安装运行任何一款未经数字签名的apk程序，无论是在模拟器上还是在实际的物理设备上。Android的开发工具(ADT插件和Ant)都可以协助开发者给apk程序签名，它们都有两种模式：调试模式(debug mode)和发布模式(release mode)。 在调试模式下，android的开发工具会在每次编译时使用调试用的数字证书给程序签名，开发者无须关心。 当要发布程序时，开发者就需要使用自己的数字证书给apk包签名，可以有两种方法。 (1)在命令行下使用JDK中的和Keytool(用于生成数字证书)和Jarsigner(用于使用数字证书签名)来给apk包签名。 (2)使用ADT Export Wizard进行签名(如果没有数字证书可能需要生成数字证书)。 使用Keytool和Jarsigner给程序签名 我们主要是使用第二中，第一种麻烦，第二种只要你在eclipse里装好了android的开发环境，就可以使用啦！ 一、鼠标右击项目-&gt;Android Tools-&gt;Export Signed Application Package 二、选择下一步 三、填写保存地址，密码，重复密码，选择下一步 四、填写别名，密码，重复密码，有效期，组织单位，单位（我也不知道怎么区分，我的英语烂），城市，省份，国家代码 五、选择保存的地方，单击完成； Ok了，apk出来了，签名也好了，下面可以正式发布啦！ 4．正式发布 真正的发布就是很简单了，看看就可以！我也不多说，如果有问题，留言！","categories":[{"name":"android开发","slug":"android","permalink":"http://test.quanke.name/categories/android/"}],"tags":[],"keywords":[{"name":"android开发","slug":"android","permalink":"http://test.quanke.name/categories/android/"}]},{"title":"写博客什么时候开始都不觉得晚","slug":"e5-86-99-e5-8d-9a-e5-ae-a2-e4-bb-80-e4-b9-88-e6-97-b6-e5-80-99-e5-bc-80-e5-a7-8b-e9-83-bd-e4-b8-8d-e8-a7-89-e5-be-97-e6-99-9a","date":"2012-08-25T03:38:46.000Z","updated":"2018-01-29T07:18:46.443Z","comments":true,"path":"posts/19128/","link":"","permalink":"http://test.quanke.name/posts/19128/","excerpt":"","text":"其实我好久就准备些博客了，以前做了一个论坛，又临近毕业，所以也没有多少时间去写了，从今天开始我要认真的写写博客！写博客的好处我想都知道，也不要废话了！ 现在正在学习ios开发，正是写博客的好时机！现在学习ios开发的在国内还比较少，希望和大家一起学习，一起进步！ 我觉得做一件事要么不做，要做就要做好，写博客要么不写，要写就写好，要像写书一样认真的写下去，如果草草了事，还不如不发表！","categories":[{"name":"随笔","slug":"essay","permalink":"http://test.quanke.name/categories/essay/"}],"tags":[],"keywords":[{"name":"随笔","slug":"essay","permalink":"http://test.quanke.name/categories/essay/"}]}]}